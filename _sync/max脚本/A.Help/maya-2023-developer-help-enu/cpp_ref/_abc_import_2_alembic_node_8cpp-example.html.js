var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: AbcImport/AlembicNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_abc_import_2_alembic_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: AbcImport/AlembicNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">AbcImport/AlembicNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2009-2012,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Sony Pictures Imageworks, Inc. and</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Industrial Light &amp; Magic, a division of Lucasfilm Entertainment Company Ltd.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Redistribution and use in source and binary forms, with or without</span></div>\n\
<div class=\"line\"><span class=\"comment\">// modification, are permitted provided that the following conditions are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// met:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions of source code must retain the above copyright</span></div>\n\
<div class=\"line\"><span class=\"comment\">// notice, this list of conditions and the following disclaimer.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions in binary form must reproduce the above</span></div>\n\
<div class=\"line\"><span class=\"comment\">// copyright notice, this list of conditions and the following disclaimer</span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the documentation and/or other materials provided with the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// distribution.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Neither the name of Sony Pictures Imageworks, nor</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Industrial Light &amp; Magic nor the names of their contributors may be used</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to endorse or promote products derived from this software without specific</span></div>\n\
<div class=\"line\"><span class=\"comment\">// prior written permission.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></div>\n\
<div class=\"line\"><span class=\"comment\">// &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></div>\n\
<div class=\"line\"><span class=\"comment\">// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;util.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;AlembicNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;CreateSceneHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;CameraHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;LocatorHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;MeshHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;NurbsCurveHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;NurbsSurfaceHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;PointHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;XformHelper.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAngle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFileObject.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArrayDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDoubleArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnIntArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnVectorArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnStringArrayData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnStringData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsCurveData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsSurfaceData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnGenericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnEnumAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MExternalContentInfoTable.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;Alembic/AbcCoreFactory/IFactory.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;Alembic/AbcCoreOgawa/ReadWrite.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;Alembic/AbcGeom/Visibility.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mTimeAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mAbcFileNameAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mAbcLayerFileNamesAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mSpeedAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOffsetAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mCycleTypeAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mStartFrameAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mEndFrameAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mIncludeFilterAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mExcludeFilterAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutSubDArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutPolyArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutCameraArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutNurbsCurveGrpArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutNurbsSurfaceArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutTransOpArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutPropArrayAttr;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> AlembicNode::mOutLocatorPosScaleArrayAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AlembicNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a>    uAttr;</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a>   tAttr, tAttr2;</div>\n\
<div class=\"line\">    <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html\">MFnGenericAttribute</a> gAttr;</div>\n\
<div class=\"line\">    <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html\">MFnEnumAttribute</a>    eAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// add the input attributes: time, file, sequence time</span></div>\n\
<div class=\"line\">    mTimeAttr = uAttr.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>(<span class=\"stringliteral\">&quot;time&quot;</span>, <span class=\"stringliteral\">&quot;tm&quot;</span>, <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>, 0.0);</div>\n\
<div class=\"line\">    status = uAttr.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mTimeAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// input file name</span></div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_data.html\">MFnStringData</a> fileFnStringData;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fileNameDefaultObject = fileFnStringData.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_data.html#a2a76d6e5a305b483c5d9b8444fb79126\">create</a>(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">    mAbcFileNameAttr = tAttr.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;abc_File&quot;</span>, <span class=\"stringliteral\">&quot;fn&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7afab53ea4a643325262b9c140af093279\">MFnData::kString</a>, fileNameDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8fc03c313bed1f43387ad04e31bc87d\">setUsedAsFilename</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mAbcFileNameAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// input layer file names</span></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_array_data.html\">MFnStringArrayData</a> fileFnStringArrayData;</div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> dummyStringArray;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> layerFileNamesDefaultObject = fileFnStringArrayData.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_array_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(dummyStringArray);</div>\n\
<div class=\"line\">    mAbcLayerFileNamesAttr = tAttr2.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;abc_layerFiles&quot;</span>, <span class=\"stringliteral\">&quot;fns&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a7f61c3f7033fde37de0e63f291c9e834\">MFnData::kStringArray</a>, layerFileNamesDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr2.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr2.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8fc03c313bed1f43387ad04e31bc87d\">setUsedAsFilename</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr2.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr2.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mAbcLayerFileNamesAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// playback speed</span></div>\n\
<div class=\"line\">    mSpeedAttr = nAttr.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;speed&quot;</span>, <span class=\"stringliteral\">&quot;sp&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 1.0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mSpeedAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// frame offset</span></div>\n\
<div class=\"line\">    mOffsetAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;offset&quot;</span>, <span class=\"stringliteral\">&quot;of&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOffsetAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// cycle type</span></div>\n\
<div class=\"line\">    mCycleTypeAttr = eAttr.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a6bbfd35f997fda13f9a5824bc1fc6af7\">create</a>(<span class=\"stringliteral\">&quot;cycleType&quot;</span>, <span class=\"stringliteral\">&quot;ct&quot;</span>, 0,  &amp;status );</div>\n\
<div class=\"line\">    status = eAttr.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>(<span class=\"stringliteral\">&quot;Hold&quot;</span>, PLAYTYPE_HOLD);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>(<span class=\"stringliteral\">&quot;Loop&quot;</span>, PLAYTYPE_LOOP);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>(<span class=\"stringliteral\">&quot;Reverse&quot;</span>, PLAYTYPE_REVERSE);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>(<span class=\"stringliteral\">&quot;Bounce&quot;</span>, PLAYTYPE_BOUNCE);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = eAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mCycleTypeAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Regex Filter</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This is a hidden variable to preserve a regexIncludefilter string</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// into a .ma file.</span></div>\n\
<div class=\"line\">    mIncludeFilterAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;regexIncludeFilter&quot;</span>, <span class=\"stringliteral\">&quot;ift&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7afab53ea4a643325262b9c140af093279\">MFnData::kString</a>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mIncludeFilterAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Regex Filter</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This is a hidden variable to preserve a regexExcludefilter string</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// into a .ma file.</span></div>\n\
<div class=\"line\">    mExcludeFilterAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;regexExcludeFilter&quot;</span>, <span class=\"stringliteral\">&quot;eft&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7afab53ea4a643325262b9c140af093279\">MFnData::kString</a>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mExcludeFilterAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sequence min and max in frames</span></div>\n\
<div class=\"line\">    mStartFrameAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;startFrame&quot;</span>, <span class=\"stringliteral\">&quot;sf&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mStartFrameAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mEndFrameAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;endFrame&quot;</span>, <span class=\"stringliteral\">&quot;ef&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mEndFrameAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// add the output attributes</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled subD mesh</span></div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html\">MFnMeshData</a> fnMeshData;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> meshDefaultObject = fnMeshData.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;status);</div>\n\
<div class=\"line\">    mOutSubDArrayAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;outSubDMesh&quot;</span>, <span class=\"stringliteral\">&quot;osubd&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>, meshDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutSubDArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled poly mesh</span></div>\n\
<div class=\"line\">    mOutPolyArrayAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;outPolyMesh&quot;</span>, <span class=\"stringliteral\">&quot;opoly&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>, meshDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutPolyArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled nurbs surface</span></div>\n\
<div class=\"line\">    <a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface_data.html\">MFnNurbsSurfaceData</a> fnNSData;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> nsDefaultObject = fnNSData.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;status);</div>\n\
<div class=\"line\">    mOutNurbsSurfaceArrayAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;outNSurface&quot;</span>, <span class=\"stringliteral\">&quot;ons&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFnData::kNurbsSurface</a>, nsDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutNurbsSurfaceArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled nurbs curve group</span></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve_data.html\">MFnNurbsCurveData</a> fnNCData;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> ncDefaultObject = fnNCData.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;status);</div>\n\
<div class=\"line\">    mOutNurbsCurveGrpArrayAttr = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;outNCurveGrp&quot;</span>, <span class=\"stringliteral\">&quot;onc&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9366a44db1c93f593f8e65fcbec6a1b9\">MFnData::kNurbsCurve</a>, ncDefaultObject);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutNurbsCurveGrpArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled locator</span></div>\n\
<div class=\"line\">    mOutLocatorPosScaleArrayAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;outLoc&quot;</span>, <span class=\"stringliteral\">&quot;olo&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0.0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled transform operations</span></div>\n\
<div class=\"line\">    mOutTransOpArrayAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;transOp&quot;</span>, <span class=\"stringliteral\">&quot;to&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0.0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutTransOpArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled camera</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// assume the boolean variables cannot be keyed</span></div>\n\
<div class=\"line\">    mOutCameraArrayAttr = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;outCamera&quot;</span>, <span class=\"stringliteral\">&quot;ocam&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 0.0, &amp;status);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutCameraArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// sampled custom-attributes</span></div>\n\
<div class=\"line\">    mOutPropArrayAttr = gAttr.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a94a6d5e93a85fb18bc7accc18ee0d9f6\">create</a>(<span class=\"stringliteral\">&quot;prop&quot;</span>, <span class=\"stringliteral\">&quot;pr&quot;</span>, &amp;status);</div>\n\
<div class=\"line\">    status = gAttr.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a46b9941f17f513de8e30e46ac53e684b\">MFnNumericData::kByte</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a868c593a83291c3c805f13f49e46bd44\">MFnNumericData::kShort</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a78f9c008272ac1b28b52988ceb73839b\">MFnNumericData::k2Short</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a921e7463d71424b57d21e1b4b0afd214\">MFnNumericData::k3Short</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a553cdb5a183e366651484ec268e108a1\">MFnNumericData::k2Int</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a41dc2fbaf8e389346f04d7b87267a128\">MFnNumericData::k3Int</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7af8f260603ef20b1e0c3d09de0e9c645c\">MFnNumericData::k2Float</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a91f4ea6e351f41893ac43d373f9d647c\">MFnNumericData::k3Float</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7aa3f828c84111a9aa42c14f9cd3962c7b\">MFnNumericData::k2Double</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7add817d1d2e1e1d24ac2e2819a58e8f99\">MFnNumericData::k3Double</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a750dc39c9309e49dbc5862399256dce6\">addNumericDataAccept</a>(<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a3dfe68bf09c3e609cdb4c897dfcf3dbe\">MFnNumericData::k4Double</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a815ec0c59dfdc91fed24c4f2a75a4871\">addDataAccept</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7afab53ea4a643325262b9c140af093279\">MFnData::kString</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a815ec0c59dfdc91fed24c4f2a75a4871\">addDataAccept</a>(<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8892cbe039dc4c92d47be0bf340950a2\">MFnData::kIntArray</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a815ec0c59dfdc91fed24c4f2a75a4871\">addDataAccept</a>(<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7aaee060f77390647f2195ea07f5bda194\">MFnData::kDoubleArray</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a815ec0c59dfdc91fed24c4f2a75a4871\">addDataAccept</a>(<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a155fba435c9f5acc854c40a9895a4cf1\">MFnData::kVectorArray</a>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_generic_attribute.html#a815ec0c59dfdc91fed24c4f2a75a4871\">addDataAccept</a>(<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a794fde57efe7913d9b67ac54c37899bd\">MFnData::kPointArray</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = gAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a08fb5fd3764795485a0d799616646ef1\">setUsesArrayDataBuilder</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute(mOutPropArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set up affection relationships</span></div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutSubDArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutPolyArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutNurbsSurfaceArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutNurbsCurveGrpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutTransOpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutCameraArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutPropArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mTimeAttr, mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutSubDArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutPolyArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutNurbsSurfaceArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutNurbsCurveGrpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutTransOpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutCameraArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutPropArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mSpeedAttr, mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutSubDArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutPolyArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutNurbsSurfaceArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutNurbsCurveGrpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutTransOpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutCameraArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutPropArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mOffsetAttr, mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutSubDArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutPolyArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutNurbsSurfaceArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutNurbsCurveGrpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutTransOpArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutCameraArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutPropArrayAttr);</div>\n\
<div class=\"line\">    status = attributeAffects(mCycleTypeAttr, mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">double</span> AlembicNode::getFPS()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> fps = 24.0f;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> unit = <a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (unit!=<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda94dd08feda7b2cf0ff8262312c4fcc09\">MTime::kInvalid</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> time(1.0, <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">        fps = <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">float</span><span class=\"keyword\">&gt;</span>(time.as(unit));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fps &lt;= 0.f )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fps = 24.0f;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fps;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">double</span> AlembicNode::computeAdjustedTime(<span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> inputTime,</div>\n\
<div class=\"line\">                                        <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> speed,</div>\n\
<div class=\"line\">                                        <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> timeOffset)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> ( inputTime - timeOffset ) * speed;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">double</span> AlembicNode::computeRetime(<span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> inputTime,</div>\n\
<div class=\"line\">                                  <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> firstTime,</div>\n\
<div class=\"line\">                                  <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> lastTime,</div>\n\
<div class=\"line\">                                  <span class=\"keyword\">const</span> <span class=\"keywordtype\">short</span> playStyle)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> playTime = lastTime - firstTime;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> eps = 0.001;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> retime = inputTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (playStyle)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">case</span> PLAYTYPE_HOLD:</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">case</span> PLAYTYPE_LOOP:</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">if</span> (inputTime &lt; (firstTime - eps) || inputTime &gt; (lastTime + eps))</div>\n\
<div class=\"line\">          {</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> timeOffset = inputTime - firstTime;</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> playOffset = floor(timeOffset/playTime);</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> fraction = fabs(timeOffset/playTime - playOffset);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">              retime = firstTime + playTime * fraction;</div>\n\
<div class=\"line\">          }</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">case</span> PLAYTYPE_REVERSE:</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">if</span> (inputTime &gt; (firstTime + eps) &amp;&amp; inputTime &lt; (lastTime - eps))</div>\n\
<div class=\"line\">          {</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> timeOffset = inputTime - firstTime;</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> playOffset = floor(timeOffset/playTime);</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> fraction = fabs(timeOffset/playTime - playOffset);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">              retime = lastTime - playTime * fraction;</div>\n\
<div class=\"line\">          }</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (inputTime &lt; (firstTime + eps))</div>\n\
<div class=\"line\">          {</div>\n\
<div class=\"line\">              retime = lastTime;</div>\n\
<div class=\"line\">          }</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">          {</div>\n\
<div class=\"line\">              retime = firstTime;</div>\n\
<div class=\"line\">          }</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">case</span> PLAYTYPE_BOUNCE:</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">if</span> (inputTime &lt; (firstTime - eps) || inputTime &gt; (lastTime + eps))</div>\n\
<div class=\"line\">          {</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> timeOffset = inputTime - firstTime;</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> playOffset = floor(timeOffset/playTime);</div>\n\
<div class=\"line\">              <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> fraction = fabs(timeOffset/playTime - playOffset);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">              <span class=\"comment\">// forward loop</span></div>\n\
<div class=\"line\">              <span class=\"keywordflow\">if</span> (fmod(playOffset, 2.0)==0.0)</div>\n\
<div class=\"line\">              {</div>\n\
<div class=\"line\">                  retime = firstTime + playTime * fraction;</div>\n\
<div class=\"line\">              }</div>\n\
<div class=\"line\">              <span class=\"comment\">// backward loop</span></div>\n\
<div class=\"line\">              <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">              {</div>\n\
<div class=\"line\">                  retime = lastTime - playTime * fraction;</div>\n\
<div class=\"line\">              }</div>\n\
<div class=\"line\">          }</div>\n\
<div class=\"line\">          <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retime;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AlembicNode::setDependentsDirty(<span class=\"keyword\">const</span> <a name=\"_a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a>&amp; plugArray)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == mAbcFileNameAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"comment\">/*  This code was to force refresh of the AlembicNode when there is a file name change</span></div>\n\
<div class=\"line\"><span class=\"comment\">    But since it was only working in particular very simple case, we decided to not enable it</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and only display a warning.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    In all other cases it could result in undesired behavior even scene corruption.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    See issue MAYA-47471</span></div>\n\
<div class=\"line\"><span class=\"comment\">        mFileInitialized = false;</span></div>\n\
<div class=\"line\"><span class=\"comment\">        mCurTime = DBL_MAX; // to force update</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(mFileInitialized)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(<span class=\"stringliteral\">&quot;Repathing Alembic Nodes is not supported&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#abd7d1dad4e4f0b922bf5ac4fc9c0230a\">MPxNode::setDependentsDirty</a>(plug, plugArray);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AlembicNode::compute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; plug, <a name=\"_a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp; dataBlock)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// update the frame number to be imported</span></div>\n\
<div class=\"line\">    <a name=\"_a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> speedHandle = dataBlock.<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mSpeedAttr, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> speed = speedHandle.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> offsetHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mOffsetAttr, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> offset = offsetHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> timeHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mTimeAttr, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> t = timeHandle.<a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> inputTime = t.<a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> fps = getFPS();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// scale and offset inputTime.</span></div>\n\
<div class=\"line\">    inputTime = computeAdjustedTime(inputTime, speed, offset/fps);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// this should be done only once per file</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mFileInitialized == <span class=\"keyword\">false</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mFileInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//Get list of input filenames</span></div>\n\
<div class=\"line\">        <a name=\"_a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> depNode(thisMObject());</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> layerFilesPlug = depNode.findPlug(mAbcLayerFileNamesAttr, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_array_data.html\">MFnStringArrayData</a> fnSAD( layerFilesPlug.<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ada03566ab064058c7ef435ae306d3809\">asMObject</a>() );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> storedFilenames = fnSAD.array();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//Legacy support for single-filename input</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( storedFilenames.length() == 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> dataHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mAbcFileNameAttr);</div>\n\
<div class=\"line\">            storedFilenames.append( dataHandle.<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a858b071eda071f265c130e30d0b98622\">asString</a>() );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        std::vector&lt;std::string&gt; abcFilenames;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> filenames;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> filenameChanged = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"comment\">// FIXME MAYA-92896: remove path resolution when Maya will be able to deal with arrays of filepaths</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; storedFilenames.length(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> fileObject;</div>\n\
<div class=\"line\">            fileObject.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a4b3d5deec3dc9475f712c8e0f2f4d9a2\">setResolveMethod</a>(MFileObject::MFileResolveMethod::kInputFile);</div>\n\
<div class=\"line\">            fileObject.<a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(storedFilenames[i]);</div>\n\
<div class=\"line\">            <a name=\"_a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fileName = fileObject.<a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>();</div>\n\
<div class=\"line\">            <span class=\"comment\">// FIXME The current directory for the project file is not available (again, MAYA-92896),</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// take the one from mAbcFileNameAttr. This cannot handle relative paths to the project.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fileName.<a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> abc_file_path;</div>\n\
<div class=\"line\">                abc_file_path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a> (dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mAbcFileNameAttr).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a858b071eda071f265c130e30d0b98622\">asString</a>());</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> abc_file_name;</div>\n\
<div class=\"line\">                abc_file_name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a> (storedFilenames[i]);</div>\n\
<div class=\"line\">                fileName = abc_file_path.<a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a33cbf3fdfeb3486cc6f3c3d0b32ab893\">rawPath</a>() + abc_file_name.<a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a64e621836bf0a07bce0b5bbb02c736ab\">rawName</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            filenameChanged = filenameChanged || (fileObject.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>() != storedFilenames[i]);</div>\n\
<div class=\"line\">            filenames.<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( fileName );</div>\n\
<div class=\"line\">            abcFilenames.push_back( fileName.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>() );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (filenameChanged)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newData = fnSAD.create(filenames, <span class=\"keyword\">nullptr</span>);</div>\n\
<div class=\"line\">            layerFilesPlug.<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>(newData);</div>\n\
<div class=\"line\">            storedFilenames = fnSAD.array();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Alembic::Abc::IArchive archive;</div>\n\
<div class=\"line\">        Alembic::AbcCoreFactory::IFactory factory;</div>\n\
<div class=\"line\">        factory.setPolicy(Alembic::Abc::ErrorHandler::kQuietNoopPolicy);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        archive = factory.getArchive( abcFilenames );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!archive.valid())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> theError = <span class=\"stringliteral\">&quot;Error opening these alembic files: &quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numFilenames = storedFilenames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; numFilenames; i++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                theError += storedFilenames[ i ];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>( i != (numFilenames - 1) )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    theError += <span class=\"stringliteral\">&quot;, &quot;</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            printError(theError);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// initialize some flags for plug update</span></div>\n\
<div class=\"line\">        mSubDInitialized = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        mPolyInitialized = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// When an alembic cache will be imported at the first time using</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// AbcImport, we need to set mIncludeFilterAttr (filterHandle) to be</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// mIncludeFilterString for later use. When we save a maya scene(.ma)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// mIncludeFilterAttr will be saved. Then when we load the saved</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// .ma file, mIncludeFilterString will be set to be mIncludeFilterAttr.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> includeFilterHandle =</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mIncludeFilterAttr, &amp;status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; includeFilterString = includeFilterHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a858b071eda071f265c130e30d0b98622\">asString</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mIncludeFilterString.length() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            includeFilterHandle.<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(mIncludeFilterString);</div>\n\
<div class=\"line\">            dataBlock.<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(mIncludeFilterAttr);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (includeFilterString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mIncludeFilterString = includeFilterString;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> excludeFilterHandle =</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mExcludeFilterAttr, &amp;status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; excludeFilterString = excludeFilterHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a858b071eda071f265c130e30d0b98622\">asString</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mExcludeFilterString.length() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            excludeFilterHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(mExcludeFilterString);</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(mExcludeFilterAttr);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (excludeFilterString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mExcludeFilterString = excludeFilterString;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dep(thisMObject());</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> allSetsPlug = dep.findPlug(<span class=\"stringliteral\">&quot;allColorSets&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        CreateSceneVisitor visitor(inputTime, !allSetsPlug.<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>(),</div>\n\
<div class=\"line\">            <a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, CreateSceneVisitor::NONE, <span class=\"stringliteral\">&quot;&quot;</span>,</div>\n\
<div class=\"line\">            mIncludeFilterString, mExcludeFilterString);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        visitor.walk(archive);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (visitor.hasSampledData())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// information retrieved from the hierarchy traversal</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// and given to AlembicNode to provide update</span></div>\n\
<div class=\"line\">            visitor.getData(mData);</div>\n\
<div class=\"line\">            mData.getFrameRange(mSequenceStartTime, mSequenceEndTime);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> startFrameHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(</div>\n\
<div class=\"line\">                mStartFrameAttr, &amp;status);</div>\n\
<div class=\"line\">            startFrameHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(mSequenceStartTime*fps);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> endFrameHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(</div>\n\
<div class=\"line\">                mEndFrameAttr, &amp;status);</div>\n\
<div class=\"line\">            endFrameHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(mSequenceEndTime*fps);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retime</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> cycleHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mCycleTypeAttr, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span> playType = cycleHandle.<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ab4cfc0fe402e4a52cf87b8acc6a29861\">asShort</a>();</div>\n\
<div class=\"line\">    inputTime = computeRetime(inputTime, mSequenceStartTime, mSequenceEndTime,</div>\n\
<div class=\"line\">                              playType);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clamp&lt;double&gt;(mSequenceStartTime, mSequenceEndTime, inputTime);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// update only when the time lapse is big enough</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fabs(inputTime - mCurTime) &gt; 0.00001)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mOutRead = std::vector&lt;bool&gt;(mOutRead.size(), <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        mCurTime = inputTime;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == mOutPropArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[0])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[0] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> propSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mPropList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (propSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle = dataBlock.<a name=\"a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(</div>\n\
<div class=\"line\">                mOutPropArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> outHandleIndex = 0;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// for all of the nodes with sampled attributes</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; propSize; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// only use the handle if it matches the index.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// The index wont line up in the sparse case so we</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// can just skip that element.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (outArrayHandle.<a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() == outHandleIndex++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    outHandle = outArrayHandle.<a name=\"a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (mData.mPropList[i].mArray.valid())</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    readProp(mCurTime, mData.mPropList[i].mArray, outHandle);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (mData.mPropList[i].mScalar.valid())</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// for visibility only</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (mData.mPropList[i].mScalar.getName() ==</div>\n\
<div class=\"line\">                        Alembic::AbcGeom::kVisibilityPropertyName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        Alembic::Util::int8_t visVal = 1;</div>\n\
<div class=\"line\">                        mData.mPropList[i].mScalar.get(&amp;visVal,</div>\n\
<div class=\"line\">                            Alembic::Abc::ISampleSelector(mCurTime,</div>\n\
<div class=\"line\">                                Alembic::Abc::ISampleSelector::kNearIndex ));</div>\n\
<div class=\"line\">                        outHandle.<a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aa0c1c73d4565b920be8dfaf63dd86273\">setGenericBool</a>(visVal != 0, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// for all scalar props</span></div>\n\
<div class=\"line\">                        readProp(mCurTime, mData.mPropList[i].mScalar, outHandle);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                outArrayHandle.<a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutTransOpArrayAttr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[1])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[1] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> xformSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mXformList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (xformSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutTransOpArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> arrayPlug(thisMObject(), mOutTransOpArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> outHandleIndex = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; xformSize; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                std::vector&lt;double&gt; sampleList;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (mData.mIsComplexXform[i])</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    readComplex(mCurTime, mData.mXformList[i], sampleList);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    Alembic::AbcGeom::XformSample samp;</div>\n\
<div class=\"line\">                    read(mCurTime, mData.mXformList[i], sampleList, samp);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sampleSize = (<span class=\"keywordtype\">unsigned</span> int)sampleList.size();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; sampleSize; j++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// only use the handle if it matches the index.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// The index wont line up in the sparse case so we</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// can just skip that element.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() == outHandleIndex++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">                    outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(sampleList[j]);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutLocatorPosScaleArrayAttr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[8])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[8] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> locSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mLocList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (locSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutLocatorPosScaleArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> arrayPlug(thisMObject(), mOutLocatorPosScaleArrayAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> outHandleIndex = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; locSize; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                std::vector&lt; double &gt; sampleList;</div>\n\
<div class=\"line\">                read(mCurTime, mData.mLocList[i], sampleList);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sampleSize = (<span class=\"keywordtype\">unsigned</span> int)sampleList.size();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; sampleSize; j++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// only use the handle if it matches the index.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// The index wont line up in the sparse case so we</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// can just skip that element.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() == outHandleIndex++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">                    outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(sampleList[j]);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutSubDArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[2])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Reference the output to let EM know we are the writer</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of the data. EM sets the output to holder and causes</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// race condition when evaluating fan-out destinations.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutSubDArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> elementCount = outArrayHandle.<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; elementCount; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>().<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[2] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> subDSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mSubDList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (subDSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(</div>\n\
<div class=\"line\">                mOutSubDArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; subDSize; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// these elements can be sparse if they have been deleted</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() != j)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (obj.<a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> fnMesh(obj);</div>\n\
<div class=\"line\">                    readSubD(mCurTime, fnMesh, obj, mData.mSubDList[j],</div>\n\
<div class=\"line\">                        mSubDInitialized);</div>\n\
<div class=\"line\">                    outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(obj);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            mSubDInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// for the case where we don&#39;t have any nodes, we want to make sure</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to push out empty meshes on our connections, this can happen if</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the input file was offlined, currently we only need to do this for</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// meshes as Nurbs, curves, and the other channels don&#39;t crash Maya</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(</div>\n\
<div class=\"line\">                mOutSubDArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>() &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">do</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>();</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (obj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a name=\"_a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> emptyVerts;</div>\n\
<div class=\"line\">                        <a name=\"_a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> emptyCounts;</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> emptyConnects;</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> emptyMesh;</div>\n\
<div class=\"line\">                        emptyMesh.<a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(0, 0, emptyVerts, emptyCounts,</div>\n\
<div class=\"line\">                            emptyConnects, obj);</div>\n\
<div class=\"line\">                        outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(obj);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">while</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>() == MS::kSuccess);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            mSubDInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutPolyArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[3])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Reference the output to let EM know we are the writer</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of the data. EM sets the output to holder and causes</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// race condition when evaluating fan-out destinations.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutPolyArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> elementCount = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; elementCount; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[3] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> polySize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mPolyMeshList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (polySize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutPolyArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; polySize; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// these elements can be sparse if they have been deleted</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() != j)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (obj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> fnMesh(obj);</div>\n\
<div class=\"line\">                    readPoly(mCurTime, fnMesh, obj, mData.mPolyMeshList[j],</div>\n\
<div class=\"line\">                        mPolyInitialized);</div>\n\
<div class=\"line\">                    outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(obj);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            mPolyInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// for the case where we don&#39;t have any nodes, we want to make sure</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to push out empty meshes on our connections, this can happen if</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the input file was offlined, currently we only need to do this for</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// meshes as Nurbs, curves, and the other channels don&#39;t crash Maya</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle = dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(</div>\n\
<div class=\"line\">                mOutPolyArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>() &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">do</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (obj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> emptyVerts;</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> emptyCounts;</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> emptyConnects;</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> emptyMesh;</div>\n\
<div class=\"line\">                        emptyMesh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(0, 0, emptyVerts, emptyCounts,</div>\n\
<div class=\"line\">                            emptyConnects, obj);</div>\n\
<div class=\"line\">                        outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(obj);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">while</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>() == MS::kSuccess);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            mPolyInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutCameraArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[4])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[4] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> cameraSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mCameraList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (cameraSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutCameraArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> arrayPlug(thisMObject(), mOutCameraArrayAttr);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> angleConversion = 1.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (<a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abc881d829b53f0f3871fcf9a8ab173b1\">MAngle::uiUnit</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>:</div>\n\
<div class=\"line\">                    angleConversion = 0.017453292519943295;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda8cb6112ac030d68e2fabddce0f095da7\">MAngle::kAngMinutes</a>:</div>\n\
<div class=\"line\">                    angleConversion = 60.0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda555d442ed85c4175176cc6c1f1a9dad6\">MAngle::kAngSeconds</a>:</div>\n\
<div class=\"line\">                    angleConversion = 3600.0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> index = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> cameraIndex = 0; cameraIndex &lt; cameraSize;</div>\n\
<div class=\"line\">                cameraIndex++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                Alembic::AbcGeom::ICamera &amp; cam =</div>\n\
<div class=\"line\">                    mData.mCameraList[cameraIndex];</div>\n\
<div class=\"line\">                std::vector&lt;double&gt; array;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                read(mCurTime, cam, array);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> dataIndex = 0; dataIndex &lt; array.size();</div>\n\
<div class=\"line\">                    dataIndex++, index++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// skip over sparse elements</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (index != outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>())</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                    outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// not shutter angle index, so not an angle</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (dataIndex != 11)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(array[dataIndex]);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(array[dataIndex] * angleConversion);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }  <span class=\"comment\">// for the per camera data handles</span></div>\n\
<div class=\"line\">            }  <span class=\"comment\">// for each camera</span></div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutNurbsSurfaceArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[5])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Reference the output to let EM know we are the writer</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of the data. EM sets the output to holder and causes</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// race condition when evaluating fan-out destinations.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutNurbsSurfaceArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> elementCount = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; elementCount; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[5] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> nSurfaceSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mNurbsList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (nSurfaceSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutNurbsSurfaceArrayAttr, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; nSurfaceSize; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// these elements can be sparse if they have been deleted</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() != j)</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (obj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    readNurbs(mCurTime, mData.mNurbsList[j], obj);</div>\n\
<div class=\"line\">                    outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(obj);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == mOutNurbsCurveGrpArrayAttr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mOutRead[6])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Reference the output to let EM know we are the writer</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of the data. EM sets the output to holder and causes</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// race condition when evaluating fan-out destinations.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutNurbsCurveGrpArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> elementCount = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; elementCount; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOutRead[6] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> nCurveGrpSize =</div>\n\
<div class=\"line\">            <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span><span class=\"keyword\">&gt;</span>(mData.mCurvesList.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (nCurveGrpSize &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outArrayHandle =</div>\n\
<div class=\"line\">                dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(mOutNurbsCurveGrpArrayAttr, &amp;status);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            std::vector&lt;MObject&gt; curvesObj;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; nCurveGrpSize; ++i)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                readCurves(mCurTime, mData.mCurvesList[i],</div>\n\
<div class=\"line\">                    mData.mNumCurves[i], curvesObj);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            std::size_t numChild = curvesObj.size();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// not the best way to do this</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// only reading bunches of curves based on the connections would be</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// more efficient when there is a bunch of broken connections</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; numChild; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a>() != i)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                outHandle = outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a>(&amp;status);</div>\n\
<div class=\"line\">                outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">                status = outHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(curvesObj[i]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            outArrayHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    dataBlock.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// make the far clipping plane passive, as packages like C4D don&#39;t have a</span></div>\n\
<div class=\"line\"><span class=\"comment\">// far clipping plane and when it doesn&#39;t exist it isn&#39;t easy to guess what</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the correct value should be</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> AlembicNode::isPassiveOutput(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; plug)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> arrayPlug(thisMObject(), mOutCameraArrayAttr);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> farClipPlaneIndex = 11;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> farClipPlanePlug =</div>\n\
<div class=\"line\">        arrayPlug.<a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a468f76143ddee02de717f75b2fc0de9d\">elementByPhysicalIndex</a>(farClipPlaneIndex, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status == MS::kSuccess &amp;&amp; plug == farClipPlanePlug)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#ac24fcf77203181163ad3e581645f5d3b\">MPxNode::isPassiveOutput</a>( plug );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">AlembicNode::SchedulingType AlembicNode::schedulingType()<span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Globally serialize this node because the compute method is not thread safe</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> kGloballySerialize;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// returns the list of files to archive.</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> AlembicNode::getFilesToArchive(</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <span class=\"comment\">/* shortName */</span>,</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> unresolvedName,</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <span class=\"comment\">/* markCouldBeImageSequence */</span>)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> files;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> layerFilenamesPlug(thisMObject(), mAbcLayerFileNamesAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_string_array_data.html\">MFnStringArrayData</a> fnSAD( layerFilenamesPlug.asMObject() );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> layerFilenames = fnSAD.array();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; layerFilenames.length(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fileName = layerFilenames[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (status == MS::kSuccess &amp;&amp; fileName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(unresolvedName)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                files.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(fileName);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//unresolvedName is false, resolve the path via MFileObject.</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> fileObject;</div>\n\
<div class=\"line\">                <span class=\"comment\">// FIXME MAYA-92896: remove path resolution when Maya will be able to deal with arrays of filepaths</span></div>\n\
<div class=\"line\">                fileObject.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a4b3d5deec3dc9475f712c8e0f2f4d9a2\">setResolveMethod</a>(MFileObject::MFileResolveMethod::kInputFile);</div>\n\
<div class=\"line\">                fileObject.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(fileName);</div>\n\
<div class=\"line\">                files.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(fileObject.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>());</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> files;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> AlembicNode::getExternalContent(<a name=\"_a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   addExternalContentForFileAttr(table, mAbcLayerFileNamesAttr);</div>\n\
<div class=\"line\">   <a name=\"a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#abfc494661ea0f7f957a9e437cebb2642\">MPxNode::getExternalContent</a>(table);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> AlembicNode::setExternalContent(<span class=\"keyword\">const</span> <a name=\"_a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   setExternalContentForFileAttr(mAbcLayerFileNamesAttr, table);</div>\n\
<div class=\"line\">   <a name=\"a116\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a389fc88c7e5236aa2b9980a1b452cc49\">MPxNode::setExternalContent</a>(table);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";