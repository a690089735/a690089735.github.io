var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: ik2Bsolver/AwMatrix.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'ik2_bsolver_2_aw_matrix_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: ik2Bsolver/AwMatrix.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">ik2Bsolver/AwMatrix.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _AwMatrix</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _AwMatrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  CLASS:    AwMatrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  CLASS DESCRIPTION (AwMatrix)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This class is a standard 4x4 double matrix.  Simple operations</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  such as multiplication, inversion and transposition are supported.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  An indexing function is supplied, but if required, users can</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  access the matrix elements directly.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *****************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;AwMath.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kMatrixEquivalentTolerance kDoubleEpsilon</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>AwPoint;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>AwVector;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>AwMatrix {</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    AwMatrix();</div>\n\
<div class=\"line\">    AwMatrix(<span class=\"keyword\">const</span> AwMatrix &amp;src);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef COMPILE_OUTSIDE_MAYA</span></div>\n\
<div class=\"line\">    AwMatrix(<span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;src);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    ~AwMatrix();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    AwMatrix &amp;operator=(<span class=\"keyword\">const</span> AwMatrix &amp;rhs);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> *operator[](<span class=\"keywordtype\">unsigned</span> i);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> *operator[](<span class=\"keywordtype\">unsigned</span> i) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> &amp;operator()(<span class=\"keywordtype\">short</span> i, <span class=\"keywordtype\">short</span> j);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> &amp;operator()(<span class=\"keywordtype\">short</span> i, <span class=\"keywordtype\">short</span> j) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    AwMatrix operator*(<span class=\"keyword\">const</span> AwMatrix &amp;right) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    AwMatrix operator*(<span class=\"keywordtype\">double</span>) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> operator==(<span class=\"keyword\">const</span> AwMatrix &amp;otherM) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> operator!=(<span class=\"keyword\">const</span> AwMatrix &amp;otherM) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isEquivalent(<span class=\"keyword\">const</span> AwMatrix &amp;otherM,</div>\n\
<div class=\"line\">                      <span class=\"keywordtype\">double</span> tolerance = kMatrixEquivalentTolerance) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    AwMatrix &amp;setToIdentity();</div>\n\
<div class=\"line\">    AwMatrix inverse() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    AwMatrix &amp;invertIt();</div>\n\
<div class=\"line\">    AwMatrix transpose() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    AwMatrix &amp;transposeIt();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> det3x3() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> det4x4() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isOrthogonal() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">friend</span> ostream &amp;operator&lt;&lt;(ostream &amp;os, <span class=\"keyword\">const</span> AwMatrix &amp;);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> AwMatrix identity;  <span class=\"comment\">// The multiplicative identity.</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> matrix[4][4];  <span class=\"comment\">// [row][column]</span></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  Inline methods</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix::AwMatrix()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    matrix[0][1] = matrix[0][2] = matrix[0][3] =</div>\n\
<div class=\"line\">    matrix[1][0] = matrix[1][2] = matrix[1][3] =</div>\n\
<div class=\"line\">    matrix[2][0] = matrix[2][1] = matrix[2][3] =</div>\n\
<div class=\"line\">    matrix[3][0] = matrix[3][1] = matrix[3][2] = 0.0;</div>\n\
<div class=\"line\">    matrix[0][0] = matrix[1][1] = matrix[2][2] = matrix[3][3] = 1.0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix &amp;AwMatrix::operator=(<span class=\"keyword\">const</span> AwMatrix &amp;rhs)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    matrix[0][0] = rhs.matrix[0][0]; matrix[0][1] = rhs.matrix[0][1];</div>\n\
<div class=\"line\">    matrix[0][2] = rhs.matrix[0][2]; matrix[0][3] = rhs.matrix[0][3];</div>\n\
<div class=\"line\">    matrix[1][0] = rhs.matrix[1][0]; matrix[1][1] = rhs.matrix[1][1];</div>\n\
<div class=\"line\">    matrix[1][2] = rhs.matrix[1][2]; matrix[1][3] = rhs.matrix[1][3];</div>\n\
<div class=\"line\">    matrix[2][0] = rhs.matrix[2][0]; matrix[2][1] = rhs.matrix[2][1];</div>\n\
<div class=\"line\">    matrix[2][2] = rhs.matrix[2][2]; matrix[2][3] = rhs.matrix[2][3];</div>\n\
<div class=\"line\">    matrix[3][0] = rhs.matrix[3][0]; matrix[3][1] = rhs.matrix[3][1];</div>\n\
<div class=\"line\">    matrix[3][2] = rhs.matrix[3][2]; matrix[3][3] = rhs.matrix[3][3];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix::AwMatrix(<span class=\"keyword\">const</span> AwMatrix &amp;src)</div>\n\
<div class=\"line\">{ *<span class=\"keyword\">this</span> = src; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef COMPILE_OUTSIDE_MAYA</span></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix::AwMatrix(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;src)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    matrix[0][0] = src.<a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][0]; matrix[0][1] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][1];</div>\n\
<div class=\"line\">    matrix[0][2] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][2]; matrix[0][3] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][3];</div>\n\
<div class=\"line\">    matrix[1][0] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[1][0]; matrix[1][1] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[1][1];</div>\n\
<div class=\"line\">    matrix[1][2] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[1][2]; matrix[1][3] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[1][3];</div>\n\
<div class=\"line\">    matrix[2][0] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[2][0]; matrix[2][1] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[2][1];</div>\n\
<div class=\"line\">    matrix[2][2] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[2][2]; matrix[2][3] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[2][3];</div>\n\
<div class=\"line\">    matrix[3][0] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[3][0]; matrix[3][1] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[3][1];</div>\n\
<div class=\"line\">    matrix[3][2] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[3][2]; matrix[3][3] = src.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[3][3];</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix::~AwMatrix()</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">double</span> *AwMatrix::operator[](<span class=\"keywordtype\">unsigned</span> i)</div>\n\
<div class=\"line\">{ <span class=\"keywordflow\">return</span> &amp;matrix[i][0]; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> *AwMatrix::operator[](<span class=\"keywordtype\">unsigned</span> i)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ <span class=\"keywordflow\">return</span> &amp;matrix[i][0]; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">double</span> &amp; AwMatrix::operator()(<span class=\"keywordtype\">short</span> i, <span class=\"keywordtype\">short</span> j)</div>\n\
<div class=\"line\">{ <span class=\"keywordflow\">return</span> matrix[i][j]; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span>&amp; AwMatrix::operator()(<span class=\"keywordtype\">short</span> i, <span class=\"keywordtype\">short</span> j)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ <span class=\"keywordflow\">return</span> matrix[i][j]; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix AwMatrix::inverse()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ AwMatrix temp(*<span class=\"keyword\">this</span>); temp.invertIt(); <span class=\"keywordflow\">return</span> temp; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> AwMatrix AwMatrix::transpose()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ AwMatrix temp(*<span class=\"keyword\">this</span>); temp.transposeIt(); <span class=\"keywordflow\">return</span> temp; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">bool</span> AwMatrix::operator!=(<span class=\"keyword\">const</span> AwMatrix &amp;otherM)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ <span class=\"keywordflow\">return</span> !( (*this) == otherM ); }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* _AwMatrix */</span><span class=\"preprocessor\"></span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";