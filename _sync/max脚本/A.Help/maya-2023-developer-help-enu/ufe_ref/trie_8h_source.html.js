var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>ufe: include/ufe/trie.h Source File</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"ufe_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"ufe_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"ufe_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(ufe_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'ufe_ref/\'; }\n\
function ufe_ref_initializeToc(forceTrigger) {\n\
    ufe_ref_adsk_ref_toc.initResizable();\n\
    ufe_ref_adsk_ref_toc.initNavTree(\'trie_8h_source.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(ufe_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = ufe_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(document).ready(function() { yepnope.injectJs(\"./ufe_ref/menudata.js\"); });</script><script>$(document).ready(function() { yepnope.injectJs(\"./ufe_ref/menu.js\"); });</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { ufe_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>ufe: include/ufe/trie.h Source File</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.14 -->\n\
\n\
\n\
\n\
\n\
<div id=\"main-nav\"></div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">trie.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<a href=\"#!/url=./ufe_ref/trie_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;<span class=\"preprocessor\">#line 1 &quot;S:/jenkins/workspace/ufe-full-python3.9-windows/ufe/include/trie.h&quot;</span></div><div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"preprocessor\">#ifndef _ufeTrie</span></div><div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"preprocessor\">#define _ufeTrie</span></div><div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"comment\">// =======================================================================</span></div><div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;<span class=\"comment\">// Copyright 2019 Autodesk, Inc. All rights reserved.</span></div><div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;<span class=\"comment\">//</span></div><div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;<span class=\"comment\">// This computer source code and related instructions and comments are the</span></div><div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\">// unpublished confidential  and proprietary information of Autodesk, Inc.</span></div><div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\">// and are protected under applicable copyright and trade secret law. They </span></div><div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;<span class=\"comment\">// may not be disclosed to, copied  or used by any third party without the </span></div><div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"comment\">// prior written consent of Autodesk, Inc.</span></div><div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"comment\">// =======================================================================</span></div><div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;</div><div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;<span class=\"preprocessor\">#include &quot;<a class=\"code\" href=\"#!/url=./ufe_ref/path_component_8h.html\">pathComponent.h</a>&quot;</span></div><div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;<span class=\"preprocessor\">#include &quot;<a class=\"code\" href=\"#!/url=./ufe_ref/path_8h.html\">path.h</a>&quot;</span></div><div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;</div><div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\">   17</span>&#160;<span class=\"preprocessor\">#include &lt;memory&gt;</span></div><div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;<span class=\"preprocessor\">#include &lt;unordered_map&gt;</span></div><div class=\"line\"><a name=\"l00019\"></a><span class=\"lineno\">   19</span>&#160;</div><div class=\"line\"><a name=\"l00020\"></a><span class=\"lineno\">   20</span>&#160;<a class=\"code\" href=\"#!/url=./ufe_ref/ufe_8h.html#ace10975c3aafd47ddd2e6da6a4ba3dc4\">UFE_NS_DEF</a> {</div><div class=\"line\"><a name=\"l00021\"></a><span class=\"lineno\">   21</span>&#160;</div><div class=\"line\"><a name=\"l00023\"></a><span class=\"lineno\">   23</span>&#160;</div><div class=\"line\"><a name=\"l00038\"></a><span class=\"lineno\">   38</span>&#160;<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt; <span class=\"keyword\">class </span>Trie;</div><div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\">   39</span>&#160;</div><div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</div><div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html\">   41</a></span>&#160;<span class=\"keyword\">class </span><a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html\">TrieNode</a> : <span class=\"keyword\">public</span> std::enable_shared_from_this&lt; TrieNode&lt;T&gt; &gt;</div><div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;{</div><div class=\"line\"><a name=\"l00043\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a72f7c3128836709b1663c5f2197387c7\">   43</a></span>&#160;    <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span><a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&lt;T&gt;;</div><div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;<span class=\"keyword\">public</span>:</div><div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">   45</a></span>&#160;    <span class=\"keyword\">typedef</span> std::shared_ptr&lt;TrieNode&gt; <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a>;</div><div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;</div><div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\">   47</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html\">TrieNode</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a>&amp; component);</div><div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;</div><div class=\"line\"><a name=\"l00049\"></a><span class=\"lineno\">   49</span>&#160;    <span class=\"comment\">// Create a trie node with a null component.</span></div><div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html\">TrieNode</a>();</div><div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;</div><div class=\"line\"><a name=\"l00052\"></a><span class=\"lineno\">   52</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a> parent() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;</div><div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;    <span class=\"comment\">// Child addition and removal.</span></div><div class=\"line\"><a name=\"l00055\"></a><span class=\"lineno\">   55</span>&#160;    <span class=\"keywordtype\">void</span> add(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a>&amp; child);</div><div class=\"line\"><a name=\"l00056\"></a><span class=\"lineno\">   56</span>&#160;    <span class=\"keywordtype\">void</span> <span class=\"keyword\">remove</span>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a>&amp; child);</div><div class=\"line\"><a name=\"l00057\"></a><span class=\"lineno\">   57</span>&#160;</div><div class=\"line\"><a name=\"l00058\"></a><span class=\"lineno\">   58</span>&#160;    <span class=\"comment\">// Child lookup.</span></div><div class=\"line\"><a name=\"l00059\"></a><span class=\"lineno\">   59</span>&#160;    <span class=\"keywordtype\">bool</span> contains(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a>&amp; child) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00060\"></a><span class=\"lineno\">   60</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a> operator[](<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a>&amp; child) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00061\"></a><span class=\"lineno\">   61</span>&#160;</div><div class=\"line\"><a name=\"l00062\"></a><span class=\"lineno\">   62</span>&#160;    <span class=\"comment\">// Number of children TrieNode&#39;s.</span></div><div class=\"line\"><a name=\"l00063\"></a><span class=\"lineno\">   63</span>&#160;    std::size_t size() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;</div><div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;    <span class=\"comment\">// Number of nodes in the tree rooted at this node, including this node.</span></div><div class=\"line\"><a name=\"l00066\"></a><span class=\"lineno\">   66</span>&#160;    std::size_t treeSize() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00067\"></a><span class=\"lineno\">   67</span>&#160;</div><div class=\"line\"><a name=\"l00068\"></a><span class=\"lineno\">   68</span>&#160;    <span class=\"comment\">// Convenience method for size() == 0.</span></div><div class=\"line\"><a name=\"l00069\"></a><span class=\"lineno\">   69</span>&#160;    <span class=\"keywordtype\">bool</span> empty() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00070\"></a><span class=\"lineno\">   70</span>&#160;</div><div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a> component() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;</div><div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;    <span class=\"comment\">// Change the component of this node, adjusting the parent accordingly.</span></div><div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\">   74</span>&#160;    <span class=\"keywordtype\">void</span> rename(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a>&amp; component);</div><div class=\"line\"><a name=\"l00075\"></a><span class=\"lineno\">   75</span>&#160;</div><div class=\"line\"><a name=\"l00076\"></a><span class=\"lineno\">   76</span>&#160;    <span class=\"comment\">// Change the component &amp; parent of this node, adjusting the old and new parent accordingly.</span></div><div class=\"line\"><a name=\"l00077\"></a><span class=\"lineno\">   77</span>&#160;    <span class=\"keywordtype\">void</span> move(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a>&amp; component, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a>&amp; newParent);</div><div class=\"line\"><a name=\"l00078\"></a><span class=\"lineno\">   78</span>&#160;</div><div class=\"line\"><a name=\"l00079\"></a><span class=\"lineno\">   79</span>&#160;    <span class=\"comment\">// Copy the data into the node, and set the has data flag.</span></div><div class=\"line\"><a name=\"l00080\"></a><span class=\"lineno\">   80</span>&#160;    <span class=\"keywordtype\">void</span> setData(<span class=\"keyword\">const</span> T&amp; data);</div><div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;</div><div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;    <span class=\"comment\">// Access the node&#39;s data.  The hasData() method must return true for data</span></div><div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\">   83</span>&#160;    <span class=\"comment\">// to be valid, else the return data is stale.</span></div><div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;    <span class=\"keyword\">const</span> T&amp; data() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00085\"></a><span class=\"lineno\">   85</span>&#160;</div><div class=\"line\"><a name=\"l00086\"></a><span class=\"lineno\">   86</span>&#160;    <span class=\"keywordtype\">bool</span> hasData() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00087\"></a><span class=\"lineno\">   87</span>&#160;</div><div class=\"line\"><a name=\"l00088\"></a><span class=\"lineno\">   88</span>&#160;    <span class=\"comment\">// Called to find the depth of the closest common ancestor to all nodes</span></div><div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;    <span class=\"comment\">// with data.  Calls itself recursively looking for either multiple children</span></div><div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;    <span class=\"comment\">// or the first node with associated data.</span></div><div class=\"line\"><a name=\"l00091\"></a><span class=\"lineno\">   91</span>&#160;    <span class=\"comment\">// Increments the depth parameter as it moves down the trie which can then</span></div><div class=\"line\"><a name=\"l00092\"></a><span class=\"lineno\">   92</span>&#160;    <span class=\"comment\">// be used to create a path that matches the specific node.</span></div><div class=\"line\"><a name=\"l00093\"></a><span class=\"lineno\">   93</span>&#160;    <span class=\"keywordtype\">int</span> closestCommonAncestor( <span class=\"keywordtype\">int</span> depth ) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00094\"></a><span class=\"lineno\">   94</span>&#160;</div><div class=\"line\"><a name=\"l00095\"></a><span class=\"lineno\">   95</span>&#160;<span class=\"keyword\">private</span>:</div><div class=\"line\"><a name=\"l00096\"></a><span class=\"lineno\">   96</span>&#160;</div><div class=\"line\"><a name=\"l00097\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a3cc4252aef80cec56f847e35094610c4\">   97</a></span>&#160;    <span class=\"keyword\">typedef</span> std::unordered_map&lt;PathComponent, Ptr&gt; <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a3cc4252aef80cec56f847e35094610c4\">Children</a>;</div><div class=\"line\"><a name=\"l00098\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a691468112cadb57bafeaeeba3bf6b308\">   98</a></span>&#160;    <span class=\"keyword\">typedef</span> std::weak_ptr&lt;TrieNode&gt;                <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a691468112cadb57bafeaeeba3bf6b308\">ParentPtr</a>;</div><div class=\"line\"><a name=\"l00099\"></a><span class=\"lineno\">   99</span>&#160;</div><div class=\"line\"><a name=\"l00100\"></a><span class=\"lineno\">  100</span>&#160;    <span class=\"comment\">// Clearing out of the TrieNode should be managed by the Trie only,</span></div><div class=\"line\"><a name=\"l00101\"></a><span class=\"lineno\">  101</span>&#160;    <span class=\"comment\">// so keeping these private.</span></div><div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\">  102</span>&#160;    <span class=\"keywordtype\">void</span> clear();</div><div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\">  103</span>&#160;    <span class=\"keywordtype\">void</span> clearData();</div><div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;</div><div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\">  105</span>&#160;    <span class=\"keywordtype\">void</span> setParent(<a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ptr</a> parent);</div><div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;</div><div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a4b6f2e78a5e7e1dc35b473c0cef6d8bd\">  107</a></span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">PathComponent</a> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a4b6f2e78a5e7e1dc35b473c0cef6d8bd\">fComponent</a>;</div><div class=\"line\"><a name=\"l00108\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#ad7f0e2e2d958e66b7bf14d29fff7a212\">  108</a></span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a691468112cadb57bafeaeeba3bf6b308\">ParentPtr</a>     <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#ad7f0e2e2d958e66b7bf14d29fff7a212\">fParent</a>;</div><div class=\"line\"><a name=\"l00109\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a08e8aa8415cc3c08a2bfd6a8de4b0066\">  109</a></span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a3cc4252aef80cec56f847e35094610c4\">Children</a>      <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a08e8aa8415cc3c08a2bfd6a8de4b0066\">fChildren</a>;</div><div class=\"line\"><a name=\"l00110\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#aa2853546b60974f8afde910e0ec6e349\">  110</a></span>&#160;    <span class=\"keywordtype\">bool</span>          <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#aa2853546b60974f8afde910e0ec6e349\">fHasData</a>;</div><div class=\"line\"><a name=\"l00111\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a85eb6e02457c462249a52e87b08c01a2\">  111</a></span>&#160;    T             <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a85eb6e02457c462249a52e87b08c01a2\">fData</a>;</div><div class=\"line\"><a name=\"l00112\"></a><span class=\"lineno\">  112</span>&#160;};</div><div class=\"line\"><a name=\"l00113\"></a><span class=\"lineno\">  113</span>&#160;</div><div class=\"line\"><a name=\"l00115\"></a><span class=\"lineno\">  115</span>&#160;</div><div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;</div><div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;<span class=\"keyword\">class </span><a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a></div><div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;{</div><div class=\"line\"><a name=\"l00126\"></a><span class=\"lineno\">  126</span>&#160;<span class=\"keyword\">public</span>:</div><div class=\"line\"><a name=\"l00127\"></a><span class=\"lineno\">  127</span>&#160;</div><div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>();</div><div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\">  129</span>&#160;</div><div class=\"line\"><a name=\"l00130\"></a><span class=\"lineno\">  130</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp;) = <span class=\"keyword\">delete</span>;</div><div class=\"line\"><a name=\"l00131\"></a><span class=\"lineno\">  131</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp; operator=(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp;) = <span class=\"keyword\">delete</span>;</div><div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;</div><div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;    <span class=\"comment\">// Move assignment and construction.</span></div><div class=\"line\"><a name=\"l00134\"></a><span class=\"lineno\">  134</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>(<a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp;&amp;);</div><div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;    <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp; operator=(<a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Trie</a>&amp;&amp;);</div><div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;</div><div class=\"line\"><a name=\"l00137\"></a><span class=\"lineno\">  137</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> root() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;</div><div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> add(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>, <span class=\"keyword\">const</span> T&amp; data);</div><div class=\"line\"><a name=\"l00140\"></a><span class=\"lineno\">  140</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> <span class=\"keyword\">remove</span>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp;);</div><div class=\"line\"><a name=\"l00141\"></a><span class=\"lineno\">  141</span>&#160;    <span class=\"comment\">// Move the entire hierarchy rooted at oldPath to newPath. Returns the resulting</span></div><div class=\"line\"><a name=\"l00142\"></a><span class=\"lineno\">  142</span>&#160;    <span class=\"comment\">// trie node if successful, else a null pointer.</span></div><div class=\"line\"><a name=\"l00143\"></a><span class=\"lineno\">  143</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> move(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; oldPath, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; newPath);</div><div class=\"line\"><a name=\"l00144\"></a><span class=\"lineno\">  144</span>&#160;    <span class=\"keywordtype\">void</span>                      clear();</div><div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\">  145</span>&#160;</div><div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\">  146</span>&#160;    <span class=\"comment\">// Lookup. contains() is a convenience for bool(find(path)).</span></div><div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\">  147</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> find(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\">  148</span>&#160;    <span class=\"keywordtype\">bool</span> contains(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00149\"></a><span class=\"lineno\">  149</span>&#160;</div><div class=\"line\"><a name=\"l00150\"></a><span class=\"lineno\">  150</span>&#160;    <span class=\"comment\">// Return the trie node corresponding to the path, regardless of whether it</span></div><div class=\"line\"><a name=\"l00151\"></a><span class=\"lineno\">  151</span>&#160;    <span class=\"comment\">// has data or not.  If the trie has no such node, returns a null pointer.</span></div><div class=\"line\"><a name=\"l00152\"></a><span class=\"lineno\">  152</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> node(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;</div><div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\">  154</span>&#160;    <span class=\"comment\">// Query whether the trie contains a descendant of the argument path.  Must</span></div><div class=\"line\"><a name=\"l00155\"></a><span class=\"lineno\">  155</span>&#160;    <span class=\"comment\">// be a strict descendant: if the trie contains only the argument</span></div><div class=\"line\"><a name=\"l00156\"></a><span class=\"lineno\">  156</span>&#160;    <span class=\"comment\">// itself, returns false.  If the argument path is empty, returns false.</span></div><div class=\"line\"><a name=\"l00157\"></a><span class=\"lineno\">  157</span>&#160;    <span class=\"keywordtype\">bool</span> containsDescendant(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\">  158</span>&#160;</div><div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\">  159</span>&#160;    <span class=\"comment\">// Query whether the trie contains an ancestor of the argument path.</span></div><div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\">  160</span>&#160;    <span class=\"comment\">// Must be a strict ancestor: if the trie contains only the argument</span></div><div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\">  161</span>&#160;    <span class=\"comment\">// itself, returns false.  If the argument path is empty, returns false.</span></div><div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\">  162</span>&#160;    <span class=\"keywordtype\">bool</span> containsAncestor(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;</div><div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\">  164</span>&#160;    <span class=\"comment\">// convenience for contains(path) || containsAncestor(path)</span></div><div class=\"line\"><a name=\"l00165\"></a><span class=\"lineno\">  165</span>&#160;    <span class=\"keywordtype\">bool</span> containsAncestorInclusive(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\">  166</span>&#160;</div><div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;    <span class=\"comment\">// Returns the depth of the closest common ancestor of all leaf nodes.</span></div><div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;    <span class=\"comment\">// Return -1 if the trie is empty.</span></div><div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\">  169</span>&#160;    <span class=\"comment\">// Return 0 if the common ancestor is the root of the scene graph.</span></div><div class=\"line\"><a name=\"l00170\"></a><span class=\"lineno\">  170</span>&#160;    <span class=\"keywordtype\">int</span> closestCommonAncestor() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00171\"></a><span class=\"lineno\">  171</span>&#160;</div><div class=\"line\"><a name=\"l00172\"></a><span class=\"lineno\">  172</span>&#160;    <span class=\"comment\">// Number of nodes in the trie, including the root node.  For testing</span></div><div class=\"line\"><a name=\"l00173\"></a><span class=\"lineno\">  173</span>&#160;    <span class=\"comment\">// and debugging purposes, as it traverses the trie and counts nodes.</span></div><div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;    std::size_t size() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;</div><div class=\"line\"><a name=\"l00176\"></a><span class=\"lineno\">  176</span>&#160;    <span class=\"comment\">// Convenience method for size() == 0.</span></div><div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\">  177</span>&#160;    <span class=\"keywordtype\">bool</span> empty() <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\">  178</span>&#160;</div><div class=\"line\"><a name=\"l00179\"></a><span class=\"lineno\">  179</span>&#160;<span class=\"keyword\">private</span>:</div><div class=\"line\"><a name=\"l00180\"></a><span class=\"lineno\">  180</span>&#160;</div><div class=\"line\"><a name=\"l00181\"></a><span class=\"lineno\">  181</span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> createNode(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>);</div><div class=\"line\"><a name=\"l00182\"></a><span class=\"lineno\">  182</span>&#160;    <span class=\"keywordtype\">void</span> cleanUpNode(<span class=\"keyword\">const</span> <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a>&amp; node);</div><div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;    <span class=\"keyword\">template</span>&lt;<span class=\"keywordtype\">bool</span> INCLUDE_DESCENDANT&gt;</div><div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\">  184</span>&#160;    <span class=\"keywordtype\">bool</span> containsAncestorHelper(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Path</a>&amp; <a class=\"code\" href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">path</a>) <span class=\"keyword\">const</span>;</div><div class=\"line\"><a name=\"l00185\"></a><span class=\"lineno\">  185</span>&#160;</div><div class=\"line\"><a name=\"l00186\"></a><span class=\"lineno\"><a class=\"line\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html#a2e24df660e5c99dc9f1db4332b510e5a\">  186</a></span>&#160;    <span class=\"keyword\">typename</span> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">TrieNode&lt;T&gt;::Ptr</a> <a class=\"code\" href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html#a2e24df660e5c99dc9f1db4332b510e5a\">fRoot</a>;</div><div class=\"line\"><a name=\"l00187\"></a><span class=\"lineno\">  187</span>&#160;};</div><div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;</div><div class=\"line\"><a name=\"l00189\"></a><span class=\"lineno\">  189</span>&#160;}</div><div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;</div><div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;<span class=\"preprocessor\">#endif  </span><span class=\"comment\">/* _ufeTrie */</span><span class=\"preprocessor\"></span></div><div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_aa2853546b60974f8afde910e0ec6e349\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#aa2853546b60974f8afde910e0ec6e349\">Ufe::TrieNode::fHasData</a></div><div class=\"ttdeci\">bool fHasData</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00110\">trie.h:110</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a3cc4252aef80cec56f847e35094610c4\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a3cc4252aef80cec56f847e35094610c4\">Ufe::TrieNode::Children</a></div><div class=\"ttdeci\">std::unordered_map&lt; PathComponent, Ptr &gt; Children</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00097\">trie.h:97</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_path_component_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_path_component.html\">Ufe::PathComponent</a></div><div class=\"ttdoc\">Constant string representation with fixed space and O(1) comparison. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/path_component_8h_source.html#l00033\">pathComponent.h:33</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html\">Ufe::Trie</a></div><div class=\"ttdoc\">Node for Universal Front End trie. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/selection_trie_fwd_8h_source.html#l00018\">selectionTrieFwd.h:18</a></div></div>\n\
<div class=\"ttc\" id=\"path_component_8h_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/path_component_8h.html\">pathComponent.h</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_path_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_path.html\">Ufe::Path</a></div><div class=\"ttdoc\">Identify an object or 3D path in the scene. </div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/path_8h_source.html#l00037\">path.h:37</a></div></div>\n\
<div class=\"ttc\" id=\"ufe_8h_html_ace10975c3aafd47ddd2e6da6a4ba3dc4\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/ufe_8h.html#ace10975c3aafd47ddd2e6da6a4ba3dc4\">UFE_NS_DEF</a></div><div class=\"ttdeci\">#define UFE_NS_DEF</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/ufe_8h_source.html#l00035\">ufe.h:35</a></div></div>\n\
<div class=\"ttc\" id=\"path_8h_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/path_8h.html\">path.h</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a85eb6e02457c462249a52e87b08c01a2\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a85eb6e02457c462249a52e87b08c01a2\">Ufe::TrieNode::fData</a></div><div class=\"ttdeci\">T fData</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00111\">trie.h:111</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_ad7f0e2e2d958e66b7bf14d29fff7a212\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#ad7f0e2e2d958e66b7bf14d29fff7a212\">Ufe::TrieNode::fParent</a></div><div class=\"ttdeci\">ParentPtr fParent</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00108\">trie.h:108</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a691468112cadb57bafeaeeba3bf6b308\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a691468112cadb57bafeaeeba3bf6b308\">Ufe::TrieNode::ParentPtr</a></div><div class=\"ttdeci\">std::weak_ptr&lt; TrieNode &gt; ParentPtr</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00098\">trie.h:98</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a174649ed02d27a40d8acf710e4e53fcb\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a174649ed02d27a40d8acf710e4e53fcb\">Ufe::TrieNode::Ptr</a></div><div class=\"ttdeci\">std::shared_ptr&lt; TrieNode &gt; Ptr</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00045\">trie.h:45</a></div></div>\n\
<div class=\"ttc\" id=\"namespace_ufe_1_1_path_string_html_a5d7966f2169231b7c351f5204ecbee96\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/namespace_ufe_1_1_path_string.html#a5d7966f2169231b7c351f5204ecbee96\">Ufe::PathString::path</a></div><div class=\"ttdeci\">Path path(const std::string &amp;pathString)</div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_html_a2e24df660e5c99dc9f1db4332b510e5a\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie.html#a2e24df660e5c99dc9f1db4332b510e5a\">Ufe::Trie::fRoot</a></div><div class=\"ttdeci\">TrieNode&lt; T &gt;::Ptr fRoot</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00186\">trie.h:186</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a4b6f2e78a5e7e1dc35b473c0cef6d8bd\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a4b6f2e78a5e7e1dc35b473c0cef6d8bd\">Ufe::TrieNode::fComponent</a></div><div class=\"ttdeci\">PathComponent fComponent</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00107\">trie.h:107</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html_a08e8aa8415cc3c08a2bfd6a8de4b0066\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html#a08e8aa8415cc3c08a2bfd6a8de4b0066\">Ufe::TrieNode::fChildren</a></div><div class=\"ttdeci\">Children fChildren</div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00109\">trie.h:109</a></div></div>\n\
<div class=\"ttc\" id=\"class_ufe_1_1_trie_node_html\"><div class=\"ttname\"><a href=\"#!/url=./ufe_ref/class_ufe_1_1_trie_node.html\">Ufe::TrieNode</a></div><div class=\"ttdef\"><b>Definition:</b> <a href=\"#!/url=./ufe_ref/trie_8h_source.html#l00041\">trie.h:41</a></div></div>\n\
</div><!-- fragment --></div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";