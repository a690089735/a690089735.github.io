var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: shellNode/shellNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'shell_node_2shell_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: shellNode/shellNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">shellNode/shellNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in is based, in part, upon the folloing literature:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Digital Seashells, M.B. Cortie,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Computer and Graphics, Vol. 17, No. 1, pp. 79-84, 1993</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      _Shells_, S. Peter Dance,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Harper Collins Publishers 1992, ISBN 0 7322 0067 9</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Modeling Seashels, Deborah R. Fowler, Hans Meinhardt et al.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Siggraph Proceedings 92, pp. 379-387</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      _The Algorithmic Beauty of Sea Shells_, Hans Meinhardt,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Springer-Verlag Berlin Heidelberg 1995, ISBN 3 540 57842 0</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Produces the dependency graph node &quot;shell&quot;. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in demonstrates how to generate a complex mesh object procedurally.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It also demonstrates how to customize the attribute editor for a node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To use the plug-in:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (1) Enter the MEL command &quot;shell&quot; to create a new shell node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      A mesh object will also be created to display the output.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (2) Open the attribute editor for the new shell node to see custom controls</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      for picking various sea shell presets. The attribute editor layout is</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      created by the file &quot;AEShellTemplate.mel&quot; and provides a complex</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      example of how to create an attribute editor template. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span> </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAngle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIntArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDoubleArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshVertex.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define Rad(x)  ((x)*FPI/180.0F)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define Deg(x)  ((x)*180.0F/FPI)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define FPI 3.14159265358979323846264338327950288419716939937510582F </span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define McheckErr(stat,msg)         \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( MS::kSuccess != stat ) {   \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        cerr &lt;&lt; msg;                \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        return MS::kFailure;        \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>shellNode : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html\">MPxNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    shellNode();</div>\n\
<div class=\"line\">    ~shellNode() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *          creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Node attributes</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// ---------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Main shape parameters</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> alpha;      <span class=\"comment\">// Profile (Helico-spiral) param #1</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> beta;       <span class=\"comment\">// Profile (Helico-spiral) param #2</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> phi;        <span class=\"comment\">// Section Starting point</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> my;         <span class=\"comment\">// Section Slant</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> omega;      <span class=\"comment\">// Section angle around Oz</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> omin;       <span class=\"comment\">// Spiral start angle</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> omax;       <span class=\"comment\">// Spiral end angle</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> od;         <span class=\"comment\">// Spiral angle step</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> smin;       <span class=\"comment\">// Section start angle</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> smax;       <span class=\"comment\">// Section end angle</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> sd;         <span class=\"comment\">// Section angle step</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> A;          <span class=\"comment\">// Distance of section from Z-axis</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> a;          <span class=\"comment\">// Section diameter #1</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> b;          <span class=\"comment\">// Section diameter #2</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> scale;      <span class=\"comment\">// Overall scale</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> P;          <span class=\"comment\">// Position on section</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> L;          <span class=\"comment\">// Amplitude (extrusion) of nodule</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> N;          <span class=\"comment\">// Nodules frequency on profile</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W1;         <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W2;         <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> nstart;     <span class=\"comment\">// Starting point on spiral</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 2</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> P2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> L2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> N2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W12;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W22;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> off2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> nstart2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 3</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> P3;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> L3;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> N3;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W13;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> W23;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> off3;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> nstart3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Ribs</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> uamp;       <span class=\"comment\">// Section rib amplitude</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> ufreq;      <span class=\"comment\">// Section rib frequency</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> urib;       <span class=\"comment\">// Section rib/wave percent</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> vamp;       <span class=\"comment\">// Profile rib amplitude</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> vfreq;      <span class=\"comment\">// Profile rib frequency</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> vrib;       <span class=\"comment\">// Profile rib/wave percent</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Output mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> outMesh;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">struct </span>ShellParams {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   alpha;      <span class=\"comment\">// Profile (Helico-spiral) param #1</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   beta;       <span class=\"comment\">// Profile (Helico-spiral) param #2</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   phi;        <span class=\"comment\">// Section Starting point</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   my;         <span class=\"comment\">// Section Slant</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   omega;      <span class=\"comment\">// Section angle around Oz</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   omin;       <span class=\"comment\">// Spiral start angle</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   omax;       <span class=\"comment\">// Spiral end angle</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   od;         <span class=\"comment\">// Spiral angle step</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   smin;       <span class=\"comment\">// Section start angle</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   smax;       <span class=\"comment\">// Section end angle</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   sd;         <span class=\"comment\">// Section angle step</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   A;          <span class=\"comment\">// Distance of section from Z-axis</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   a;          <span class=\"comment\">// Section diameter #1</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   b;          <span class=\"comment\">// Section diameter #2</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   scale;      <span class=\"comment\">// Overall scale</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Nodule 1</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// --------</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   P;          <span class=\"comment\">// Position on section</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   L;          <span class=\"comment\">// Amplitude (extrusion) of nodule</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   N;          <span class=\"comment\">// Nodules frequency on profile</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W1;         <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W2;         <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   nstart;     <span class=\"comment\">// Starting point on spiral</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Nodule 2</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// --------</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   P2;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   L2;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   N2;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W12;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W22;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   off2;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   nstart2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Nodule 3</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// --------</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   P3;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   L3;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   N3;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W13;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   W23;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   off3;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   nstart3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Ribs</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ----</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   uamp;       <span class=\"comment\">// Section rib amplitude</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   ufreq;      <span class=\"comment\">// Section rib frequency</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   urib;       <span class=\"comment\">// Section rib/wave percent</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   vamp;       <span class=\"comment\">// Profile rib amplitude</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   vfreq;      <span class=\"comment\">// Profile rib frequency</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>   vrib;       <span class=\"comment\">// Profile rib/wave percent</span></div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ShellParams shellParams;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>        redoTopology;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>        rebuild;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Precomputed shell points</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> ni;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> nj;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   **pnts;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> GetFloatParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> GetAngleParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>  addFloatParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp; attr, <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> longName, </div>\n\
<div class=\"line\">                                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> briefName, <span class=\"keywordtype\">float</span> attrDefault );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>  addAngleParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp; attr, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> longName, </div>\n\
<div class=\"line\">                                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> briefName, <span class=\"keywordtype\">float</span> attrDefault );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>  UpdateParameters(); </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>  RedoTopology();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>  Rebuild();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> Nodules( <span class=\"keywordtype\">float</span> s, <span class=\"keywordtype\">float</span> o );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> Ribs( <span class=\"keywordtype\">float</span> u, <span class=\"keywordtype\">float</span> v );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>  Eval( <span class=\"keywordtype\">float</span>   *p, <span class=\"keywordtype\">float</span> o, <span class=\"keywordtype\">float</span> s );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> shellNode::id( 0x8000b );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">shellNode::shellNode()</div>\n\
<div class=\"line\"> :  rebuild( true ),</div>\n\
<div class=\"line\">    redoTopology( true ),</div>\n\
<div class=\"line\">    pnts( NULL ),</div>\n\
<div class=\"line\">    ni( 0 ),</div>\n\
<div class=\"line\">    nj( 0 )</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">shellNode::~shellNode() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> shellNode::compute( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data )</div>\n\
<div class=\"line\">{    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i, j;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Read updated input parameters</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    UpdateParameters();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> createNewMesh = redoTopology;</div>\n\
<div class=\"line\">    RedoTopology();</div>\n\
<div class=\"line\">    Rebuild();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !pnts || ni&lt;2 || nj&lt;2 ) <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == outMesh) {  </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !pnts || ni&lt;2 || nj&lt;2 ) <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outputHandle = data.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(outMesh, &amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR getting polygon data handle\\n&quot;</span>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> mesh = outputHandle.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a301e7b7cdf9f9e1e206651cc6a1b67ec\">asMesh</a>();</div>\n\
<div class=\"line\">               </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( createNewMesh || mesh.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>() ) {</div>\n\
<div class=\"line\">            <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html\">MFnMeshData</a> dataCreator;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newOutputData = dataCreator.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;returnStatus);</div>\n\
<div class=\"line\">            McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating outputData&quot;</span>);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> vertices;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Build vertices array</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( j=0; j&lt;nj; ++j ) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>( i=0; i&lt;ni; ++i ) {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *p= pnts[j] + 3*i;</div>\n\
<div class=\"line\">                    vertices.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>( <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a>(p[0],p[1],p[2]) );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Build poly vertex count array</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> pcounts;</div>\n\
<div class=\"line\">            i= (nj-1)*(ni-1);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span>( i-- ) {</div>\n\
<div class=\"line\">                pcounts.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(4);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Build poly connectivity array</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> pconnect;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( j=0; j&lt;nj-1; ++j ) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>( i=0; i&lt;ni-1; ++i ) {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> corner= i+j*ni;</div>\n\
<div class=\"line\">                    pconnect.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(corner);</div>\n\
<div class=\"line\">                    pconnect.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(corner+1);</div>\n\
<div class=\"line\">                    pconnect.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(corner+1+ni);</div>\n\
<div class=\"line\">                    pconnect.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(corner+ni);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Create some stuff needed by the mesh</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>       fec;</div>\n\
<div class=\"line\">            <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>    sp;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>    tp;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Build maya poly object</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFn;</div>\n\
<div class=\"line\">            mesh= meshFn.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(</div>\n\
<div class=\"line\">                nj*ni,              <span class=\"comment\">// number of vertices</span></div>\n\
<div class=\"line\">                (nj-1)*(ni-1),      <span class=\"comment\">// number of polygons</span></div>\n\
<div class=\"line\">                vertices,           <span class=\"comment\">// The points</span></div>\n\
<div class=\"line\">                pcounts,            <span class=\"comment\">// # of vertex for each poly</span></div>\n\
<div class=\"line\">                pconnect,           <span class=\"comment\">// Vertices index for each poly</span></div>\n\
<div class=\"line\">                newOutputData,      <span class=\"comment\">// Dependency graph data object</span></div>\n\
<div class=\"line\">                &amp;returnStatus</div>\n\
<div class=\"line\">            );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Update surface </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            outputHandle.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(newOutputData);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"comment\">// The topology hasn&#39;t changed, so we can just set the points</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// in the existing mesh</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_vertex.html\">MItMeshVertex</a> vertIt( mesh, &amp;returnStatus);</div>\n\
<div class=\"line\">            McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating iterator\\n&quot;</span>);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( j=0; j&lt;nj; ++j ) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>( i=0; i&lt;ni; ++i ) {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( vertIt.isDone() ) <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *p= pnts[j] + 3*i;</div>\n\
<div class=\"line\">                    vertIt.setPosition( <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(p[0],p[1],p[2]) );</div>\n\
<div class=\"line\">                    vertIt.next();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( vertIt.isDone() ) <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        data.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug );</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* shellNode::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> shellNode();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Shell Algorithms //</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::RedoTopology()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Adjust our data storage to reflect new parameters</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !redoTopology ) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    redoTopology = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> oldnj= pnts ? nj : 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ni= 0;</div>\n\
<div class=\"line\">    nj= 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">float</span> s = shellParams.smin; </div>\n\
<div class=\"line\">         s &lt; shellParams.smax; </div>\n\
<div class=\"line\">         s += shellParams.sd )  </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ni++;   <span class=\"comment\">// Lazy</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">float</span> o = shellParams.omin; </div>\n\
<div class=\"line\">         o &lt; shellParams.omax; </div>\n\
<div class=\"line\">         o += shellParams.od )  </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        nj++;   <span class=\"comment\">// Lazy</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( nj&lt;oldnj ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">int</span> i = nj; i &lt; oldnj; ++i ) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( pnts[i] ) free( pnts[i] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( nj!=oldnj) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> **new_data = <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">float</span>**<span class=\"keyword\">&gt;</span>(realloc (pnts, nj*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>*)));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (new_data == NULL) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> pnts;</div>\n\
<div class=\"line\">            pnts = NULL;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span>; <span class=\"comment\">// Allocation error, crash is imminent!</span></div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            pnts = new_data;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( nj&gt;oldnj ) {</div>\n\
<div class=\"line\">        memset( pnts+oldnj, 0, (nj-oldnj)*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>*) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> j=0;j&lt;nj;++j) {</div>\n\
<div class=\"line\">        pnts[j] = (<span class=\"keywordtype\">float</span>*) realloc(pnts[j],3*ni*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::Rebuild()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Rebuild the mesh geometry given the new inputs</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !rebuild ) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    rebuild= 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     i;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     j;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   s;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   o;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   *p;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    o= shellParams.omin;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( j=0; j&lt;nj; ++j )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        s= shellParams.smin;</div>\n\
<div class=\"line\">        p= pnts[j];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( i=0; i&lt;ni; ++i )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Eval( p, o, s );</div>\n\
<div class=\"line\">            s+=shellParams.sd;</div>\n\
<div class=\"line\">            p+=3;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        o+=shellParams.od;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> SafeCot( <span class=\"keywordtype\">float</span> x )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> s= sinf(x);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> s ? cosf(x)/s : 0.0F;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> G( <span class=\"keywordtype\">float</span> a, <span class=\"keywordtype\">float</span> n )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !n ) <span class=\"keywordflow\">return</span> n;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> z= 2.0F*FPI;</div>\n\
<div class=\"line\">    a*=n/z;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> z/n*(a-floorf(0.5F+a));</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">float</span> shellNode::Ribs( <span class=\"keywordtype\">float</span> u, <span class=\"keywordtype\">float</span> v )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ShellParams &amp; sp = shellParams;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> zu=0.0F;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( sp.uamp )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        zu= sp.uamp*cosf(2.0F*FPI*sp.ufreq*u);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( zu&lt;0 ) zu*= (1.0F-2.0F*sp.urib);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> zv=0.0F;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( sp.vamp )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        zv= sp.vamp*cosf(2.0F*FPI*sp.vfreq*v);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( zv&lt;0 ) zv*= (1.0F-2.0F*sp.vrib);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> zu+zv;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">float</span> shellNode::Nodules( <span class=\"keywordtype\">float</span> s, <span class=\"keywordtype\">float</span> o )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ShellParams &amp; sp = shellParams;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> p1;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> p2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> k=0.0F;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> g=0.0F;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( sp.L &amp;&amp; sp.N &amp;&amp; o&gt;=sp.nstart )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        g= G(o,sp.N);</div>\n\
<div class=\"line\">        p1= g/sp.W2;</div>\n\
<div class=\"line\">        p2= (s-sp.P)/sp.W1;</div>\n\
<div class=\"line\">        k= sp.L*expf( -4.0F*(p1*p1+p2*p2) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( sp.L2 &amp;&amp; sp.N2 &amp;&amp; o&gt;=sp.nstart2 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        g= G(o+sp.off2,sp.N2); </div>\n\
<div class=\"line\">        p1= g/sp.W22;</div>\n\
<div class=\"line\">        p2= (s-sp.P2)/sp.W12;</div>\n\
<div class=\"line\">        k+= sp.L2*expf( -4.0F*(p1*p1+p2*p2) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( sp.L3 &amp;&amp; sp.N3 &amp;&amp; o&gt;= sp.nstart3 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        g= G(o+sp.off3, sp.N3);</div>\n\
<div class=\"line\">        p1= g/sp.W23;</div>\n\
<div class=\"line\">        p2= (s-sp.P3)/sp.W13;</div>\n\
<div class=\"line\">        k+= sp.L3*expf( -4.0F*(p1*p1+p2*p2) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> k;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::Eval( <span class=\"keywordtype\">float</span> *p, <span class=\"keywordtype\">float</span> o, <span class=\"keywordtype\">float</span> s )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ShellParams &amp; sp = shellParams;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> ss = sinf(s);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> cs = cosf(s);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> re = 1.0F/sqrtf(cs*cs/(sp.a*sp.a) </div>\n\
<div class=\"line\">               + ss*ss/(sp.b*sp.b));</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> sc = sp.scale*expf(o*SafeCot(sp.alpha));</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> csphi = cosf(s+sp.phi);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> ssphi = sinf(s+sp.phi);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> sbeta = sinf(sp.beta);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> smy = sinf(sp.my);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> r = re+Nodules(s,o)+Ribs(s,o);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> x = sp.A*sbeta*cosf(o)        </div>\n\
<div class=\"line\">              + r*csphi*cosf(o+sp.omega)    </div>\n\
<div class=\"line\">              - r*smy*ssphi*sinf(o);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> y = - sp.A*sbeta*sinf(o)  </div>\n\
<div class=\"line\">              - r*csphi*sinf(o+sp.omega)    </div>\n\
<div class=\"line\">              - r*smy*ssphi*cosf(o);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> z = - sp.A*cosf(sp.beta)      </div>\n\
<div class=\"line\">              + r*ssphi*cosf(sp.my);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    p[0] =  x*sc;</div>\n\
<div class=\"line\">    p[1] = -z*sc;</div>\n\
<div class=\"line\">    p[2] =  y*sc;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Attribute Setup and Maintenance //</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Main shape parameters</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::alpha;       <span class=\"comment\">// Profile (Helico-spiral) param #1</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::beta;        <span class=\"comment\">// Profile (Helico-spiral) param #2</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::phi;         <span class=\"comment\">// Section Starting point</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::my;          <span class=\"comment\">// Section Slant</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::omega;       <span class=\"comment\">// Section angle around Z</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::omin;        <span class=\"comment\">// Spiral start angle</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::omax;        <span class=\"comment\">// Spiral end angle</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::od;          <span class=\"comment\">// Spiral angle step</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::smin;        <span class=\"comment\">// Section start angle</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::smax;        <span class=\"comment\">// Section end angle</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::sd;          <span class=\"comment\">// Section angle step</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::A;           <span class=\"comment\">// Distance of section from Z-axis</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::a;           <span class=\"comment\">// Section diameter #1</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::b;           <span class=\"comment\">// Section diameter #2</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::scale;       <span class=\"comment\">// Overall scale</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::P;           <span class=\"comment\">// Position on section</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::L;           <span class=\"comment\">// Amplitude (extrusion) of nodule</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::N;           <span class=\"comment\">// Nodules frequency on profile</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W1;          <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W2;          <span class=\"comment\">// Fatness of nodule</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::nstart;      <span class=\"comment\">// Starting point on spiral</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 2</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::P2;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::L2;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::N2;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W12;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W22;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::off2;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::nstart2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Nodule 3</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::P3;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::L3;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::N3;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W13;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::W23;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::off3;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::nstart3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Ribs</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::uamp;        <span class=\"comment\">// Section rib amplitude</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::ufreq;       <span class=\"comment\">// Section rib frequency</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::urib;        <span class=\"comment\">// Section rib/wave percent</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::vamp;        <span class=\"comment\">// Profile rib amplitude</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::vfreq;       <span class=\"comment\">// Profile rib frequency</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::vrib;        <span class=\"comment\">// Profile rib/wave percent</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Output mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shellNode::outMesh;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::addFloatParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp; attr, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> longName, </div>\n\
<div class=\"line\">                                   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> briefName, <span class=\"keywordtype\">float</span> attrDefault )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Add a float input parameter to the node</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    attr = nAttr.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( longName, briefName, <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, </div>\n\
<div class=\"line\">                         0.0, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = nAttr.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>  ( attrDefault );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = nAttr.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>  ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = nAttr.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>   ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = nAttr.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a> ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = addAttribute( attr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    stat = attributeAffects( attr, outMesh );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::addAngleParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp; attr, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> longName, </div>\n\
<div class=\"line\">                                   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> briefName, <span class=\"keywordtype\">float</span> attrDefault )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Add an angle input parameter to the node</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a> uAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> defaultAngle( (<span class=\"keywordtype\">double</span>)attrDefault, <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edae77f5ca99dc21b7dfd533074906e0a67\">MAngle::kDegrees</a> );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    attr = uAttr.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>( longName, briefName, defaultAngle, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>  ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>   ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a> ( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = addAttribute( attr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    stat = attributeAffects( attr, outMesh );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != MS::kSuccess ) <span class=\"keywordflow\">throw</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> shellNode::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Set up node attributes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a>   typedFn;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>             stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    outMesh = typedFn.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;outMesh&quot;</span>, <span class=\"stringliteral\">&quot;o&quot;</span>, <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>,</div>\n\
<div class=\"line\">                               <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat ); </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( MS::kSuccess != stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;ERROR creating animCube output attribute\\n&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    typedFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    typedFn.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    stat = addAttribute( outMesh );</div>\n\
<div class=\"line\">    McheckErr(stat, <span class=\"stringliteral\">&quot;ERROR adding attribute&quot;</span>);  </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">try</span> {</div>\n\
<div class=\"line\">        addAngleParameter( alpha,   <span class=\"stringliteral\">&quot;profileParam1&quot;</span>,           <span class=\"stringliteral\">&quot;pp1&quot;</span>,   80.0F );</div>\n\
<div class=\"line\">        addAngleParameter( beta,    <span class=\"stringliteral\">&quot;profileParam2&quot;</span>,           <span class=\"stringliteral\">&quot;pp2&quot;</span>,   90.0F );</div>\n\
<div class=\"line\">        addAngleParameter( phi,     <span class=\"stringliteral\">&quot;sectionStartingPoint&quot;</span>,    <span class=\"stringliteral\">&quot;ssp&quot;</span>,    1.0F );</div>\n\
<div class=\"line\">        addAngleParameter( my,      <span class=\"stringliteral\">&quot;sectionSlant&quot;</span>,            <span class=\"stringliteral\">&quot;ss&quot;</span>,     1.0F );</div>\n\
<div class=\"line\">        addAngleParameter( omega,   <span class=\"stringliteral\">&quot;sectionAngleZ&quot;</span>,           <span class=\"stringliteral\">&quot;saz&quot;</span>,    1.0F );</div>\n\
<div class=\"line\">        addAngleParameter( omin,    <span class=\"stringliteral\">&quot;spiralStartAngle&quot;</span>,        <span class=\"stringliteral\">&quot;sps&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addAngleParameter( omax,    <span class=\"stringliteral\">&quot;spiralEndAngle&quot;</span>,          <span class=\"stringliteral\">&quot;spe&quot;</span>, 1200.0F );</div>\n\
<div class=\"line\">        addAngleParameter( od,      <span class=\"stringliteral\">&quot;spiralAngleStep&quot;</span>,         <span class=\"stringliteral\">&quot;spa&quot;</span>,    4.0F );</div>\n\
<div class=\"line\">        addAngleParameter( smin,    <span class=\"stringliteral\">&quot;sectionStartAngle&quot;</span>,       <span class=\"stringliteral\">&quot;ssa&quot;</span>, -190.0F );</div>\n\
<div class=\"line\">        addAngleParameter( smax,    <span class=\"stringliteral\">&quot;sectionEndAngle&quot;</span>,         <span class=\"stringliteral\">&quot;sea&quot;</span>,  190.0F );</div>\n\
<div class=\"line\">        addAngleParameter( sd,      <span class=\"stringliteral\">&quot;sectionAngleStep&quot;</span>,        <span class=\"stringliteral\">&quot;sas&quot;</span>,   17.0F );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        addFloatParameter( A,       <span class=\"stringliteral\">&quot;distanceFromZ&quot;</span>,           <span class=\"stringliteral\">&quot;dfz&quot;</span>,    1.9F );</div>\n\
<div class=\"line\">        addFloatParameter( a,       <span class=\"stringliteral\">&quot;sectionDiameter1&quot;</span>,        <span class=\"stringliteral\">&quot;sd1&quot;</span>,    1.0F );</div>\n\
<div class=\"line\">        addFloatParameter( b,       <span class=\"stringliteral\">&quot;sectionDiameter2&quot;</span>,        <span class=\"stringliteral\">&quot;sd2&quot;</span>,    0.9F );</div>\n\
<div class=\"line\">        addFloatParameter( scale,   <span class=\"stringliteral\">&quot;scale&quot;</span>,                   <span class=\"stringliteral\">&quot;s&quot;</span>,      0.03F );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        addAngleParameter( P,       <span class=\"stringliteral\">&quot;positionOnSection1&quot;</span>,      <span class=\"stringliteral\">&quot;ps1&quot;</span>,   10.0F );</div>\n\
<div class=\"line\">        addFloatParameter( L,       <span class=\"stringliteral\">&quot;noduleAmplitude1&quot;</span>,        <span class=\"stringliteral\">&quot;na1&quot;</span>,    1.0F );</div>\n\
<div class=\"line\">        addFloatParameter( N,       <span class=\"stringliteral\">&quot;noduleProfileFrequency1&quot;</span>, <span class=\"stringliteral\">&quot;nf1&quot;</span>,   15.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W1,      <span class=\"stringliteral\">&quot;noduleFatness11&quot;</span>,         <span class=\"stringliteral\">&quot;f11&quot;</span>,  100.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W2,      <span class=\"stringliteral\">&quot;noduleFatness21&quot;</span>,         <span class=\"stringliteral\">&quot;f21&quot;</span>,   20.0F );</div>\n\
<div class=\"line\">        addAngleParameter( nstart,  <span class=\"stringliteral\">&quot;spiralStartingPoint1&quot;</span>,    <span class=\"stringliteral\">&quot;sp1&quot;</span>,    0.0F );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        addAngleParameter( P2,      <span class=\"stringliteral\">&quot;positionOnSection2&quot;</span>,      <span class=\"stringliteral\">&quot;ps2&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( L2,      <span class=\"stringliteral\">&quot;noduleAmplitude2&quot;</span>,        <span class=\"stringliteral\">&quot;na2&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( N2,      <span class=\"stringliteral\">&quot;noduleProfileFrequency2&quot;</span>, <span class=\"stringliteral\">&quot;nf2&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W12,     <span class=\"stringliteral\">&quot;noduleFatness12&quot;</span>,         <span class=\"stringliteral\">&quot;f12&quot;</span>,   30.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W22,     <span class=\"stringliteral\">&quot;noduleFatness22&quot;</span>,         <span class=\"stringliteral\">&quot;f22&quot;</span>,   30.0F );</div>\n\
<div class=\"line\">        addAngleParameter( off2,    <span class=\"stringliteral\">&quot;noduleOffset2&quot;</span>,           <span class=\"stringliteral\">&quot;no2&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addAngleParameter( nstart2, <span class=\"stringliteral\">&quot;spiralStartingPoint2&quot;</span>,    <span class=\"stringliteral\">&quot;sp2&quot;</span>,    0.0F );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        addAngleParameter( P3,      <span class=\"stringliteral\">&quot;positionOnSection3&quot;</span>,      <span class=\"stringliteral\">&quot;ps3&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( L3,      <span class=\"stringliteral\">&quot;noduleAmplitude3&quot;</span>,        <span class=\"stringliteral\">&quot;na3&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( N3,      <span class=\"stringliteral\">&quot;noduleProfileFrequency3&quot;</span>, <span class=\"stringliteral\">&quot;nf3&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W13,     <span class=\"stringliteral\">&quot;noduleFatness13&quot;</span>,         <span class=\"stringliteral\">&quot;f13&quot;</span>,   30.0F );</div>\n\
<div class=\"line\">        addAngleParameter( W23,     <span class=\"stringliteral\">&quot;noduleFatness23&quot;</span>,         <span class=\"stringliteral\">&quot;f23&quot;</span>,   30.0F );</div>\n\
<div class=\"line\">        addAngleParameter( off3,    <span class=\"stringliteral\">&quot;noduleOffset3&quot;</span>,           <span class=\"stringliteral\">&quot;no3&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addAngleParameter( nstart3, <span class=\"stringliteral\">&quot;spiralStartingPoint3&quot;</span>,    <span class=\"stringliteral\">&quot;sp3&quot;</span>,    0.0F );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        addFloatParameter( uamp,    <span class=\"stringliteral\">&quot;sectionRibAmplitude&quot;</span>,     <span class=\"stringliteral\">&quot;sra&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( ufreq,   <span class=\"stringliteral\">&quot;sectionRibFrequency&quot;</span>,     <span class=\"stringliteral\">&quot;srf&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( urib,    <span class=\"stringliteral\">&quot;sectionRibWavePercent&quot;</span>,   <span class=\"stringliteral\">&quot;srw&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( vamp,    <span class=\"stringliteral\">&quot;profileRibAmplitude&quot;</span>,     <span class=\"stringliteral\">&quot;pra&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( vfreq,   <span class=\"stringliteral\">&quot;profileRibFrequency&quot;</span>,     <span class=\"stringliteral\">&quot;prf&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">        addFloatParameter( vrib,    <span class=\"stringliteral\">&quot;profileRibWavePercent&quot;</span>,   <span class=\"stringliteral\">&quot;prw&quot;</span>,    0.0F );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">catch</span> ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat ) {</div>\n\
<div class=\"line\">        fprintf(stderr,<span class=\"stringliteral\">&quot;Attribute Initialize Failed\\n&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> shellNode::GetFloatParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug( node, attr );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> value;</div>\n\
<div class=\"line\">    plug.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\">getValue</a>( value );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> value;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> shellNode::GetAngleParameter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug( node, attr );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> angle;</div>\n\
<div class=\"line\">    plug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\">getValue</a>( angle );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<span class=\"keywordtype\">float</span>)angle.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#af8278be30529fafd8925d17dd9dfe65a\">asRadians</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define UpdateFloatAttr(ATTR,TOPOLOGY)                          \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    oldValue = shellParams. ATTR;                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    shellParams. ATTR = GetFloatParameter( thisObj, ATTR ); \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( shellParams. ATTR != oldValue ) {                  \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        rebuild = true;                                         \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        redoTopology = TOPOLOGY ? true : redoTopology;          \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define UpdateAngleAttr(ATTR,TOPOLOGY)                          \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    oldValue = shellParams. ATTR;                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    shellParams. ATTR = GetAngleParameter( thisObj, ATTR ); \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( shellParams. ATTR != oldValue ) {                  \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        rebuild = true;                                         \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        redoTopology = TOPOLOGY ? true : redoTopology;          \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> shellNode::UpdateParameters( ) </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read all of the shell parameters and determine what has changed</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisObj = thisMObject();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> oldValue;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    UpdateAngleAttr(alpha,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(beta,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(phi,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(my,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(omega,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(A,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(a,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(b,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(scale,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    UpdateAngleAttr(P,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(L,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(N,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W1,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(nstart,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    UpdateAngleAttr(P2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(L2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(N2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W12,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W22,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(off2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(nstart2,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(P3,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(L3,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(N3,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W13,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(W23,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(off3,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(nstart3,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(uamp,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(ufreq,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(urib,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(vamp,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(vfreq,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    UpdateFloatAttr(vrib,<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// These settings change the topology of the geometry</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    UpdateAngleAttr(omin,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(omax,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(od,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(smin,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(smax,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    UpdateAngleAttr(sd,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Plug-in Initialization //</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;shell&quot;</span>, shellNode::id, </div>\n\
<div class=\"line\">                         &amp;shellNode::creator, &amp;shellNode::initialize,</div>\n\
<div class=\"line\">                         <a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4b0bfa06b4f203b367a80f14fa6ed4fa\">MPxNode::kDependNode</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( shellNode::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";