var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: geometrytools.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'geometrytools_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: geometrytools.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">geometrytools.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#include &lt;iostream&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArrayDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCompoundAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnGeometryData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLatticeData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsSurfaceData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsSurface.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsCurve.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLattice.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMatrixData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;cmath&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;algorithm&gt;</span></div>\n\
<div class=\"line\">constexpr <span class=\"keywordtype\">double</span>  kFloatEpsilon     {1.0e-4};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Plugin Compare Shader Class //</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>Compare : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html\">MPxNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                      Compare();</div>\n\
<div class=\"line\">             ~Compare() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    SchedulingType <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a9c9e8bdcf0b5283a027a66a7671b7088\">schedulingType</a>()<span class=\"keyword\"> const override </span>{ <span class=\"keywordflow\">return</span> SchedulingType::kParallel; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> checkNurbs(<span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a>&amp; a, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a>&amp; b);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> checkNurbs(<span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a>&amp; a, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a>&amp; b);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> checkMesh(<span class=\"keyword\">const</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a>&amp; a, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a>&amp; b);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> checkLattice(<span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp; a, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp; b);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *    creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   initialize();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>   id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aInputA;</div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aInputB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aOutValue;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: node classification</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> Compare::id( 0x58000880 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: attribute information</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  Compare::aInputA;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  Compare::aInputB;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  Compare::aOutValue;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>Compare::Compare()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>Compare::~Compare()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* Compare::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> Compare();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> Compare::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_compound_attribute.html\">MFnCompoundAttribute</a>   cAttr;</div>\n\
<div class=\"line\">    <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> tAttr;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    aInputA = tAttr.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;inputA&quot;</span>, <span class=\"stringliteral\">&quot;inA&quot;</span>, <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7ac620ad0f2198d7e41d09bda320ac2446\">MFnData::kAny</a>, <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;create attribute inputA&quot;</span>); <span class=\"keywordflow\">return</span> stat; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aInputB = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;inputB&quot;</span>, <span class=\"stringliteral\">&quot;inB&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7ac620ad0f2198d7e41d09bda320ac2446\">MFnData::kAny</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;create attribute inputB&quot;</span>); <span class=\"keywordflow\">return</span> stat; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Outputs</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aOutValue = nAttr.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;outValue&quot;</span>, <span class=\"stringliteral\">&quot;ov&quot;</span>, <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">false</span>) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aInputA) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aInputB) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aOutValue) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( attributeAffects (aInputA, aOutValue) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( attributeAffects (aInputB, aOutValue) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> Compare::compute(</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;      plug,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">  <span class=\"keywordflow\">if</span>( plug == aOutValue )</div>\n\
<div class=\"line\">  {</div>\n\
<div class=\"line\">    <span class=\"keyword\">auto</span> handleA = block.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aInputA );</div>\n\
<div class=\"line\">    <span class=\"keyword\">auto</span> handleB = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aInputB );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> same {<span class=\"keyword\">false</span>};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> curveA = handleA.asNurbsCurve();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(handleA.type() == handleB.type())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(handleA.type() == <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> a(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aInputA ).<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a301e7b7cdf9f9e1e206651cc6a1b67ec\">asMesh</a>());</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> b(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aInputB ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a301e7b7cdf9f9e1e206651cc6a1b67ec\">asMesh</a>());</div>\n\
<div class=\"line\">            same = checkMesh(a, b);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(handleA.type() == <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5dab90a31211461a720744131aa9cd49\">MFnData::kLattice</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">                <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice_data.html\">MFnLatticeData</a> a(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputA).<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice_data.html\">MFnLatticeData</a> b(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputB).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!a.lattice().isNull() &amp;&amp; !b.lattice().isNull())</div>\n\
<div class=\"line\">                    same = checkLattice(a.lattice(), b.lattice());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(!curveA.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a> a(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputA).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a> b(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputB).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                same = checkNurbs(a, b);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(handleA.type() == <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFnData::kNurbsSurface</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a> a(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputA).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a> b(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputB).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">                same = checkNurbs(a, b);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(handleA.type() == <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a0a7e432b4b65ff0754f59c98fe588200\">MFnData::kMatrix</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_matrix_data.html\">MFnMatrixData</a> a(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputA).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_matrix_data.html\">MFnMatrixData</a> b(block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aInputB).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!a.object().isNull() &amp;&amp; !b.object().isNull())</div>\n\
<div class=\"line\">                same = a.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_matrix_data.html#a5a44d190aa46de2924e59e59ae998237\">matrix</a>().<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a08b908d18dfbdf508f082601e5ae7df5\">isEquivalent</a>(b.matrix(), kFloatEpsilon);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set ouput color attribute</span></div>\n\
<div class=\"line\">    <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle = block.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( aOutValue );</div>\n\
<div class=\"line\">    outHandle.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(same);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">  } <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">  <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> Compare::checkNurbs(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a>&amp; aCurve, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a>&amp; bCurve)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (aCurve.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#addc4a2b6312ad1c7265478f2680b7566\">numCVs</a>() != bCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#addc4a2b6312ad1c7265478f2680b7566\">numCVs</a>()) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> aCVs, bCVs;</div>\n\
<div class=\"line\">    aCurve.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a99e74e29456de640e007aec19f631824\">getCVs</a>(aCVs, <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">    bCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a99e74e29456de640e007aec19f631824\">getCVs</a>(bCVs, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aCVs.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != bCVs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; aCVs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i){</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(!aCVs[i].isEquivalent(bCVs[i], kFloatEpsilon)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> aKnots, bKnots;</div>\n\
<div class=\"line\">    aCurve.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a4c5b40565f31fed59492f8abe5ceaba4\">getKnots</a>(aKnots);</div>\n\
<div class=\"line\">    bCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a4c5b40565f31fed59492f8abe5ceaba4\">getKnots</a>(bKnots);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aKnots.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != bKnots.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; aKnots.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i){</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(std::fabs(aKnots[i] - bKnots[i]) &gt; kFloatEpsilon) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> Compare::checkNurbs(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a>&amp; aSurface, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a>&amp; bSurface)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aSurface.<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a1bb9127c91d55db44dc8d2f25eae8d68\">numPatchesInU</a>() != bSurface.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a1bb9127c91d55db44dc8d2f25eae8d68\">numPatchesInU</a>()) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aSurface.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#aa46af067c039463e4669664ebbbded21\">numPatchesInV</a>() != bSurface.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#aa46af067c039463e4669664ebbbded21\">numPatchesInV</a>()) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> aCVs, bCVs;</div>\n\
<div class=\"line\">    aSurface.<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a99e74e29456de640e007aec19f631824\">getCVs</a>(aCVs);</div>\n\
<div class=\"line\">    bSurface.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a99e74e29456de640e007aec19f631824\">getCVs</a>(bCVs);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aCVs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != bCVs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; aCVs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i){</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(!aCVs[i].isEquivalent(bCVs[i], kFloatEpsilon)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> aKnots, bKnots;</div>\n\
<div class=\"line\">    aSurface.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#ab097834f87fc2dcc89f681d1c6979c64\">getKnotsInU</a>(aKnots);</div>\n\
<div class=\"line\">    bSurface.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#ab097834f87fc2dcc89f681d1c6979c64\">getKnotsInU</a>(bKnots);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(aKnots.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != bKnots.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; aKnots.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i){</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(std::fabs(aKnots[i] - bKnots[i]) &gt; kFloatEpsilon) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> Compare::checkLattice(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp; aLattice, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp; bLattice)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sa,ta,ua;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sb,tb,ub;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp;<span class=\"keyword\">&gt;</span>(aLattice).getDivisions(sa,ta,ua);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp;<span class=\"keyword\">&gt;</span>(bLattice).getDivisions(sb,tb,ub);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(sa != sb || ta != tb || ua != ub)<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; sa; ++i )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; ta; ++j )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> k = 0; k &lt; ua; ++k ){</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">auto</span>&amp; pta = <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp;<span class=\"keyword\">&gt;</span>(aLattice).point(i,j,k);</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">auto</span>&amp; ptb = <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_lattice.html\">MFnLattice</a>&amp;<span class=\"keyword\">&gt;</span>(bLattice).point(i,j,k);</div>\n\
<div class=\"line\">                <span class=\"keyword\">auto</span> eps = std::max({pta[0]*kFloatEpsilon, ptb[0]*kFloatEpsilon, kFloatEpsilon});</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(!pta.isEquivalent(ptb, eps))<span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> Compare::checkMesh(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a>&amp; aMesh, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a>&amp; bMesh)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> a,b;</div>\n\
<div class=\"line\">    aMesh.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#a38510cd198de64ad9308fb265c7e338b\">getPoints</a>(a, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">    bMesh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#a38510cd198de64ad9308fb265c7e338b\">getPoints</a>(b, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">    <span class=\"keyword\">auto</span> c = a.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (c != b.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>()) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; c; ++i){</div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> pta = a[i];</div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> ptb = b[i];</div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> eps = std::max({pta[0]*kFloatEpsilon, ptb[0]*kFloatEpsilon, kFloatEpsilon});</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(std::fabs(pta[0] - ptb[0]) &gt; eps) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        eps = std::max({pta[1]*kFloatEpsilon, ptb[1]*kFloatEpsilon, kFloatEpsilon});</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(std::fabs(pta[1] - ptb[1]) &gt; eps) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        eps = std::max({pta[2]*kFloatEpsilon, ptb[2]*kFloatEpsilon, kFloatEpsilon});</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(std::fabs(pta[2] - ptb[2]) &gt; eps) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <a name=\"_a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;1.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( plugin.registerNode( <span class=\"stringliteral\">&quot;compare&quot;</span>, Compare::id,</div>\n\
<div class=\"line\">                         Compare::creator, Compare::initialize,</div>\n\
<div class=\"line\">                         <a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4b0bfa06b4f203b367a80f14fa6ed4fa\">MPxNode::kDependNode</a>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( plugin.deregisterNode( Compare::id ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"comment\">// =====================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2018 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This computer source code  and related  instructions and comments are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the unpublished confidential and proprietary information of Autodesk,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Inc. and are  protected  under applicable  copyright and trade secret</span></div>\n\
<div class=\"line\"><span class=\"comment\">// law. They may not  be disclosed to, copied or used by any third party</span></div>\n\
<div class=\"line\"><span class=\"comment\">// without the prior written consent of Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// =====================================================================</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";