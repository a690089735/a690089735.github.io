var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: sceneAssembly/assemblyDefinition.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'scene_assembly_2assembly_definition_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: sceneAssembly/assemblyDefinition.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">sceneAssembly/assemblyDefinition.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _assemblyDefinition_h_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _assemblyDefinition_h_</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// AssemblyDefinition</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Autodesk reference implementation scene assembly definition node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Objects of this type can be used by assembly reference nodes to</span></div>\n\
<div class=\"line\"><span class=\"comment\">// define their representations and initial attribute values for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// renderable representation, etc.  They provide a single, sharable</span></div>\n\
<div class=\"line\"><span class=\"comment\">// point where representations and their properties can be defined, in</span></div>\n\
<div class=\"line\"><span class=\"comment\">// order to potentially share them through many assembly references.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Alternately, if no re-use through assembly references is desired,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// assembly definitions can be used by themselves to describe a scene</span></div>\n\
<div class=\"line\"><span class=\"comment\">// element with multiple representations.  They can then be used to</span></div>\n\
<div class=\"line\"><span class=\"comment\">// hierarchically build a scene with assembly definitions containing</span></div>\n\
<div class=\"line\"><span class=\"comment\">// other assembly definitions.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This class supports a registry mechanism to register factories for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// representations.  These factory objects create a representation of</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the appropriate type when a representation is activated.  See the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// representation factory base class, AdskRepresentationFactory, for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// more details.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxAssembly.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;memory&gt;</span>               <span class=\"comment\">// For unique_ptr</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>AdskRepresentationFactory;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>AssemblyDefinition : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- types and enumerations -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> std::unique_ptr&lt;MPxRepresentation&gt; RepresentationPtr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>* creator();</div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initialize();</div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Register a representation factory.  On successful registration,</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// returns true, and ownership of the representation factory is</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// transferred to the registry.  The representation type is</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// obtained from the factory object.  If a factory for the type</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// already existed, or if the argument pointer is null, will return</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// false, and ownership is not transferred to the registry.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> registerRepresentationFactory(AdskRepresentationFactory* f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Deregister and delete a representation factory of the given</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// type.  Return whether the type was found in the registry.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> deregisterRepresentationFactory(<span class=\"keyword\">const</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; type);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Return a string array of representation types for which </span></div>\n\
<div class=\"line\">   <span class=\"comment\">// there are registered factories. </span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> registeredTypes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> id;</div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a181f90251402679063e85c41fac32af5\">typeName</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   AssemblyDefinition();</div>\n\
<div class=\"line\">   ~AssemblyDefinition() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#abfc494661ea0f7f957a9e437cebb2642\">getExternalContent</a>( <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a389fc88c7e5236aa2b9980a1b452cc49\">setExternalContent</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Create representation.  The input to the method is representation type-</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// specific, and is used by the representation type-specific representation</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// factory to create the representation name, label, and data.  The undo /</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// redo pointer is unused.</span></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a1e4d1a58c132554d2a4e7773c75e78a2\">createRepresentation</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; type,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html\">MDagModifier</a>*  undoRedo,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>*       status</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   <span class=\"comment\">// Activate and inactivate a representation.  The implementation in</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// this class forwards the call to the corresponding</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// MPxRepresentation method in our active representation object.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span>         <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a610c8b9f86f81403c0a420c81c1d68d5\">activateRep</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span>         <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a187134a9f3c56492af136507ba25a8d4\">inactivateRep</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#af4e36de6a2ec323b40538410ab1140e3\">getActive</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\">   <span class=\"comment\">// For each representation, returns the name of the representation.</span></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#aa338d5201868b53785bd2f0492ebb976\">getRepresentations</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>* status = NULL) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a41e2ca5961b13fe70b2f8a1849d14446\">getRepType</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a2505475539198de7ce75132b44b59cd0\">getRepLabel</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a4959e213452a03492bd5fe2008fbc10c\">repTypes</a>() <span class=\"keyword\">const override</span>;  </div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a2c549d43f7a0a0e52dd9324b2617902a\">deleteRepresentation</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a5f81e7dd70a7f8ea7e12332851564476\">deleteAllRepresentations</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a02d592bb931ae1052701478cea052740\">getRepNamespace</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a61450a31a577536e0781016b447ff03d\">setRepName</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; newName,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>*       status</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#ae298456dd3b91c07a06c5795c1098866\">setRepLabel</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; label</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span>         <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#abb18933d71d983c23a36413d808de6e9\">canRepApplyEdits</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> getRepData(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> setRepData(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">   );</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">enum</span> eStorable {kNotStorable = 0, kStorable};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Initialize representations attributes.  The first argument is </span></div>\n\
<div class=\"line\">   <span class=\"comment\">// whether representations are storable or not.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initRepresentations(</div>\n\
<div class=\"line\">      eStorable storable,</div>\n\
<div class=\"line\">      <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;  aRepresentations,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;  aRepName,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;  aRepLabel,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;  aRepType,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;  aRepData</div>\n\
<div class=\"line\">   );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Add a representation to the representations multi-attribute.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> performCreateRepresentation(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; type,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; label,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">   );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Create a representation object to manage representation behavior</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// while it&#39;s active.</span></div>\n\
<div class=\"line\">   <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* representationFactory(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Return the name of the default icon for the node.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>      getDefaultIcon() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Clears out representation list, without performing</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// representation inactivation.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> clearRepresentationList();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Post-construction initialization, called by the Maya infrastructure.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a5c13a6c88a839b5356861d1d09e820d9\">postConstructor</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Prohibited and unimplemented.</span></div>\n\
<div class=\"line\">   AssemblyDefinition(<span class=\"keyword\">const</span> AssemblyDefinition&amp; obj);</div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> AssemblyDefinition&amp; operator=(<span class=\"keyword\">const</span> AssemblyDefinition&amp; obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Called to initialize node by activating default representation.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#a73f16463a58bec810faa6e405bcb2a59\">postLoad</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">  </div>\n\
<div class=\"line\">   <span class=\"comment\">// Utility to get representation label, type, or data attribute</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// values, given name.  Second argument is chosen attribute.</span></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> getRepAttrValue(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;       repAttr</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Utility to set representation name or label, given name.  Second</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// argument is chosen attribute.</span></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setRepAttrValue(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; representation,</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;       repAttr,</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">   );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static data members -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Array of compound attributes describing the representations.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aRepresentations;</div>\n\
<div class=\"line\">   <span class=\"comment\">// Representation name.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aRepName;</div>\n\
<div class=\"line\">   <span class=\"comment\">// String attribute for the representation label.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aRepLabel;</div>\n\
<div class=\"line\">   <span class=\"comment\">// String attribute for the representation type.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aRepType;</div>\n\
<div class=\"line\">   <span class=\"comment\">// String attribute for the representation data.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aRepData;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- data members -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Active representation object.</span></div>\n\
<div class=\"line\">   RepresentationPtr fActiveRep;  </div>\n\
<div class=\"line\">   };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2013 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy</span></div>\n\
<div class=\"line\"><span class=\"comment\">// form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";