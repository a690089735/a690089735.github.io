var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: python/api1/profilerDump.py</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'python_2api1_2profiler_dump_8py-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: python/api1/profilerDump.py</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">python/api1/profilerDump.py</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;<span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> range</div>\n\
<div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"keyword\">import</span> maya.OpenMaya <span class=\"keyword\">as</span> om</div>\n\
<div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"keyword\">import</span> json</div>\n\
<div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"keyword\">import</span> csv</div>\n\
<div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;__all__ = [ <span class=\"stringliteral\">&#39;profilerToJSON&#39;</span>, <span class=\"stringliteral\">&#39;profilerToCSV&#39;</span>, <span class=\"stringliteral\">&#39;profilerFormatJSON&#39;</span>]</div>\n\
<div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\"># The following is sample code which uses the OpenMaya API to show how</span></div>\n\
<div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;<span class=\"comment\"># data from Maya&#39;s profiler can be output to file on disk in a custom text format.</span></div>\n\
<div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"comment\"># Note that references to Maya&#39;s profiler output format are valid at the time of writing.</span></div>\n\
<div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;<span class=\"comment\"># The format&#39;s chosen to illustrate this are JSON and CSV. For each sample output is provided.</span></div>\n\
<div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;<span class=\"comment\"># Sample 1: Profiler to JSON output</span></div>\n\
<div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\">   17</span>&#160;<span class=\"comment\"># ---------------------------------</span></div>\n\
<div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00019\"></a><span class=\"lineno\">   19</span>&#160;<span class=\"keyword\">def </span>profilerToJSON(fileName, useIndex, durationMin):</div>\n\
<div class=\"line\"><a name=\"l00020\"></a><span class=\"lineno\">   20</span>&#160;    <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00021\"></a><span class=\"lineno\">   21</span>&#160;<span class=\"stringliteral\">        fileName : name of file to write to disk</span></div>\n\
<div class=\"line\"><a name=\"l00022\"></a><span class=\"lineno\">   22</span>&#160;<span class=\"stringliteral\">        useIndex : write events using index lookup to category and name lists</span></div>\n\
<div class=\"line\"><a name=\"l00023\"></a><span class=\"lineno\">   23</span>&#160;<span class=\"stringliteral\">        durationMin : only write out events which have at least this minimum time duration</span></div>\n\
<div class=\"line\"><a name=\"l00024\"></a><span class=\"lineno\">   24</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00025\"></a><span class=\"lineno\">   25</span>&#160;<span class=\"stringliteral\">        Description:</span></div>\n\
<div class=\"line\"><a name=\"l00026\"></a><span class=\"lineno\">   26</span>&#160;<span class=\"stringliteral\">            Sample code to extract profiler information and write to file in JSON format</span></div>\n\
<div class=\"line\"><a name=\"l00027\"></a><span class=\"lineno\">   27</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00028\"></a><span class=\"lineno\">   28</span>&#160;<span class=\"stringliteral\">        Example usage:</span></div>\n\
<div class=\"line\"><a name=\"l00029\"></a><span class=\"lineno\">   29</span>&#160;<span class=\"stringliteral\">            &gt; profilerToJSON(&#39;profiler_indexed.json&#39;, True, 0.0) # Index without a duration clamp</span></div>\n\
<div class=\"line\"><a name=\"l00030\"></a><span class=\"lineno\">   30</span>&#160;<span class=\"stringliteral\">            &gt; profilerToJSON(&#39;profiler_nonIndexed.json&#39;, False, 10.0) # Non-Indexed with duration clamp</span></div>\n\
<div class=\"line\"><a name=\"l00031\"></a><span class=\"lineno\">   31</span>&#160;<span class=\"stringliteral\">    &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00032\"></a><span class=\"lineno\">   32</span>&#160;    <span class=\"comment\"># Below is some sample output from after running the JSON export. Note that here we try to mimic</span></div>\n\
<div class=\"line\"><a name=\"l00033\"></a><span class=\"lineno\">   33</span>&#160;    <span class=\"comment\"># the data and ordering of Maya&#39;s internal profiler save by storing category and event name lists</span></div>\n\
<div class=\"line\"><a name=\"l00034\"></a><span class=\"lineno\">   34</span>&#160;    <span class=\"comment\"># and specifying lookups for each event. e.g. the first event stores a name index (nameIdx) of 59</span></div>\n\
<div class=\"line\"><a name=\"l00035\"></a><span class=\"lineno\">   35</span>&#160;    <span class=\"comment\"># which would reference element 59 in &quot;eventNames&quot;.</span></div>\n\
<div class=\"line\"><a name=\"l00036\"></a><span class=\"lineno\">   36</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00037\"></a><span class=\"lineno\">   37</span>&#160;    <span class=\"comment\"># Note that the total available events and the number of events actually written out is included.</span></div>\n\
<div class=\"line\"><a name=\"l00038\"></a><span class=\"lineno\">   38</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\">   39</span>&#160;    <span class=\"comment\"># {</span></div>\n\
<div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;        <span class=\"comment\"># &quot;version&quot;: 1,</span></div>\n\
<div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\">   41</span>&#160;        <span class=\"comment\"># &quot;eventCount&quot;: 11276,</span></div>\n\
<div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;        <span class=\"comment\"># &quot;cpuCount&quot;: 8,</span></div>\n\
<div class=\"line\"><a name=\"l00043\"></a><span class=\"lineno\">   43</span>&#160;        <span class=\"comment\"># &quot;categories&quot;: [&quot;Main&quot;, &quot;Change&quot;, &quot;Dirty Propagation&quot;, &quot;Evaluation&quot;, &quot;VP1 Evaluation&quot;, &quot;Poly&quot;, &quot;Mudbox&quot;, &quot;VP2 Evaluation&quot;, &quot;Qt&quot;, &quot;Render Setup&quot;, &quot;Anim UI Refresh&quot;],</span></div>\n\
<div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;        <span class=\"comment\"># &quot;eventNames&quot;: [&quot;QtDynamicPropertyChange&quot;, &quot;PreRefreshTopLevel&quot;, &quot;QtCreate&quot;, &quot;Vp2ShaderDoDG&quot;, &quot;QtShortcutOverride&quot;, &quot;Vp2SceneRender&quot;, &quot;Vp2ShaderItemCompileShader&quot;, &quot;QtShowToParent&quot;, &quot;QtMove&quot;, &quot;Vp2AssignShaderInstance&quot;, &quot;opaqueUIList&quot;, &quot;Vp2ParallelEvaluationTask&quot;, &quot;QtResize&quot;, &quot;colorPass&quot;, &quot;pConeShape1&quot;, &quot;QtWindowDeactivate&quot;, &quot;QtZeroTimerEvent&quot;, &quot;QtTimer&quot;, &quot;QtNonClientAreaMouseButtonPress&quot;, &quot;QtMouseButtonRelease&quot;, &quot;QtChildRemoved&quot;, &quot;QtApplicationDeactivate&quot;, &quot;Vp2ShaderWrite&quot;, &quot;QtChildAdded&quot;, &quot;QtWindowActivate&quot;, &quot;Vp2PrepareToUpdate&quot;, &quot;QtMetaCall&quot;, &quot;QtActivationChange&quot;, &quot;QtUpdateLater&quot;, &quot;QtFocusIn&quot;, &quot;QtShow&quot;, &quot;QtUserEvent&quot;, &quot;QtWindowStateChange&quot;, &quot;QtModifiedChange&quot;, &quot;Vp2UpdateGeometryBuffer&quot;, &quot;setDirty&quot;, &quot;Vp2AcquireOffScreenTarget&quot;, &quot;QtKeyRelease&quot;, &quot;uiGeometry&quot;, &quot;Vp2UpdateUI&quot;, &quot;QtUpdateRequest&quot;, &quot;QtToolTipChange&quot;, &quot;QtApplicationPaletteChange&quot;, &quot;QtDragMove&quot;, &quot;preUIGeometry&quot;, &quot;Vp2WaitForEvaluation&quot;, &quot;QtKeyPress&quot;, &quot;QtNonClientAreaMouseButtonRelease&quot;, &quot;QtLeave&quot;, &quot;opaqueGeometry&quot;, &quot;initialShadingGroup&quot;, &quot;QtDrop&quot;, &quot;Vp2BuildRenderLists&quot;, &quot;Vp2UpdateGeometry&quot;, &quot;Compute&quot;, &quot;Vp2ClearRenderLists&quot;, &quot;Vp2UpdateScene&quot;, &quot;postUIGeometry&quot;, &quot;QtMouseButtonPress&quot;, &quot;QtIdleTimer&quot;, &quot;QtDragEnter&quot;, &quot;QtDestroy&quot;, &quot;QtPaint&quot;, &quot;Vp2BuildShadowMaps&quot;, &quot;Vp2UpdateDagObject&quot;, &quot;QtEnter&quot;, &quot;pPyramidShape1&quot;, &quot;QtMouseMove&quot;, &quot;Vp2TranslateGeometry&quot;, &quot;QtWindowTitleChange&quot;, &quot;QtZOrderChange&quot;, &quot;ScheduleRefreshAllViews&quot;, &quot;QtDeferredDelete&quot;, &quot;QtPaletteChange&quot;, &quot;QtNonClientAreaMouseMove&quot;, &quot;shadedBeautyGraphSemantic&quot;, &quot;QtApplicationActivate&quot;, &quot;QtCursorChange&quot;, &quot;Vp2WaitForTranslation&quot;, &quot;sendAttributeChangedMsg&quot;, &quot;QtLayoutRequest&quot;, &quot;QtStatusTip&quot;, &quot;QtDragLeave&quot;, &quot;QtFocusOut&quot;, &quot;Vp2Draw3dBeautyPass&quot;, &quot;Vp2HUD&quot;, &quot;Vp2ConstructFragmentGraph&quot;, &quot;QtHide&quot;],</span></div>\n\
<div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\">   45</span>&#160;        <span class=\"comment\"># &quot;events&quot;: [{</span></div>\n\
<div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;            <span class=\"comment\"># &quot;time&quot;: 25610841341,</span></div>\n\
<div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\">   47</span>&#160;            <span class=\"comment\"># &quot;nameIdx&quot;: 59,</span></div>\n\
<div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;            <span class=\"comment\"># &quot;desc&quot;: &quot;&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00049\"></a><span class=\"lineno\">   49</span>&#160;            <span class=\"comment\"># &quot;catIdx&quot;: 8,</span></div>\n\
<div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;            <span class=\"comment\"># &quot;duration&quot;: 39014,</span></div>\n\
<div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;            <span class=\"comment\"># &quot;tDuration&quot;: 39724089,</span></div>\n\
<div class=\"line\"><a name=\"l00052\"></a><span class=\"lineno\">   52</span>&#160;            <span class=\"comment\"># &quot;tId&quot;: 6972,</span></div>\n\
<div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;            <span class=\"comment\"># &quot;cpuId&quot;: 4,</span></div>\n\
<div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;            <span class=\"comment\"># &quot;colorId&quot;: 6</span></div>\n\
<div class=\"line\"><a name=\"l00055\"></a><span class=\"lineno\">   55</span>&#160;        <span class=\"comment\"># }, {</span></div>\n\
<div class=\"line\"><a name=\"l00056\"></a><span class=\"lineno\">   56</span>&#160;            <span class=\"comment\"># &quot;time&quot;: 25620057925,</span></div>\n\
<div class=\"line\"><a name=\"l00057\"></a><span class=\"lineno\">   57</span>&#160;            <span class=\"comment\"># &quot;nameIdx&quot;: 79,</span></div>\n\
<div class=\"line\"><a name=\"l00058\"></a><span class=\"lineno\">   58</span>&#160;            <span class=\"comment\"># &quot;desc&quot;: &quot;&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00059\"></a><span class=\"lineno\">   59</span>&#160;            <span class=\"comment\"># &quot;catIdx&quot;: 1,</span></div>\n\
<div class=\"line\"><a name=\"l00060\"></a><span class=\"lineno\">   60</span>&#160;            <span class=\"comment\"># &quot;duration&quot;: 228,</span></div>\n\
<div class=\"line\"><a name=\"l00061\"></a><span class=\"lineno\">   61</span>&#160;            <span class=\"comment\"># &quot;tDuration&quot;: 212774,</span></div>\n\
<div class=\"line\"><a name=\"l00062\"></a><span class=\"lineno\">   62</span>&#160;            <span class=\"comment\"># &quot;tId&quot;: 6972,</span></div>\n\
<div class=\"line\"><a name=\"l00063\"></a><span class=\"lineno\">   63</span>&#160;            <span class=\"comment\"># &quot;cpuId&quot;: 0,</span></div>\n\
<div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;            <span class=\"comment\"># &quot;colorId&quot;: 12</span></div>\n\
<div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;        <span class=\"comment\"># }</span></div>\n\
<div class=\"line\"><a name=\"l00066\"></a><span class=\"lineno\">   66</span>&#160;        <span class=\"comment\"># .... more events ...</span></div>\n\
<div class=\"line\"><a name=\"l00067\"></a><span class=\"lineno\">   67</span>&#160;        <span class=\"comment\"># ]</span></div>\n\
<div class=\"line\"><a name=\"l00068\"></a><span class=\"lineno\">   68</span>&#160;        <span class=\"comment\"># &quot;eventsWritten&quot;: 364</span></div>\n\
<div class=\"line\"><a name=\"l00069\"></a><span class=\"lineno\">   69</span>&#160;    <span class=\"comment\"># }</span></div>\n\
<div class=\"line\"><a name=\"l00070\"></a><span class=\"lineno\">   70</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;    <span class=\"comment\"># Here is the same data without using indexing.</span></div>\n\
<div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;    <span class=\"comment\"># {</span></div>\n\
<div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;    <span class=\"comment\"># &quot;cpuCount&quot;: 8,</span></div>\n\
<div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\">   74</span>&#160;    <span class=\"comment\"># &quot;eventCount&quot;: 11276,</span></div>\n\
<div class=\"line\"><a name=\"l00075\"></a><span class=\"lineno\">   75</span>&#160;    <span class=\"comment\"># &quot;events&quot;: [</span></div>\n\
<div class=\"line\"><a name=\"l00076\"></a><span class=\"lineno\">   76</span>&#160;        <span class=\"comment\"># {</span></div>\n\
<div class=\"line\"><a name=\"l00077\"></a><span class=\"lineno\">   77</span>&#160;            <span class=\"comment\"># &quot;category&quot;: &quot;Qt&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00078\"></a><span class=\"lineno\">   78</span>&#160;            <span class=\"comment\"># &quot;colorId&quot;: 6,</span></div>\n\
<div class=\"line\"><a name=\"l00079\"></a><span class=\"lineno\">   79</span>&#160;            <span class=\"comment\"># &quot;cpuId&quot;: 4,</span></div>\n\
<div class=\"line\"><a name=\"l00080\"></a><span class=\"lineno\">   80</span>&#160;            <span class=\"comment\"># &quot;desc&quot;: &quot;&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;            <span class=\"comment\"># &quot;duration&quot;: 39014,</span></div>\n\
<div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;            <span class=\"comment\"># &quot;name&quot;: &quot;QtIdleTimer&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\">   83</span>&#160;            <span class=\"comment\"># &quot;tDuration&quot;: 39724089,</span></div>\n\
<div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;            <span class=\"comment\"># &quot;tId&quot;: 6972,</span></div>\n\
<div class=\"line\"><a name=\"l00085\"></a><span class=\"lineno\">   85</span>&#160;            <span class=\"comment\"># &quot;time&quot;: 25610841341</span></div>\n\
<div class=\"line\"><a name=\"l00086\"></a><span class=\"lineno\">   86</span>&#160;        <span class=\"comment\"># },</span></div>\n\
<div class=\"line\"><a name=\"l00087\"></a><span class=\"lineno\">   87</span>&#160;        <span class=\"comment\"># {</span></div>\n\
<div class=\"line\"><a name=\"l00088\"></a><span class=\"lineno\">   88</span>&#160;            <span class=\"comment\"># &quot;category&quot;: &quot;Change&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;            <span class=\"comment\"># &quot;colorId&quot;: 12,</span></div>\n\
<div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;            <span class=\"comment\"># &quot;cpuId&quot;: 0,</span></div>\n\
<div class=\"line\"><a name=\"l00091\"></a><span class=\"lineno\">   91</span>&#160;            <span class=\"comment\"># &quot;desc&quot;: &quot;&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00092\"></a><span class=\"lineno\">   92</span>&#160;            <span class=\"comment\"># &quot;duration&quot;: 228,</span></div>\n\
<div class=\"line\"><a name=\"l00093\"></a><span class=\"lineno\">   93</span>&#160;            <span class=\"comment\"># &quot;name&quot;: &quot;sendAttributeChangedMsg&quot;,</span></div>\n\
<div class=\"line\"><a name=\"l00094\"></a><span class=\"lineno\">   94</span>&#160;            <span class=\"comment\"># &quot;tDuration&quot;: 212774,</span></div>\n\
<div class=\"line\"><a name=\"l00095\"></a><span class=\"lineno\">   95</span>&#160;            <span class=\"comment\"># &quot;tId&quot;: 6972,</span></div>\n\
<div class=\"line\"><a name=\"l00096\"></a><span class=\"lineno\">   96</span>&#160;            <span class=\"comment\"># &quot;time&quot;: 25620057925</span></div>\n\
<div class=\"line\"><a name=\"l00097\"></a><span class=\"lineno\">   97</span>&#160;        <span class=\"comment\"># }</span></div>\n\
<div class=\"line\"><a name=\"l00098\"></a><span class=\"lineno\">   98</span>&#160;        <span class=\"comment\"># .... more events ...</span></div>\n\
<div class=\"line\"><a name=\"l00099\"></a><span class=\"lineno\">   99</span>&#160;        <span class=\"comment\"># ]</span></div>\n\
<div class=\"line\"><a name=\"l00100\"></a><span class=\"lineno\">  100</span>&#160;        <span class=\"comment\"># &quot;eventsWritten&quot;: 364</span></div>\n\
<div class=\"line\"><a name=\"l00101\"></a><span class=\"lineno\">  101</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\">  102</span>&#160;    stripped = <span class=\"keyword\">lambda</span> s: <span class=\"stringliteral\">&quot;&quot;</span>.join(i <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> s <span class=\"keywordflow\">if</span> 31 &lt; ord(i) &lt; 127)</div>\n\
<div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\">  103</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;    eventCount = om.MProfiler.getEventCount()</div>\n\
<div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\">  105</span>&#160;    <span class=\"keywordflow\">if</span> eventCount == 0:</div>\n\
<div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\">  107</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00108\"></a><span class=\"lineno\">  108</span>&#160;    file = open(fileName, <span class=\"stringliteral\">&quot;w&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00109\"></a><span class=\"lineno\">  109</span>&#160;    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> file:</div>\n\
<div class=\"line\"><a name=\"l00110\"></a><span class=\"lineno\">  110</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00111\"></a><span class=\"lineno\">  111</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00112\"></a><span class=\"lineno\">  112</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00113\"></a><span class=\"lineno\">  113</span>&#160;    file.write(<span class=\"stringliteral\">&quot;{\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00114\"></a><span class=\"lineno\">  114</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00115\"></a><span class=\"lineno\">  115</span>&#160;    <span class=\"comment\"># Output version</span></div>\n\
<div class=\"line\"><a name=\"l00116\"></a><span class=\"lineno\">  116</span>&#160;    file.write(<span class=\"stringliteral\">&quot;\\t\\&quot;version\\&quot;: 1,\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00117\"></a><span class=\"lineno\">  117</span>&#160;    <span class=\"comment\"># Output event count</span></div>\n\
<div class=\"line\"><a name=\"l00118\"></a><span class=\"lineno\">  118</span>&#160;    file.write(<span class=\"stringliteral\">&quot;\\t\\&quot;eventCount\\&quot;: &quot;</span> + str(eventCount) + <span class=\"stringliteral\">&quot;,\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00119\"></a><span class=\"lineno\">  119</span>&#160;    <span class=\"comment\"># Output number of CPUS. Missing from Python API</span></div>\n\
<div class=\"line\"><a name=\"l00120\"></a><span class=\"lineno\">  120</span>&#160;    file.write(<span class=\"stringliteral\">&quot;\\t\\&quot;cpuCount\\&quot;: &quot;</span> + str(om.MProfiler.getNumberOfCPUs()) + <span class=\"stringliteral\">&quot;,\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00121\"></a><span class=\"lineno\">  121</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00122\"></a><span class=\"lineno\">  122</span>&#160;    <span class=\"comment\"># Output event categories if using indexing lookup</span></div>\n\
<div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;    categories = []</div>\n\
<div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;    om.MProfiler.getAllCategories(categories)</div>\n\
<div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;    asciiString = json.dumps(categories, <span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00126\"></a><span class=\"lineno\">  126</span>&#160;    <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00127\"></a><span class=\"lineno\">  127</span>&#160;        file.write(<span class=\"stringliteral\">&quot;\\t\\&quot;categories\\&quot;: &quot;</span> + asciiString + <span class=\"stringliteral\">&quot;,\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\">  129</span>&#160;    <span class=\"comment\"># Output event name list if using indexing</span></div>\n\
<div class=\"line\"><a name=\"l00130\"></a><span class=\"lineno\">  130</span>&#160;    nameDict = {}</div>\n\
<div class=\"line\"><a name=\"l00131\"></a><span class=\"lineno\">  131</span>&#160;    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(0, eventCount, 1):</div>\n\
<div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;        eventName = om.MProfiler.getEventName(i)</div>\n\
<div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;        eventName = eventName.decode(<span class=\"stringliteral\">&#39;ascii&#39;</span>, <span class=\"stringliteral\">&#39;replace&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00134\"></a><span class=\"lineno\">  134</span>&#160;        eventName = stripped(eventName)</div>\n\
<div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;        <span class=\"keywordflow\">if</span> eventName <span class=\"keywordflow\">not</span> <span class=\"keywordflow\">in</span> nameDict:</div>\n\
<div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;            nameDict[eventName] = len(nameDict)</div>\n\
<div class=\"line\"><a name=\"l00137\"></a><span class=\"lineno\">  137</span>&#160;    <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;        nameString = json.dumps(list(nameDict.keys()), <span class=\"keyword\">True</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;        file.write(<span class=\"stringliteral\">&#39;\\t\\&quot;eventNames\\&quot; : &#39;</span> + nameString + <span class=\"stringliteral\">&quot;,\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00140\"></a><span class=\"lineno\">  140</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00141\"></a><span class=\"lineno\">  141</span>&#160;    <span class=\"comment\"># Write out each event:</span></div>\n\
<div class=\"line\"><a name=\"l00142\"></a><span class=\"lineno\">  142</span>&#160;    <span class=\"comment\"># Event time, Event Name / Event Index, Description , Category / Category index, Duration, Thread Duration, Thread id, Cpu id, Color id</span></div>\n\
<div class=\"line\"><a name=\"l00143\"></a><span class=\"lineno\">  143</span>&#160;    file.write(<span class=\"stringliteral\">&#39;\\t\\&quot;events\\&quot;: [\\n&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00144\"></a><span class=\"lineno\">  144</span>&#160;    dumped = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\">  145</span>&#160;    eventsWritten = 0</div>\n\
<div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\">  146</span>&#160;    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(0, eventCount):</div>\n\
<div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\">  147</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\">  148</span>&#160;        duration = om.MProfiler.getEventDuration(i)</div>\n\
<div class=\"line\"><a name=\"l00149\"></a><span class=\"lineno\">  149</span>&#160;        <span class=\"keywordflow\">if</span> duration &gt; durationMin:</div>\n\
<div class=\"line\"><a name=\"l00150\"></a><span class=\"lineno\">  150</span>&#160;            eventsWritten = eventsWritten + 1</div>\n\
<div class=\"line\"><a name=\"l00151\"></a><span class=\"lineno\">  151</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00152\"></a><span class=\"lineno\">  152</span>&#160;            eventTime = om.MProfiler.getEventTime(i)</div>\n\
<div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;            eventName = om.MProfiler.getEventName(i)</div>\n\
<div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\">  154</span>&#160;            eventName = eventName.decode(<span class=\"stringliteral\">&#39;ascii&#39;</span>, <span class=\"stringliteral\">&#39;replace&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00155\"></a><span class=\"lineno\">  155</span>&#160;            eventName = stripped(eventName)</div>\n\
<div class=\"line\"><a name=\"l00156\"></a><span class=\"lineno\">  156</span>&#160;            <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00157\"></a><span class=\"lineno\">  157</span>&#160;                eventNameIndex = list(nameDict.keys()).index(eventName)</div>\n\
<div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\">  158</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\">  159</span>&#160;            description = <span class=\"stringliteral\">&#39;&#39;</span></div>\n\
<div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\">  160</span>&#160;            <span class=\"keywordflow\">if</span> om.MProfiler.getDescription(i):</div>\n\
<div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\">  161</span>&#160;                description = om.MProfiler.getDescription(i)</div>\n\
<div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\">  162</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;            eventCategory = om.MProfiler.getEventCategory(i)</div>\n\
<div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\">  164</span>&#160;            eventCategoryName = om.MProfiler.getCategoryName(eventCategory)</div>\n\
<div class=\"line\"><a name=\"l00165\"></a><span class=\"lineno\">  165</span>&#160;            <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\">  166</span>&#160;                eventCatagoryIndex = categories.index(eventCategoryName)</div>\n\
<div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;            threadDuration = om.MProfiler.getThreadDuration(i)</div>\n\
<div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\">  169</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00170\"></a><span class=\"lineno\">  170</span>&#160;            threadId = om.MProfiler.getThreadId(i)</div>\n\
<div class=\"line\"><a name=\"l00171\"></a><span class=\"lineno\">  171</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00172\"></a><span class=\"lineno\">  172</span>&#160;            cpuId = om.MProfiler.getCPUId(i)</div>\n\
<div class=\"line\"><a name=\"l00173\"></a><span class=\"lineno\">  173</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;            colorId = om.MProfiler.getColor(i)</div>\n\
<div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00176\"></a><span class=\"lineno\">  176</span>&#160;            <span class=\"comment\"># Instead of using json library, the code just writes on the fly</span></div>\n\
<div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\">  177</span>&#160;            <span class=\"keywordflow\">if</span> dumped:</div>\n\
<div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\">  178</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\t,{ &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00179\"></a><span class=\"lineno\">  179</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00180\"></a><span class=\"lineno\">  180</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\t{ &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00181\"></a><span class=\"lineno\">  181</span>&#160;            dumped = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00182\"></a><span class=\"lineno\">  182</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;time\\&quot; : &#39;</span> + str(eventTime) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;            <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\">  184</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\&quot;nameIdx\\&quot; : &#39;</span> + str(eventNameIndex) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00185\"></a><span class=\"lineno\">  185</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00186\"></a><span class=\"lineno\">  186</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\&quot;name\\&quot; : \\&quot;&#39;</span> + eventName + <span class=\"stringliteral\">&#39;\\&quot;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00187\"></a><span class=\"lineno\">  187</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;desc\\&quot; : \\&quot;&#39;</span> + str(description) + <span class=\"stringliteral\">&#39;\\&quot;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;            <span class=\"keywordflow\">if</span> useIndex:</div>\n\
<div class=\"line\"><a name=\"l00189\"></a><span class=\"lineno\">  189</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\&quot;catIdx\\&quot; : &#39;</span> + str(eventCatagoryIndex) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;                file.write(<span class=\"stringliteral\">&#39;\\&quot;category\\&quot; : \\&quot;&#39;</span> + eventCategoryName + <span class=\"stringliteral\">&#39;\\&quot;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;duration\\&quot; : &#39;</span> + str(duration) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00193\"></a><span class=\"lineno\">  193</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;tDuration\\&quot; : &#39;</span> + str(threadDuration) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00194\"></a><span class=\"lineno\">  194</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;tId\\&quot; : &#39;</span> + str(threadId) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00195\"></a><span class=\"lineno\">  195</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;cpuId\\&quot; : &#39;</span> + str(cpuId) + <span class=\"stringliteral\">&#39;, &#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00196\"></a><span class=\"lineno\">  196</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\&quot;colorId\\&quot; : &#39;</span> + str(colorId) + <span class=\"stringliteral\">&#39;&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00197\"></a><span class=\"lineno\">  197</span>&#160;            file.write(<span class=\"stringliteral\">&#39;\\t}\\n&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00198\"></a><span class=\"lineno\">  198</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00199\"></a><span class=\"lineno\">  199</span>&#160;    file.write(<span class=\"stringliteral\">&quot;\\t],\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00200\"></a><span class=\"lineno\">  200</span>&#160;    file.write(<span class=\"stringliteral\">&quot;\\t\\&quot;eventsWritten\\&quot;: &quot;</span> + str(eventsWritten) + <span class=\"stringliteral\">&quot;\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;    file.write(<span class=\"stringliteral\">&quot;}\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00202\"></a><span class=\"lineno\">  202</span>&#160;    file.close()</div>\n\
<div class=\"line\"><a name=\"l00203\"></a><span class=\"lineno\">  203</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00204\"></a><span class=\"lineno\">  204</span>&#160;<span class=\"keyword\">def </span>profilerFormatJSON(fileName, fileName2):</div>\n\
<div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;    <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00206\"></a><span class=\"lineno\">  206</span>&#160;<span class=\"stringliteral\">        fileName : name of file to read</span></div>\n\
<div class=\"line\"><a name=\"l00207\"></a><span class=\"lineno\">  207</span>&#160;<span class=\"stringliteral\">        fileName2 : name of file to write to</span></div>\n\
<div class=\"line\"><a name=\"l00208\"></a><span class=\"lineno\">  208</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00209\"></a><span class=\"lineno\">  209</span>&#160;<span class=\"stringliteral\">        Description:</span></div>\n\
<div class=\"line\"><a name=\"l00210\"></a><span class=\"lineno\">  210</span>&#160;<span class=\"stringliteral\">            Simple utility code to read a JSON file sort and format it before</span></div>\n\
<div class=\"line\"><a name=\"l00211\"></a><span class=\"lineno\">  211</span>&#160;<span class=\"stringliteral\">            writing to a secondary file.</span></div>\n\
<div class=\"line\"><a name=\"l00212\"></a><span class=\"lineno\">  212</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00213\"></a><span class=\"lineno\">  213</span>&#160;<span class=\"stringliteral\">        Example:</span></div>\n\
<div class=\"line\"><a name=\"l00214\"></a><span class=\"lineno\">  214</span>&#160;<span class=\"stringliteral\">            &gt; profilerFormatJSON(&#39;profilerIn.json&#39;, &#39;profilerFormatted.json&#39;)</span></div>\n\
<div class=\"line\"><a name=\"l00215\"></a><span class=\"lineno\">  215</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00216\"></a><span class=\"lineno\">  216</span>&#160;<span class=\"stringliteral\">    &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00217\"></a><span class=\"lineno\">  217</span>&#160;    file = open(fileName, <span class=\"stringliteral\">&quot;</span><span class=\"stringliteral\">r&quot;)</span></div>\n\
<div class=\"line\"><a name=\"l00218\"></a><span class=\"lineno\">  218</span>&#160;<span class=\"stringliteral\">    </span><span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> file:</div>\n\
<div class=\"line\"><a name=\"l00219\"></a><span class=\"lineno\">  219</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00220\"></a><span class=\"lineno\">  220</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00221\"></a><span class=\"lineno\">  221</span>&#160;    result = json.load(file)</div>\n\
<div class=\"line\"><a name=\"l00222\"></a><span class=\"lineno\">  222</span>&#160;    file.close()</div>\n\
<div class=\"line\"><a name=\"l00223\"></a><span class=\"lineno\">  223</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00224\"></a><span class=\"lineno\">  224</span>&#160;    dump = json.dumps(result, sort_keys=<span class=\"keyword\">True</span>, indent=4, separators=(<span class=\"stringliteral\">&#39;,&#39;</span>, <span class=\"stringliteral\">&#39;: &#39;</span>))</div>\n\
<div class=\"line\"><a name=\"l00225\"></a><span class=\"lineno\">  225</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00226\"></a><span class=\"lineno\">  226</span>&#160;    file2 = open(fileName2, <span class=\"stringliteral\">&quot;w&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00227\"></a><span class=\"lineno\">  227</span>&#160;    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> file2:</div>\n\
<div class=\"line\"><a name=\"l00228\"></a><span class=\"lineno\">  228</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00229\"></a><span class=\"lineno\">  229</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00230\"></a><span class=\"lineno\">  230</span>&#160;    file2.write(dump)</div>\n\
<div class=\"line\"><a name=\"l00231\"></a><span class=\"lineno\">  231</span>&#160;    file2.close()</div>\n\
<div class=\"line\"><a name=\"l00232\"></a><span class=\"lineno\">  232</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00233\"></a><span class=\"lineno\">  233</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00234\"></a><span class=\"lineno\">  234</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00235\"></a><span class=\"lineno\">  235</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00236\"></a><span class=\"lineno\">  236</span>&#160;<span class=\"comment\"># Sample 1: Profiler to CSV output</span></div>\n\
<div class=\"line\"><a name=\"l00237\"></a><span class=\"lineno\">  237</span>&#160;<span class=\"comment\"># ---------------------------------</span></div>\n\
<div class=\"line\"><a name=\"l00238\"></a><span class=\"lineno\">  238</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00239\"></a><span class=\"lineno\">  239</span>&#160;<span class=\"keyword\">def </span>profilerToCSV(fileName, durationMin):</div>\n\
<div class=\"line\"><a name=\"l00240\"></a><span class=\"lineno\">  240</span>&#160;    <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00241\"></a><span class=\"lineno\">  241</span>&#160;<span class=\"stringliteral\">        fileName : name of file to write to disk</span></div>\n\
<div class=\"line\"><a name=\"l00242\"></a><span class=\"lineno\">  242</span>&#160;<span class=\"stringliteral\">        useIndex : write events using index lookup to category and name lists</span></div>\n\
<div class=\"line\"><a name=\"l00243\"></a><span class=\"lineno\">  243</span>&#160;<span class=\"stringliteral\">        durationMin : only write out events which have at least this minimum time duration</span></div>\n\
<div class=\"line\"><a name=\"l00244\"></a><span class=\"lineno\">  244</span>&#160;<span class=\"stringliteral\"></span></div>\n\
<div class=\"line\"><a name=\"l00245\"></a><span class=\"lineno\">  245</span>&#160;<span class=\"stringliteral\">        Description:</span></div>\n\
<div class=\"line\"><a name=\"l00246\"></a><span class=\"lineno\">  246</span>&#160;<span class=\"stringliteral\">            Sample to output profiler event information only to CSV format.</span></div>\n\
<div class=\"line\"><a name=\"l00247\"></a><span class=\"lineno\">  247</span>&#160;<span class=\"stringliteral\">        Example:</span></div>\n\
<div class=\"line\"><a name=\"l00248\"></a><span class=\"lineno\">  248</span>&#160;<span class=\"stringliteral\">            &gt; profilerToCSV(&#39;profiler.csv&#39;, 0.0)</span></div>\n\
<div class=\"line\"><a name=\"l00249\"></a><span class=\"lineno\">  249</span>&#160;<span class=\"stringliteral\">    &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00250\"></a><span class=\"lineno\">  250</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00251\"></a><span class=\"lineno\">  251</span>&#160;    <span class=\"comment\"># Sample output:</span></div>\n\
<div class=\"line\"><a name=\"l00252\"></a><span class=\"lineno\">  252</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00253\"></a><span class=\"lineno\">  253</span>&#160;    <span class=\"comment\"># Event Time&quot;,&quot;Event Name&quot;,&quot;Description&quot;,&quot;Event Category&quot;,&quot;Duration&quot;,&quot;Thread Duration&quot;,&quot;Thread Id&quot;,&quot;CPU Id&quot;,&quot;Color Id&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00254\"></a><span class=\"lineno\">  254</span>&#160;    <span class=\"comment\"># 25610841341,&quot;QtIdleTimer&quot;,&quot;&quot;,&quot;Qt&quot;,39014,39724089,6972,4,6</span></div>\n\
<div class=\"line\"><a name=\"l00255\"></a><span class=\"lineno\">  255</span>&#160;    <span class=\"comment\"># 25620057925,&quot;sendAttributeChangedMsg&quot;,&quot;&quot;,&quot;Change&quot;,228,212774,6972,0,12</span></div>\n\
<div class=\"line\"><a name=\"l00256\"></a><span class=\"lineno\">  256</span>&#160;    <span class=\"comment\"># 25620058186,&quot;setDirty&quot;,&quot;&quot;,&quot;Dirty Propagation&quot;,8,7806,6972,0,1</span></div>\n\
<div class=\"line\"><a name=\"l00257\"></a><span class=\"lineno\">  257</span>&#160;    <span class=\"comment\"># 25620058276,&quot;sendAttributeChangedMsg&quot;,&quot;&quot;,&quot;Change&quot;,11,10633,6972,0,12</span></div>\n\
<div class=\"line\"><a name=\"l00258\"></a><span class=\"lineno\">  258</span>&#160;    <span class=\"comment\"># 25620058310,&quot;sendAttributeChangedMsg&quot;,&quot;&quot;,&quot;Change&quot;,8,7732,6972,0,12</span></div>\n\
<div class=\"line\"><a name=\"l00259\"></a><span class=\"lineno\">  259</span>&#160;    <span class=\"comment\"># 25620058332,&quot;sendAttributeChangedMsg&quot;,&quot;&quot;,&quot;Change&quot;,7,6844,6972,0,12</span></div>\n\
<div class=\"line\"><a name=\"l00260\"></a><span class=\"lineno\">  260</span>&#160;    <span class=\"comment\"># ... &lt;more events&gt; ...</span></div>\n\
<div class=\"line\"><a name=\"l00261\"></a><span class=\"lineno\">  261</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00262\"></a><span class=\"lineno\">  262</span>&#160;    stripped = <span class=\"keyword\">lambda</span> s: <span class=\"stringliteral\">&quot;&quot;</span>.join(i <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> s <span class=\"keywordflow\">if</span> 31 &lt; ord(i) &lt; 127)</div>\n\
<div class=\"line\"><a name=\"l00263\"></a><span class=\"lineno\">  263</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00264\"></a><span class=\"lineno\">  264</span>&#160;    eventCount = om.MProfiler.getEventCount()</div>\n\
<div class=\"line\"><a name=\"l00265\"></a><span class=\"lineno\">  265</span>&#160;    <span class=\"keywordflow\">if</span> eventCount == 0:</div>\n\
<div class=\"line\"><a name=\"l00266\"></a><span class=\"lineno\">  266</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00267\"></a><span class=\"lineno\">  267</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00268\"></a><span class=\"lineno\">  268</span>&#160;    file = open(fileName, <span class=\"stringliteral\">&quot;w&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00269\"></a><span class=\"lineno\">  269</span>&#160;    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> file:</div>\n\
<div class=\"line\"><a name=\"l00270\"></a><span class=\"lineno\">  270</span>&#160;        <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l00271\"></a><span class=\"lineno\">  271</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00272\"></a><span class=\"lineno\">  272</span>&#160;    csvWriter = csv.writer(file, quoting=csv.QUOTE_NONNUMERIC)</div>\n\
<div class=\"line\"><a name=\"l00273\"></a><span class=\"lineno\">  273</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00274\"></a><span class=\"lineno\">  274</span>&#160;    <span class=\"comment\"># Write out each event:</span></div>\n\
<div class=\"line\"><a name=\"l00275\"></a><span class=\"lineno\">  275</span>&#160;    <span class=\"comment\"># Event time, Event Name / Event Index, Description , Category / Category index, Duration, Thread Duration, Thread id, Cpu id, Color id</span></div>\n\
<div class=\"line\"><a name=\"l00276\"></a><span class=\"lineno\">  276</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00277\"></a><span class=\"lineno\">  277</span>&#160;    head = ( <span class=\"stringliteral\">&#39;Event Time&#39;</span>, <span class=\"stringliteral\">&#39;Event Name&#39;</span>, <span class=\"stringliteral\">&#39;Description&#39;</span>, <span class=\"stringliteral\">&#39;Event Category&#39;</span>, <span class=\"stringliteral\">&#39;Duration&#39;</span>, <span class=\"stringliteral\">&#39;Thread Duration&#39;</span>, <span class=\"stringliteral\">&#39;Thread Id&#39;</span>, <span class=\"stringliteral\">&#39;CPU Id&#39;</span>, <span class=\"stringliteral\">&#39;Color Id&#39;</span> )</div>\n\
<div class=\"line\"><a name=\"l00278\"></a><span class=\"lineno\">  278</span>&#160;    csvWriter.writerow(head)</div>\n\
<div class=\"line\"><a name=\"l00279\"></a><span class=\"lineno\">  279</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00280\"></a><span class=\"lineno\">  280</span>&#160;    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(0, eventCount):</div>\n\
<div class=\"line\"><a name=\"l00281\"></a><span class=\"lineno\">  281</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00282\"></a><span class=\"lineno\">  282</span>&#160;        duration = om.MProfiler.getEventDuration(i)</div>\n\
<div class=\"line\"><a name=\"l00283\"></a><span class=\"lineno\">  283</span>&#160;        <span class=\"keywordflow\">if</span> duration &gt; durationMin:</div>\n\
<div class=\"line\"><a name=\"l00284\"></a><span class=\"lineno\">  284</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00285\"></a><span class=\"lineno\">  285</span>&#160;            eventTime = om.MProfiler.getEventTime(i)</div>\n\
<div class=\"line\"><a name=\"l00286\"></a><span class=\"lineno\">  286</span>&#160;            eventName = om.MProfiler.getEventName(i)</div>\n\
<div class=\"line\"><a name=\"l00287\"></a><span class=\"lineno\">  287</span>&#160;            eventName = eventName.decode(<span class=\"stringliteral\">&#39;ascii&#39;</span>, <span class=\"stringliteral\">&#39;replace&#39;</span>)</div>\n\
<div class=\"line\"><a name=\"l00288\"></a><span class=\"lineno\">  288</span>&#160;            eventName = stripped(eventName)</div>\n\
<div class=\"line\"><a name=\"l00289\"></a><span class=\"lineno\">  289</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l00290\"></a><span class=\"lineno\">  290</span>&#160;            description = <span class=\"stringliteral\">&#39;&#39;</span></div>\n\
<div class=\"line\"><a name=\"l00291\"></a><span class=\"lineno\">  291</span>&#160;            <span class=\"keywordflow\">if</span> om.MProfiler.getDescription(i):</div>\n\
<div class=\"line\"><a name=\"l00292\"></a><span class=\"lineno\">  292</span>&#160;                description = om.MProfiler.getDescription(i)</div>\n\
<div class=\"line\"><a name=\"l00293\"></a><span class=\"lineno\">  293</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00294\"></a><span class=\"lineno\">  294</span>&#160;            eventCategory = om.MProfiler.getEventCategory(i)</div>\n\
<div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;            eventCategoryName = om.MProfiler.getCategoryName(eventCategory)</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;            threadDuration = om.MProfiler.getThreadDuration(i)</div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;            threadId = om.MProfiler.getThreadId(i)</div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\">  300</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;            cpuId = om.MProfiler.getCPUId(i)</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00303\"></a><span class=\"lineno\">  303</span>&#160;            colorId = om.MProfiler.getColor(i)</div>\n\
<div class=\"line\"><a name=\"l00304\"></a><span class=\"lineno\">  304</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00305\"></a><span class=\"lineno\">  305</span>&#160;            row = ( eventTime, eventName, description, eventCategoryName, duration, threadDuration, threadId, cpuId, colorId )</div>\n\
<div class=\"line\"><a name=\"l00306\"></a><span class=\"lineno\">  306</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00307\"></a><span class=\"lineno\">  307</span>&#160;            csvWriter.writerow(row)</div>\n\
<div class=\"line\"><a name=\"l00308\"></a><span class=\"lineno\">  308</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00309\"></a><span class=\"lineno\">  309</span>&#160;    file.close()</div>\n\
<div class=\"line\"><a name=\"l00310\"></a><span class=\"lineno\">  310</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00311\"></a><span class=\"lineno\">  311</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00312\"></a><span class=\"lineno\">  312</span>&#160;<span class=\"comment\"># Nothing run on initialize for now</span></div>\n\
<div class=\"line\"><a name=\"l00313\"></a><span class=\"lineno\">  313</span>&#160;<span class=\"keyword\">def </span>initializePlugin(obj):</div>\n\
<div class=\"line\"><a name=\"l00314\"></a><span class=\"lineno\">  314</span>&#160;    obj</div>\n\
<div class=\"line\"><a name=\"l00315\"></a><span class=\"lineno\">  315</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00316\"></a><span class=\"lineno\">  316</span>&#160;<span class=\"keyword\">def </span>uninitializePlugin(obj):</div>\n\
<div class=\"line\"><a name=\"l00317\"></a><span class=\"lineno\">  317</span>&#160;    obj</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";