var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: glslShader/GLSLShader.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'glsl_shader_2_g_l_s_l_shader_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: glslShader/GLSLShader.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">glslShader/GLSLShader.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license agreement</span></div>\n\
<div class=\"line\"><span class=\"comment\">// provided at the time of installation or download, or which otherwise</span></div>\n\
<div class=\"line\"><span class=\"comment\">// accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef GLSLSHADER_GLSLSHADER_H</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GLSLSHADER_GLSLSHADER_H</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxHardwareShader.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUniformParameter.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUniformParameterList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVaryingParameter.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVaryingParameterList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MShaderManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;vector&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;map&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;set&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>GLSLShaderNode : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hardware_shader.html\">MPxHardwareShader</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">enum</span> ERenderType</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        RENDER_SCENE,               <span class=\"comment\">// Render the scene to the viewport 2.0</span></div>\n\
<div class=\"line\">        RENDER_SWATCH,              <span class=\"comment\">// Render the swatch that represents the current selected technique</span></div>\n\
<div class=\"line\">        RENDER_SWATCH_PROXY,        <span class=\"comment\">// Render a dummy swatch when no effect or no valid technique selected</span></div>\n\
<div class=\"line\">        RENDER_UVTEXTURE,           <span class=\"comment\">// Render a texture for the UV editor</span></div>\n\
<div class=\"line\">        RENDER_SCENE_DEFAULT_LIGHT  <span class=\"comment\">// Render the scene using a default light</span></div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">struct </span>RenderItemDesc</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> isOverrideNonMaterialItem;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> isFatLine;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> isFatPoint;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    GLSLShaderNode();</div>\n\
<div class=\"line\">    ~GLSLShaderNode() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>* creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initialize();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> initializeNodeAttrs();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#aa88f4dd4cfd3e964e0806d6e5b253347\">getInternalValue</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp;) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6caab4434e836748680958883564af35\">setInternalValue</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp;) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a9af8c4dfe96f9f03b7edd22be9dcd79a\">dependsOn</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; otherPlug, <span class=\"keywordtype\">bool</span>&amp; depends) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_profile.html\">MRenderProfile</a> &amp; <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hardware_shader.html#a269d88f7a24099bc25280475c931e49d\">profile</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; effectName() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> clearParameters();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateParameters(<span class=\"keyword\">const</span> <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, ERenderType renderType = RENDER_SCENE) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateOverrideNonMaterialItemParameters(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <span class=\"keyword\">const</span> <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item, RenderItemDesc&amp; renderItemDesc) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* GetGLSLShaderInstance()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fGLSLShaderInstance; }</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html\">MHWRender::MVertexBufferDescriptorList</a>&amp; geometryRequirements()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fGeometryRequirements; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hasUpdatedVaryingInput() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateGeometryRequirements();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> TypeID();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> m_TypeId;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> m_TypeName;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> m_RegistrantId;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> m_drawDbClassification;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture.html\">MHWRender::MTexture</a>* loadTexture(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <span class=\"keyword\">const</span> <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter.html\">MUniformParameter</a>&amp; uniform) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture.html\">MHWRender::MTexture</a>* loadTexture(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; textureName, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; layerName, <span class=\"keywordtype\">int</span> alphaChannelIdx, <span class=\"keywordtype\">int</span> mipmapLevels) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hardware_shader.html#a765f8d7c0499e87180ff884b6967550e\">renderSwatchImage</a>( <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a> &amp; image ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hardware_shader.html#a81e24ef2548b68ed74555de9ceee1b88\">getAvailableImages</a>( <span class=\"keyword\">const</span> <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_px_hardware_shader_1_1_shader_context.html\">MPxHardwareShader::ShaderContext</a> &amp;context, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; uvSetName, <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;imageNames ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hardware_shader.html#afc0b543d630b77f3019e3759323673f8\">renderImage</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_px_hardware_shader_1_1_shader_context.html\">MPxHardwareShader::ShaderContext</a> &amp;context, <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; uiDrawManager, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; imageName, floatRegion region, <span class=\"keyword\">const</span> <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_px_hardware_shader_1_1_render_parameters.html\">MPxHardwareShader::RenderParameters</a>&amp; parameters, <span class=\"keywordtype\">int</span> &amp;imageWidth, <span class=\"keywordtype\">int</span> &amp;imageHeight ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> reload();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> techniqueName()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueName; }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> techniqueNames()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueNames; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueIsSelectable()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueIsSelectable; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueIsTransparent()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueIsTransparent; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueSupportsAdvancedTransparency()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueSupportsAdvancedTransparency; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueOverridesDrawState()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueOverridesDrawState; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> techniqueBBoxExtraScale()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueBBoxExtraScale; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueOverridesNonMaterialItems()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueOverridesNonMaterialItems; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueHandlesConsolidatedGeometry()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueHandlesConsolidatedGeometry; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; techniqueIndexBufferType()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fTechniqueIndexBufferType; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter.html#ae2d1a7ca98deaf6f6acd790af2e234ef\">MUniformParameter::DataSemantic</a> convertSpace(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter.html#ae2d1a7ca98deaf6f6acd790af2e234ef\">MUniformParameter::DataSemantic</a> defaultSpace);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter.html#ae2d1a7ca98deaf6f6acd790af2e234ef\">MUniformParameter::DataSemantic</a> guessUnknownSemantics(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//Lighting</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">enum</span> ELightType</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        eInvalidLight,</div>\n\
<div class=\"line\">        eUndefinedLight,</div>\n\
<div class=\"line\">        eSpotLight,</div>\n\
<div class=\"line\">        ePointLight,    </div>\n\
<div class=\"line\">        eDirectionalLight,</div>\n\
<div class=\"line\">        eAmbientLight,</div>\n\
<div class=\"line\">        eVolumeLight,</div>\n\
<div class=\"line\">        eAreaLight,</div>\n\
<div class=\"line\">        eDefaultLight,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        eLightCount</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">enum</span> ELightParameterType</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        eUndefined, <span class=\"comment\">// 0</span></div>\n\
<div class=\"line\">        eLightPosition,</div>\n\
<div class=\"line\">        eLightDirection,</div>\n\
<div class=\"line\">        eLightColor,</div>\n\
<div class=\"line\">        eLightSpecularColor,</div>\n\
<div class=\"line\">        eLightAmbientColor, <span class=\"comment\">// 5</span></div>\n\
<div class=\"line\">        eLightDiffuseColor,</div>\n\
<div class=\"line\">        eLightRange,</div>\n\
<div class=\"line\">        eLightFalloff,</div>\n\
<div class=\"line\">        eLightAttenuation0,</div>\n\
<div class=\"line\">        eLightAttenuation1, <span class=\"comment\">// 10</span></div>\n\
<div class=\"line\">        eLightAttenuation2,</div>\n\
<div class=\"line\">        eLightTheta,</div>\n\
<div class=\"line\">        eLightPhi,</div>\n\
<div class=\"line\">        eLightShadowMap,</div>\n\
<div class=\"line\">        eLightShadowMapBias, <span class=\"comment\">// 15</span></div>\n\
<div class=\"line\">        eLightShadowColor,</div>\n\
<div class=\"line\">        eLightShadowViewProj,</div>\n\
<div class=\"line\">        eLightShadowOn,</div>\n\
<div class=\"line\">        eLightIntensity,</div>\n\
<div class=\"line\">        eLightHotspot, <span class=\"comment\">// 20</span></div>\n\
<div class=\"line\">        eLightEnable,</div>\n\
<div class=\"line\">        eLightType,</div>\n\
<div class=\"line\">        eDecayRate,</div>\n\
<div class=\"line\">        eLightAreaPosition0,</div>\n\
<div class=\"line\">        eLightAreaPosition1, <span class=\"comment\">// 25</span></div>\n\
<div class=\"line\">        eLightAreaPosition2,</div>\n\
<div class=\"line\">        eLightAreaPosition3,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ePointLightShadowMap,</div>\n\
<div class=\"line\">        <span class=\"comment\">// When updating this array, please keep the </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// strings in getLightParameterSemantic in sync. </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//    Thanks!</span></div>\n\
<div class=\"line\">        eLastParameterType,</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>LightParameterInfo </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        LightParameterInfo(</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> lightIndex,</div>\n\
<div class=\"line\">            ELightType lightType = GLSLShaderNode::eInvalidLight,</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> hasLightTypeSemantics = <span class=\"keyword\">false</span>)</div>\n\
<div class=\"line\">        : mLightIndex(lightIndex)</div>\n\
<div class=\"line\">        , mLightType(lightType)</div>\n\
<div class=\"line\">        , fIsDirty(<span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">        , fHasLightTypeSemantics(hasLightTypeSemantics)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> mLightIndex;</div>\n\
<div class=\"line\">        ELightType mLightType;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> fIsDirty;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> fHasLightTypeSemantics;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// This is a map&lt;MUniformParameterList-&gt;index, ELightParameterType&gt;</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> std::map&lt;int, int&gt; TConnectableParameters;</div>\n\
<div class=\"line\">        TConnectableParameters fConnectableParameters;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     fAttrUseImplicit;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     fAttrConnectedLight;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     fCachedImplicitLight;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> getLightableParameters(<span class=\"keywordtype\">int</span> lightIndex, <span class=\"keywordtype\">bool</span> showSemantics);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; getLightParameterSemantic(<span class=\"keywordtype\">int</span> lightParameterType);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> refreshLightConnectionAttributes(<span class=\"keywordtype\">bool</span> inSceneUpdateNotification = <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateLightInfoFromSemantic(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName, <span class=\"keywordtype\">int</span> uniformParamIndex);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> getIndexForLightName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; lightName, <span class=\"keywordtype\">bool</span> appendLight = <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; lightInfoDescription()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fLightDescriptions; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> clearLightConnectionData(<span class=\"keywordtype\">bool</span> refreshAE=<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> getLightConnectionInfo(<span class=\"keywordtype\">int</span> lightIndex);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> connectLight(<span class=\"keywordtype\">int</span> lightIndex, <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> lightPath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> techniqueHandlesContext(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> passHandlesContext(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> passIndex, <span class=\"keyword\">const</span> RenderItemDesc* renderItemDesc = NULL) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> configureUniforms();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> configureGeometryRequirements();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateImplicitLightConnections(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, ERenderType renderType) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateExplicitLightConnections(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, ERenderType renderType) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> connectLight(<span class=\"keyword\">const</span> LightParameterInfo&amp; lightInfo, <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_light_parameter_information.html\">MHWRender::MLightParameterInformation</a>* lightParam, ERenderType renderType = RENDER_SCENE) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> connectExplicitAmbientLight(<span class=\"keyword\">const</span> LightParameterInfo&amp; lightInfo, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; sourceLight) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> turnOffLight(<span class=\"keyword\">const</span> LightParameterInfo&amp; lightInfo) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setLightRequiresShadows(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; lightObject, <span class=\"keywordtype\">bool</span> requiresShadow) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateImplicitLightParameterCache();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> refreshView() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setLightParameterLocking(<span class=\"keyword\">const</span> LightParameterInfo&amp; lightInfo, <span class=\"keywordtype\">bool</span> locked, <span class=\"keywordtype\">bool</span> refreshAE=<span class=\"keyword\">true</span>) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> getLightParametersToUpdate(std::set&lt;int&gt;&amp; parametersToUpdate, ERenderType renderType) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> appendParameterNameIfVisible(<span class=\"keywordtype\">int</span> paramIndex, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; paramArray) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> disconnectLight(<span class=\"keywordtype\">int</span> lightIndex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#abd7d1dad4e4f0b922bf5ac4fc9c0230a\">setDependentsDirty</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plugBeingDirtied, <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a>&amp; affectedPlugs) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Attibute Editor</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; getUIGroups()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fUIGroupNames; }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> getUIGroupParameters(<span class=\"keywordtype\">int</span> uiGroupIndex) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> getIndexForUIGroupName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; uiGroupName) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> loadEffect( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; effectName );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> displayErrorAndWarnings(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; message) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> configureUniformUI(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter.html\">MUniformParameter</a>&amp; uniformParam) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// External content management  </span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#abfc494661ea0f7f957a9e437cebb2642\">getExternalContent</a>(<a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a389fc88c7e5236aa2b9980a1b452cc49\">setExternalContent</a>(<span class=\"keyword\">const</span> <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> deleteUniformUserData();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>* createUniformUserData(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; getParameterName(<span class=\"keywordtype\">void</span>* userData) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture.html\">MHWRender::MTexture</a>* getTexture(<span class=\"keywordtype\">void</span>* userData) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">struct </span>PassSpec</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawContext;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> forFatLine;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> forFatPoint;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> findMatchingPass(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <span class=\"keyword\">const</span> PassSpec&amp; passSpecTest) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">struct </span>UniformUserData</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fParameterName;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture.html\">MHWRender::MTexture</a>* fTexture;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        UniformUserData(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; parameterName) : fParameterName(parameterName), fTexture(0) {};</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fEffectLoaded;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                         fEffectName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uniform_parameter_list.html\">MUniformParameterList</a>           fUniformParameters;</div>\n\
<div class=\"line\">    std::vector&lt;UniformUserData*&gt;   fUniformUserData;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html\">MHWRender::MVertexBufferDescriptorList</a>  fGeometryRequirements;</div>\n\
<div class=\"line\">    <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_varying_parameter_list.html\">MVaryingParameterList</a>           fVaryingParameters;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>                    fVaryingParametersUpdateId;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *    fGLSLShaderInstance;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//Diagnostics strings</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">mutable</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                 fErrorLog;</div>\n\
<div class=\"line\">    <span class=\"keyword\">mutable</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                 fWarningLog;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Active technique name</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                         fTechniqueName;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>                    fTechniqueNames;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>                         fTechniqueEnumAttr;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>                             fTechniqueIdx;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueIsSelectable;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueIsTransparent;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueSupportsAdvancedTransparency;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                         fTechniqueIndexBufferType;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueOverridesDrawState;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>                             fTechniqueTextureMipmapLevels;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>                          fTechniqueBBoxExtraScale;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueOverridesNonMaterialItems;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                            fTechniqueHandlesConsolidatedGeometry;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>                    fTechniquePassCount;</div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> std::map&lt;unsigned int, PassSpec&gt; PassSpecMap;</div>\n\
<div class=\"line\">    PassSpecMap                     fTechniquePassSpecs;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//Lighting</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> std::vector&lt;LightParameterInfo&gt; LightParameterInfoVec;</div>\n\
<div class=\"line\">    LightParameterInfoVec           fLightParameters;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>                    fLightNames;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>                    fLightDescriptions;</div>\n\
<div class=\"line\">    <span class=\"keyword\">mutable</span> <span class=\"keywordtype\">int</span>                     fImplicitAmbientLight; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Identifier to track scene-render-frame in order to optimize the updateParameters routine.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">mutable</span> MUint64                 fLastFrameStamp;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>                    fUIGroupNames;</div>\n\
<div class=\"line\">    std::vector&lt;MStringArray&gt;       fUIGroupParameters;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";