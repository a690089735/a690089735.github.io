var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: StructureIteratorImpl Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_structure_iterator_impl.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: StructureIteratorImpl Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">StructureIteratorImpl Class Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#pub-attribs\">Public Attributes</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Helper class to contain the implementation-specific information.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#details\">More...</a></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a4d86db713fd19d4dd05b2b4cad39fdb7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a4d86db713fd19d4dd05b2b4cad39fdb7\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a4d86db713fd19d4dd05b2b4cad39fdb7\">~StructureIteratorImpl</a> ()</td></tr>\n\
<tr class=\"memdesc:a4d86db713fd19d4dd05b2b4cad39fdb7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor, releases the claim on the structure. <br></td></tr>\n\
<tr class=\"separator:a4d86db713fd19d4dd05b2b4cad39fdb7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acc15eeb4ff3154e3be5e7cb7e748dcb5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#acc15eeb4ff3154e3be5e7cb7e748dcb5\">StructureIteratorImpl</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *s, unsigned int i)</td></tr>\n\
<tr class=\"memdesc:acc15eeb4ff3154e3be5e7cb7e748dcb5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Constructor, specifies the structure over which to iterate.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#acc15eeb4ff3154e3be5e7cb7e748dcb5\">More...</a><br></td></tr>\n\
<tr class=\"separator:acc15eeb4ff3154e3be5e7cb7e748dcb5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab59affcbd332c17cc8c3c498ef0f2f75\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#ab59affcbd332c17cc8c3c498ef0f2f75\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:ab59affcbd332c17cc8c3c498ef0f2f75\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator, used to facilitate begin()/end() interface.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#ab59affcbd332c17cc8c3c498ef0f2f75\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab59affcbd332c17cc8c3c498ef0f2f75\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad8f118b7f2c53b12ed54f4fdedaa2e2e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#ad8f118b7f2c53b12ed54f4fdedaa2e2e\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:ad8f118b7f2c53b12ed54f4fdedaa2e2e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Equality operator, used to facilitate begin()/end() interface.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#ad8f118b7f2c53b12ed54f4fdedaa2e2e\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad8f118b7f2c53b12ed54f4fdedaa2e2e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a15892ec4da75a1f5e66a79b1bf98e2ea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a15892ec4da75a1f5e66a79b1bf98e2ea\">operator!=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:a15892ec4da75a1f5e66a79b1bf98e2ea\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Inequality operator, used to facilitate begin()/end() interface.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a15892ec4da75a1f5e66a79b1bf98e2ea\">More...</a><br></td></tr>\n\
<tr class=\"separator:a15892ec4da75a1f5e66a79b1bf98e2ea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a12f83da7168471ef8030e714aa8ae1c6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">Member &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a12f83da7168471ef8030e714aa8ae1c6\">operator*</a> ()</td></tr>\n\
<tr class=\"memdesc:a12f83da7168471ef8030e714aa8ae1c6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the Member at the current location of the iterator (mutable version)  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a12f83da7168471ef8030e714aa8ae1c6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a12f83da7168471ef8030e714aa8ae1c6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a204334bbab94f74951bf1175a61073d4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const Member &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a204334bbab94f74951bf1175a61073d4\">operator*</a> () const </td></tr>\n\
<tr class=\"memdesc:a204334bbab94f74951bf1175a61073d4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the Member at the current location of the iterator (const version)  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a204334bbab94f74951bf1175a61073d4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a204334bbab94f74951bf1175a61073d4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af603d2fb5118bec2acc9400a3d76634a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">Member *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#af603d2fb5118bec2acc9400a3d76634a\">operator-&gt;</a> ()</td></tr>\n\
<tr class=\"memdesc:af603d2fb5118bec2acc9400a3d76634a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the Member at the current location of the iterator (mutable version)  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#af603d2fb5118bec2acc9400a3d76634a\">More...</a><br></td></tr>\n\
<tr class=\"separator:af603d2fb5118bec2acc9400a3d76634a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a761f8d2d79dc8640b1db2319c374183c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const Member *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a761f8d2d79dc8640b1db2319c374183c\">operator-&gt;</a> () const </td></tr>\n\
<tr class=\"memdesc:a761f8d2d79dc8640b1db2319c374183c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the Member at the current location of the iterator (const version)  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a761f8d2d79dc8640b1db2319c374183c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a761f8d2d79dc8640b1db2319c374183c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2ee84122c7dd584a20c1f7db90cbb4b2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a2ee84122c7dd584a20c1f7db90cbb4b2\">operator++</a> ()</td></tr>\n\
<tr class=\"memdesc:a2ee84122c7dd584a20c1f7db90cbb4b2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Pre-increment operator.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a2ee84122c7dd584a20c1f7db90cbb4b2\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2ee84122c7dd584a20c1f7db90cbb4b2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acb3c2b61d7256e3137e462bc23402602\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#acb3c2b61d7256e3137e462bc23402602\">operator++</a> (int)</td></tr>\n\
<tr class=\"memdesc:acb3c2b61d7256e3137e462bc23402602\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Post-increment operator.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#acb3c2b61d7256e3137e462bc23402602\">More...</a><br></td></tr>\n\
<tr class=\"separator:acb3c2b61d7256e3137e462bc23402602\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a157cc0fcb678996fe497d9afb78f61c7\">structure</a> () const </td></tr>\n\
<tr class=\"memdesc:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the structure being used by the iterator.  <a href=\"classadsk_1_1_data_1_1_structure_iterator_impl.html#a157cc0fcb678996fe497d9afb78f61c7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-attribs\"></a>\n\
Public Attributes</h2></td></tr>\n\
<tr class=\"memitem:a9ea154f0994ade8c2f85044e503701b1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a9ea154f0994ade8c2f85044e503701b1\"></a>\n\
unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a9ea154f0994ade8c2f85044e503701b1\">fCurrentIndex</a></td></tr>\n\
<tr class=\"memdesc:a9ea154f0994ade8c2f85044e503701b1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Current location of the iterator. <br></td></tr>\n\
<tr class=\"separator:a9ea154f0994ade8c2f85044e503701b1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a20ea3587381cd5ea5c420d75a0149c7a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a20ea3587381cd5ea5c420d75a0149c7a\"></a>\n\
const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html#a20ea3587381cd5ea5c420d75a0149c7a\">fStructure</a></td></tr>\n\
<tr class=\"memdesc:a20ea3587381cd5ea5c420d75a0149c7a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> over which to iterate. <br></td></tr>\n\
<tr class=\"separator:a20ea3587381cd5ea5c420d75a0149c7a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Helper class to contain the implementation-specific information. </p>\n\
</div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"acc15eeb4ff3154e3be5e7cb7e748dcb5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>s</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>i</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Constructor, specifies the structure over which to iterate. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">s</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> over which to iterate </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">i</td><td>Member index at which the iterator starts </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"ab59affcbd332c17cc8c3c498ef0f2f75\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator, used to facilitate begin()/end() interface. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to be copied</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the assigned iterator </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad8f118b7f2c53b12ed54f4fdedaa2e2e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Equality operator, used to facilitate begin()/end() interface. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if they are the same iterator </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a15892ec4da75a1f5e66a79b1bf98e2ea\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Inequality operator, used to facilitate begin()/end() interface. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if they are not the same iterator </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a12f83da7168471ef8030e714aa8ae1c6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">Member &amp; operator* </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the Member at the current location of the iterator (mutable version) </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the current Member, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a204334bbab94f74951bf1175a61073d4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const Member &amp; operator* </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the Member at the current location of the iterator (const version) </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the current Member, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af603d2fb5118bec2acc9400a3d76634a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">Member * operator-&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the Member at the current location of the iterator (mutable version) </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the current Member, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a761f8d2d79dc8640b1db2319c374183c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const Member * operator-&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the Member at the current location of the iterator (const version) </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the current Member, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2ee84122c7dd584a20c1f7db90cbb4b2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> &amp; operator++ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Pre-increment operator. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this iterator, to allow use as a lhs </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acb3c2b61d7256e3137e462bc23402602\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator_impl.html\">StructureIteratorImpl</a> operator++ </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Post-increment operator. </p>\n\
<p>Makes a copy - use pre-increment where possible</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Copy of the iterator before the advance </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a157cc0fcb678996fe497d9afb78f61c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp; structure </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the structure being used by the iterator. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to structure being used by the iterator </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li>adskDataStructureIterator.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";