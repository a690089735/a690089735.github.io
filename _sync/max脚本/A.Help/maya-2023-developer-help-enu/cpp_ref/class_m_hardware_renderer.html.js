var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MHardwareRenderer Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_hardware_renderer.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MHardwareRenderer Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MHardwareRenderer Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_render.html\">OpenMayaRender - API module for rendering</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2019-omnibus-whats-new.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2019 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Writing-a-Hardware-Shading-Node/A-hardware-shading-node-plug-in.html\">Writing a Hardware Shading Node &gt; A hardware shading node plug-in example</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_hardware_renderer.html#pub-types\">Public Types</a> &#124;\n\
<a href=\"class_m_hardware_renderer.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_hardware_renderer.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_hardware_renderer-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Static hardware renderer interface class.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MHardwareRenderer.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-types\"></a>\n\
Public Types</h2></td></tr>\n\
<tr class=\"memitem:a14dafbca9ec0aa5132598b888511bfcb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a> { <br>\n\
&#160;&#160;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcbaf0536797208144380691e2b376ffc1d1\">kSuccess</a> = 0, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcba1ef6c2d725fb4bec3e7e840d28adbc00\">kFailure</a>, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcba7823f63b4ae266c9228d1500c092bc5b\">kItemExists</a>, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcba77eab2acb2adbeedf84913f2710415fa\">kItemNotFound</a>, \n\
<br>\n\
&#160;&#160;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcba49d8dfecd6243dbdef99a52a37391060\">kLocationNotFound</a>\n\
<br>\n\
 }<tr class=\"memdesc:a14dafbca9ec0aa5132598b888511bfcb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Draw Procedure status codes.  <a href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">More...</a><br></td></tr>\n\
<tr class=\"separator:a14dafbca9ec0aa5132598b888511bfcb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</td></tr>\n\
<tr class=\"memitem:a9e9dd2b7e61c97fa71a280792980f7da\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a> { <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7daa3f2006edd7ae9e9783a9e850c2ef2963\">kRGBA_Fix8</a>, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7daad2a6f3e6707b26d54e5bf286461a4bd5\">kRGBA_Float16</a>, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7daa52cb1c770ac21ced7dddffe18b5f3a36\">kDepth_Float32</a>\n\
 }<tr class=\"memdesc:a9e9dd2b7e61c97fa71a280792980f7da\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Specify the pixel format of the current buffer.  <a href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9e9dd2b7e61c97fa71a280792980f7da\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</td></tr>\n\
<tr class=\"memitem:a0526f0a40dc8240e14bfb22ebf93d986\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> { <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986aef844aa5884692f98da12f4b6498b98f\">kPreRendering</a> = 0, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986a6742f06270edc03dc6e4fab458575a65\">kPreExposure</a> = 1, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986aa719507f97eea20e5fce2da8660fdeac\">kPostExposure</a> = 2, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986a40faa5492f345487e604f7fd7196f019\">kPostRendering</a> = 3\n\
 }<tr class=\"memdesc:a0526f0a40dc8240e14bfb22ebf93d986\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Draw Procedure call locations.  <a href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0526f0a40dc8240e14bfb22ebf93d986\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</td></tr>\n\
<tr class=\"memitem:a5f45789e2294fc128af5b04595d96505\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">GeometricShape</a> { <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505acb4a5f68a3b6cd8c05b1dc9c5a487c88\">kDefaultSphere</a> = 0, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505a184eac47c82e5c13dd2dd52420cbf89f\">kDefaultPlane</a>, \n\
<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505a86db3fcd02f093aba91aa87457074701\">kDefaultCube</a>\n\
 }<tr class=\"memdesc:a5f45789e2294fc128af5b04595d96505\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default geometry shapes.  <a href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5f45789e2294fc128af5b04595d96505\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:afd786038730d9c301a6b3a489d22d816\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a> () const </td></tr>\n\
<tr class=\"memdesc:afd786038730d9c301a6b3a489d22d816\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">More...</a><br></td></tr>\n\
<tr class=\"separator:afd786038730d9c301a6b3a489d22d816\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4c9bd2dbcef10b245426c34053f7b39e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4c9bd2dbcef10b245426c34053f7b39e\">addDrawProcedure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *drawProcedureptr, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location)</td></tr>\n\
<tr class=\"memdesc:a4c9bd2dbcef10b245426c34053f7b39e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a4c9bd2dbcef10b245426c34053f7b39e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4c9bd2dbcef10b245426c34053f7b39e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a031ed57acc6c5925a174c82e9346f9be\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a031ed57acc6c5925a174c82e9346f9be\">removeDrawProcedure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *drawProcedureptr, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location)</td></tr>\n\
<tr class=\"memdesc:a031ed57acc6c5925a174c82e9346f9be\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a031ed57acc6c5925a174c82e9346f9be\">More...</a><br></td></tr>\n\
<tr class=\"separator:a031ed57acc6c5925a174c82e9346f9be\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aefdbac8a0a098274b95068ba832ea5a4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#aefdbac8a0a098274b95068ba832ea5a4\">insertDrawProcedure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *drawProcedurePtr, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location, unsigned int listIndex, bool moveExistingItem=false)</td></tr>\n\
<tr class=\"memdesc:aefdbac8a0a098274b95068ba832ea5a4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#aefdbac8a0a098274b95068ba832ea5a4\">More...</a><br></td></tr>\n\
<tr class=\"separator:aefdbac8a0a098274b95068ba832ea5a4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a89e10a08f9a069ce72bd37f5c237bbfc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a89e10a08f9a069ce72bd37f5c237bbfc\">getDrawProcedureCount</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location, unsigned int &amp;count) const </td></tr>\n\
<tr class=\"memdesc:a89e10a08f9a069ce72bd37f5c237bbfc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#a89e10a08f9a069ce72bd37f5c237bbfc\">More...</a><br></td></tr>\n\
<tr class=\"separator:a89e10a08f9a069ce72bd37f5c237bbfc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab47e046afeb876ea3796aeb676744472\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ab47e046afeb876ea3796aeb676744472\">getDrawProcedureListNames</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;namesOfProcs) const </td></tr>\n\
<tr class=\"memdesc:ab47e046afeb876ea3796aeb676744472\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#ab47e046afeb876ea3796aeb676744472\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab47e046afeb876ea3796aeb676744472\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adcdd01c00115104687d88fc24434c5ea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#adcdd01c00115104687d88fc24434c5ea\">findDrawProcedure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a> location, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;procName) const </td></tr>\n\
<tr class=\"memdesc:adcdd01c00115104687d88fc24434c5ea\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#adcdd01c00115104687d88fc24434c5ea\">More...</a><br></td></tr>\n\
<tr class=\"separator:adcdd01c00115104687d88fc24434c5ea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afa4f9cf4ae2429c6999089ebaaba38e1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afa4f9cf4ae2429c6999089ebaaba38e1\">makeResourceContextCurrent</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>)</td></tr>\n\
<tr class=\"memdesc:afa4f9cf4ae2429c6999089ebaaba38e1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#afa4f9cf4ae2429c6999089ebaaba38e1\">More...</a><br></td></tr>\n\
<tr class=\"separator:afa4f9cf4ae2429c6999089ebaaba38e1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6d61f7d5ea7404383040833309959bc2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a6d61f7d5ea7404383040833309959bc2\">getBufferSize</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, unsigned int &amp;width, unsigned int &amp;height) const </td></tr>\n\
<tr class=\"memdesc:a6d61f7d5ea7404383040833309959bc2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a6d61f7d5ea7404383040833309959bc2\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6d61f7d5ea7404383040833309959bc2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a37d7ea9beab0d96a6305c8e39f829707\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a37d7ea9beab0d96a6305c8e39f829707\">getColorBufferPixelFormat</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a> &amp;fmt) const </td></tr>\n\
<tr class=\"memdesc:a37d7ea9beab0d96a6305c8e39f829707\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a37d7ea9beab0d96a6305c8e39f829707\">More...</a><br></td></tr>\n\
<tr class=\"separator:a37d7ea9beab0d96a6305c8e39f829707\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4c8bf99bcb6fd5a1fa04b92f801427fe\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4c8bf99bcb6fd5a1fa04b92f801427fe\">getDepthBufferPixelFormat</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a> &amp;fmt) const </td></tr>\n\
<tr class=\"memdesc:a4c8bf99bcb6fd5a1fa04b92f801427fe\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#a4c8bf99bcb6fd5a1fa04b92f801427fe\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4c8bf99bcb6fd5a1fa04b92f801427fe\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c19b7916a9d03278e4e7916f714e0aa\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a7c19b7916a9d03278e4e7916f714e0aa\">getCurrentExposureNumber</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, unsigned int &amp;number) const </td></tr>\n\
<tr class=\"memdesc:a7c19b7916a9d03278e4e7916f714e0aa\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns the current exposure number during rendering.  <a href=\"class_m_hardware_renderer.html#a7c19b7916a9d03278e4e7916f714e0aa\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7c19b7916a9d03278e4e7916f714e0aa\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6e81e2348f06ffbef802813f87b411c3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a6e81e2348f06ffbef802813f87b411c3\">getTotalExposureCount</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, unsigned int &amp;number) const </td></tr>\n\
<tr class=\"memdesc:a6e81e2348f06ffbef802813f87b411c3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns the total number of exposures for rendering a single frame.  <a href=\"class_m_hardware_renderer.html#a6e81e2348f06ffbef802813f87b411c3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6e81e2348f06ffbef802813f87b411c3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aed2ae9dd5fd50debaca541134f1a1dd8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#aed2ae9dd5fd50debaca541134f1a1dd8\">restoreCurrent</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>) const </td></tr>\n\
<tr class=\"memdesc:aed2ae9dd5fd50debaca541134f1a1dd8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_hardware_renderer.html#aed2ae9dd5fd50debaca541134f1a1dd8\">More...</a><br></td></tr>\n\
<tr class=\"separator:aed2ae9dd5fd50debaca541134f1a1dd8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4d85f022b09d72ce1f6a17ad4fa41be4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4d85f022b09d72ce1f6a17ad4fa41be4\">makeSwatchContextCurrent</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, unsigned int &amp;width, unsigned int &amp;height)</td></tr>\n\
<tr class=\"memdesc:a4d85f022b09d72ce1f6a17ad4fa41be4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">The swatch context is a \"scratch\" context which can be used to hardware render an image for swatch display.  <a href=\"class_m_hardware_renderer.html#a4d85f022b09d72ce1f6a17ad4fa41be4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4d85f022b09d72ce1f6a17ad4fa41be4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae2bc38072d14c1b8e1988e1f2ae73066\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae2bc38072d14c1b8e1988e1f2ae73066\">readSwatchContextPixels</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a> &amp;image)</td></tr>\n\
<tr class=\"memdesc:ae2bc38072d14c1b8e1988e1f2ae73066\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Read the contents of the swatch context into an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a>.  <a href=\"class_m_hardware_renderer.html#ae2bc38072d14c1b8e1988e1f2ae73066\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae2bc38072d14c1b8e1988e1f2ae73066\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afb2b5a9604dd4332eab2b9be053b446e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\">referenceDefaultGeometry</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">MHardwareRenderer::GeometricShape</a> geomShape, unsigned int &amp;numberOfData, unsigned int *&amp;pIndexing, unsigned int &amp;indexLength)</td></tr>\n\
<tr class=\"memdesc:afb2b5a9604dd4332eab2b9be053b446e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\">More...</a><br></td></tr>\n\
<tr class=\"separator:afb2b5a9604dd4332eab2b9be053b446e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7038dec27e316897f0daf376faefc2c1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a7038dec27e316897f0daf376faefc2c1\">dereferenceGeometry</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> *pGeomData, unsigned int numberOfData)</td></tr>\n\
<tr class=\"memdesc:a7038dec27e316897f0daf376faefc2c1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a7038dec27e316897f0daf376faefc2c1\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7038dec27e316897f0daf376faefc2c1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1c5dbf2c0a0fc8433f48744a92507116\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a1c5dbf2c0a0fc8433f48744a92507116\">getSwatchOrthoCameraSetting</a> (double &amp;l, double &amp;r, double &amp;b, double &amp;t, double &amp;n, double &amp;f) const </td></tr>\n\
<tr class=\"memdesc:a1c5dbf2c0a0fc8433f48744a92507116\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns an orthographics camera clipping plane values which form the camera viewing volume.  <a href=\"class_m_hardware_renderer.html#a1c5dbf2c0a0fc8433f48744a92507116\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1c5dbf2c0a0fc8433f48744a92507116\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a14d1484740450d30fa540baf31f47a09\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14d1484740450d30fa540baf31f47a09\">getSwatchPerspectiveCameraSetting</a> (double &amp;l, double &amp;r, double &amp;b, double &amp;t, double &amp;n, double &amp;f) const </td></tr>\n\
<tr class=\"memdesc:a14d1484740450d30fa540baf31f47a09\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns a perspective camera clipping plane values which form the camera viewing volume.  <a href=\"class_m_hardware_renderer.html#a14d1484740450d30fa540baf31f47a09\">More...</a><br></td></tr>\n\
<tr class=\"separator:a14d1484740450d30fa540baf31f47a09\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d90b7747c53a7cc49ec2c9cd543fb6e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9d90b7747c53a7cc49ec2c9cd543fb6e\">getSwatchPerspectiveCameraTranslation</a> (float &amp;x, float &amp;y, float &amp;z, float &amp;w) const </td></tr>\n\
<tr class=\"memdesc:a9d90b7747c53a7cc49ec2c9cd543fb6e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns a perspective camera 3D translation values.  <a href=\"class_m_hardware_renderer.html#a9d90b7747c53a7cc49ec2c9cd543fb6e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d90b7747c53a7cc49ec2c9cd543fb6e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4fa0ae8729daf1a0125906fad0fc1704\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4fa0ae8729daf1a0125906fad0fc1704\">getSwatchLightDirection</a> (float &amp;x, float &amp;y, float &amp;z, float &amp;w) const </td></tr>\n\
<tr class=\"memdesc:a4fa0ae8729daf1a0125906fad0fc1704\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns the direction vector of the default directional light used for rendering the swatch.  <a href=\"class_m_hardware_renderer.html#a4fa0ae8729daf1a0125906fad0fc1704\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4fa0ae8729daf1a0125906fad0fc1704\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4fd995524f4d62ca22bee3f1b1249941\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4fd995524f4d62ca22bee3f1b1249941\">drawSwatchBackGroundQuads</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> &amp;quadColor=kDefaultQuadColor, bool textured=false, unsigned int numberOfRepeats=8) const </td></tr>\n\
<tr class=\"memdesc:a4fd995524f4d62ca22bee3f1b1249941\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This draws a set of quads in a checkboard pattern.  <a href=\"class_m_hardware_renderer.html#a4fd995524f4d62ca22bee3f1b1249941\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4fd995524f4d62ca22bee3f1b1249941\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae661000714d15915ccc58949842f4c57\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">glFunctionTable</a> () const </td></tr>\n\
<tr class=\"memdesc:ae661000714d15915ccc58949842f4c57\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae661000714d15915ccc58949842f4c57\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a93fef222f7278c123e8df750f7f0ea5b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a93fef222f7278c123e8df750f7f0ea5b\">theRenderer</a> ()</td></tr>\n\
<tr class=\"memdesc:a93fef222f7278c123e8df750f7f0ea5b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2019.0</b>  <a href=\"class_m_hardware_renderer.html#a93fef222f7278c123e8df750f7f0ea5b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a93fef222f7278c123e8df750f7f0ea5b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Static hardware renderer interface class. </p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\" title=\"Static hardware renderer interface class. \">MHardwareRenderer</a> is an interface class which wraps the hardware renderer. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/cg_fx_2cgfx_shader_node_8cpp-example.html#_a61\">cgFx/cgfxShaderNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/cg_fx_2plugin_main_8cpp-example.html#_a12\">cgFx/pluginMain.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_g_l_f_t_8cpp-example.html#_a1\">gpuCache/gpuCacheGLFT.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#_a153\">hlslShader/hlslShader.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/lens_distortion_callback_2lens_distortion_callback_8cpp-example.html#_a20\">lensDistortionCallback/lensDistortionCallback.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Member Enumeration Documentation</h2>\n\
<a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">enum <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">DrawProcedureStatusCode</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Draw Procedure status codes. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcbaf0536797208144380691e2b376ffc1d1\"></a>kSuccess&#160;</td><td class=\"fielddoc\">\n\
<p>Success. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcba1ef6c2d725fb4bec3e7e840d28adbc00\"></a>kFailure&#160;</td><td class=\"fielddoc\">\n\
<p>Failure. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcba7823f63b4ae266c9228d1500c092bc5b\"></a>kItemExists&#160;</td><td class=\"fielddoc\">\n\
<p>Item already exists. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcba77eab2acb2adbeedf84913f2710415fa\"></a>kItemNotFound&#160;</td><td class=\"fielddoc\">\n\
<p>Item is not found. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a14dafbca9ec0aa5132598b888511bfcba49d8dfecd6243dbdef99a52a37391060\"></a>kLocationNotFound&#160;</td><td class=\"fielddoc\">\n\
<p>Location not found. </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9e9dd2b7e61c97fa71a280792980f7da\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">enum <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Specify the pixel format of the current buffer. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a9e9dd2b7e61c97fa71a280792980f7daa3f2006edd7ae9e9783a9e850c2ef2963\"></a>kRGBA_Fix8&#160;</td><td class=\"fielddoc\">\n\
<p>8 bit Red, Green, Blue, and Alpha channel </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a9e9dd2b7e61c97fa71a280792980f7daad2a6f3e6707b26d54e5bf286461a4bd5\"></a>kRGBA_Float16&#160;</td><td class=\"fielddoc\">\n\
<p>16 bit Red, Green, Blue, and Alpha channel </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a9e9dd2b7e61c97fa71a280792980f7daa52cb1c770ac21ced7dddffe18b5f3a36\"></a>kDepth_Float32&#160;</td><td class=\"fielddoc\">\n\
<p>32 bit floating point depth buffer </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0526f0a40dc8240e14bfb22ebf93d986\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">enum <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Draw Procedure call locations. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a0526f0a40dc8240e14bfb22ebf93d986aef844aa5884692f98da12f4b6498b98f\"></a>kPreRendering&#160;</td><td class=\"fielddoc\">\n\
<p>Before rendering one frame. No model or view matrices. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a0526f0a40dc8240e14bfb22ebf93d986a6742f06270edc03dc6e4fab458575a65\"></a>kPreExposure&#160;</td><td class=\"fielddoc\">\n\
<p>Before rendering one \"exposure\". </p>\n\
<p>If multiple exposures are are required to render one frame. After the frame buffer is cleared and model and view matrices are set up for the current exposure. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a0526f0a40dc8240e14bfb22ebf93d986aa719507f97eea20e5fce2da8660fdeac\"></a>kPostExposure&#160;</td><td class=\"fielddoc\">\n\
<p>After rendering one \"exposure\". </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a0526f0a40dc8240e14bfb22ebf93d986a40faa5492f345487e604f7fd7196f019\"></a>kPostRendering&#160;</td><td class=\"fielddoc\">\n\
<p>After rendering one frame. Before a possible fame buffer swap. </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5f45789e2294fc128af5b04595d96505\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">enum <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">GeometricShape</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Default geometry shapes. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a5f45789e2294fc128af5b04595d96505acb4a5f68a3b6cd8c05b1dc9c5a487c88\"></a>kDefaultSphere&#160;</td><td class=\"fielddoc\">\n\
<p>Sphere with radius 1, centered at 0,0,0. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a5f45789e2294fc128af5b04595d96505a184eac47c82e5c13dd2dd52420cbf89f\"></a>kDefaultPlane&#160;</td><td class=\"fielddoc\">\n\
<p>Plane with width and height of 1, centered at 0,0,0. </p>\n\
<p>Assuming \"Y-Up\" orientation: width = x-axis, and height = y-axis. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><a class=\"anchor\" id=\"a5f45789e2294fc128af5b04595d96505a86db3fcd02f093aba91aa87457074701\"></a>kDefaultCube&#160;</td><td class=\"fielddoc\">\n\
<p>Cube with width, height and depth of 1, centered at 0,0,0. </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a93fef222f7278c123e8df750f7f0ea5b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> * theRenderer </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000119\">Deprecated:</a></b></dt><dd>Use the Viewport 2.0 device independent MHWRender interfaces instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000109\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/cg_fx_2cgfx_shader_node_8cpp-example.html#a62\">cgFx/cgfxShaderNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/cg_fx_2plugin_main_8cpp-example.html#a13\">cgFx/pluginMain.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a111\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_g_l_f_t_8cpp-example.html#a2\">gpuCache/gpuCacheGLFT.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a154\">hlslShader/hlslShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/lens_distortion_callback_2lens_distortion_callback_8cpp-example.html#a21\">lensDistortionCallback/lensDistortionCallback.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a12\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afd786038730d9c301a6b3a489d22d816\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; backEndString </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Returns a string identifying the current \"backend\" being used.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000120\">Deprecated:</a></b></dt><dd>Use the Viewport 2.0 backend independent MHWRender interfaces instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000110\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>A backend represents a drawing API. Currently the only backend supported natively is OpenGL.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to a <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\" title=\"Static hardware renderer interface class. \">MHardwareRenderer</a>. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a155\">hlslShader/hlslShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4c9bd2dbcef10b245426c34053f7b39e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">MHardwareRenderer::DrawProcedureStatusCode</a> addDrawProcedure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>drawProcedurePtr</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Add a drawing procedure to the renderer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000121\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000111\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>For a given render location, each procedure in a procedure list must have a unique string name. Instances of the a draw procedure procedure with different string names is allowed.</p>\n\
<p>When attempting to add a procedure, if an existing procedure with the same name already exists in the procedure list to added to, then the addition will fail. An appropriate error code will be returned (kItemExists).</p>\n\
<p>If the list cannot be found then (kLocationNotFound) is returned.</p>\n\
<p>If the procedure is added, then success (kSuccess) will be returned. If the function fails for any other reason, then a failure code will be returned (kFailure).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">drawProcedurePtr</td><td>Pointer to a draw procedure </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li><b>DrawProcedureStatusCode</b> : kSuccess, kFailure, kItemExists, or kLocationNotFound. if item already exists. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a031ed57acc6c5925a174c82e9346f9be\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">MHardwareRenderer::DrawProcedureStatusCode</a> removeDrawProcedure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>drawProcedurePtr</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Remove a drawing procedure to the renderer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000122\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000112\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>The procedure to remove is searched for based on procedure name. If a procedure with the given name is not found then an appropriate error code will be returned (kItemNotFound).</p>\n\
<p>If the render location list does not exist then (kLocationNotFound) will be returned.</p>\n\
<p>If the procedure is removed, then success (kSuccess) will be returned. If the function fails for any other reason, then a failure code (kFailure) will be returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">drawProcedurePtr</td><td>Pointer to a draw procedure. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li><b>DrawProcedureStatusCode</b> : kSuccess, kFailure, kItemNotFound, or kLocationNotFound. if item cannot be found. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aefdbac8a0a098274b95068ba832ea5a4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">MHardwareRenderer::DrawProcedureStatusCode</a> insertDrawProcedure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>drawProcedurePtr</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>listIndex</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>moveExistingItem</em> = <code>false</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>Insert a drawing procedure to a list of procedures at a specific index location in the list.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000123\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000021\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>For a given render location, each procedure in a procedure list must have a unique string name. Instances of the a draw procedure procedure with different string names is allowed.</p>\n\
<p><b>Note that all procedure lists use 0 based indexing.</b></p>\n\
<p>If an index is used which is beyond the end of the list, the item will be appended as the last item in the list.</p>\n\
<p>When attempting to insert a procedure, if an existing procedure with the same name already exists in the procedure list to insert to, then two possible things can occur:</p>\n\
<ul>\n\
<li>If the flag to move the item is set to \"false\", then the insertion will fail. An appropriate error code will be returned (kItemExists). </li>\n\
<li>If the flag to move the item is set to \"true\", then instead of failure, the method will attempt to move the existing item from it\'s current index location to the requested index location (listIndex).</li>\n\
</ul>\n\
<p>If the list cannot be found then (kLocationNotFound) is returned.</p>\n\
<p>If the procedure is inserted, then success (kSuccess) will be returned. If the function fails for any other reason, then a failure code will be returned (kFailure).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">drawProcedurePtr</td><td>Pointer to a draw procedure </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">listIndex</td><td>Desired index position within the procedure list. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">moveExistingItem</td><td>Move the procedure if it already exists in the list. The default value for this method argument is \"false\".</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li><b>DrawProcedureStatusCode</b> : kSuccess, kFailure, kItemExists, or kLocationNotFound. if item already exists. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a89e10a08f9a069ce72bd37f5c237bbfc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">MHardwareRenderer::DrawProcedureStatusCode</a> getDrawProcedureCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>count</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>Find the length of the procedure list for a given render location.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000124\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000022\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>If the list cannot be found then (kLocationNotFound) is returned. If the count can be successfully determined then (kSuccess) will be returned. If the function fails for any other reason, then a failure code will be returned (kFailure).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">count</td><td>Reference to the list count. This value is returned. If the function fails for any reason, then a value of 0 is returned.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li><b>DrawProcedureStatusCode</b> : kSuccess, kFailure, or kLocationNotFound. if item already exists. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab47e046afeb876ea3796aeb676744472\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a14dafbca9ec0aa5132598b888511bfcb\">MHardwareRenderer::DrawProcedureStatusCode</a> getDrawProcedureListNames </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>namesOfProcs</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>Get the names of drawing procedures for a given procedure list at a given render location.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000125\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000023\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>If the list cannot be found then (kLocationNotFound) is returned. If the list can be successfully determined then (kSuccess) will be returned. If the function fails for any other reason, then a failure code will be returned (kFailure).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location. </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">namesOfProcs</td><td>Reference to a string array. This array will be modified to return the list of names. If the function fails for any reason, the array will not be modified.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li><b>DrawProcedureStatusCode</b> : kSuccess, kFailure, or kLocationNotFound. if item already exists. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adcdd01c00115104687d88fc24434c5ea\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\">MDrawProcedureBase</a> * findDrawProcedure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a0526f0a40dc8240e14bfb22ebf93d986\">CallLocation</a>&#160;</td>\n\
          <td class=\"paramname\"><em>location</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>procName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>Find a drawing procedure instance with a specific name within a procedure list at a given render location.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000126\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a> instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000024\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>If the item can be successfully found then a pointer to the procedure will be returned. Otherwise a null (0) pointer will be returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">location</td><td>Render location. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">procName</td><td>Name of a specific draw procedure to find.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to a <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_draw_procedure_base.html\" title=\"This class provides an interface through which a plug-in can be writen to implement a class to provid...\">MDrawProcedureBase</a>. null is returned if not found. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afa4f9cf4ae2429c6999089ebaaba38e1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> makeResourceContextCurrent </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Make the hardware renderer\'s \"resource context\" current.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000127\">Deprecated:</a></b></dt><dd>Use the Viewport 2.0 device independent MHWRender interfaces instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000113\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>The \"resource context\" is used by the hardware renderer for sharing drawing resources such as hardware textures, geometry and shader programs. In fact all resources in the resource context are shared by all other Maya defined 3d contexts.</p>\n\
<p>Note that this applies to interactive 3d viewports as well as the hardware renderer. This does not apply to non 3d contexts such as the timeline, or range slider.</p>\n\
<p>Advantages of allowing the setting the resource context include:</p>\n\
<ul>\n\
<li>Non-Maya defined resources can be bound to the resource context and also shared. </li>\n\
<li>The API writer can bind resources without depending on existence 3d viewports or hardware renderer contexts. </li>\n\
<li>There is an available context in both interactive and batch.</li>\n\
</ul>\n\
<p>Basically this means that resources can be managed at any time one Maya has been initialized.</p>\n\
<p><b>Example</b> : This call can be made so that resources can be created and bound to a Maya context during loading of a scene file, as it is unknown what the current drawable context is at this time. This can be useful when writing a hardware shader plugin as it frees the API writer from depending on having to be in one of the 3d draw routines in order to access a context.</p>\n\
<p>Note that if the hardware renderer has already specified a context for drawing into, then invoking this call will have no effect as it is not necessary to switch contexts to manage resources. To reiterate, any resource managed for the drawing context will be shared by the resource context.</p>\n\
<p>If the hardware renderer is not supported, then no resource context will exist and this call will fail. If the hardware renderer has not been initialized yet then this call will also fail. This should only occur if this call is attempted before Maya has been initialized.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6d61f7d5ea7404383040833309959bc2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> getBufferSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>width</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>height</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>This method returns the size of the current buffer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000128\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\" title=\"An instance of a render target that may be used with Viewport 2.0. \">MHWRender::MRenderTarget</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_description.html\" title=\"Class which provides a description of a hardware render target The name is the unique identifier for ...\">MHWRender::MRenderTargetDescription</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000114\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">width</td><td>The reference to the width value of the buffer. If the function fails for any reason, the value will not be modified. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">height</td><td>The reference to the height value of the buffer. If the function fails for any reason, the value will not be modified.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a37d7ea9beab0d96a6305c8e39f829707\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> getColorBufferPixelFormat </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>fmt</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>This method returns the pixel format of the current color buffer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000129\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\" title=\"An instance of a render target that may be used with Viewport 2.0. \">MHWRender::MRenderTarget</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_description.html\" title=\"Class which provides a description of a hardware render target The name is the unique identifier for ...\">MHWRender::MRenderTargetDescription</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000115\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">fmt</td><td>The reference to the pixel format value of the buffer. If the function fails for any reason, the value will not be modified.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4c8bf99bcb6fd5a1fa04b92f801427fe\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> getDepthBufferPixelFormat </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a9e9dd2b7e61c97fa71a280792980f7da\">BufferPixelFormat</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>fmt</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>This method returns the pixel format of the current depth buffer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000130\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\" title=\"An instance of a render target that may be used with Viewport 2.0. \">MHWRender::MRenderTarget</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_description.html\" title=\"Class which provides a description of a hardware render target The name is the unique identifier for ...\">MHWRender::MRenderTargetDescription</a> instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000025\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">fmt</td><td>The reference to the pixel format value of the buffer If the function fails for any reason, the value will not be modified.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7c19b7916a9d03278e4e7916f714e0aa\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> getCurrentExposureNumber </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>number</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns the current exposure number during rendering. </p>\n\
<p>If the renderer is not currently rendering a value of 0 is returned as the current exposure number.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">number</td><td>Current exposure number</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6e81e2348f06ffbef802813f87b411c3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> getTotalExposureCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>number</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns the total number of exposures for rendering a single frame. </p>\n\
<p>If the renderer is not currently rendering a value of 0 is returned as the total exposure count.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">number</td><td>Total exposure count.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aed2ae9dd5fd50debaca541134f1a1dd8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> restoreCurrent </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<p>This method restores the current context to the one that the HWrenderer is using.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000131\">Deprecated:</a></b></dt><dd>Use the Viewport 2.0 device independent MHWRender interfaces instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000026\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4d85f022b09d72ce1f6a17ad4fa41be4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> makeSwatchContextCurrent </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>desiredWidth</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>desiredHeight</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>The swatch context is a \"scratch\" context which can be used to hardware render an image for swatch display. </p>\n\
<p>The swatch context has the following pixel format:</p>\n\
<ul>\n\
<li>Color : 24 bit RGBA (red, green, blue, alpha) format, with 8 bits precision per channel. </li>\n\
<li>Stencil : 8 bit precision. </li>\n\
<li>Depth : 24 bit fixed point integer precison .</li>\n\
</ul>\n\
<p>The maximum context size is 512 by 512, and the minimum size : 64 by 64. The actual maximum size is dependent on the video card and available memory resources.</p>\n\
<p>This method makes the swatch context \"current\", and should be called before attempting to draw anything for swatch rendering.</p>\n\
<p>The desired image width and height represents the desired viewport size to render. These values will be clamped between the minimum and maximum values of the swatch context.</p>\n\
<p>If for any reason the swatch context cannot be made current, <b>no rendering should be performed as the destination of the rendering is undefined</b>.</p>\n\
<p><b>This method should never be called while in the middle of drawing to another context (e.g. during <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a495a60eaa1df3815d5565e79e08c90ac\" title=\"Deprecated in 2016.0 \">MPxHwShaderNode::glGeometry()</a>) as draw calls will be redirected to the swatch context.</b></p>\n\
<p>e.g. Refer to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a765f8d7c0499e87180ff884b6967550e\" title=\"If the shader specifies to override swatch rendering, then this method must be overridden in order to...\">MPxHwShaderNode::renderSwatchImage()</a> for swatch rendering for hardware shaders for more details on the usage of this method.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">desiredWidth</td><td>The desired width of the image to render. The dimensions of the context may differ. The size is clamped to be within the minimum and maximum context dimensions. </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">desiredHeight</td><td>The desired height of the image to render. The dimensions of the context may differ. The size is clamped to be within the minimum and maximum context dimensions.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a160\">hlslShader/hlslShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae2bc38072d14c1b8e1988e1f2ae73066\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> readSwatchContextPixels </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>backEndString</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>image</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Read the contents of the swatch context into an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a>. </p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a> is assumed to be of the correct pixel format (24-bit RGBA, with 8-bits per channel). <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a> is assumed to also have pre-allocated the correct amount of data as this routine will copy the swatch context contents directly into the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a>.</p>\n\
<p>If the swatch context is not available for any reason, or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a> has not been properly set up, then a failure condition will be returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">backEndString</td><td>Backend string. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">image</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_image.html\" title=\"Image manipulation. \">MImage</a> with properly allocated block of pixels.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code <ul>\n\
<li><b>MS::kSuccess</b> The method was successful. </li>\n\
<li><b>MS::kFailure</b> An error has occurred. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a167\">hlslShader/hlslShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afb2b5a9604dd4332eab2b9be053b446e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> * referenceDefaultGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">MHardwareRenderer::GeometricShape</a>&#160;</td>\n\
          <td class=\"paramname\"><em>geomShape</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>numberOfData</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int *&amp;&#160;</td>\n\
          <td class=\"paramname\"><em>pIndexing</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>indexLength</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Obtain a reference to geometry for some \"default\" shapes maintained by the hardware renderer.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000132\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#ac0ef7cdb96768bdde887e4720419ee62\" title=\"Acquire reference geometry with required buffers. \">MHWRender::MGeometryUtilities::acquireReferenceGeometry()</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000116\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>All data can be assumed to be \"read-only\", as <b>the data is not owned by the caller</b>.</p>\n\
<p>To maintain proper reference counting of internal data, the user <b>must</b> \"deference\" the data when no longer using it via the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a7038dec27e316897f0daf376faefc2c1\" title=\"Deprecated in 2019.0 \">MHardwareRenderer::dereferenceGeometry()</a>. It is recommended to immediately dereference the data after each use. There negligable overhead to reference and dereference data in this manner.</p>\n\
<p>Available default shapes include:</p>\n\
<ul>\n\
<li><b>A polygonal sphere</b> : Sphere has radius of 1 and is centered at the origin (0,0,0) in object space. </li>\n\
<li><b>A polygonal cube</b> : Cube has dimensions of 1 and is centered at the origin (0,0,0) in object space. </li>\n\
<li><b>A polygonal plane</b> : Plane has dimensions of 1 is centered at the origin (0,0,0) in object space. Assuming \"Y-Up\" orientation, the width is the along the x-axis and the height is along the y-axis.</li>\n\
</ul>\n\
<p>Example usage taken from the provided hwPhngShader sample devkit plugin: </p><div class=\"fragment\"><div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numberOfData = 0; <span class=\"comment\">// Attribute count</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *pIndexing = 0; <span class=\"comment\">// Attribute indexing</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> indexCount = 0; <span class=\"comment\">// Length of indexing array</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Geometry shape to obtain</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> mGeometryShape = &lt;user input&gt;;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">MHardwareRenderer::GeometricShape</a> gshape = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505acb4a5f68a3b6cd8c05b1dc9c5a487c88\">MHardwareRenderer::kDefaultSphere</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mGeometryShape == 2)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        gshape = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505a86db3fcd02f093aba91aa87457074701\">MHardwareRenderer::kDefaultCube</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (mGeometryShape == 3)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        gshape = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505a184eac47c82e5c13dd2dd52420cbf89f\">MHardwareRenderer::kDefaultPlane</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// *** Obtain data references</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> * pGeomData =</div>\n\
<div class=\"line\">        pRenderer-&gt;referenceDefaultGeometry( gshape, numberOfData, pIndexing, indexCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw default data</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pGeomData)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPushClientAttrib ( GL_CLIENT_VERTEX_ARRAY_BIT );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *vertexData = (<span class=\"keywordtype\">float</span> *)( pGeomData[0].data() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (vertexData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState( GL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">            glVertexPointer ( 3, GL_FLOAT, 0, vertexData );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *normalData = (<span class=\"keywordtype\">float</span> *)( pGeomData[1].data() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (normalData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState( GL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">            glNormalPointer (    GL_FLOAT, 0, normalData );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (vertexData &amp;&amp; normalData &amp;&amp; pIndexing )</div>\n\
<div class=\"line\">            glDrawElements ( GL_TRIANGLES, indexCount, GL_UNSIGNED_INT, pIndexing );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopClientAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// *** Release data references after usage.</span></div>\n\
<div class=\"line\">        pRenderer-&gt;dereferenceGeometry( pGeomData, numberOfData );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --><dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">geomShape</td><td>Desired geometry shape. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">numberOfData</td><td>Number of geometry data attributes returned. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">pIndexing</td><td>Reference to an indexing array used to access attribute data. This value is modified and returned if the routine is successful. Indexing can be assumed to be for representing triangles. That is each 3-tuple index can be used to access 1 triangle in the attribute data. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">indexLength</td><td>Length of the indexing array.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A pointer to an array of geometric data attributes (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\" title=\"This class allows storage of arbitrary data which is formated to be specifically suitable for usage u...\">MGeometryData</a>). Currently four attributes are returned. In array order they are: position, normal, texture coordinates, tangents, and binormals. It can be assumed that all data is float such that:</dd></dl>\n\
<ul>\n\
<li>Positions are 3 float (x,y,z) positions </li>\n\
<li>Normals are 3 float (x,y,z) vectors. </li>\n\
<li>Texture coordinates are 2 float (u,v) tuples. </li>\n\
<li>Tangents are 3 float (x,y,z) vectors. </li>\n\
<li>Binormals are 3 float (x,y,z) vectors. </li>\n\
</ul>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7038dec27e316897f0daf376faefc2c1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> dereferenceGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>pGeomData</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>numberOfData</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>This is the companion method to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\" title=\"Deprecated in 2019.0 \">MHardwareRenderer::referenceDefaultGeometry()</a> and must always be called immediate after usage of data supplied by the reference call.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000133\">Deprecated:</a></b></dt><dd>Use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#ab050d473690fac85ffa49ebea3aef7ff\" title=\"Release a generated reference geometry. \">MHWRender::MGeometryUtilities::releaseReferenceGeometry()</a> instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000117\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<p>This call simply maintains proper internal state for any data used.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">pGeomData</td><td>The geometry data returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\" title=\"Deprecated in 2019.0 \">referenceDefaultGeometry()</a>. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">numberOfData</td><td>Data count returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\" title=\"Deprecated in 2019.0 \">referenceDefaultGeometry()</a> </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1c5dbf2c0a0fc8433f48744a92507116\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void getSwatchOrthoCameraSetting </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>l</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>r</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>b</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>t</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>n</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>f</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns an orthographics camera clipping plane values which form the camera viewing volume. </p>\n\
<p>These values are the default values used for rendering the swatch.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">l</td><td>The left side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">r</td><td>The right side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">b</td><td>The bottom side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">t</td><td>The top side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">n</td><td>The near side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">f</td><td>The far side clipping plane </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a14d1484740450d30fa540baf31f47a09\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void getSwatchPerspectiveCameraSetting </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>l</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>r</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>b</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>t</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>n</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">double &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>f</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns a perspective camera clipping plane values which form the camera viewing volume. </p>\n\
<p>These values are the default values used for rendering the swatch.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">l</td><td>The left side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">r</td><td>The right side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">b</td><td>The bottom side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">t</td><td>The top side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">n</td><td>The near side clipping plane </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">f</td><td>The far side clipping plane </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a163\">hlslShader/hlslShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9d90b7747c53a7cc49ec2c9cd543fb6e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void getSwatchPerspectiveCameraTranslation </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>x</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>y</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>z</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns a perspective camera 3D translation values. </p>\n\
<p>These are the default values used for rendering the swatch.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">x</td><td>The value for the x coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">y</td><td>The value for the y coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">z</td><td>The value for the z coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">w</td><td>The value for the w coord component </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4fa0ae8729daf1a0125906fad0fc1704\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void getSwatchLightDirection </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>x</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>y</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>z</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">float &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns the direction vector of the default directional light used for rendering the swatch. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">x</td><td>The value for the x coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">y</td><td>The value for the y coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">z</td><td>The value for the z coord component </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">w</td><td>The value for the w coord component </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hlsl_shader_2hlsl_shader_8cpp-example.html#a162\">hlslShader/hlslShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4fd995524f4d62ca22bee3f1b1249941\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void drawSwatchBackGroundQuads </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>quadColor</em> = <code>kDefaultQuadColor</code>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>textured</em> = <code>false</code>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>numberOfRepeats</em> = <code>8</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This draws a set of quads in a checkboard pattern. </p>\n\
<p>Areas that are not drawn will have the background color show through.</p>\n\
<p>By default the checker repeat is 8, but can be overridden by the user.</p>\n\
<p>By default the quad colour is opaque grey, but can be overridden by the user.</p>\n\
<p>By default the quads are not drawn textured. This can be overridden by the user.</p>\n\
<p>The quads will completely cover the entire background.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">quadColor</td><td>The value for the quad color. Default is RGBA(0.5,0.5,0.5,1.0); </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">textured</td><td>Whether to draw with texture coordinates. Default is false. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">numberOfRepeats</td><td>Number of checkerboard repeats. Default is 8. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae661000714d15915ccc58949842f4c57\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a> * glFunctionTable </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2019.0</b> </p>\n\
<p>Get a pointer to a OpenGL function table class.</p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000134\">Deprecated:</a></b></dt><dd>Use the Viewport 2.0 device independent MHWRender interfaces instead.</dd></dl>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000118\">2019.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the function table class. This may be null, if the renderer could not be initialized properly. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a112\">dx11Shader/dx11Shader.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a13\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MHardwareRenderer.h</li>\n\
<li>MHardwareRenderer.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";