var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: cgFx/pluginMain.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'cg_fx_2plugin_main_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: cgFx/pluginMain.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">cgFx/pluginMain.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (C) 2002-2004 NVIDIA</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// File: pluginMain.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Author: Jim Atkinson</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Changes:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  10/2003  Kurt Harriman - www.octopusgraphics.com +1-415-893-1023</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - &quot;-pluginPath/pp&quot; flag of cgfxShader command returns the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             full path of the &quot;cgfxShader&quot; subdirectory beneath the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             directory from which the plug-in binary was loaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             Supporting files such as MEL scripts can be loaded from</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             this directory to avoid inadvertently picking up wrong</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             versions from random directories on the search path.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - The plug-in executes the cgfxShader_initUI.mel script</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             from this directory at the time the plug-in is loaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - The MEL command `pluginInfo -q -version cgfxShader`</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             returns the plug-in version and cgfxShaderNode.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             compile date.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  11/2003  Kurt Harriman - www.octopusgraphics.com +1-415-893-1023</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - To load or reload a CgFX file, use the cgfxShader command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             &quot;-fx/fxFile &lt;filename&gt;&quot; flag.  Setting the cgfxShader</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             node&#39;s &quot;s/shader&quot; attribute no longer loads the file.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// PLUG-IN DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// CgFx Shader (Windows-only)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The plug-in is named &quot;cgfxShader.mll&quot;. It defines one node named &quot;cgfxShader&quot; and</span></div>\n\
<div class=\"line\"><span class=\"comment\">// one command, which is also named &quot;cgfxShader&quot;. The command is used to manipulate the node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This is very similar to the expression command and node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The &quot;cgfxShader&quot; node is a hardware shader (derived from MPxHwShaderNode).</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// By default, the shader or &quot;s&quot; attribute is the only thing visible on a &quot;cgfxShader&quot; node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// You can set this attribute to the name of a .fx file and many interesting effects can occur.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// A .fx file holds CgFX effect definitions. This effect completely controls how the drawing is done.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Therefore, if you load a different .fx file, you get a completely different effect on the screen.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// In theory, the &quot;cgfxShader&quot; node can do anything that any other hardware shader node can do.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Along with the effect, the CgFX file provides a set of parameters that can be modified to change</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the effect in controlled ways. For example, a glow effect might allow you to set the color, intensity,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// and size of the glow. A bumpy, shiny effect might allow you to change the bump texture map.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All of these parameters are exposed as dynamic attributes on the shader node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// If the effect has a &quot;glowColor&quot; parameter, the &quot;cgfxShader&quot; node will have a dynamic color attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">// named &quot;glowColor&quot;. Changes to the attribute affect the parameter.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// You can specify the .fx file using the Attribute Editor or &quot;cgfxShader&quot; command. All the dynamic attributes</span></div>\n\
<div class=\"line\"><span class=\"comment\">// that no longer apply are removed and all the attributes that are needed by the new effect are added.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// You can see all the changes in the Attribute Editor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The syntax of the command is:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// cgfxShader [-e] [-fx fileName] [-n name] [nodeName]</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -e</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Edit an existing shader. If -e is not specified, a new &quot;cgfxShader&quot; node is created.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -fx filename</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Set the .fx file for the &quot;cgfxShader&quot; node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -n name </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Sets the name of the shader node to create (create only).</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  nodeName</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  The name of the node to edit. You do not need to specify this if the shader node is currently selected. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// The easiest way to use the shaders is through the Hypershade window. Load the plug-in before opening the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// HyperShade window and then select Create &gt; Material &gt; Cgfx Shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// You can then simply drag the material onto a shape to assign it.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Please note that the legacy viewport implementation is provided for backwards compatibility only. It uses</span></div>\n\
<div class=\"line\"><span class=\"comment\">// deprecated Maya API methods and should not be used as an example for implementing custom new</span></div>\n\
<div class=\"line\"><span class=\"comment\">// MPxHwShaderNode plugins.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxShaderCommon.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxShaderNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxProfile.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxShaderCmd.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxTextureCache.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxVector.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSceneMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MNodeMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFileIO.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDependencyNodes.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDGMessage.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_SWATCH_RENDERING_SUPPORTED_)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;maya/MHWShaderSwatchGenerator.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;maya/MHardwareRenderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// viewport 2.0</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// callbackIds is an array of callback identifiers which need to be</span></div>\n\
<div class=\"line\"><span class=\"comment\">// cancelled when the plug-in is unloaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html\">MCallbackIdArray</a> callbackIdArray;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> cgfxShaderFileSaveCB(<span class=\"keywordtype\">void</span>* clientData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      this method is called when the plug-in is loaded into Maya.  It</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      registers all of the services that this plug-in provides with</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      obj - a handle to the plug-in object (use MFnPlugin to access it)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>   sVer = cgfxShaderNode::getPluginVersion();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_SWATCH_RENDERING_SUPPORTED_)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Allow an environment variable to override usage of swatch rendering.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the environment variable to a value other than 0 for it to take effect.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *cgfxEnvVar = getenv(<span class=\"stringliteral\">&quot;CGFX_SWATCH_RENDERING&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( <span class=\"stringliteral\">&quot;shader/surface/utility:drawdb/shader/surface/cgfxShader&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Don&#39;t initialize swatches in batch mode</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#ac7296da94b1d0b659833fc653a6af10e\">MGlobal::mayaState</a>() != <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#afb0008b4212928b7913ba9cfc64fe88ba347100316aff63bf166232d8145a44f6\">MGlobal::kBatch</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; swatchName = <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_shader_swatch_generator.html#acf0030e7f24277ad6805a14be529539f\">MHWShaderSwatchGenerator::initialize</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!cgfxEnvVar)</div>\n\
<div class=\"line\">            UserClassify = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( <span class=\"stringliteral\">&quot;shader/surface/utility/:drawdb/shader/surface/cgfxShader:swatch/&quot;</span>+swatchName );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( 0 != strcmp(cgfxEnvVar,<span class=\"stringliteral\">&quot;0&quot;</span>) )</div>\n\
<div class=\"line\">                UserClassify = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( <span class=\"stringliteral\">&quot;shader/surface/utility/:drawdb/shader/surface/cgfxShader:swatch/&quot;</span>+swatchName );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( cgfxEnvVar &amp;&amp; ( 0 != strcmp(cgfxEnvVar,<span class=\"stringliteral\">&quot;0&quot;</span>) ) )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            UserClassify = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( <span class=\"stringliteral\">&quot;shader/surface/utility/:drawdb/shader/surface/cgfxShader:swatch/&quot;</span>+swatchName );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;shader/surface/utility:drawdb/shader/surface/cgfxShader&quot;</span> );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, <span class=\"stringliteral\">&quot;NVIDIA&quot;</span>, sVer.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), MApiVersion );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register/initialize localized string resources</span></div>\n\
<div class=\"line\">    <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerUIStrings(NULL,</div>\n\
<div class=\"line\">                   <span class=\"stringliteral\">&quot;cgfxShaderPluginInitStrings&quot;</span> ));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_SWATCH_RENDERING_SUPPORTED_)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// The following code is only used on Maya versions 7.0 and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// later.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#ac7296da94b1d0b659833fc653a6af10e\">MGlobal::mayaState</a>() == <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#afb0008b4212928b7913ba9cfc64fe88bafd5ecc6725f6695a70a949747cf89546\">MGlobal::kInteractive</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Deprecated Methods: MHardwareRenderer::theRenderer(), pRenderer-&gt;backEndString()</span></div>\n\
<div class=\"line\">            _OPENMAYA_DEPRECATION_PUSH_AND_DISABLE_WARNING</div>\n\
<div class=\"line\">            <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> *pRenderer = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a93fef222f7278c123e8df750f7f0ea5b\">MHardwareRenderer::theRenderer</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pRenderer) {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; backEndStr = pRenderer-&gt;backEndString();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> width = 64, height = 64;</div>\n\
<div class=\"line\">                status = pRenderer-&gt;makeSwatchContextCurrent( backEndStr,</div>\n\
<div class=\"line\">                    width,</div>\n\
<div class=\"line\">                    height );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (status != <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">                <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Unqualified video card : Offscreen contexts not supported. CgFx plugin will not be loaded.&quot;</span>));</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            _OPENMAYA_POP_WARNING</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#error &quot;CgFx requires the Maya version 7 or greater&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgfxTextureCache::initialize();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Create Cg Context &amp; register the Cg error callback</span></div>\n\
<div class=\"line\">    cgfxShaderNode::sCgContext = cgCreateContext();</div>\n\
<div class=\"line\">    cgSetErrorCallback(cgfxShaderNode::cgErrorCallBack);</div>\n\
<div class=\"line\">    cgSetErrorHandler(cgfxShaderNode::cgErrorHandler, 0);</div>\n\
<div class=\"line\">    cgGLRegisterStates(cgfxShaderNode::sCgContext);</div>\n\
<div class=\"line\">    cgGLSetManageTextureParameters(cgfxShaderNode::sCgContext, CG_TRUE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgSetAutoCompile(cgfxShaderNode::sCgContext, CG_COMPILE_LAZY);      </div>\n\
<div class=\"line\">    cgSetLockingPolicy(CG_NO_LOCKS_POLICY);</div>\n\
<div class=\"line\">    cgGLSetDebugMode(CG_FALSE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgfxProfile::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cgfxProfile::getBestProfile() == NULL) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;No supported Cg profiles were found. CgFx plugin will not be loaded.&quot;</span>)</div>\n\
<div class=\"line\">        );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">      <span class=\"comment\">// display banner</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">      s += sVer;</div>\n\
<div class=\"line\">      <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(s);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerNode(<span class=\"stringliteral\">&quot;cgfxShader&quot;</span>,</div>\n\
<div class=\"line\">                                       cgfxShaderNode::sId,</div>\n\
<div class=\"line\">                                       cgfxShaderNode::creator,</div>\n\
<div class=\"line\">                                       cgfxShaderNode::initialize,</div>\n\
<div class=\"line\">                                       <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee2b86760284068eef3c463f9de9babc\">MPxNode::kHwShaderNode</a>,</div>\n\
<div class=\"line\">                                       &amp;UserClassify));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerNode(<span class=\"stringliteral\">&quot;cgfxVector&quot;</span>,</div>\n\
<div class=\"line\">        cgfxVector::sId,</div>\n\
<div class=\"line\">        cgfxVector::creator,</div>\n\
<div class=\"line\">        cgfxVector::initialize));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerCommand(<span class=\"stringliteral\">&quot;cgfxShader&quot;</span>,</div>\n\
<div class=\"line\">        cgfxShaderCmd::creator,</div>\n\
<div class=\"line\">        cgfxShaderCmd::newSyntax));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register a shader override for this node</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a7436ee759c9ea5113f5a222085dbfe6e\">MHWRender::MDrawRegistry::registerShaderOverrideCreator</a>(</div>\n\
<div class=\"line\">        cgfxShaderOverride::drawDbClassification,</div>\n\
<div class=\"line\">        cgfxShaderOverride::drawRegistrantId,</div>\n\
<div class=\"line\">        cgfxShaderOverride::Creator));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Where are my MEL scripts?</span></div>\n\
<div class=\"line\">    cgfxShaderCmd::sPluginPath = plugin.loadPath();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Run MEL script for user interface initialization.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#ac7296da94b1d0b659833fc653a6af10e\">MGlobal::mayaState</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#afb0008b4212928b7913ba9cfc64fe88bafd5ecc6725f6695a70a949747cf89546\">MGlobal::kInteractive</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> sCmd = <span class=\"stringliteral\">&quot;evalDeferred \\&quot;source \\\\\\&quot;cgfxShader_initUI.mel\\\\\\&quot;\\&quot;&quot;</span>;</div>\n\
<div class=\"line\">        <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>( sCmd );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Skip the status checking on the addCallback calls since the only</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// way that they can really fail is if Maya is out of memory and then</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// everything is going to fall apart anyway.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// call backs for &quot;source directory&quot; removal...</span></div>\n\
<div class=\"line\">    MCallbackId <span class=\"keywordtype\">id</span> = <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a44771b834e9a0ad7291ecdcc880106fe\">MSceneMessage::addCallback</a>(<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa9bd0d2b2b694347905d4a06c40e09904\">MSceneMessage::kBeforeSave</a>,</div>\n\
<div class=\"line\">        cgfxShaderFileSaveCB, NULL, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(status);</div>\n\
<div class=\"line\">    callbackIdArray.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html#a21e9b777b17a3dfd715d96599376ecfa\">append</a>(<span class=\"keywordtype\">id</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">id</span> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a44771b834e9a0ad7291ecdcc880106fe\">MSceneMessage::addCallback</a>(<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa18ceadb3bb295f463cf852a2a627ee40\">MSceneMessage::kBeforeExport</a>,</div>\n\
<div class=\"line\">        cgfxShaderFileSaveCB, NULL, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(status);</div>\n\
<div class=\"line\">    callbackIdArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html#a21e9b777b17a3dfd715d96599376ecfa\">append</a>(<span class=\"keywordtype\">id</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      this method is called when the plug-in is unloaded from Maya. It</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      deregisters all of the services that it was providing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      obj - a handle to the plug-in object (use MFnPlugin to access it)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgDestroyContext(cgfxShaderNode::sCgContext);</div>\n\
<div class=\"line\">    cgfxProfile::uninitialize();</div>\n\
<div class=\"line\">    cgfxTextureCache::uninitialize();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Remove all the callbacks that we registered.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#ac637287cc26b707b9e1a175a32f44e29\">MMessage::removeCallbacks</a>(callbackIdArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Deregister our node types.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(plugin.deregisterNode( cgfxShaderNode::sId ));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(plugin.deregisterNode( cgfxVector::sId ));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Deregister our commands.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(plugin.deregisterCommand( <span class=\"stringliteral\">&quot;cgfxShader&quot;</span> ));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Deregister the override</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a11ddbef3eada4895397b8acb6c77eb2e\">MHWRender::MDrawRegistry::deregisterShaderOverrideCreator</a>(</div>\n\
<div class=\"line\">        cgfxShaderOverride::drawDbClassification, cgfxShaderOverride::drawRegistrantId));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> cgfxShaderFileSaveCB(<span class=\"keywordtype\">void</span>* clientData )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Look through the scene for cgfxShader nodes whose effect is NULL</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// but whose shader attribute is not empty.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> workspace;</div>\n\
<div class=\"line\">    status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;workspace -q -rd;&quot;</span>),</div>\n\
<div class=\"line\">        workspace);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        workspace.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dependency_nodes.html\">MItDependencyNodes</a> nodeIt;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (nodeIt.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dependency_nodes.html#af31f2bea4267435bb9f54dfd91892cad\">reset</a>(<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a264274f263c7636ed2480b907e999031\">MFn::kPluginHwShaderNode</a>);</div>\n\
<div class=\"line\">        !nodeIt.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dependency_nodes.html#a8b6dbf6fbab6f4e7bf50a309124cbf4c\">isDone</a>();</div>\n\
<div class=\"line\">        nodeIt.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dependency_nodes.html#a73616f002814b8abe6d921db72d7a496\">next</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> oNode = nodeIt.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dependency_nodes.html#ad4c0bca65bccc7451dd91a88d443e5a8\">thisNode</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> fnNode(oNode);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fnNode.typeId() == cgfxShaderNode::sId)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We&#39;ve got a winner.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            cgfxShaderNode* pNode = (cgfxShaderNode*)fnNode.userNode();</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> ShaderFxFile = pNode-&gt;shaderFxFile();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (strncmp(ShaderFxFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),workspace.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),workspace.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>()) == 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                ShaderFxFile = ShaderFxFile.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(workspace.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(),ShaderFxFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() - 1);</div>\n\
<div class=\"line\">                <a name=\"_a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plShader = fnNode.findPlug( pNode-&gt;sShader, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">                plShader.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>( ShaderFxFile );</div>\n\
<div class=\"line\">                OutputDebugString(<span class=\"stringliteral\">&quot;CGFX shader pathname saved as: &quot;</span>);</div>\n\
<div class=\"line\">                OutputDebugString(ShaderFxFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                OutputDebugString(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( pNode-&gt;getTexturesByName())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                cgfxAttrDefList::iterator it(pNode-&gt;attrDefList());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">while</span> (it)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cgfxAttrDef* aDef = (*it);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> oNode = pNode-&gt;thisMObject();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">switch</span> (aDef-&gt;fType)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeColor1DTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeColor2DTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeColor3DTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeColor2DRectTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeNormalTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeBumpTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeCubeTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeEnvTexture:</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> cgfxAttrDef::kAttrTypeNormalizationTexture:</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pathname;</div>\n\
<div class=\"line\">                            aDef-&gt;getValue(oNode, pathname);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (strncmp(pathname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),workspace.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),workspace.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>()) == 0)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                pathname = pathname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(workspace.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(),pathname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>());</div>\n\
<div class=\"line\">                                aDef-&gt;setValue(oNode, pathname);</div>\n\
<div class=\"line\">                                OutputDebugString(<span class=\"stringliteral\">&quot;CGFX texture pathname saved as: &quot;</span>);</div>\n\
<div class=\"line\">                                OutputDebugString(pathname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                                OutputDebugString(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    ++it;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";