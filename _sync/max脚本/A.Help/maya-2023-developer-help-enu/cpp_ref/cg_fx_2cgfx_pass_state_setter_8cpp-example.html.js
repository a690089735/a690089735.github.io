var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: cgFx/cgfxPassStateSetter.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'cg_fx_2cgfx_pass_state_setter_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: cgFx/cgfxPassStateSetter.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">cgFx/cgfxPassStateSetter.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxPassStateSetter.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxShaderNode.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;string&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;map&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;set&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The GL enumerants for stencil wrap are not defined on every</span></div>\n\
<div class=\"line\"><span class=\"comment\">// platforms.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef GL_INCR_WRAP</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_INCR_WRAP                      0x8507</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef GL_DECR_WRAP</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_DECR_WRAP                      0x8508</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    std::string lowerCaseString(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* str) {</div>\n\
<div class=\"line\">        std::string lower;</div>\n\
<div class=\"line\">        lower.reserve(strlen(str));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* p=str; *p != 0; ++p) {</div>\n\
<div class=\"line\">            lower += char(tolower(*p));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> lower;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// CLASS StateAssignment</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>StateAssignment</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> void (*HandlerFn)(</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> CGstateassignment&amp;    sa,</div>\n\
<div class=\"line\">            <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*            blendStateDesc,</div>\n\
<div class=\"line\">            <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*       rasterizerStateDesc,</div>\n\
<div class=\"line\">            <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*     depthStencilStateDesc);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Returns whether the state assignement is unsupported by the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// VP2.0 viewport and therefore a glPushAttrib()/glPopAttrib()</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// pair is required to ensure correct rendering.</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> bool (*UnsupportedCheckFn)(<span class=\"keyword\">const</span> CGstateassignment&amp; sa);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> registerHandler(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* stateName, HandlerFn handler) {</div>\n\
<div class=\"line\">            CGstate cgState = cgGetNamedState(cgfxShaderNode::sCgContext, stateName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (cgState) {</div>\n\
<div class=\"line\">                std::string lstateName = lowerCaseString(stateName);</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> inserted =</div>\n\
<div class=\"line\">                    map.insert(</div>\n\
<div class=\"line\">                        std::make_pair(lstateName,StateAssignment(cgState, handler))</div>\n\
<div class=\"line\">                    ).second;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!inserted) {</div>\n\
<div class=\"line\">                    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;cgfxPassStateSetter is trying to register multiple &quot;</span></div>\n\
<div class=\"line\">                        <span class=\"stringliteral\">&quot;handlers for the same CgFX state \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                    s += stateName;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;\\&quot;.&quot;</span>;</div>\n\
<div class=\"line\">                    <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;The CgFX state assignment \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                s += stateName;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;\\&quot; is unknown to the Cg library.&quot;</span>;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> registerUnsupportedCheck(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* stateName, UnsupportedCheckFn check) {</div>\n\
<div class=\"line\">            CGstate cgState = cgGetNamedState(cgfxShaderNode::sCgContext, stateName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (cgState) {</div>\n\
<div class=\"line\">                std::string lstateName = lowerCaseString(stateName);</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> inserted =</div>\n\
<div class=\"line\">                    unsupportedChecks.insert(</div>\n\
<div class=\"line\">                        std::make_pair(lstateName,check)</div>\n\
<div class=\"line\">                    ).second;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!inserted) {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;cgfxPassStateSetter is trying to register multiple &quot;</span></div>\n\
<div class=\"line\">                        <span class=\"stringliteral\">&quot;unsupported checks for the same CgFX state \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                    s += stateName;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;\\&quot;.&quot;</span>;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;The CgFX state assignment \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                s += stateName;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;\\&quot; is unknown to the Cg library.&quot;</span>;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> registerIgnoredState(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* stateName) {</div>\n\
<div class=\"line\">            CGstate cgState = cgGetNamedState(cgfxShaderNode::sCgContext, stateName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (cgState) {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> inserted =</div>\n\
<div class=\"line\">                    ignoredSet.insert(lowerCaseString(stateName)).second;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!inserted) {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;cgfxPassStateSetter is trying to register multiple &quot;</span></div>\n\
<div class=\"line\">                        <span class=\"stringliteral\">&quot;ignore handlers for the same CgFX state \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                    s += stateName;</div>\n\
<div class=\"line\">                    s += <span class=\"stringliteral\">&quot;\\&quot;.&quot;</span>;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;The CgFX state assignment \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                s += stateName;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;\\&quot; is unknown to the Cg library.&quot;</span>;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(s);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> registerDefaultCallBacks()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// The default viewport uses immediate parameter setting.</span></div>\n\
<div class=\"line\">            cgSetParameterSettingMode(cgfxShaderNode::sCgContext,</div>\n\
<div class=\"line\">                                      CG_IMMEDIATE_PARAMETER_SETTING);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> Map::const_iterator itEnd = map.end();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( Map::const_iterator it    = map.begin();</div>\n\
<div class=\"line\">                  it != itEnd; ++it) {</div>\n\
<div class=\"line\">                it-&gt;second.setDefaultCallbacks();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> registerVP20CallBacks()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// The VP2.0 viewport uses deferred parameter setting.</span></div>\n\
<div class=\"line\">            cgSetParameterSettingMode(cgfxShaderNode::sCgContext,</div>\n\
<div class=\"line\">                                      CG_DEFERRED_PARAMETER_SETTING);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> Map::const_iterator itEnd = map.end();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( Map::const_iterator it    = map.begin();</div>\n\
<div class=\"line\">                  it != itEnd; ++it) {</div>\n\
<div class=\"line\">                it-&gt;second.setVP20Callbacks();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Invokes the proper handler for given state assignment. The</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// state objects will be modified accordingly if such a</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// handler exists.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Returns whether a glPushAttib()/glPopAttrib() is required</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// due to an unsupported state assignement.</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> callHandler(</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> CGstateassignment&amp;            sa,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We modify the state objects according to the sa</span></div>\n\
<div class=\"line\">            CGstate state = cgGetStateAssignmentState(sa);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *stateName = cgGetStateName(state);</div>\n\
<div class=\"line\">            std::string lstateName = lowerCaseString(stateName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> Map::const_iterator handler = map.find(lstateName);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (handler != map.end()) {</div>\n\
<div class=\"line\">                    handler-&gt;second.fHandler(sa,</div>\n\
<div class=\"line\">                                             blendStateDesc,</div>\n\
<div class=\"line\">                                             rasterizerStateDesc,</div>\n\
<div class=\"line\">                                             depthStencilStateDesc);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> UnsupportedChecks::const_iterator unsupportedCheck =</div>\n\
<div class=\"line\">                    unsupportedChecks.find(lstateName);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (unsupportedCheck != unsupportedChecks.end()) {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span> unsupportedCheck-&gt;second(sa);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (ignoredSet.find(lstateName) != ignoredSet.end()) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// This state assignment requires no specific</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// handling and is therefore ignored by the</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// cgfxPassStateSetter. i.e. We let Cg perform its</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// default behavior in that case.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef DEBUG</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// Unsupported state. We must use a</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// glPushAttrib()/glPopAttrib() pair to guarantee correct</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// rendering.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">            s += <span class=\"stringliteral\">&quot;cgfxShader: The CgFX state assignment \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">            s += stateName;</div>\n\
<div class=\"line\">            s += <span class=\"stringliteral\">&quot;\\&quot; contained in the shader file is not accelerated by the &quot;</span></div>\n\
<div class=\"line\">                <span class=\"stringliteral\">&quot;cgfxShader plugin in a VP2.0 viewport and will result in lower &quot;</span></div>\n\
<div class=\"line\">                <span class=\"stringliteral\">&quot;performance.&quot;</span>;</div>\n\
<div class=\"line\">            <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(s);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> std::map&lt;std::string, StateAssignment&gt; Map;</div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> std::map&lt;std::string, UnsupportedCheckFn&gt; UnsupportedChecks;</div>\n\
<div class=\"line\">        <span class=\"keyword\">typedef</span> std::set&lt;std::string&gt; IgnoredSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>std::map&lt;std::string, StateAssignment&gt;;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        static CGbool noopStateAssignment(CGstateassignment sa) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> CG_TRUE;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment(CGstate cgState, HandlerFn handler) {</div>\n\
<div class=\"line\">            fCgState           = cgState;</div>\n\
<div class=\"line\">            fDefaultSetCB      = cgGetStateSetCallback(cgState);</div>\n\
<div class=\"line\">            fDefaultResetCB    = cgGetStateResetCallback(cgState);</div>\n\
<div class=\"line\">            fDefaultValidateCB = cgGetStateValidateCallback(cgState);</div>\n\
<div class=\"line\">            fHandler           = handler;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Need a default ctor to please std::map...</span></div>\n\
<div class=\"line\">        StateAssignment()</div>\n\
<div class=\"line\">            : fCgState(NULL),</div>\n\
<div class=\"line\">              fDefaultSetCB(NULL),</div>\n\
<div class=\"line\">              fDefaultResetCB(NULL),</div>\n\
<div class=\"line\">              fDefaultValidateCB(NULL),</div>\n\
<div class=\"line\">              fHandler(NULL)</div>\n\
<div class=\"line\">        {};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> setDefaultCallbacks()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">        </span>{</div>\n\
<div class=\"line\">            cgSetStateCallbacks(fCgState,</div>\n\
<div class=\"line\">                                fDefaultSetCB,</div>\n\
<div class=\"line\">                                fDefaultResetCB,</div>\n\
<div class=\"line\">                                fDefaultValidateCB);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> setVP20Callbacks()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">        </span>{</div>\n\
<div class=\"line\">            cgSetStateCallbacks(fCgState,</div>\n\
<div class=\"line\">                                noopStateAssignment,</div>\n\
<div class=\"line\">                                noopStateAssignment,</div>\n\
<div class=\"line\">                                NULL);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> Map                  map;</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> UnsupportedChecks    unsupportedChecks;</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> IgnoredSet           ignoredSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        CGstate         fCgState;</div>\n\
<div class=\"line\">        CGstatecallback fDefaultSetCB;</div>\n\
<div class=\"line\">        CGstatecallback fDefaultResetCB;</div>\n\
<div class=\"line\">        CGstatecallback fDefaultValidateCB;</div>\n\
<div class=\"line\">        HandlerFn       fHandler;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    StateAssignment::Map                StateAssignment::map;</div>\n\
<div class=\"line\">    StateAssignment::UnsupportedChecks  StateAssignment::unsupportedChecks;</div>\n\
<div class=\"line\">    StateAssignment::IgnoredSet         StateAssignment::ignoredSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  OpenGL mappings</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4ea\">MBlendState::BlendOption</a> mapBlendOption(<span class=\"keywordtype\">int</span> blendOption)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>(blendOption) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ZERO:                     <span class=\"keywordflow\">return</span> <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaabdc6e852c17bbf4522c91b15eb87dc3b\">MBlendState::kZero</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE:                      <span class=\"keywordflow\">return</span> <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa567435a26feac1c98cd5213345ec6681\">MBlendState::kOne</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_SRC_COLOR:                <span class=\"keywordflow\">return</span> <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaab3c18b865065b7d2550f580a87b1b258\">MBlendState::kSourceColor</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE_MINUS_SRC_COLOR:      <span class=\"keywordflow\">return</span> <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa2dc1161242f200fc39aa6dbc5c09e0b9\">MBlendState::kInvSourceColor</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_SRC_ALPHA:                <span class=\"keywordflow\">return</span> <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa76de73d01667fca98bcd3754f1f92c00\">MBlendState::kSourceAlpha</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE_MINUS_SRC_ALPHA:      <span class=\"keywordflow\">return</span> <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaa58d506c01416594f41c42e255dec594\">MBlendState::kInvSourceAlpha</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_SRC_ALPHA_SATURATE:       <span class=\"keywordflow\">return</span> <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaba6f8d05b184d4b60599247848cfed75\">MBlendState::kSourceAlphaSat</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_DST_COLOR:                <span class=\"keywordflow\">return</span> <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa7c68d88602054bf4267a8cd2faa458a3\">MBlendState::kDestinationColor</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE_MINUS_DST_COLOR:      <span class=\"keywordflow\">return</span> <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa8dfde632e6b4206d14c3b479bf842697\">MBlendState::kInvDestinationColor</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_DST_ALPHA:                <span class=\"keywordflow\">return</span> <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa5e25d0cd17ce74907d880f9488e7a122\">MBlendState::kDestinationAlpha</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE_MINUS_DST_ALPHA:      <span class=\"keywordflow\">return</span> <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaae14d2a59c526862c31df1b9fff218b2\">MBlendState::kInvDestinationAlpha</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_CONSTANT_COLOR:           <span class=\"keywordflow\">return</span> <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaee9c8fe7a3fec45122adcbb7fc3c30cf\">MBlendState::kBlendFactor</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ONE_MINUS_CONSTANT_COLOR: <span class=\"keywordflow\">return</span> <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaab99bb638b4ecb0d525b2308c7758ba7b\">MBlendState::kInvBlendFactor</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//These two cases are duplicated in OGL</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// case GL_SRC_ALPHA:             return MBlendState::kBothSourceAlpha;</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// case GL_ONE_MINUS_SRC_ALPHA:   return MBlendState::kBothInvSourceAlpha;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Error, unknown GL enum.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:                          <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa567435a26feac1c98cd5213345ec6681\">MBlendState::kOne</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabe\">MBlendState::BlendOperation</a> mapBlendOperation(<span class=\"keywordtype\">int</span> blendOperation)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>(blendOperation) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_FUNC_ADD:              <span class=\"keywordflow\">return</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_FUNC_SUBTRACT:         <span class=\"keywordflow\">return</span> <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabeae1d92bfb6833e8b4a3c16049e764671f\">MBlendState::kSubtract</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_FUNC_REVERSE_SUBTRACT: <span class=\"keywordflow\">return</span> <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabeac4021f31cf4df9f5f9f735f22588e0a8\">MBlendState::kReverseSubtract</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_MIN:                   <span class=\"keywordflow\">return</span> <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabeac07fcd1852bd444a4be09b8aba6b7874\">MBlendState::kMin</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_MAX:                   <span class=\"keywordflow\">return</span> <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea11a8c07455b6c1d80c87e414be979962\">MBlendState::kMax</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Error, unknown GL enum.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:                       <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6\">MStateManager::CompareMode</a> mapCompareMode(<span class=\"keywordtype\">int</span> compareMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>(compareMode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_NEVER:    <span class=\"keywordflow\">return</span> <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a42d6e60690b8f3b1d7774cee269c7b97\">MStateManager::kCompareNever</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_LESS:     <span class=\"keywordflow\">return</span> <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6aebff78d4d81faf6adf6ddb2d827fd3c8\">MStateManager::kCompareLess</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_EQUAL:    <span class=\"keywordflow\">return</span> <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a4bc0608d0a9eeba434853b1e31ba41e5\">MStateManager::kCompareEqual</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_LEQUAL:   <span class=\"keywordflow\">return</span> <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a76706a2b85f0339727cbeca70648b6d6\">MStateManager::kCompareLessEqual</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_GREATER:  <span class=\"keywordflow\">return</span> <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a0c201b6ab8387f4c12e78b0bd0891991\">MStateManager::kCompareGreater</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_NOTEQUAL: <span class=\"keywordflow\">return</span> <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a734078c0d177697fc2862adbfe73b5e1\">MStateManager::kCompareNotEqual</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_GEQUAL:   <span class=\"keywordflow\">return</span> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6a3cd21d8e51152df29143cac1751a45a9\">MStateManager::kCompareGreaterEqual</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ALWAYS:   <span class=\"keywordflow\">return</span> <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6add4cd12eb49bf27fbb725a2d015f0f81\">MStateManager::kCompareAlways</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Error, unknown GL enum.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:          <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#af4045f11e8887dda083d0122d24df4f6add4cd12eb49bf27fbb725a2d015f0f81\">MStateManager::kCompareAlways</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4b\">MDepthStencilState::StencilOperation</a> mapStencilOperation(<span class=\"keywordtype\">int</span> stencilOp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>(stencilOp)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_KEEP:      <span class=\"keywordflow\">return</span> <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba1c419d4127f34e025391e3be28779a80\">MDepthStencilState::kKeepStencil</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_ZERO:      <span class=\"keywordflow\">return</span> <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4bafd5ded57e821c89e665b7ee42c5c905b\">MDepthStencilState::kZeroStencil</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_REPLACE:   <span class=\"keywordflow\">return</span> <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba9bb9f07791eb653d137901ff566fb449\">MDepthStencilState::kReplaceStencil</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_INCR:      <span class=\"keywordflow\">return</span> <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4bad3fcf905c6830f76e8b2266e0ff98cb9\">MDepthStencilState::kIncrementStencilSat</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_DECR:      <span class=\"keywordflow\">return</span> <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba890cd6ddfbe2dc903942415c52b7e9a8\">MDepthStencilState::kDecrementStencilSat</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_INVERT:    <span class=\"keywordflow\">return</span> <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4bab0ba9493e8b95f1504bbda54b64e2e83\">MDepthStencilState::kInvertStencil</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_INCR_WRAP: <span class=\"keywordflow\">return</span> <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba3ddc278f01ffa165c5c165658b85f838\">MDepthStencilState::kIncrementStencil</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> GL_DECR_WRAP: <span class=\"keywordflow\">return</span> <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba1bb09404e956f05eb02ad3686c51f17f\">MDepthStencilState::kDecrementStencil</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Error, unknown GL enum.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:           <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state.html#ac692ecc1ffb4255c8c8628a3ce6f7a4ba1c419d4127f34e025391e3be28779a80\">MDepthStencilState::kKeepStencil</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  STATE ASSIGNMENT HANDLERS</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  We currently support all of the states that the OpenMaya VP2.0</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  API supports. The state assignments supported by CgFX but not</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  by the OpenMaya VP2.0 API are not handled by the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  cgfxPassStateSetter and will be handled the the regular</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  cgSetPassState mechanism. A warning is emitted when we</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  encounter such a state because it is a potential performance</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  bottleneck.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> WrongNumValues(</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;cgfxPassStateSetter : Incoherent number of state assignment values&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Blend states</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendColor(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* values = cgGetFloatStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(numValues == 4) {</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[0] = values[0];</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[1] = values[1];</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[2] = values[2];</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[3] = values[3];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> value = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#af69e3282d64f8cfe88a2759960788417\">blendEnable</a> = value;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_SrcBlend(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a5c49c83334018fa4b2f69ac30b60d003\">sourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a9fbc968d46ad9a7107696211e34b4e51\">alphaSourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_DestBlend(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#adadc1ea4b5fca51312ae451f346434e3\">destinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#aa0f38fbd90e3171cc6c092e80ff25c7c\">alphaDestinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendFunc(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 2) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a5c49c83334018fa4b2f69ac30b60d003\">sourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#adadc1ea4b5fca51312ae451f346434e3\">destinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[1]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a9fbc968d46ad9a7107696211e34b4e51\">alphaSourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#aa0f38fbd90e3171cc6c092e80ff25c7c\">alphaDestinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[1]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendOp(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a919cbb29a19a1fc79843f58e68ccad57\">blendOperation</a> =</div>\n\
<div class=\"line\">                mapBlendOperation(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendFuncSeparate(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 4) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a5c49c83334018fa4b2f69ac30b60d003\">sourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#adadc1ea4b5fca51312ae451f346434e3\">destinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[1]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a9fbc968d46ad9a7107696211e34b4e51\">alphaSourceBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[2]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#aa0f38fbd90e3171cc6c092e80ff25c7c\">alphaDestinationBlend</a> =</div>\n\
<div class=\"line\">                mapBlendOption(values[3]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_BlendEquationSeparate(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 2) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a919cbb29a19a1fc79843f58e68ccad57\">blendOperation</a> =</div>\n\
<div class=\"line\">                mapBlendOperation(values[0]);</div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[1].<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a4d3de738732021fb87a82040e77f0aa4\">alphaBlendOperation</a> =</div>\n\
<div class=\"line\">                mapBlendOperation(values[1]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_ColorWriteEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         blendStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool* values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 4) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> mask = <a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340abd4ec2b2e754b4c1e2ed5bbe74c00fb1\">MBlendState::kNoChannels</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            mask |= (values[0]!=0) ? <a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340a6923420859272caffdd23c9285741dee\">MBlendState::kRedChannel</a>   : 0;</div>\n\
<div class=\"line\">            mask |= (values[1]!=0) ? <a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340afd202a37bca20e94fcce6d2eb514ef71\">MBlendState::kGreenChannel</a> : 0;</div>\n\
<div class=\"line\">            mask |= (values[2]!=0) ? <a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340a3413982bfa28274fd0153a37b7950aa3\">MBlendState::kBlueChannel</a>  : 0;</div>\n\
<div class=\"line\">            mask |= (values[3]!=0) ? <a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340a49d7d249c9c91e4ce0132bcffe5d73d9\">MBlendState::kAlphaChannel</a> : 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// We always use the target 0 since the CgFX plugin only</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// renders to a single framebuffer.</span></div>\n\
<div class=\"line\">            blendStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[0].<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a187b082600ea97d72d0298d34778c252\">targetWriteMask</a> =</div>\n\
<div class=\"line\">                <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#a508bf9ce7f09728669b77bdc572a2340\">MBlendState::ChannelMask</a>(mask);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Rasterizer states</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_FillMode(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues &gt;= 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>(values[0])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FILL:  rasterizerStateDesc-&gt;<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a46fb5863fb478c76999b012605b7809e\">fillMode</a> = <a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a75a9acd74effffae38daed55136b0980ab6cc17dcad5774f5e5c959bbaaaac71c\">MRasterizerState::kFillSolid</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_LINE:  rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a46fb5863fb478c76999b012605b7809e\">fillMode</a> = <a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a75a9acd74effffae38daed55136b0980a93f7bebc1ac031198fe7659965168fbc\">MRasterizerState::kFillWireFrame</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_POINT: <span class=\"comment\">//we don&#39;t have such enum in MRasteriszerState, so pass</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:; <span class=\"comment\">//error</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_CullFace(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>(values[0])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT: rasterizerStateDesc-&gt;<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aaa2bfdab9ddd516d51dcdec76b2be463a\">MRasterizerState::kCullFront</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_BACK:  rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aad2157571dec56cac60f0af75d6ac7123\">MRasterizerState::kCullBack</a>;  <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT_AND_BACK:   <span class=\"comment\">//we don&#39;t have such enum in MRasteriszerState, so pass</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:; <span class=\"comment\">//error</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_CullFaceEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(values[0] == CG_TRUE) {</div>\n\
<div class=\"line\">                <span class=\"comment\">//use default cull mode if cull is enabled</span></div>\n\
<div class=\"line\">                rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aad2157571dec56cac60f0af75d6ac7123\">MRasterizerState::kCullBack</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aaa6657ab67920a4dcc6e0a30044cc5487\">MRasterizerState::kCullNone</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_FrontFace(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>(values[0])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_CW:  rasterizerStateDesc-&gt;<a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a6fc1637df72a635bc7c013d57b2398ef\">frontCounterClockwise</a> = <span class=\"keyword\">false</span>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_CCW: rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a6fc1637df72a635bc7c013d57b2398ef\">frontCounterClockwise</a> = <span class=\"keyword\">true</span>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:; <span class=\"comment\">//error</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_PolygonMode(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 2) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>(values[0])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT: rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aaa2bfdab9ddd516d51dcdec76b2be463a\">MRasterizerState::kCullFront</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_BACK:  rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5a9f0fe3d49830803b7a25440b2d19a6\">cullMode</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aad2157571dec56cac60f0af75d6ac7123\">MRasterizerState::kCullBack</a>;  <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT_AND_BACK:   <span class=\"comment\">//we don&#39;t have such enum in MRasteriszerState, so pass</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:; <span class=\"comment\">//error</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>(values[1])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FILL:  rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a46fb5863fb478c76999b012605b7809e\">fillMode</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a75a9acd74effffae38daed55136b0980ab6cc17dcad5774f5e5c959bbaaaac71c\">MRasterizerState::kFillSolid</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_LINE:  rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a46fb5863fb478c76999b012605b7809e\">fillMode</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a75a9acd74effffae38daed55136b0980a93f7bebc1ac031198fe7659965168fbc\">MRasterizerState::kFillWireFrame</a>; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_POINT: <span class=\"comment\">//we don&#39;t have such enum in MRasteriszerState, so pass</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:; <span class=\"comment\">//error</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_PolygonOffset(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *values = cgGetFloatStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 2) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a7d6c8cc49b0374cb87605d24acacd4e2\">slopeScaledDepthBias</a> = values[0];</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a2894fe1122185e1e681e79ab7cfeb8d6\">depthBias</a> = values[1];</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a0c22bd503abc493c0b54ba8a7593a6d8\">depthBiasIsFloat</a> = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_DepthBias(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *values = cgGetFloatStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a2894fe1122185e1e681e79ab7cfeb8d6\">depthBias</a> = values[0];</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a0c22bd503abc493c0b54ba8a7593a6d8\">depthBiasIsFloat</a> = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_SlopScaleDepthBias(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *values = cgGetFloatStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a7d6c8cc49b0374cb87605d24acacd4e2\">slopeScaledDepthBias</a> = values[0];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_PolygonOffsetFillEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a19c867eb902deeadc492fa246f662b29\">depthClipEnable</a> = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_ScissorTestEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a52b4cdd20f7f4847f7a3fdec28c2565c\">scissorEnable</a> = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_MultisampleEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a0014b3f735f6f94469377ca0ce55c199\">multiSampleEnable</a> = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_LineSmoothEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    rasterizerStateDesc,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  <span class=\"comment\">/* depthStencilStateDesc */</span>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            rasterizerStateDesc-&gt;<a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html#a5e83624750785537c8a23e42750703ce\">antialiasedLineEnable</a> = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Depth and stencil states</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_DepthTestEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> value = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a63deb05e0b27e537fcd7ecb470b68725\">depthEnable</a> = value;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_DepthMask(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> value = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a1944b0918378af218375dd45c1f191d1\">depthWriteEnable</a> = value;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_DepthFunc(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#aece62b93b1909efb0c8f3a2a0d9f7fff\">depthFunc</a> = mapCompareMode(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilEnable(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> value = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a742c8a0eb885bafbc3f607d76fa5063a\">stencilEnable</a> = value;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilWriteMask(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a8e861744605e5217260390c66343ff10\">stencilWriteMask</a> = (<span class=\"keywordtype\">unsigned</span> char)values[0];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilFunc(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                mapCompareMode(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                mapCompareMode(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (numValues == 3)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                mapCompareMode(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                mapCompareMode(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#aea5d4fdc9bfc7e2040e39952ae3bedb3\">stencilReferenceVal</a> = values[1];</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a49c8f18ab242315420ea35690f2c5c00\">stencilReadMask</a>     = (<span class=\"keywordtype\">unsigned</span> char)values[2];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilFuncSeparate(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 4) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (values[0]) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT:</div>\n\
<div class=\"line\">                    depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                        mapCompareMode(values[1]);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_BACK:</div>\n\
<div class=\"line\">                    depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                        mapCompareMode(values[1]);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> GL_FRONT_AND_BACK:</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                    depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                        mapCompareMode(values[1]);</div>\n\
<div class=\"line\">                    depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ac311347988e8679cefd31c9a4f797faa\">stencilFunc</a> =</div>\n\
<div class=\"line\">                        mapCompareMode(values[1]);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Note: The OpenMaya API does not support seperate</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// reference and read mask for front and back faces.</span></div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#aea5d4fdc9bfc7e2040e39952ae3bedb3\">stencilReferenceVal</a> = values[2];</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a49c8f18ab242315420ea35690f2c5c00\">stencilReadMask</a>     = (<span class=\"keywordtype\">unsigned</span> char)values[3];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilOp(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 3) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[1]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[2]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[1]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[2]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilOpSeparate(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 4) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (values[0] == GL_FRONT || values[0] == GL_FRONT_AND_BACK) {</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[1]);</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[2]);</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[3]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (values[0] == GL_BACK || values[0] == GL_FRONT_AND_BACK) {</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[1]);</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[2]);</div>\n\
<div class=\"line\">                depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                    mapStencilOperation(values[3]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilRef(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#aea5d4fdc9bfc7e2040e39952ae3bedb3\">stencilReferenceVal</a> = values[0];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilFail(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#a1eed3a7b5878b8ea1ce25f1c6f708797\">stencilFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilZFail(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#ad9bceea8209e9b0f3e11a108891aef52\">stencilDepthFailOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> assignHdlr_StencilPass(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGstateassignment&amp; sa,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a>*         <span class=\"comment\">/* blendStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a>*    <span class=\"comment\">/* rasterizerStateDesc */</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a>*  depthStencilStateDesc)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *values = cgGetIntStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#ab71cf4c0b589679608a82717c15a5e33\">frontFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">            depthStencilStateDesc-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html#a55af5b0011d4a2053953557923debbf2\">backFace</a>.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_stencil_op_desc.html#af423dd1386a44a09a6a043c7a4ac4bb3\">stencilPassOp</a> =</div>\n\
<div class=\"line\">                mapStencilOperation(values[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Error handlers for unsupported states</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//******************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> unsupportedIfTrue(<span class=\"keyword\">const</span> CGstateassignment&amp; sa)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numValues = 0;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> CGbool *values = cgGetBoolStateAssignmentValues(sa, &amp;numValues);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numValues == 1) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> value = (values[0] == CG_TRUE) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (value) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef DEBUG</span></div>\n\
<div class=\"line\">                CGstate state = cgGetStateAssignmentState(sa);</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *stateName = cgGetStateName(state);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Unsupported state. We must use a</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// glPushAttrib()/glPopAttrib() pair to guarantee correct</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// rendering.</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> s;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot;cgfxShader: The CgFX state assignment \\&quot;&quot;</span>;</div>\n\
<div class=\"line\">                s += stateName;</div>\n\
<div class=\"line\">                s += <span class=\"stringliteral\">&quot; = true;\\&quot; contained in the shader file is not accelerated by the &quot;</span></div>\n\
<div class=\"line\">                    <span class=\"stringliteral\">&quot;cgfxShader plugin in a VP2.0 viewport and will result in lower &quot;</span></div>\n\
<div class=\"line\">                    <span class=\"stringliteral\">&quot;performance.&quot;</span>;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(s);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">// The state assignment value is false. We assume that</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// this state corresponds to the default Cg, VP2.0</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// and OpenGL state. We can therefore safely assume</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// that this state assignment is supported.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(WrongNumValues);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS cgfxPassStateSetter</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">cgfxPassStateSetter::ViewportMode cgfxPassStateSetter::sActiveViewportMode =</div>\n\
<div class=\"line\">    cgfxPassStateSetter::kUnknown;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> cgfxPassStateSetter::registerCgStateCallBacks(</div>\n\
<div class=\"line\">    cgfxPassStateSetter::ViewportMode mode</div>\n\
<div class=\"line\">) {</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> initialized = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!initialized)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Ignored states</span></div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;VertexProgram&quot;</span>);</div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;VertexShader&quot;</span>);</div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;GeometryProgram&quot;</span>);</div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;GeometryShader&quot;</span>);</div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;FragmentProgram&quot;</span>);</div>\n\
<div class=\"line\">        StateAssignment::registerIgnoredState(<span class=\"stringliteral\">&quot;PixelShader&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Blend states</span></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendColor&quot;</span>,        assignHdlr_BlendColor      );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendEnable&quot;</span>,       assignHdlr_BlendEnable     );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;AlphaBlendEnable&quot;</span>,  assignHdlr_BlendEnable     );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;SrcBlend&quot;</span>,          assignHdlr_SrcBlend        );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;DestBlend&quot;</span>,         assignHdlr_DestBlend       );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendFunc&quot;</span>,         assignHdlr_BlendFunc       );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendOp&quot;</span>,           assignHdlr_BlendOp         );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendEquation&quot;</span>,     assignHdlr_BlendOp         );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendFuncSeparate&quot;</span>, assignHdlr_BlendFuncSeparate );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;BlendEquationSeparate&quot;</span>, assignHdlr_BlendEquationSeparate );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;ColorWriteEnable&quot;</span>,  assignHdlr_ColorWriteEnable);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// FXIME: I am not sure how to handle the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MBlendStateDesc::alphaToCoverageEnable and</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MBlendStateDesc::multiSampleMask fields of the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MBlendStateDesc. It seems to me that Maya should initialize</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// them to the proper values depending on whether MSAA is</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// globaly enabled. They also seems DirectX specific.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Note: The MBlendStateDesc::independentBlendEnable field is</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// always set to false since the CgFX plugin only renders to a</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// single framebuffer.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Rasterizer states</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;FillMode&quot;</span>,                assignHdlr_FillMode                );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;CullMode&quot;</span>,                assignHdlr_CullFace                );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;CullFace&quot;</span>,                assignHdlr_CullFace                );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;CullFaceEnable&quot;</span>,          assignHdlr_CullFaceEnable          );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;FrontFace&quot;</span>,               assignHdlr_FrontFace               );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;PolygonMode&quot;</span>,             assignHdlr_PolygonMode             );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;PolygonOffset&quot;</span>,           assignHdlr_PolygonOffset           );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;DepthBias&quot;</span>,               assignHdlr_DepthBias               );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;SlopScaleDepthBias&quot;</span>,      assignHdlr_SlopScaleDepthBias      );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;PolygonOffsetFillEnable&quot;</span>, assignHdlr_PolygonOffsetFillEnable );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;ScissorTestEnable&quot;</span>,       assignHdlr_ScissorTestEnable       );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;MultisampleEnable&quot;</span>,       assignHdlr_MultisampleEnable       );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;MultiSampleAntialias&quot;</span>,    assignHdlr_MultisampleEnable       );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The OpenMaya API combines the Line and Point smoothing into</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// a single control, mainly because there are no such separate</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// controls on DX.</span></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;LineSmoothEnable&quot;</span>,        assignHdlr_LineSmoothEnable       );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;PointSmoothEnable&quot;</span>,       assignHdlr_LineSmoothEnable       );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Depth and stencil states</span></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;DepthTestEnable&quot;</span>,         assignHdlr_DepthTestEnable         );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;ZEnable&quot;</span>,                 assignHdlr_DepthTestEnable         );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;DepthMask&quot;</span>,               assignHdlr_DepthMask               );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;ZWriteEnable&quot;</span>,            assignHdlr_DepthMask               );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;DepthFunc&quot;</span>,               assignHdlr_DepthFunc               );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilEnable&quot;</span>,           assignHdlr_StencilEnable           );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilTestEnable&quot;</span>,       assignHdlr_StencilEnable           );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilMask&quot;</span>,             assignHdlr_StencilWriteMask        );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilWriteMask&quot;</span>,        assignHdlr_StencilWriteMask        );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilFunc&quot;</span>,             assignHdlr_StencilFunc             );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilFuncSeparate&quot;</span>,     assignHdlr_StencilFuncSeparate     );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilOp&quot;</span>,               assignHdlr_StencilOp               );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilOpSeparate&quot;</span>,       assignHdlr_StencilOpSeparate       );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilRef&quot;</span>,              assignHdlr_StencilRef              );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilFail&quot;</span>,             assignHdlr_StencilFail             );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilZFail&quot;</span>,            assignHdlr_StencilZFail            );</div>\n\
<div class=\"line\">        StateAssignment::registerHandler(<span class=\"stringliteral\">&quot;StencilPass&quot;</span>,             assignHdlr_StencilPass             );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Unsupported states</span></div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;AutoNormalEnable&quot;</span>,               unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;AlphaTestEnable&quot;</span>,                unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;ClipPlaneEnable&quot;</span>,                unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;ColorLogicOpEnable&quot;</span>,             unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;ColorVertex&quot;</span>,                    unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;DepthBoundsEnable&quot;</span>,              unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;DepthClampEnable&quot;</span>,               unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;DitherEnable&quot;</span>,                   unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;FogEnable&quot;</span>,                      unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LightEnable&quot;</span>,                    unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LightModelLocalViewerEnable&quot;</span>,    unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LightModelTwoSideEnable&quot;</span>,        unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LightingEnable&quot;</span>,                 unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LineStippleEnable&quot;</span>,              unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LocalViewer&quot;</span>,                    unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;LogicOpEnable&quot;</span>,                  unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;NormalizeEnable&quot;</span>,                unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PointScaleEnable&quot;</span>,               unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PointSmoothEnable&quot;</span>,              unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PointSpriteCoordReplace&quot;</span>,        unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PointSpriteEnable&quot;</span>,              unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PolygonOffsetLineEnable&quot;</span>,        unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PolygonOffsetPointEnable&quot;</span>,       unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;PolygonStippleEnable&quot;</span>,           unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;RescaleNormalEnable&quot;</span>,            unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;SampleAlphaToCoverageEnable&quot;</span>,    unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;SampleAlphaToOneEnable&quot;</span>,         unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;SampleCoverageEnable&quot;</span>,           unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;ScissorTestEnable&quot;</span>,              unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;StencilTestTwoSideEnable&quot;</span>,       unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TexGenQEnable&quot;</span>,                  unsupportedIfTrue);</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TexGenREnable&quot;</span>,                  unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TexGenSEnable&quot;</span>,                  unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TexGenTEnable&quot;</span>,                  unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;Texture1DEnable&quot;</span>,                unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;Texture2DEnable&quot;</span>,                unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;Texture3DEnable&quot;</span>,                unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TextureCubeMapEnable&quot;</span>,           unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;TextureRectangleEnable&quot;</span>,         unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;VertexProgramPointSizeEnable&quot;</span>,   unsupportedIfTrue );</div>\n\
<div class=\"line\">        StateAssignment::registerUnsupportedCheck(<span class=\"stringliteral\">&quot;VertexProgramTwoSideEnable&quot;</span>,     unsupportedIfTrue );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        initialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(mode == cgfxPassStateSetter::kUnknown)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(mode == cgfxPassStateSetter::sActiveViewportMode)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(mode == cgfxPassStateSetter::kDefaultViewport)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        StateAssignment::registerDefaultCallBacks();</div>\n\
<div class=\"line\">        sActiveViewportMode = cgfxPassStateSetter::kDefaultViewport;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        StateAssignment::registerVP20CallBacks();</div>\n\
<div class=\"line\">        sActiveViewportMode = cgfxPassStateSetter::kVP20Viewport;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">cgfxPassStateSetter::cgfxPassStateSetter()</div>\n\
<div class=\"line\">    : fBlendState(NULL),</div>\n\
<div class=\"line\">      fRasterizerState(NULL),</div>\n\
<div class=\"line\">      fDepthStencilState(NULL),</div>\n\
<div class=\"line\">      fIsPushPopAttribsRequired(false)</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> cgfxPassStateSetter::init(</div>\n\
<div class=\"line\">    <a name=\"_a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html\">MStateManager</a>* stateMgr,</div>\n\
<div class=\"line\">    CGpass pass</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Start with the default state!</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MBlendStateDesc</a> blendStateDesc;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MRasterizerStateDesc</a> rasterizerStateDesc;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_depth_stencil_state_desc.html\">MDepthStencilStateDesc</a> depthStencilStateDesc;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CGstateassignment sa = cgGetFirstStateAssignment(pass);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (sa) {</div>\n\
<div class=\"line\">        fIsPushPopAttribsRequired |=</div>\n\
<div class=\"line\">            StateAssignment::callHandler(sa,</div>\n\
<div class=\"line\">                                         &amp;blendStateDesc,</div>\n\
<div class=\"line\">                                         &amp;rasterizerStateDesc,</div>\n\
<div class=\"line\">                                         &amp;depthStencilStateDesc);</div>\n\
<div class=\"line\">        sa = cgGetNextStateAssignment(sa);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fBlendState = stateMgr-&gt;<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#aeb560f7829270f34ab413ad314314c8f\">acquireBlendState</a>(blendStateDesc);</div>\n\
<div class=\"line\">    fDepthStencilState = stateMgr-&gt;<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a4fae5c76bc6698abb77b9ffec01bc21a\">acquireDepthStencilState</a>(depthStencilStateDesc);</div>\n\
<div class=\"line\">    fRasterizerState = stateMgr-&gt;<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a1f43e6ab99a6e2e5817df7bb1a0c69e6\">acquireRasterizerState</a>(rasterizerStateDesc);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">cgfxPassStateSetter::~cgfxPassStateSetter()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    MStateManager::releaseBlendState(fBlendState);</div>\n\
<div class=\"line\">    fBlendState = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MStateManager::releaseDepthStencilState(fDepthStencilState);</div>\n\
<div class=\"line\">    fDepthStencilState = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MStateManager::releaseRasterizerState(fRasterizerState);</div>\n\
<div class=\"line\">    fRasterizerState = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> cgfxPassStateSetter::setPassState(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html\">MStateManager</a>* stateMgr)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    stateMgr-&gt;<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a27dbc083002d85108ed30ee1131f68c1\">setBlendState</a>(fBlendState);</div>\n\
<div class=\"line\">    stateMgr-&gt;<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a5a6b8e76300df4a0c9f6a38b236118f7\">setDepthStencilState</a>(fDepthStencilState);</div>\n\
<div class=\"line\">    stateMgr-&gt;<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a7dfb1c4f28575ed6581aa40a7b64f22a\">setRasterizerState</a>(fRasterizerState);</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";