var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MetadataSample/cmdUtils.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_metadata_sample_2cmd_utils_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MetadataSample/cmdUtils.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MetadataSample/cmdUtils.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _cmdUtils_h_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _cmdUtils_h_</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;cassert&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//======================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Some useful error handling macros.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MStatError(status,msg)                              \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( MS::kSuccess != (status) ) {                       \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        MPxCommand::displayError(                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">            (msg) + MString(&quot;:&quot;) + (status).errorString()); \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        return (status);                                    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MStatErrorNullObj(status,msg)                       \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( MS::kSuccess != (status) ) {                       \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        MPxCommand::displayError(                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">            (msg) + MString(&quot;:&quot;) + (status).errorString()); \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        return MObject::kNullObj;                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MCheckReturn(expression)                \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    {                                           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        MStatus status = (expression);          \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        if ( MS::kSuccess != (status) ) {       \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">            return (status);                    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        }                                       \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//======================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Valid modes for a command to execute. They form a bitfield so that legal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// modes can be stored in a single integer but really only one mode can be</span></div>\n\
<div class=\"line\"><span class=\"comment\">// active at a time.</span></div>\n\
<div class=\"line\"><span class=\"keyword\">enum</span> CommandMode</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    kCreate = 0x01,</div>\n\
<div class=\"line\">    kEdit   = 0x02,</div>\n\
<div class=\"line\">    kQuery  = 0x04</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//======================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper class for packaging up command options into a simple flag object.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">class</span> T, CommandMode Val<span class=\"keywordtype\">id</span>Modes&gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>OptFlag</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    OptFlag() : fIsSet(false), fArg() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> parse(<span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a>&amp; argDb, <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* name)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        fIsSet = argDb.<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(name, &amp;status);</div>\n\
<div class=\"line\">        assert(status == MS::kSuccess);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        status = argDb.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(name, 0, fArg);</div>\n\
<div class=\"line\">        fIsArgValid = status == MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isModeValid(<span class=\"keyword\">const</span> CommandMode currentMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> !fIsSet || ((currentMode &amp; ValidModes) != 0);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isSet      ()<span class=\"keyword\">      const </span>{ <span class=\"keywordflow\">return</span> fIsSet; }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isArgValid ()<span class=\"keyword\">      const </span>{ <span class=\"keywordflow\">return</span> fIsArgValid; }</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> T&amp; arg    ()<span class=\"keyword\">      const </span>{ <span class=\"keywordflow\">return</span> fArg; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> T&amp; arg(<span class=\"keyword\">const</span> T&amp; defValue)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (isSet())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            assert(isArgValid());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> fArg;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> defValue;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    fIsSet;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    fIsArgValid;</div>\n\
<div class=\"line\">    T       fArg;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//======================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Specialization for flags with no argument.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt;CommandMode Val<span class=\"keywordtype\">id</span>Modes&gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>OptFlag&lt;void, ValidModes&gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    OptFlag() : fIsSet(false) {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> parse(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a>&amp; argDb, <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* name)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        fIsSet = argDb.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(name, &amp;status);</div>\n\
<div class=\"line\">        assert(status == MS::kSuccess);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isModeValid(<span class=\"keyword\">const</span> CommandMode currentMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> !fIsSet || ((currentMode &amp; ValidModes) != 0);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    isSet()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fIsSet; }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    fIsSet;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2012 Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// These coded instructions, statements, and computer programs contain</span></div>\n\
<div class=\"line\"><span class=\"comment\">// unpublished proprietary information written by Autodesk, Inc., and are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// protected by Federal copyright law. They may not be disclosed to third</span></div>\n\
<div class=\"line\"><span class=\"comment\">// parties or copied or duplicated in any form, in whole or in part, without</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the prior written consent of Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif // _cmdUtils_h_</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";