var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: animCubeNode/animCubeNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'anim_cube_node_2anim_cube_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: animCubeNode/animCubeNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">animCubeNode/animCubeNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in produces the dependency graph node &quot;animCube&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// It demonstrates how to take time as an input, and create polygonal geometry for output.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The compute method of the node constructs a polygonal cube whose size depends on the current frame number.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The resulting mesh is passed to an internal Maya node, which displays it and allows it to be positioned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// To use this node, execute the MEL command &quot;animCubeNode.mel&quot; that contains the following commands:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// createNode transform -n animCube1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// createNode mesh -n animCubeShape1 -p animCube1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// createNode animCube -n animCubeNode1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// connectAttr time1.outTime animCubeNode1.time;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// connectAttr animCubeNode1.outputMesh animCubeShape1.inMesh;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This creates a mesh node under a transform node that is hooked into the world for display.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It then creates an animCube node and connects its input to the time node, and its output to the mesh node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Now, a cube appears on the screen.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// If the play button on the time slider is pressed, the displayed cube will grow and shrink as the frame number changes.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIntArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDoubleArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define McheckErr(stat,msg)         \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( MS::kSuccess != stat ) {   \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        cerr &lt;&lt; msg;                \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        return MS::kFailure;        \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>animCube : <span class=\"keyword\">public</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html\">MPxNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    animCube() {};</div>\n\
<div class=\"line\">            ~animCube()<span class=\"keyword\"> override </span>{};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>(<span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span>*   creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  time;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  outputMesh;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>  id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> createMesh(<span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Helpers</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> createQuads(<span class=\"keyword\">const</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> createReverseQuads(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> createTris(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> createReverseTris(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::time;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::outputMesh;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> animCube::id( 0x80000 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* animCube::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> animCube;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> animCube::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a> unitAttr;</div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> typedAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    animCube::time = unitAttr.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>( <span class=\"stringliteral\">&quot;time&quot;</span>, <span class=\"stringliteral\">&quot;tm&quot;</span>,</div>\n\
<div class=\"line\">                                          <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>,</div>\n\
<div class=\"line\">                                          0.0, &amp;returnStatus );</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating animCube time attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    animCube::outputMesh = typedAttr.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;outputMesh&quot;</span>, <span class=\"stringliteral\">&quot;out&quot;</span>,</div>\n\
<div class=\"line\">                                                 <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>,</div>\n\
<div class=\"line\">                                                 <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>,</div>\n\
<div class=\"line\">                                                 &amp;returnStatus ); </div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating animCube output attribute\\n&quot;</span>);</div>\n\
<div class=\"line\">    typedAttr.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = addAttribute(animCube::time);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR adding time attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = addAttribute(animCube::outputMesh);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR adding outputMesh attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = attributeAffects(animCube::time,</div>\n\
<div class=\"line\">                                    animCube::outputMesh);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR in attributeAffects\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::createMesh(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time,</div>\n\
<div class=\"line\">                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData,</div>\n\
<div class=\"line\">                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Scale the cube on the frame number, wrap every 10 frames.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> frame = (int)time.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda28ce0398d2e7274904c6359ef92ed94a\">MTime::kFilm</a> );</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> cubeSize = 0.5f * (float)( frame % 10 + 1 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> points;</div>\n\
<div class=\"line\">    points.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>( -cubeSize, -cubeSize, -cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>(  cubeSize, -cubeSize, -cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>(  cubeSize, -cubeSize,  cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>( -cubeSize, -cubeSize,  cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>( -cubeSize,  cubeSize, -cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>( -cubeSize,  cubeSize,  cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>(  cubeSize,  cubeSize,  cubeSize );</div>\n\
<div class=\"line\">    points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>(  cubeSize,  cubeSize, -cubeSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newMesh;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> sTestVertexIdAndFaceId =</div>\n\
<div class=\"line\">        (getenv(<span class=\"stringliteral\">&quot;MAYA_TEST_VERTEXID_AND_FACEID&quot;</span>) != NULL);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sTestVertexIdAndFaceId)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If the env var is set, the topology of the cube will be changed over</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// frame number (looping in every 4 frames). When the shape is assigned</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// with a hwPhongShader, the shader receives vertex ids and face ids,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// which are generated from polygonConnects passed to MFnMesh::create</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// method in this plugin.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (frame % 4)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> 1:</div>\n\
<div class=\"line\">            newMesh = createQuads(points, outData, stat);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> 2:</div>\n\
<div class=\"line\">            newMesh = createReverseQuads(points, outData, stat);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> 3:</div>\n\
<div class=\"line\">            newMesh = createTris(points, outData, stat);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> 0:</div>\n\
<div class=\"line\">            newMesh = createReverseTris(points, outData, stat);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            newMesh = createQuads(points, outData, stat);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        newMesh = createQuads(points, outData, stat);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> newMesh;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::createQuads(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the 6 cube faces (4 vertices per face)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaces = 6;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_counts[numFaces] = { 4, 4, 4, 4, 4, 4 };</div>\n\
<div class=\"line\">    <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceCounts( face_counts, numFaces );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up and array to assign vertices from points to each face </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaceConnects = 24;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_connects[ numFaceConnects ] = {0, 1, 2, 3,</div>\n\
<div class=\"line\">                                            4, 5, 6, 7,</div>\n\
<div class=\"line\">                                            3, 2, 6, 5,</div>\n\
<div class=\"line\">                                            0, 3, 5, 4,</div>\n\
<div class=\"line\">                                            0, 4, 7, 1,</div>\n\
<div class=\"line\">                                            1, 7, 6, 2};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceConnects( face_connects, numFaceConnects );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFS;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> meshFS.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(points.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), faceCounts.length(),</div>\n\
<div class=\"line\">        points, faceCounts, faceConnects, outData, &amp;stat);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::createReverseQuads(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the 6 cube faces (4 vertices per face)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaces = 6;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_counts[numFaces] = { 4, 4, 4, 4, 4, 4 };</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceCounts( face_counts, numFaces );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up and array to assign vertices from points to each face</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaceConnects = 24;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_connects[ numFaceConnects ] = {0, 3, 2, 1,</div>\n\
<div class=\"line\">                                            4, 7, 6, 5,</div>\n\
<div class=\"line\">                                            3, 5, 6, 2,</div>\n\
<div class=\"line\">                                            0, 4, 5, 3,</div>\n\
<div class=\"line\">                                            0, 1, 7, 4,</div>\n\
<div class=\"line\">                                            1, 2, 6, 7};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceConnects( face_connects, numFaceConnects );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFS;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> meshFS.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), faceCounts.length(),</div>\n\
<div class=\"line\">        points, faceCounts, faceConnects, outData, &amp;stat);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::createTris(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the 12 triangles (3 verticies per triangle)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaces = 12;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_counts[numFaces] = { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceCounts( face_counts, numFaces );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up and array to assign vertices from points to each face</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaceConnects = 36;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_connects[ numFaceConnects ] = {0, 1, 2,</div>\n\
<div class=\"line\">                                            2, 3, 0,</div>\n\
<div class=\"line\">                                            4, 5, 6,</div>\n\
<div class=\"line\">                                            6, 7, 4,</div>\n\
<div class=\"line\">                                            3, 2, 6,</div>\n\
<div class=\"line\">                                            6, 5, 3,</div>\n\
<div class=\"line\">                                            0, 3, 5,</div>\n\
<div class=\"line\">                                            5, 4, 0,</div>\n\
<div class=\"line\">                                            0, 4, 7,</div>\n\
<div class=\"line\">                                            7, 1, 0,</div>\n\
<div class=\"line\">                                            1, 7, 6,</div>\n\
<div class=\"line\">                                            6, 2, 1};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceConnects( face_connects, numFaceConnects );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFS;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> meshFS.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), faceCounts.length(),</div>\n\
<div class=\"line\">        points, faceCounts, faceConnects, outData, &amp;stat);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCube::createReverseTris(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>&amp; points,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the 12 triangles (3 verticies per triangle)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaces = 12;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_counts[numFaces] = { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceCounts( face_counts, numFaces );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up and array to assign vertices from points to each face</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> numFaceConnects = 36;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_connects[ numFaceConnects ] = {0, 2, 1,</div>\n\
<div class=\"line\">                                            2, 0, 3,</div>\n\
<div class=\"line\">                                            4, 6, 5,</div>\n\
<div class=\"line\">                                            6, 4, 7,</div>\n\
<div class=\"line\">                                            3, 6, 2,</div>\n\
<div class=\"line\">                                            6, 3, 5,</div>\n\
<div class=\"line\">                                            0, 5, 3,</div>\n\
<div class=\"line\">                                            5, 0, 4,</div>\n\
<div class=\"line\">                                            0, 7, 4,</div>\n\
<div class=\"line\">                                            7, 0, 1,</div>\n\
<div class=\"line\">                                            1, 6, 7,</div>\n\
<div class=\"line\">                                            6, 1, 2};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceConnects( face_connects, numFaceConnects );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFS;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> meshFS.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(points.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), faceCounts.length(),</div>\n\
<div class=\"line\">        points, faceCounts, faceConnects, outData, &amp;stat);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> animCube::compute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data)</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == outputMesh) {</div>\n\
<div class=\"line\">        <span class=\"comment\">/* Get time */</span></div>\n\
<div class=\"line\">        <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> timeData = data.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( time, &amp;returnStatus ); </div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;Error getting time data handle\\n&quot;</span>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> time = timeData.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">/* Get output object */</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outputHandle = data.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(outputMesh, &amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR getting polygon data handle\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html\">MFnMeshData</a> dataCreator;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newOutputData = dataCreator.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating outputData&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        createMesh(time, newOutputData, returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating new Cube&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        outputHandle.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(newOutputData);</div>\n\
<div class=\"line\">        data.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(<span class=\"stringliteral\">&quot;animCube&quot;</span>, animCube::id,</div>\n\
<div class=\"line\">                         animCube::creator, animCube::initialize);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(animCube::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";