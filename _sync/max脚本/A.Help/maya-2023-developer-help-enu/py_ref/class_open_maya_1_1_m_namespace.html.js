var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: OpenMaya.MNamespace Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'class_open_maya_1_1_m_namespace.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: OpenMaya.MNamespace Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenMaya.MNamespace Class Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_open_maya_1_1_m_namespace.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Inheritance diagram for OpenMaya.MNamespace:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"py_ref/class_open_maya_1_1_m_namespace.png\" usemap=\"#OpenMaya.MNamespace_map\" alt=\"\">\n\
  <map id=\"OpenMaya.MNamespace_map\" name=\"OpenMaya.MNamespace_map\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a3de472dd7b5504e244d7aa3936a94447\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a3de472dd7b5504e244d7aa3936a94447\">addNamespace</a> ()</td></tr>\n\
<tr class=\"separator:a3de472dd7b5504e244d7aa3936a94447\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abffcf9809a4b48180077cbd904880205\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#abffcf9809a4b48180077cbd904880205\">currentNamespace</a> ()</td></tr>\n\
<tr class=\"separator:abffcf9809a4b48180077cbd904880205\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad23825821cf6535df7b3f7859c4a55ed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#ad23825821cf6535df7b3f7859c4a55ed\">getNamespaceFromName</a> ()</td></tr>\n\
<tr class=\"separator:ad23825821cf6535df7b3f7859c4a55ed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af3ca3f9616503f8620e48ec9006f6fae\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#af3ca3f9616503f8620e48ec9006f6fae\">getNamespaceObjects</a> ()</td></tr>\n\
<tr class=\"separator:af3ca3f9616503f8620e48ec9006f6fae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a613f266080fdffe01508017a942114ee\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a613f266080fdffe01508017a942114ee\">getNamespaces</a> ()</td></tr>\n\
<tr class=\"separator:a613f266080fdffe01508017a942114ee\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac3442c8b5575d4dd9b0ee5801b2d5f9f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#ac3442c8b5575d4dd9b0ee5801b2d5f9f\">makeNamepathAbsolute</a> ()</td></tr>\n\
<tr class=\"separator:ac3442c8b5575d4dd9b0ee5801b2d5f9f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a65395b683086a52ae0078e44b6d232bb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a65395b683086a52ae0078e44b6d232bb\">moveNamespace</a> ()</td></tr>\n\
<tr class=\"separator:a65395b683086a52ae0078e44b6d232bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a950a6b92f5ecd8e2b387750df3ff9c83\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a950a6b92f5ecd8e2b387750df3ff9c83\">namespaceExists</a> ()</td></tr>\n\
<tr class=\"separator:a950a6b92f5ecd8e2b387750df3ff9c83\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aafc47195851f4a5d626ecc2daf626ad1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#aafc47195851f4a5d626ecc2daf626ad1\">parentNamespace</a> ()</td></tr>\n\
<tr class=\"separator:aafc47195851f4a5d626ecc2daf626ad1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a121f1df9ae9ac13ee3b3aa5d9678c45a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a121f1df9ae9ac13ee3b3aa5d9678c45a\">relativeNames</a> ()</td></tr>\n\
<tr class=\"separator:a121f1df9ae9ac13ee3b3aa5d9678c45a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2ac6e06803735d47995b70256296bde8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a2ac6e06803735d47995b70256296bde8\">removeNamespace</a> ()</td></tr>\n\
<tr class=\"separator:a2ac6e06803735d47995b70256296bde8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ade194990747a9073f37c45b8a861c122\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#ade194990747a9073f37c45b8a861c122\">renameNamespace</a> ()</td></tr>\n\
<tr class=\"separator:ade194990747a9073f37c45b8a861c122\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac072c503e8096355b9f2e74d97c3f373\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#ac072c503e8096355b9f2e74d97c3f373\">rootNamespace</a> ()</td></tr>\n\
<tr class=\"separator:ac072c503e8096355b9f2e74d97c3f373\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a28a9e4abb891cac28625d4a43decf7c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a28a9e4abb891cac28625d4a43decf7c7\">setCurrentNamespace</a> ()</td></tr>\n\
<tr class=\"separator:a28a9e4abb891cac28625d4a43decf7c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a837a3786cf98a9e89b86f7fcc4ed06f3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a837a3786cf98a9e89b86f7fcc4ed06f3\">setRelativeNames</a> ()</td></tr>\n\
<tr class=\"separator:a837a3786cf98a9e89b86f7fcc4ed06f3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1b3b18602a122e14d6cb2d0602f46ed7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a1b3b18602a122e14d6cb2d0602f46ed7\">stripNamespaceFromName</a> ()</td></tr>\n\
<tr class=\"separator:a1b3b18602a122e14d6cb2d0602f46ed7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1cc803332a34822bcfe24bf9511baefd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_namespace.html#a1cc803332a34822bcfe24bf9511baefd\">validateName</a> ()</td></tr>\n\
<tr class=\"separator:a1cc803332a34822bcfe24bf9511baefd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><pre class=\"fragment\">Access Maya namespace functionality.</pre> </div><h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a3de472dd7b5504e244d7aa3936a94447\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.addNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">addNamespace(MString name, MString parent=None)\n\
\n\
Create the namespace \'name\'. If the `parent\' namespace is given\n\
the new namespace will be a child of `parent\', otherwise the new\n\
namespace will be a child of the current namespace.\n\
The new namespace is added, but not made current. To make the\n\
new namespace be current use MNamespace.setCurrentNamespace().\n\
Note that adding a namespace changes the scene, so any code that calls\n\
this method needs to handle undo.  \n\
\n\
     name    The new namespace to create. A qualified or unqualified \n\
 name may be used. If a qualified name is used and one or \n\
 more of the higher level namespaces do not already exist, \n\
 they will be created automatically. For example, if the new \n\
 name is \'a:b:c\' and \'a\' does not yet exist, then it will be \n\
 created automatically and \'b\' automatically created beneath \n\
 it and finally \'c\' will be created beneath \'b\'.\n\
 If the supplied name contains invalid characters it will first \n\
 be modified as per the validateName() method.\n\
     parent  The fully qualified name of the namespace under which \n\
 the new one is to be created. If not provided then the \n\
 current namespace will be used. If the name of the new \n\
 namespace is absolute (i.e. begins with a colon, \':a:b:c\') \n\
 then the \'parent\' parameter will be ignored and the new namespace \n\
 will be created under the root namespace.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abffcf9809a4b48180077cbd904880205\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.currentNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentNamespace() -&gt; MString\n\
\n\
Get the name of the current namespace. This name is returned \n\
as an absolute namepath (i.e. fully qualfied from the root \n\
namespace downwards, \':a:b:c\').</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad23825821cf6535df7b3f7859c4a55ed\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.getNamespaceFromName </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNamespaceFromName(MString fullName) -&gt; MString\n\
\n\
Get namespace from a full name. \n\
For example, given a full name: \'a:b:c:d:ball\' this method \n\
would return: \'a:b:c:d\'.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af3ca3f9616503f8620e48ec9006f6fae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.getNamespaceObjects </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNamespaceObjects(MString parentNamespace, bool recurse=False) -&gt; MObjectArray\n\
\n\
Return an array of MObjects representing the object contained within \n\
the specified namespace. To query the current namespace, call this \n\
method in this way:</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a613f266080fdffe01508017a942114ee\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.getNamespaces </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNamespaces(MString parentNamespace=None, bool recurse=False) -&gt; [MString]\n\
\n\
Return a list of all namespaces in the current namespace.\n\
Notes:\n\
    1)  Names returned are always absolute (e.g. :a:b:sphere).\n\
    2)  The list returned is just the child namespaces (and\n\
        descendents if `recurse\' is true). It thus never contains\n\
        the root namespace in the list returned.\n\
\n\
           parentNamespace  the namespace to query.\n\
           recurse          optional parameter to control whether all\n\
                namespaces or just top-level namespaces\n\
                are returned. A value of false (the\n\
                default if unspecified) causes only the\n\
                top-level namespaces to be returned. If\n\
                true, all namespaces will be listed.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac3442c8b5575d4dd9b0ee5801b2d5f9f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.makeNamepathAbsolute </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">makeNamepathAbsolute(MString fullName) -&gt; MString\n\
\n\
Make a namepath which is relative to the root into an absolute \n\
namepath. For example, given the namepath \'a:sphere\' this method \n\
returns \':a:sphere\'. It also culls out duplicate and trailing \n\
separators, e.g. \'a:b::c:\' will return \':a:b:c\'.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a65395b683086a52ae0078e44b6d232bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.moveNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">moveNamespace(MString src, MString dst, bool force=False)\n\
\n\
Move the contents of the namespace \'src\' into the namespace \'dst\'. \n\
Note that moving namespace contents changes the scene, so any code \n\
that calls this method needs to handle undo. \n\
\n\
          src       source namespace from which objects will be moved. \n\
          dst       destination namespace to which objects will be moved. \n\
          force     optional parameter which if true forces the move \n\
        even if name clashes occur, in which case nodes are \n\
        renamed to ensure uniqueness. If false, the move \n\
        will not happen if there are clashes. The default \n\
        value is false.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a950a6b92f5ecd8e2b387750df3ff9c83\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.namespaceExists </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">namespaceExists(MString name) -&gt; bool\n\
\n\
Check if a given namespace exists.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aafc47195851f4a5d626ecc2daf626ad1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.parentNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">parentNamespace() -&gt; MString\n\
\n\
Get the name of the current namespace\'s parent. This name is returned \n\
as an absolute namepath (i.e. fully qualfied from the root namespace \n\
downwards, \':a:b\'). If the root namespace is \n\
current, this method returns an error.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a121f1df9ae9ac13ee3b3aa5d9678c45a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.relativeNames </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">relativeNames() -&gt; bool\n\
\n\
Query Maya\'s current \'relative name lookup\' state. Relative name \n\
lookup causes lookups to be relative to the current namespace. \n\
By default, relative name lookup in Maya is off, which causes \n\
name lookups to be relative to the root namespace. For example, \n\
if you have the object :a:b:sphere, and the current namespace is \n\
\':a:b\', in relative name lookup mode you can issue a command like \n\
\n\
    setAttr sphere.translateX 10; \n\
\n\
If relative name lookup is off, you need to specify the full \n\
namepath, e.g. \n\
\n\
    setAttr a:b:sphere.translateX 10;</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2ac6e06803735d47995b70256296bde8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.removeNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">removeNamespace(MString name, bool removeContents=False)\n\
\n\
Remove the specified namespace. \n\
Note that removing a namespace changes the scene, so any code \n\
that calls this method needs to handle undo.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ade194990747a9073f37c45b8a861c122\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.renameNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">renameNamespace(MString oldName, MString newName, MString parent=None)\n\
\n\
Rename the specified namespace to a new name with optional parent name. \n\
Note that removing a namespace changes the scene, so any code \n\
that calls this method needs to handle undo.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac072c503e8096355b9f2e74d97c3f373\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.rootNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">rootNamespace() -&gt; MString\n\
\n\
Get the name of the root namespace. This name is an absolute\n\
namepath (i.e. prefixed by a \':\').</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a28a9e4abb891cac28625d4a43decf7c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.setCurrentNamespace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setCurrentNamespace(MString name) -&gt; MString\n\
\n\
Set the specified namespace to be the current namespace. The \'name\' \n\
parameter you specify is relative to whatever namespace is current, \n\
but any namespace can be specified by passing an absolute name (e.g. :a:b:c).  \n\
Note that making a namespace current changes the scene, so any code \n\
that calls this method needs to handle undo. \n\
\n\
To make the root namespace become current, use:\n\
    MNamespace.setCurrentNamespace(MNamespace.rootNamespace())</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a837a3786cf98a9e89b86f7fcc4ed06f3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.setRelativeNames </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setRelativeNames(bool newState)\n\
\n\
Set relative name lookup mode. \n\
\n\
Note that turning on or off relativeNames mode can change the scene, \n\
so any code that calls this method needs to handle undo. \n\
See MNamespace.relativeNames() for details on relative name lookup. \n\
\n\
Note: relative name lookup mode is intended for bracketing user \n\
code which needs to be namespace-independent. Leaving relative \n\
name lookup enabled outside of your specific code could cause \n\
functionality such as 3rd-party plugins that assume absolute \n\
name lookup to fail. \n\
\n\
   newState         true to turn on relative name lookup, false to \n\
        turn it off. Maya\'s default setting is false.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1b3b18602a122e14d6cb2d0602f46ed7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.stripNamespaceFromName </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">stripNamespaceFromName(MString fullName) -&gt; MString\n\
\n\
Strips the namespace from a full name. \n\
For example, given a full name: \'a:b:c:d:ball\' this method  \n\
would return: \'ball\'.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1cc803332a34822bcfe24bf9511baefd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MNamespace.validateName </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">validateName(MString name) -&gt; MString\n\
\n\
Convert the specified name to a validated name which \n\
contains no illegal characters.\n\
The leading illegal characters will be removed and\n\
other illegal characters will be converted to \'_\'.\n\
\n\
For example, name \'@name@space@\' will be converted to \'name_space_\'.\n\
\n\
If the entire name consists solely of illegal characters, \n\
e.g. \'123\' which contains only leading digits, then the \n\
returned string will be empty.</pre> \n\
</div>\n\
</div>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";