var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: python/api1/py1SlopeShader.py</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'python_2api1_2py1_slope_shader_8py-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: python/api1/py1SlopeShader.py</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">python/api1/py1SlopeShader.py</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;<span class=\"comment\">#-</span></div>\n\
<div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"comment\"># ==========================================================================</span></div>\n\
<div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"comment\"># Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All </span></div>\n\
<div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"comment\"># rights reserved.</span></div>\n\
<div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;<span class=\"comment\"># The coded instructions, statements, computer programs, and/or related </span></div>\n\
<div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;<span class=\"comment\"># material (collectively the &quot;Data&quot;) in these files contain unpublished </span></div>\n\
<div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\"># information proprietary to Autodesk, Inc. (&quot;Autodesk&quot;) and/or its </span></div>\n\
<div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\"># licensors, which is protected by U.S. and Canadian federal copyright </span></div>\n\
<div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;<span class=\"comment\"># law and by international treaties.</span></div>\n\
<div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"comment\"># The Data is provided for use exclusively by You. You have the right </span></div>\n\
<div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;<span class=\"comment\"># to use, modify, and incorporate this Data into other products for </span></div>\n\
<div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;<span class=\"comment\"># purposes authorized by the Autodesk software license agreement, </span></div>\n\
<div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;<span class=\"comment\"># without fee.</span></div>\n\
<div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\">   17</span>&#160;<span class=\"comment\"># The copyright notices in the Software and this entire statement, </span></div>\n\
<div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;<span class=\"comment\"># including the above license grant, this restriction and the </span></div>\n\
<div class=\"line\"><a name=\"l00019\"></a><span class=\"lineno\">   19</span>&#160;<span class=\"comment\"># following disclaimer, must be included in all copies of the </span></div>\n\
<div class=\"line\"><a name=\"l00020\"></a><span class=\"lineno\">   20</span>&#160;<span class=\"comment\"># Software, in whole or in part, and all derivative works of </span></div>\n\
<div class=\"line\"><a name=\"l00021\"></a><span class=\"lineno\">   21</span>&#160;<span class=\"comment\"># the Software, unless such copies or derivative works are solely </span></div>\n\
<div class=\"line\"><a name=\"l00022\"></a><span class=\"lineno\">   22</span>&#160;<span class=\"comment\"># in the form of machine-executable object code generated by a </span></div>\n\
<div class=\"line\"><a name=\"l00023\"></a><span class=\"lineno\">   23</span>&#160;<span class=\"comment\"># source language processor.</span></div>\n\
<div class=\"line\"><a name=\"l00024\"></a><span class=\"lineno\">   24</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00025\"></a><span class=\"lineno\">   25</span>&#160;<span class=\"comment\"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND. </span></div>\n\
<div class=\"line\"><a name=\"l00026\"></a><span class=\"lineno\">   26</span>&#160;<span class=\"comment\"># AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED </span></div>\n\
<div class=\"line\"><a name=\"l00027\"></a><span class=\"lineno\">   27</span>&#160;<span class=\"comment\"># WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF </span></div>\n\
<div class=\"line\"><a name=\"l00028\"></a><span class=\"lineno\">   28</span>&#160;<span class=\"comment\"># NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR </span></div>\n\
<div class=\"line\"><a name=\"l00029\"></a><span class=\"lineno\">   29</span>&#160;<span class=\"comment\"># PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR </span></div>\n\
<div class=\"line\"><a name=\"l00030\"></a><span class=\"lineno\">   30</span>&#160;<span class=\"comment\"># TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS </span></div>\n\
<div class=\"line\"><a name=\"l00031\"></a><span class=\"lineno\">   31</span>&#160;<span class=\"comment\"># BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, </span></div>\n\
<div class=\"line\"><a name=\"l00032\"></a><span class=\"lineno\">   32</span>&#160;<span class=\"comment\"># DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK </span></div>\n\
<div class=\"line\"><a name=\"l00033\"></a><span class=\"lineno\">   33</span>&#160;<span class=\"comment\"># AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY </span></div>\n\
<div class=\"line\"><a name=\"l00034\"></a><span class=\"lineno\">   34</span>&#160;<span class=\"comment\"># OR PROBABILITY OF SUCH DAMAGES.</span></div>\n\
<div class=\"line\"><a name=\"l00035\"></a><span class=\"lineno\">   35</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00036\"></a><span class=\"lineno\">   36</span>&#160;<span class=\"comment\"># ==========================================================================</span></div>\n\
<div class=\"line\"><a name=\"l00037\"></a><span class=\"lineno\">   37</span>&#160;<span class=\"comment\">#+</span></div>\n\
<div class=\"line\"><a name=\"l00038\"></a><span class=\"lineno\">   38</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\">   39</span>&#160;<span class=\"comment\">########################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;<span class=\"comment\"># DESCRIPTION:</span></div>\n\
<div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\">   41</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;<span class=\"comment\"># Produces the dependency graph node &quot;spSlopeShader&quot;.</span></div>\n\
<div class=\"line\"><a name=\"l00043\"></a><span class=\"lineno\">   43</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;<span class=\"comment\"># This plug-in implements a Maya software shader in Python. An angle attribute</span></div>\n\
<div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\">   45</span>&#160;<span class=\"comment\"># is used to define the space on the object that is being shaded, which is both</span></div>\n\
<div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;<span class=\"comment\"># walkable and non-walkable. The walkable and non-walkable colors are set as </span></div>\n\
<div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\">   47</span>&#160;<span class=\"comment\"># attributes on the node. The shader will render both the walkable and non-walkable</span></div>\n\
<div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;<span class=\"comment\"># areas based on the color that has been set.</span></div>\n\
<div class=\"line\"><a name=\"l00049\"></a><span class=\"lineno\">   49</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;<span class=\"comment\"># To use:</span></div>\n\
<div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00052\"></a><span class=\"lineno\">   52</span>&#160;<span class=\"comment\">#   (1) Load the slopeShader.py plug-in into Maya.</span></div>\n\
<div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;<span class=\"comment\">#   </span></div>\n\
<div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;<span class=\"comment\">#       import maya</span></div>\n\
<div class=\"line\"><a name=\"l00055\"></a><span class=\"lineno\">   55</span>&#160;<span class=\"comment\">#       maya.cmds.loadPlugin(&quot;slopeShader.py&quot;)</span></div>\n\
<div class=\"line\"><a name=\"l00056\"></a><span class=\"lineno\">   56</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00057\"></a><span class=\"lineno\">   57</span>&#160;<span class=\"comment\">#   (2) Create a polygon sphere.</span></div>\n\
<div class=\"line\"><a name=\"l00058\"></a><span class=\"lineno\">   58</span>&#160;<span class=\"comment\">#   (3) Assign a shader to the sphere.</span></div>\n\
<div class=\"line\"><a name=\"l00059\"></a><span class=\"lineno\">   59</span>&#160;<span class=\"comment\">#   (4) Open the Attribute Editor &gt; Color Channel &gt; Utilities &gt; spSlopeShader to apply</span></div>\n\
<div class=\"line\"><a name=\"l00060\"></a><span class=\"lineno\">   60</span>&#160;<span class=\"comment\">#       the texture on the sphere.</span></div>\n\
<div class=\"line\"><a name=\"l00061\"></a><span class=\"lineno\">   61</span>&#160;<span class=\"comment\">#   (5) Render the scene to view the results.</span></div>\n\
<div class=\"line\"><a name=\"l00062\"></a><span class=\"lineno\">   62</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00063\"></a><span class=\"lineno\">   63</span>&#160;<span class=\"comment\"># The angle attribute can be adjusted to see different results.</span></div>\n\
<div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;<span class=\"comment\">########################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00066\"></a><span class=\"lineno\">   66</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00067\"></a><span class=\"lineno\">   67</span>&#160;<span class=\"comment\"># imports</span></div>\n\
<div class=\"line\"><a name=\"l00068\"></a><span class=\"lineno\">   68</span>&#160;<span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> range</div>\n\
<div class=\"line\"><a name=\"l00069\"></a><span class=\"lineno\">   69</span>&#160;<span class=\"keyword\">import</span> maya.OpenMaya <span class=\"keyword\">as</span> OpenMaya</div>\n\
<div class=\"line\"><a name=\"l00070\"></a><span class=\"lineno\">   70</span>&#160;<span class=\"keyword\">import</span> maya.OpenMayaUI <span class=\"keyword\">as</span> OpenMayaUI</div>\n\
<div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;<span class=\"keyword\">import</span> maya.OpenMayaMPx <span class=\"keyword\">as</span> OpenMayaMPx</div>\n\
<div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;<span class=\"keyword\">import</span> math, sys</div>\n\
<div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\">   74</span>&#160;<span class=\"comment\"># consts</span></div>\n\
<div class=\"line\"><a name=\"l00075\"></a><span class=\"lineno\">   75</span>&#160;kSlopeShaderBehaviourName = <span class=\"stringliteral\">&quot;slopeShaderBehaviour&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00076\"></a><span class=\"lineno\">   76</span>&#160;kSlopeNodeName = <span class=\"stringliteral\">&quot;spSlopeShader&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00077\"></a><span class=\"lineno\">   77</span>&#160;kSlopeNodeClassify = <span class=\"stringliteral\">&quot;utility/color&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00078\"></a><span class=\"lineno\">   78</span>&#160;kSlopeNodeId = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_type_id.html\">OpenMaya.MTypeId</a>(0x00080049)</div>\n\
<div class=\"line\"><a name=\"l00079\"></a><span class=\"lineno\">   79</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00080\"></a><span class=\"lineno\">   80</span>&#160;<span class=\"comment\"># Node definition</span></div>\n\
<div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;<span class=\"keyword\">class </span>slopeShader(OpenMayaMPx.MPxNode):</div>\n\
<div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;    <span class=\"comment\"># class variables</span></div>\n\
<div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\">   83</span>&#160;    aAngle = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;    aColor1 = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00085\"></a><span class=\"lineno\">   85</span>&#160;    aColor2 = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00086\"></a><span class=\"lineno\">   86</span>&#160;    aTriangleNormalCamera = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00087\"></a><span class=\"lineno\">   87</span>&#160;    aOutColor = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00088\"></a><span class=\"lineno\">   88</span>&#160;    aMatrixEyeToWorld = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;    aDirtyShaderAttr = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00091\"></a><span class=\"lineno\">   91</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l00092\"></a><span class=\"lineno\">   92</span>&#160;        OpenMayaMPx.MPxNode.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l00093\"></a><span class=\"lineno\">   93</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00094\"></a><span class=\"lineno\">   94</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00095\"></a><span class=\"lineno\">   95</span>&#160;    <span class=\"keyword\">def </span>compute(self, plug, dataBlock):</div>\n\
<div class=\"line\"><a name=\"l00096\"></a><span class=\"lineno\">   96</span>&#160;        <span class=\"keywordflow\">if</span> plug == slopeShader.aOutColor <span class=\"keywordflow\">or</span> plug.parent() == slopeShader.aOutColor:</div>\n\
<div class=\"line\"><a name=\"l00097\"></a><span class=\"lineno\">   97</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00098\"></a><span class=\"lineno\">   98</span>&#160;            resultColor = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_float_vector.html\">OpenMaya.MFloatVector</a>(0.0,0.0,0.0)</div>\n\
<div class=\"line\"><a name=\"l00099\"></a><span class=\"lineno\">   99</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00100\"></a><span class=\"lineno\">  100</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00101\"></a><span class=\"lineno\">  101</span>&#160;                dataHandle = dataBlock.inputValue( slopeShader.aColor1 )</div>\n\
<div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\">  102</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\">  103</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get inputValue aColor1&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\">  105</span>&#160;            walkable = dataHandle.asFloatVector()</div>\n\
<div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\">  107</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00108\"></a><span class=\"lineno\">  108</span>&#160;                dataHandle = dataBlock.inputValue( slopeShader.aColor2 )</div>\n\
<div class=\"line\"><a name=\"l00109\"></a><span class=\"lineno\">  109</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00110\"></a><span class=\"lineno\">  110</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get inputValue aColor2&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00111\"></a><span class=\"lineno\">  111</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00112\"></a><span class=\"lineno\">  112</span>&#160;            nonWalkable = dataHandle.asFloatVector()</div>\n\
<div class=\"line\"><a name=\"l00113\"></a><span class=\"lineno\">  113</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00114\"></a><span class=\"lineno\">  114</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00115\"></a><span class=\"lineno\">  115</span>&#160;                dataHandle = dataBlock.inputValue( slopeShader.aTriangleNormalCamera )</div>\n\
<div class=\"line\"><a name=\"l00116\"></a><span class=\"lineno\">  116</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00117\"></a><span class=\"lineno\">  117</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get inputValue aTriangleNormalCamera&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00118\"></a><span class=\"lineno\">  118</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00119\"></a><span class=\"lineno\">  119</span>&#160;            surfaceNormal = dataHandle.asFloatVector()</div>\n\
<div class=\"line\"><a name=\"l00120\"></a><span class=\"lineno\">  120</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00121\"></a><span class=\"lineno\">  121</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00122\"></a><span class=\"lineno\">  122</span>&#160;                dataHandle = dataBlock.inputValue( slopeShader.aMatrixEyeToWorld )</div>\n\
<div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get inputValue aMatrixEyeToWorld&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00126\"></a><span class=\"lineno\">  126</span>&#160;            viewMatrix = dataHandle.asFloatMatrix()</div>\n\
<div class=\"line\"><a name=\"l00127\"></a><span class=\"lineno\">  127</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;            <span class=\"comment\"># Get the angle</span></div>\n\
<div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\">  129</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00130\"></a><span class=\"lineno\">  130</span>&#160;                dataHandle = dataBlock.inputValue( slopeShader.aAngle )</div>\n\
<div class=\"line\"><a name=\"l00131\"></a><span class=\"lineno\">  131</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get inputValue aAngle&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00134\"></a><span class=\"lineno\">  134</span>&#160;            angle = dataHandle.asFloat()</div>\n\
<div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;            yVector = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_float_vector.html\">OpenMaya.MFloatVector</a>(0, 1, 0)</div>\n\
<div class=\"line\"><a name=\"l00137\"></a><span class=\"lineno\">  137</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;            <span class=\"comment\"># Normalize the view vector</span></div>\n\
<div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00140\"></a><span class=\"lineno\">  140</span>&#160;            surfaceNormal.normalize()</div>\n\
<div class=\"line\"><a name=\"l00141\"></a><span class=\"lineno\">  141</span>&#160;            WSVector = surfaceNormal * viewMatrix</div>\n\
<div class=\"line\"><a name=\"l00142\"></a><span class=\"lineno\">  142</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00143\"></a><span class=\"lineno\">  143</span>&#160;            <span class=\"comment\"># find dot product</span></div>\n\
<div class=\"line\"><a name=\"l00144\"></a><span class=\"lineno\">  144</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\">  145</span>&#160;            scalarNormal = WSVector * yVector</div>\n\
<div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\">  146</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\">  147</span>&#160;            <span class=\"comment\"># take the absolute value</span></div>\n\
<div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\">  148</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00149\"></a><span class=\"lineno\">  149</span>&#160;            <span class=\"keywordflow\">if</span> scalarNormal &lt; 0.0:</div>\n\
<div class=\"line\"><a name=\"l00150\"></a><span class=\"lineno\">  150</span>&#160;                scalarNormal *= -1.0</div>\n\
<div class=\"line\"><a name=\"l00151\"></a><span class=\"lineno\">  151</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00152\"></a><span class=\"lineno\">  152</span>&#160;            radianAngle = math.radians(angle)</div>\n\
<div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;            cosOfAngle = math.cos(radianAngle)</div>\n\
<div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\">  154</span>&#160;            <span class=\"keywordflow\">if</span> cosOfAngle &lt; scalarNormal:</div>\n\
<div class=\"line\"><a name=\"l00155\"></a><span class=\"lineno\">  155</span>&#160;                resultColor = walkable</div>\n\
<div class=\"line\"><a name=\"l00156\"></a><span class=\"lineno\">  156</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00157\"></a><span class=\"lineno\">  157</span>&#160;                resultColor = nonWalkable</div>\n\
<div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\">  158</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\">  159</span>&#160;            <span class=\"comment\"># set output color attribute</span></div>\n\
<div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\">  160</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\">  161</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\">  162</span>&#160;                outColorHandle = dataBlock.outputValue( slopeShader.aOutColor )</div>\n\
<div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\">  164</span>&#160;                sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to get outputValue aOutColor&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00165\"></a><span class=\"lineno\">  165</span>&#160;                <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\">  166</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;            outColorHandle.setMFloatVector(resultColor)</div>\n\
<div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;            outColorHandle.setClean()</div>\n\
<div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\">  169</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00170\"></a><span class=\"lineno\">  170</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00171\"></a><span class=\"lineno\">  171</span>&#160;            <span class=\"keywordflow\">return</span> OpenMaya.kUnknownParameter</div>\n\
<div class=\"line\"><a name=\"l00172\"></a><span class=\"lineno\">  172</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00173\"></a><span class=\"lineno\">  173</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;    <span class=\"keyword\">def </span>postConstructor(self):</div>\n\
<div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;        print(<span class=\"stringliteral\">&quot;In slopeShader.postConstructor&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00176\"></a><span class=\"lineno\">  176</span>&#160;        <span class=\"comment\"># OpenMayaMPx.MPxNode.setMPSafe(self, 1)</span></div>\n\
<div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\">  177</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\">  178</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00179\"></a><span class=\"lineno\">  179</span>&#160;<span class=\"keyword\">class </span>slopeShaderBehavior(OpenMayaMPx.MPxDragAndDropBehavior):</div>\n\
<div class=\"line\"><a name=\"l00180\"></a><span class=\"lineno\">  180</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l00181\"></a><span class=\"lineno\">  181</span>&#160;        OpenMayaMPx.MPxDragAndDropBehavior.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l00182\"></a><span class=\"lineno\">  182</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\">  184</span>&#160;    <span class=\"keyword\">def </span>shouldBeUsedFor(self, sourceNode, destinationNode, sourcePlug, destinationPlug):</div>\n\
<div class=\"line\"><a name=\"l00185\"></a><span class=\"lineno\">  185</span>&#160;        <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00186\"></a><span class=\"lineno\">  186</span>&#160;<span class=\"stringliteral\">        Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><a name=\"l00187\"></a><span class=\"lineno\">  187</span>&#160;<span class=\"stringliteral\">        this method will return True if it is going to handle the connection</span></div>\n\
<div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;<span class=\"stringliteral\">        between the two nodes given.</span></div>\n\
<div class=\"line\"><a name=\"l00189\"></a><span class=\"lineno\">  189</span>&#160;<span class=\"stringliteral\">        &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;        result = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;        <span class=\"keywordflow\">if</span> sourceNode.hasFn(OpenMaya.MFn.kLambert):</div>\n\
<div class=\"line\"><a name=\"l00193\"></a><span class=\"lineno\">  193</span>&#160;            <span class=\"comment\">#if the source node was a lambert</span></div>\n\
<div class=\"line\"><a name=\"l00194\"></a><span class=\"lineno\">  194</span>&#160;            <span class=\"comment\">#than we will check the downstream connections to see </span></div>\n\
<div class=\"line\"><a name=\"l00195\"></a><span class=\"lineno\">  195</span>&#160;            <span class=\"comment\">#if a slope shader is assigned to it.</span></div>\n\
<div class=\"line\"><a name=\"l00196\"></a><span class=\"lineno\">  196</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00197\"></a><span class=\"lineno\">  197</span>&#160;            shaderNode = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00198\"></a><span class=\"lineno\">  198</span>&#160;            src = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(sourceNode)</div>\n\
<div class=\"line\"><a name=\"l00199\"></a><span class=\"lineno\">  199</span>&#160;            connections = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_plug_array.html\">OpenMaya.MPlugArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00200\"></a><span class=\"lineno\">  200</span>&#160;            src.getConnections(connections)</div>\n\
<div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00202\"></a><span class=\"lineno\">  202</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(connections.length()):</div>\n\
<div class=\"line\"><a name=\"l00203\"></a><span class=\"lineno\">  203</span>&#160;                <span class=\"comment\">#check the incoming connections to this plug</span></div>\n\
<div class=\"line\"><a name=\"l00204\"></a><span class=\"lineno\">  204</span>&#160;                <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;                connectedPlugs = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_plug_array.html\">OpenMaya.MPlugArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00206\"></a><span class=\"lineno\">  206</span>&#160;                connections[i].connectedTo(connectedPlugs, <span class=\"keyword\">True</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l00207\"></a><span class=\"lineno\">  207</span>&#160;                <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(connectedPlugs.length()):</div>\n\
<div class=\"line\"><a name=\"l00208\"></a><span class=\"lineno\">  208</span>&#160;                    <span class=\"comment\">#if the incoming node is a slope shader than </span></div>\n\
<div class=\"line\"><a name=\"l00209\"></a><span class=\"lineno\">  209</span>&#160;                    <span class=\"comment\">#set shaderNode equal to it and break out of the inner </span></div>\n\
<div class=\"line\"><a name=\"l00210\"></a><span class=\"lineno\">  210</span>&#160;                    <span class=\"comment\">#loop</span></div>\n\
<div class=\"line\"><a name=\"l00211\"></a><span class=\"lineno\">  211</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00212\"></a><span class=\"lineno\">  212</span>&#160;                    testNode = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(connectedPlugs[j].node())</div>\n\
<div class=\"line\"><a name=\"l00213\"></a><span class=\"lineno\">  213</span>&#160;                    <span class=\"keywordflow\">if</span> testNode.typeName() == kSlopeNodeName:</div>\n\
<div class=\"line\"><a name=\"l00214\"></a><span class=\"lineno\">  214</span>&#160;                        shaderNode = connectedPlugs[j].node()</div>\n\
<div class=\"line\"><a name=\"l00215\"></a><span class=\"lineno\">  215</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l00216\"></a><span class=\"lineno\">  216</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00217\"></a><span class=\"lineno\">  217</span>&#160;                <span class=\"comment\">#if the shaderNode is not None</span></div>\n\
<div class=\"line\"><a name=\"l00218\"></a><span class=\"lineno\">  218</span>&#160;                <span class=\"comment\">#than we have found a slopeShader</span></div>\n\
<div class=\"line\"><a name=\"l00219\"></a><span class=\"lineno\">  219</span>&#160;                <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00220\"></a><span class=\"lineno\">  220</span>&#160;                <span class=\"keywordflow\">if</span> shaderNode <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>:</div>\n\
<div class=\"line\"><a name=\"l00221\"></a><span class=\"lineno\">  221</span>&#160;                    <span class=\"comment\">#if the destination node is a mesh than we will take</span></div>\n\
<div class=\"line\"><a name=\"l00222\"></a><span class=\"lineno\">  222</span>&#160;                    <span class=\"comment\">#care of this connection so set the result to True</span></div>\n\
<div class=\"line\"><a name=\"l00223\"></a><span class=\"lineno\">  223</span>&#160;                    <span class=\"comment\">#and break out of the outer loop</span></div>\n\
<div class=\"line\"><a name=\"l00224\"></a><span class=\"lineno\">  224</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00225\"></a><span class=\"lineno\">  225</span>&#160;                    <span class=\"keywordflow\">if</span> destinationNode.hasFn(OpenMaya.MFn.kMesh):</div>\n\
<div class=\"line\"><a name=\"l00226\"></a><span class=\"lineno\">  226</span>&#160;                        result = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00227\"></a><span class=\"lineno\">  227</span>&#160;                    <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l00228\"></a><span class=\"lineno\">  228</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00229\"></a><span class=\"lineno\">  229</span>&#160;        node = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(sourceNode)</div>\n\
<div class=\"line\"><a name=\"l00230\"></a><span class=\"lineno\">  230</span>&#160;        <span class=\"keywordflow\">if</span> node.typeName() == kSlopeNodeName:</div>\n\
<div class=\"line\"><a name=\"l00231\"></a><span class=\"lineno\">  231</span>&#160;            <span class=\"comment\">#if the sourceNode is a slope shader than check what we</span></div>\n\
<div class=\"line\"><a name=\"l00232\"></a><span class=\"lineno\">  232</span>&#160;            <span class=\"comment\">#are dropping on to</span></div>\n\
<div class=\"line\"><a name=\"l00233\"></a><span class=\"lineno\">  233</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00234\"></a><span class=\"lineno\">  234</span>&#160;            <span class=\"keywordflow\">if</span> destinationNode.hasFn(OpenMaya.MFn.kLambert):</div>\n\
<div class=\"line\"><a name=\"l00235\"></a><span class=\"lineno\">  235</span>&#160;                result = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00236\"></a><span class=\"lineno\">  236</span>&#160;            <span class=\"keywordflow\">elif</span> destinationNode.hasFn(OpenMaya.MFn.kMesh):</div>\n\
<div class=\"line\"><a name=\"l00237\"></a><span class=\"lineno\">  237</span>&#160;                result = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00238\"></a><span class=\"lineno\">  238</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00239\"></a><span class=\"lineno\">  239</span>&#160;        <span class=\"keywordflow\">return</span> result</div>\n\
<div class=\"line\"><a name=\"l00240\"></a><span class=\"lineno\">  240</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00241\"></a><span class=\"lineno\">  241</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00242\"></a><span class=\"lineno\">  242</span>&#160;    <span class=\"keyword\">def </span>connectNodeToNode(self, sourceNode, destinationNode, force):</div>\n\
<div class=\"line\"><a name=\"l00243\"></a><span class=\"lineno\">  243</span>&#160;        <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00244\"></a><span class=\"lineno\">  244</span>&#160;<span class=\"stringliteral\">        Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><a name=\"l00245\"></a><span class=\"lineno\">  245</span>&#160;<span class=\"stringliteral\">        this method will handle the connection between the slopeShader and the shader it is</span></div>\n\
<div class=\"line\"><a name=\"l00246\"></a><span class=\"lineno\">  246</span>&#160;<span class=\"stringliteral\">        assigned to as well as any meshes that it is assigned to.</span></div>\n\
<div class=\"line\"><a name=\"l00247\"></a><span class=\"lineno\">  247</span>&#160;<span class=\"stringliteral\">        &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00248\"></a><span class=\"lineno\">  248</span>&#160;        src = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(sourceNode)</div>\n\
<div class=\"line\"><a name=\"l00249\"></a><span class=\"lineno\">  249</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00250\"></a><span class=\"lineno\">  250</span>&#160;        <span class=\"comment\">#if we are dragging from a lambert</span></div>\n\
<div class=\"line\"><a name=\"l00251\"></a><span class=\"lineno\">  251</span>&#160;        <span class=\"comment\">#we want to check what we are dragging</span></div>\n\
<div class=\"line\"><a name=\"l00252\"></a><span class=\"lineno\">  252</span>&#160;        <span class=\"comment\">#onto.</span></div>\n\
<div class=\"line\"><a name=\"l00253\"></a><span class=\"lineno\">  253</span>&#160;        <span class=\"keywordflow\">if</span> sourceNode.hasFn(OpenMaya.MFn.kLambert):</div>\n\
<div class=\"line\"><a name=\"l00254\"></a><span class=\"lineno\">  254</span>&#160;            shaderNode = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00255\"></a><span class=\"lineno\">  255</span>&#160;            connections = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_plug_array.html\">OpenMaya.MPlugArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00256\"></a><span class=\"lineno\">  256</span>&#160;            shaderNodes = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object_array.html\">OpenMaya.MObjectArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00257\"></a><span class=\"lineno\">  257</span>&#160;            shaderNodes.clear()</div>\n\
<div class=\"line\"><a name=\"l00258\"></a><span class=\"lineno\">  258</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00259\"></a><span class=\"lineno\">  259</span>&#160;            <span class=\"comment\">#if the source node was a lambert</span></div>\n\
<div class=\"line\"><a name=\"l00260\"></a><span class=\"lineno\">  260</span>&#160;            <span class=\"comment\">#than we will check the downstream connections to see </span></div>\n\
<div class=\"line\"><a name=\"l00261\"></a><span class=\"lineno\">  261</span>&#160;            <span class=\"comment\">#if a slope shader is assigned to it.</span></div>\n\
<div class=\"line\"><a name=\"l00262\"></a><span class=\"lineno\">  262</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00263\"></a><span class=\"lineno\">  263</span>&#160;            src.getConnections(connections)</div>\n\
<div class=\"line\"><a name=\"l00264\"></a><span class=\"lineno\">  264</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(connections.length()):</div>\n\
<div class=\"line\"><a name=\"l00265\"></a><span class=\"lineno\">  265</span>&#160;                <span class=\"comment\">#check the incoming connections to this plug</span></div>\n\
<div class=\"line\"><a name=\"l00266\"></a><span class=\"lineno\">  266</span>&#160;                <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00267\"></a><span class=\"lineno\">  267</span>&#160;                connectedPlugs = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_plug_array.html\">OpenMaya.MPlugArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00268\"></a><span class=\"lineno\">  268</span>&#160;                connections[i].connectedTo(connectedPlugs, <span class=\"keyword\">True</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l00269\"></a><span class=\"lineno\">  269</span>&#160;                <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(connectedPlugs.length()):</div>\n\
<div class=\"line\"><a name=\"l00270\"></a><span class=\"lineno\">  270</span>&#160;                    <span class=\"comment\">#if the incoming node is a slope shader than </span></div>\n\
<div class=\"line\"><a name=\"l00271\"></a><span class=\"lineno\">  271</span>&#160;                    <span class=\"comment\">#append the node to the shaderNodes array</span></div>\n\
<div class=\"line\"><a name=\"l00272\"></a><span class=\"lineno\">  272</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00273\"></a><span class=\"lineno\">  273</span>&#160;                    currentnode = connectedPlugs[j].node()</div>\n\
<div class=\"line\"><a name=\"l00274\"></a><span class=\"lineno\">  274</span>&#160;                    <span class=\"keywordflow\">if</span> <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(currentnode).typeName() == kSlopeNodeName:</div>\n\
<div class=\"line\"><a name=\"l00275\"></a><span class=\"lineno\">  275</span>&#160;                        shaderNodes.append(currentnode)</div>\n\
<div class=\"line\"><a name=\"l00276\"></a><span class=\"lineno\">  276</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00277\"></a><span class=\"lineno\">  277</span>&#160;            <span class=\"comment\">#if we found a shading node</span></div>\n\
<div class=\"line\"><a name=\"l00278\"></a><span class=\"lineno\">  278</span>&#160;            <span class=\"comment\">#than check the destination node </span></div>\n\
<div class=\"line\"><a name=\"l00279\"></a><span class=\"lineno\">  279</span>&#160;            <span class=\"comment\">#type to see if it is a mesh</span></div>\n\
<div class=\"line\"><a name=\"l00280\"></a><span class=\"lineno\">  280</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00281\"></a><span class=\"lineno\">  281</span>&#160;            <span class=\"keywordflow\">if</span> shaderNodes.length() &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l00282\"></a><span class=\"lineno\">  282</span>&#160;                dest = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(destinationNode)</div>\n\
<div class=\"line\"><a name=\"l00283\"></a><span class=\"lineno\">  283</span>&#160;                <span class=\"keywordflow\">if</span> destinationNode.hasFn(OpenMaya.MFn.kMesh):</div>\n\
<div class=\"line\"><a name=\"l00284\"></a><span class=\"lineno\">  284</span>&#160;                    <span class=\"comment\">#if the node is a mesh than for each slopeShader</span></div>\n\
<div class=\"line\"><a name=\"l00285\"></a><span class=\"lineno\">  285</span>&#160;                    <span class=\"comment\">#connect the worldMesh attribute to the dirtyShaderPlug</span></div>\n\
<div class=\"line\"><a name=\"l00286\"></a><span class=\"lineno\">  286</span>&#160;                    <span class=\"comment\">#attribute to force an evaluation of the node when the mesh</span></div>\n\
<div class=\"line\"><a name=\"l00287\"></a><span class=\"lineno\">  287</span>&#160;                    <span class=\"comment\">#changes</span></div>\n\
<div class=\"line\"><a name=\"l00288\"></a><span class=\"lineno\">  288</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00289\"></a><span class=\"lineno\">  289</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(shaderNodes.length()):</div>\n\
<div class=\"line\"><a name=\"l00290\"></a><span class=\"lineno\">  290</span>&#160;                        srcPlug = dest.findPlug(<span class=\"stringliteral\">&quot;worldMesh&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00291\"></a><span class=\"lineno\">  291</span>&#160;                        destPlug = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(shaderNodes[i]).findPlug(<span class=\"stringliteral\">&quot;dirtyShaderPlug&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00292\"></a><span class=\"lineno\">  292</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00293\"></a><span class=\"lineno\">  293</span>&#160;                        <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> srcPlug.isNull()) <span class=\"keywordflow\">and</span> (<span class=\"keywordflow\">not</span> destPlug.isNull()):</div>\n\
<div class=\"line\"><a name=\"l00294\"></a><span class=\"lineno\">  294</span>&#160;                            cmd = <span class=\"stringliteral\">&quot;connectAttr -na %s %s&quot;</span> % (srcPlug.name(), destPlug.name())</div>\n\
<div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;                            OpenMaya.MGlobal.executeCommand(cmd)</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;                    <span class=\"comment\">#get the shading engine so we can assign the shader</span></div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;                    <span class=\"comment\">#to the mesh after doing the connection</span></div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\">  300</span>&#160;                    shadingEngine = self._findShadingEngine(sourceNode)</div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;                    <span class=\"comment\">#if there is a valid shading engine than make</span></div>\n\
<div class=\"line\"><a name=\"l00303\"></a><span class=\"lineno\">  303</span>&#160;                    <span class=\"comment\">#the connection</span></div>\n\
<div class=\"line\"><a name=\"l00304\"></a><span class=\"lineno\">  304</span>&#160;                    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00305\"></a><span class=\"lineno\">  305</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shadingEngine.isNull():</div>\n\
<div class=\"line\"><a name=\"l00306\"></a><span class=\"lineno\">  306</span>&#160;                        cmd = <span class=\"stringliteral\">&quot;sets -edit -forceElement %s %s&quot;</span> % (</div>\n\
<div class=\"line\"><a name=\"l00307\"></a><span class=\"lineno\">  307</span>&#160;                                        <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(shadingEngine).name(),</div>\n\
<div class=\"line\"><a name=\"l00308\"></a><span class=\"lineno\">  308</span>&#160;                                        <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dag_node.html\">OpenMaya.MFnDagNode</a>(destinationNode).partialPathName()</div>\n\
<div class=\"line\"><a name=\"l00309\"></a><span class=\"lineno\">  309</span>&#160;                                                                )</div>\n\
<div class=\"line\"><a name=\"l00310\"></a><span class=\"lineno\">  310</span>&#160;                        OpenMaya.MGlobal.executeCommand(cmd)</div>\n\
<div class=\"line\"><a name=\"l00311\"></a><span class=\"lineno\">  311</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00312\"></a><span class=\"lineno\">  312</span>&#160;        <span class=\"keywordflow\">elif</span> src.typeName() == kSlopeNodeName:</div>\n\
<div class=\"line\"><a name=\"l00313\"></a><span class=\"lineno\">  313</span>&#160;            <span class=\"comment\">#if we are dragging from a slope shader</span></div>\n\
<div class=\"line\"><a name=\"l00314\"></a><span class=\"lineno\">  314</span>&#160;            <span class=\"comment\">#than we want to see what we are dragging onto</span></div>\n\
<div class=\"line\"><a name=\"l00315\"></a><span class=\"lineno\">  315</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00316\"></a><span class=\"lineno\">  316</span>&#160;            <span class=\"keywordflow\">if</span> destinationNode.hasFn(OpenMaya.MFn.kMesh):</div>\n\
<div class=\"line\"><a name=\"l00317\"></a><span class=\"lineno\">  317</span>&#160;                <span class=\"comment\">#if the user is dragging onto a mesh</span></div>\n\
<div class=\"line\"><a name=\"l00318\"></a><span class=\"lineno\">  318</span>&#160;                <span class=\"comment\">#than make the connection from the worldMesh</span></div>\n\
<div class=\"line\"><a name=\"l00319\"></a><span class=\"lineno\">  319</span>&#160;                <span class=\"comment\">#to the dirtyShader plug on the slopeShader</span></div>\n\
<div class=\"line\"><a name=\"l00320\"></a><span class=\"lineno\">  320</span>&#160;                <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00321\"></a><span class=\"lineno\">  321</span>&#160;                dest = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(destinationNode)</div>\n\
<div class=\"line\"><a name=\"l00322\"></a><span class=\"lineno\">  322</span>&#160;                srcPlug = dest.findPlug(<span class=\"stringliteral\">&quot;worldMesh&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00323\"></a><span class=\"lineno\">  323</span>&#160;                destPlug = src.findPlug(<span class=\"stringliteral\">&quot;dirtyShaderPlug&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00324\"></a><span class=\"lineno\">  324</span>&#160;                <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> srcPlug.isNull()) <span class=\"keywordflow\">and</span> (<span class=\"keywordflow\">not</span> destPlug.isNull()):</div>\n\
<div class=\"line\"><a name=\"l00325\"></a><span class=\"lineno\">  325</span>&#160;                    cmd = <span class=\"stringliteral\">&quot;connectAttr -na %s %s&quot;</span> % (srcPlug.name(), destPlug.name())</div>\n\
<div class=\"line\"><a name=\"l00326\"></a><span class=\"lineno\">  326</span>&#160;                    OpenMaya.MGlobal.executeCommand(cmd)</div>\n\
<div class=\"line\"><a name=\"l00327\"></a><span class=\"lineno\">  327</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00328\"></a><span class=\"lineno\">  328</span>&#160;            <span class=\"keywordflow\">elif</span> destinationNode.hasFn(OpenMaya.MFn.kLambert):</div>\n\
<div class=\"line\"><a name=\"l00329\"></a><span class=\"lineno\">  329</span>&#160;                dest = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(destinationNode)</div>\n\
<div class=\"line\"><a name=\"l00330\"></a><span class=\"lineno\">  330</span>&#160;                srcPlug = src.findPlug(<span class=\"stringliteral\">&quot;outColor&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00331\"></a><span class=\"lineno\">  331</span>&#160;                destPlug = dest.findPlug(<span class=\"stringliteral\">&quot;color&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00332\"></a><span class=\"lineno\">  332</span>&#160;                <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> srcPlug.isNull()) <span class=\"keywordflow\">and</span> (<span class=\"keywordflow\">not</span> destPlug.isNull()):</div>\n\
<div class=\"line\"><a name=\"l00333\"></a><span class=\"lineno\">  333</span>&#160;                    <span class=\"keywordflow\">if</span> force:</div>\n\
<div class=\"line\"><a name=\"l00334\"></a><span class=\"lineno\">  334</span>&#160;                        cmd = <span class=\"stringliteral\">&quot;connectAttr -f %s %s&quot;</span> % (srcPlug.name(), destPlug.name())</div>\n\
<div class=\"line\"><a name=\"l00335\"></a><span class=\"lineno\">  335</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00336\"></a><span class=\"lineno\">  336</span>&#160;                        cmd = <span class=\"stringliteral\">&quot;connectAttr %s %s&quot;</span> % (srcPlug.name(), destPlug.name())</div>\n\
<div class=\"line\"><a name=\"l00337\"></a><span class=\"lineno\">  337</span>&#160;                    OpenMaya.MGlobal.executeCommand(cmd)</div>\n\
<div class=\"line\"><a name=\"l00338\"></a><span class=\"lineno\">  338</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00339\"></a><span class=\"lineno\">  339</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;    <span class=\"keyword\">def </span>connectNodeToAttr(self, sourceNode, destinationPlug, force):</div>\n\
<div class=\"line\"><a name=\"l00341\"></a><span class=\"lineno\">  341</span>&#160;        <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00342\"></a><span class=\"lineno\">  342</span>&#160;<span class=\"stringliteral\">        Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><a name=\"l00343\"></a><span class=\"lineno\">  343</span>&#160;<span class=\"stringliteral\">        this method will assign the correct output from the slope shader </span></div>\n\
<div class=\"line\"><a name=\"l00344\"></a><span class=\"lineno\">  344</span>&#160;<span class=\"stringliteral\">        onto the given attribute.</span></div>\n\
<div class=\"line\"><a name=\"l00345\"></a><span class=\"lineno\">  345</span>&#160;<span class=\"stringliteral\">        &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00346\"></a><span class=\"lineno\">  346</span>&#160;        src = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a>(sourceNode)</div>\n\
<div class=\"line\"><a name=\"l00347\"></a><span class=\"lineno\">  347</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00348\"></a><span class=\"lineno\">  348</span>&#160;        <span class=\"comment\">#if we are dragging from a slopeShader</span></div>\n\
<div class=\"line\"><a name=\"l00349\"></a><span class=\"lineno\">  349</span>&#160;        <span class=\"comment\">#to a shader than connect the outColor</span></div>\n\
<div class=\"line\"><a name=\"l00350\"></a><span class=\"lineno\">  350</span>&#160;        <span class=\"comment\">#plug to the plug being passed in</span></div>\n\
<div class=\"line\"><a name=\"l00351\"></a><span class=\"lineno\">  351</span>&#160;        <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00352\"></a><span class=\"lineno\">  352</span>&#160;        <span class=\"keywordflow\">if</span> destinationPlug.node().hasFn(OpenMaya.MFn.kLambert):</div>\n\
<div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;            <span class=\"keywordflow\">if</span> src.typeName() == kSlopeNodeName:</div>\n\
<div class=\"line\"><a name=\"l00354\"></a><span class=\"lineno\">  354</span>&#160;                srcPlug = src.findPlug(<span class=\"stringliteral\">&quot;outColor&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00355\"></a><span class=\"lineno\">  355</span>&#160;                <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> srcPlug.isNull()) <span class=\"keywordflow\">and</span> (<span class=\"keywordflow\">not</span> destinationPlug.isNull()):</div>\n\
<div class=\"line\"><a name=\"l00356\"></a><span class=\"lineno\">  356</span>&#160;                    cmd = <span class=\"stringliteral\">&quot;connectAttr %s %s&quot;</span> % (srcPlug.name(), destinationPlug.name())</div>\n\
<div class=\"line\"><a name=\"l00357\"></a><span class=\"lineno\">  357</span>&#160;                    OpenMaya.MGlobal.executeCommand(cmd)</div>\n\
<div class=\"line\"><a name=\"l00358\"></a><span class=\"lineno\">  358</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00359\"></a><span class=\"lineno\">  359</span>&#160;            <span class=\"comment\">#in all of the other cases we do not need the plug just the node</span></div>\n\
<div class=\"line\"><a name=\"l00360\"></a><span class=\"lineno\">  360</span>&#160;            <span class=\"comment\">#that it is on</span></div>\n\
<div class=\"line\"><a name=\"l00361\"></a><span class=\"lineno\">  361</span>&#160;            <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00362\"></a><span class=\"lineno\">  362</span>&#160;            destinationNode = destinationPlug.node()</div>\n\
<div class=\"line\"><a name=\"l00363\"></a><span class=\"lineno\">  363</span>&#160;            self.connectNodeToNode(sourceNode, destinationNode, force)</div>\n\
<div class=\"line\"><a name=\"l00364\"></a><span class=\"lineno\">  364</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00365\"></a><span class=\"lineno\">  365</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00366\"></a><span class=\"lineno\">  366</span>&#160;    <span class=\"keyword\">def </span>_findShadingEngine(self, node):</div>\n\
<div class=\"line\"><a name=\"l00367\"></a><span class=\"lineno\">  367</span>&#160;        <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00368\"></a><span class=\"lineno\">  368</span>&#160;<span class=\"stringliteral\">        Given the material MObject this method will</span></div>\n\
<div class=\"line\"><a name=\"l00369\"></a><span class=\"lineno\">  369</span>&#160;<span class=\"stringliteral\">        return the shading group that it is assigned to.</span></div>\n\
<div class=\"line\"><a name=\"l00370\"></a><span class=\"lineno\">  370</span>&#160;<span class=\"stringliteral\">        if there is no shading group associated with</span></div>\n\
<div class=\"line\"><a name=\"l00371\"></a><span class=\"lineno\">  371</span>&#160;<span class=\"stringliteral\">        the material than a null MObject is passed back.</span></div>\n\
<div class=\"line\"><a name=\"l00372\"></a><span class=\"lineno\">  372</span>&#160;<span class=\"stringliteral\">        &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00373\"></a><span class=\"lineno\">  373</span>&#160;        nodeFn = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_dependency_node.html\">OpenMaya.MFnDependencyNode</a> (node)</div>\n\
<div class=\"line\"><a name=\"l00374\"></a><span class=\"lineno\">  374</span>&#160;        srcPlug = nodeFn.findPlug(<span class=\"stringliteral\">&quot;outColor&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00375\"></a><span class=\"lineno\">  375</span>&#160;        nodeConnections = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_plug_array.html\">OpenMaya.MPlugArray</a>()</div>\n\
<div class=\"line\"><a name=\"l00376\"></a><span class=\"lineno\">  376</span>&#160;        srcPlug.connectedTo(nodeConnections, <span class=\"keyword\">False</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00377\"></a><span class=\"lineno\">  377</span>&#160;        <span class=\"comment\">#loop through the connections</span></div>\n\
<div class=\"line\"><a name=\"l00378\"></a><span class=\"lineno\">  378</span>&#160;        <span class=\"comment\">#and find the shading engine node that</span></div>\n\
<div class=\"line\"><a name=\"l00379\"></a><span class=\"lineno\">  379</span>&#160;        <span class=\"comment\">#it is connected to</span></div>\n\
<div class=\"line\"><a name=\"l00380\"></a><span class=\"lineno\">  380</span>&#160;        <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00381\"></a><span class=\"lineno\">  381</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(nodeConnections.length()):</div>\n\
<div class=\"line\"><a name=\"l00382\"></a><span class=\"lineno\">  382</span>&#160;            theNode = nodeConnections[i].node()</div>\n\
<div class=\"line\"><a name=\"l00383\"></a><span class=\"lineno\">  383</span>&#160;            <span class=\"keywordflow\">if</span> theNode.hasFn(OpenMaya.MFn.kShadingEngine):</div>\n\
<div class=\"line\"><a name=\"l00384\"></a><span class=\"lineno\">  384</span>&#160;                <span class=\"keywordflow\">return</span> theNode</div>\n\
<div class=\"line\"><a name=\"l00385\"></a><span class=\"lineno\">  385</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00386\"></a><span class=\"lineno\">  386</span>&#160;        <span class=\"comment\">#no shading engine associated so return a</span></div>\n\
<div class=\"line\"><a name=\"l00387\"></a><span class=\"lineno\">  387</span>&#160;        <span class=\"comment\">#null MObject</span></div>\n\
<div class=\"line\"><a name=\"l00388\"></a><span class=\"lineno\">  388</span>&#160;        <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00389\"></a><span class=\"lineno\">  389</span>&#160;        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_object.html\">OpenMaya.MObject</a>()</div>\n\
<div class=\"line\"><a name=\"l00390\"></a><span class=\"lineno\">  390</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00391\"></a><span class=\"lineno\">  391</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00392\"></a><span class=\"lineno\">  392</span>&#160;<span class=\"comment\">##################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00393\"></a><span class=\"lineno\">  393</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00394\"></a><span class=\"lineno\">  394</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00395\"></a><span class=\"lineno\">  395</span>&#160;<span class=\"keyword\">def </span>nodeCreator():</div>\n\
<div class=\"line\"><a name=\"l00396\"></a><span class=\"lineno\">  396</span>&#160;    <span class=\"keywordflow\">return</span> OpenMayaMPx.asMPxPtr(slopeShader())</div>\n\
<div class=\"line\"><a name=\"l00397\"></a><span class=\"lineno\">  397</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00398\"></a><span class=\"lineno\">  398</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00399\"></a><span class=\"lineno\">  399</span>&#160;<span class=\"keyword\">def </span>behaviourCreator():</div>\n\
<div class=\"line\"><a name=\"l00400\"></a><span class=\"lineno\">  400</span>&#160;    <span class=\"keywordflow\">return</span> OpenMayaMPx.asMPxPtr(slopeShaderBehavior())</div>\n\
<div class=\"line\"><a name=\"l00401\"></a><span class=\"lineno\">  401</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00402\"></a><span class=\"lineno\">  402</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00403\"></a><span class=\"lineno\">  403</span>&#160;<span class=\"keyword\">def </span>nodeInitializer():</div>\n\
<div class=\"line\"><a name=\"l00404\"></a><span class=\"lineno\">  404</span>&#160;    nAttr = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_numeric_attribute.html\">OpenMaya.MFnNumericAttribute</a>()</div>\n\
<div class=\"line\"><a name=\"l00405\"></a><span class=\"lineno\">  405</span>&#160;    nMAttr = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_matrix_attribute.html\">OpenMaya.MFnMatrixAttribute</a>()</div>\n\
<div class=\"line\"><a name=\"l00406\"></a><span class=\"lineno\">  406</span>&#160;    nTAttr = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_typed_attribute.html\">OpenMaya.MFnTypedAttribute</a>()</div>\n\
<div class=\"line\"><a name=\"l00407\"></a><span class=\"lineno\">  407</span>&#160;    nGAttr = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_fn_generic_attribute.html\">OpenMaya.MFnGenericAttribute</a>()</div>\n\
<div class=\"line\"><a name=\"l00408\"></a><span class=\"lineno\">  408</span>&#160;    <span class=\"comment\"># input</span></div>\n\
<div class=\"line\"><a name=\"l00409\"></a><span class=\"lineno\">  409</span>&#160;    slopeShader.aAngle = nAttr.create( <span class=\"stringliteral\">&quot;angle&quot;</span>, <span class=\"stringliteral\">&quot;ang&quot;</span>, OpenMaya.MFnNumericData.kFloat )</div>\n\
<div class=\"line\"><a name=\"l00410\"></a><span class=\"lineno\">  410</span>&#160;    nAttr.setDefault(30.0)</div>\n\
<div class=\"line\"><a name=\"l00411\"></a><span class=\"lineno\">  411</span>&#160;    nAttr.setMin(0.0)</div>\n\
<div class=\"line\"><a name=\"l00412\"></a><span class=\"lineno\">  412</span>&#160;    nAttr.setMax(100.0)</div>\n\
<div class=\"line\"><a name=\"l00413\"></a><span class=\"lineno\">  413</span>&#160;    nAttr.setKeyable(1)</div>\n\
<div class=\"line\"><a name=\"l00414\"></a><span class=\"lineno\">  414</span>&#160;    nAttr.setStorable(1)</div>\n\
<div class=\"line\"><a name=\"l00415\"></a><span class=\"lineno\">  415</span>&#160;    nAttr.setReadable(1)</div>\n\
<div class=\"line\"><a name=\"l00416\"></a><span class=\"lineno\">  416</span>&#160;    nAttr.setWritable(1)</div>\n\
<div class=\"line\"><a name=\"l00417\"></a><span class=\"lineno\">  417</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00418\"></a><span class=\"lineno\">  418</span>&#160;    slopeShader.aColor1 = nAttr.createColor(<span class=\"stringliteral\">&quot;walkableColor&quot;</span>, <span class=\"stringliteral\">&quot;w&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00419\"></a><span class=\"lineno\">  419</span>&#160;    nAttr.setDefault(0.0, 1.0, 0.0)</div>\n\
<div class=\"line\"><a name=\"l00420\"></a><span class=\"lineno\">  420</span>&#160;    nAttr.setKeyable(1)</div>\n\
<div class=\"line\"><a name=\"l00421\"></a><span class=\"lineno\">  421</span>&#160;    nAttr.setStorable(1)</div>\n\
<div class=\"line\"><a name=\"l00422\"></a><span class=\"lineno\">  422</span>&#160;    nAttr.setUsedAsColor(1)</div>\n\
<div class=\"line\"><a name=\"l00423\"></a><span class=\"lineno\">  423</span>&#160;    nAttr.setReadable(1)</div>\n\
<div class=\"line\"><a name=\"l00424\"></a><span class=\"lineno\">  424</span>&#160;    nAttr.setWritable(1)</div>\n\
<div class=\"line\"><a name=\"l00425\"></a><span class=\"lineno\">  425</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00426\"></a><span class=\"lineno\">  426</span>&#160;    slopeShader.aColor2 = nAttr.createColor( <span class=\"stringliteral\">&quot;nonWalkableColor&quot;</span>, <span class=\"stringliteral\">&quot;nw&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00427\"></a><span class=\"lineno\">  427</span>&#160;    nAttr.setDefault(1.0, 0.0, 0.0)</div>\n\
<div class=\"line\"><a name=\"l00428\"></a><span class=\"lineno\">  428</span>&#160;    nAttr.setKeyable(1)</div>\n\
<div class=\"line\"><a name=\"l00429\"></a><span class=\"lineno\">  429</span>&#160;    nAttr.setStorable(1)</div>\n\
<div class=\"line\"><a name=\"l00430\"></a><span class=\"lineno\">  430</span>&#160;    nAttr.setUsedAsColor(1)</div>\n\
<div class=\"line\"><a name=\"l00431\"></a><span class=\"lineno\">  431</span>&#160;    nAttr.setReadable(1)</div>\n\
<div class=\"line\"><a name=\"l00432\"></a><span class=\"lineno\">  432</span>&#160;    nAttr.setWritable(1)</div>\n\
<div class=\"line\"><a name=\"l00433\"></a><span class=\"lineno\">  433</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00434\"></a><span class=\"lineno\">  434</span>&#160;    <span class=\"comment\"># Surface Normal supplied by the render sampler</span></div>\n\
<div class=\"line\"><a name=\"l00435\"></a><span class=\"lineno\">  435</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00436\"></a><span class=\"lineno\">  436</span>&#160;    slopeShader.aTriangleNormalCamera = nAttr.createPoint( <span class=\"stringliteral\">&quot;triangleNormalCamera&quot;</span>, <span class=\"stringliteral\">&quot;n&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00437\"></a><span class=\"lineno\">  437</span>&#160;    nAttr.setStorable(0)</div>\n\
<div class=\"line\"><a name=\"l00438\"></a><span class=\"lineno\">  438</span>&#160;    nAttr.setHidden(1)</div>\n\
<div class=\"line\"><a name=\"l00439\"></a><span class=\"lineno\">  439</span>&#160;    nAttr.setReadable(1)</div>\n\
<div class=\"line\"><a name=\"l00440\"></a><span class=\"lineno\">  440</span>&#160;    nAttr.setWritable(1)</div>\n\
<div class=\"line\"><a name=\"l00441\"></a><span class=\"lineno\">  441</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00442\"></a><span class=\"lineno\">  442</span>&#160;    <span class=\"comment\"># View matrix from the camera into world space</span></div>\n\
<div class=\"line\"><a name=\"l00443\"></a><span class=\"lineno\">  443</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00444\"></a><span class=\"lineno\">  444</span>&#160;    slopeShader.aMatrixEyeToWorld = nMAttr.create( <span class=\"stringliteral\">&quot;matrixEyeToWorld&quot;</span>, <span class=\"stringliteral\">&quot;mew&quot;</span>, OpenMaya.MFnMatrixAttribute.kFloat )</div>\n\
<div class=\"line\"><a name=\"l00445\"></a><span class=\"lineno\">  445</span>&#160;    nAttr.setHidden(1)</div>\n\
<div class=\"line\"><a name=\"l00446\"></a><span class=\"lineno\">  446</span>&#160;    nMAttr.setWritable(1)</div>\n\
<div class=\"line\"><a name=\"l00447\"></a><span class=\"lineno\">  447</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00448\"></a><span class=\"lineno\">  448</span>&#160;    <span class=\"comment\"># Output Attributes</span></div>\n\
<div class=\"line\"><a name=\"l00449\"></a><span class=\"lineno\">  449</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00450\"></a><span class=\"lineno\">  450</span>&#160;    slopeShader.aOutColor  = nAttr.createColor( <span class=\"stringliteral\">&quot;outColor&quot;</span>, <span class=\"stringliteral\">&quot;oc&quot;</span> )</div>\n\
<div class=\"line\"><a name=\"l00451\"></a><span class=\"lineno\">  451</span>&#160;    nAttr.setStorable(0)</div>\n\
<div class=\"line\"><a name=\"l00452\"></a><span class=\"lineno\">  452</span>&#160;    nAttr.setHidden(0)</div>\n\
<div class=\"line\"><a name=\"l00453\"></a><span class=\"lineno\">  453</span>&#160;    nAttr.setReadable(1)</div>\n\
<div class=\"line\"><a name=\"l00454\"></a><span class=\"lineno\">  454</span>&#160;    nAttr.setWritable(0)</div>\n\
<div class=\"line\"><a name=\"l00455\"></a><span class=\"lineno\">  455</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00456\"></a><span class=\"lineno\">  456</span>&#160;    meshTypeId = <a class=\"code\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_type_id.html\">OpenMaya.MTypeId</a>(OpenMaya.MFnData.kMesh)</div>\n\
<div class=\"line\"><a name=\"l00457\"></a><span class=\"lineno\">  457</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00458\"></a><span class=\"lineno\">  458</span>&#160;    <span class=\"comment\"># dummy plug for forcing evaluation</span></div>\n\
<div class=\"line\"><a name=\"l00459\"></a><span class=\"lineno\">  459</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00460\"></a><span class=\"lineno\">  460</span>&#160;    slopeShader.aDirtyShaderAttr = nGAttr.create( <span class=\"stringliteral\">&quot;dirtyShaderPlug&quot;</span>, <span class=\"stringliteral\">&quot;dsp&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00461\"></a><span class=\"lineno\">  461</span>&#160;    nGAttr.setArray(1)</div>\n\
<div class=\"line\"><a name=\"l00462\"></a><span class=\"lineno\">  462</span>&#160;    nGAttr.setHidden(0)</div>\n\
<div class=\"line\"><a name=\"l00463\"></a><span class=\"lineno\">  463</span>&#160;    nGAttr.setUsesArrayDataBuilder(1)</div>\n\
<div class=\"line\"><a name=\"l00464\"></a><span class=\"lineno\">  464</span>&#160;    nGAttr.setReadable(0)</div>\n\
<div class=\"line\"><a name=\"l00465\"></a><span class=\"lineno\">  465</span>&#160;    nGAttr.setStorable(1)</div>\n\
<div class=\"line\"><a name=\"l00466\"></a><span class=\"lineno\">  466</span>&#160;    nGAttr.setIndexMatters(0)</div>\n\
<div class=\"line\"><a name=\"l00467\"></a><span class=\"lineno\">  467</span>&#160;    <span class=\"comment\"># nGAttr.addAccept(meshTypeId)</span></div>\n\
<div class=\"line\"><a name=\"l00468\"></a><span class=\"lineno\">  468</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00469\"></a><span class=\"lineno\">  469</span>&#160;    <span class=\"comment\"># Add attribues</span></div>\n\
<div class=\"line\"><a name=\"l00470\"></a><span class=\"lineno\">  470</span>&#160;    <span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00471\"></a><span class=\"lineno\">  471</span>&#160;    slopeShader.addAttribute(slopeShader.aAngle)</div>\n\
<div class=\"line\"><a name=\"l00472\"></a><span class=\"lineno\">  472</span>&#160;    slopeShader.addAttribute(slopeShader.aColor1)</div>\n\
<div class=\"line\"><a name=\"l00473\"></a><span class=\"lineno\">  473</span>&#160;    slopeShader.addAttribute(slopeShader.aColor2)</div>\n\
<div class=\"line\"><a name=\"l00474\"></a><span class=\"lineno\">  474</span>&#160;    slopeShader.addAttribute(slopeShader.aTriangleNormalCamera)</div>\n\
<div class=\"line\"><a name=\"l00475\"></a><span class=\"lineno\">  475</span>&#160;    slopeShader.addAttribute(slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00476\"></a><span class=\"lineno\">  476</span>&#160;    slopeShader.addAttribute(slopeShader.aMatrixEyeToWorld)</div>\n\
<div class=\"line\"><a name=\"l00477\"></a><span class=\"lineno\">  477</span>&#160;    slopeShader.addAttribute(slopeShader.aDirtyShaderAttr)</div>\n\
<div class=\"line\"><a name=\"l00478\"></a><span class=\"lineno\">  478</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00479\"></a><span class=\"lineno\">  479</span>&#160;    slopeShader.attributeAffects (slopeShader.aAngle,  slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00480\"></a><span class=\"lineno\">  480</span>&#160;    slopeShader.attributeAffects (slopeShader.aColor1, slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00481\"></a><span class=\"lineno\">  481</span>&#160;    slopeShader.attributeAffects (slopeShader.aColor2, slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00482\"></a><span class=\"lineno\">  482</span>&#160;    slopeShader.attributeAffects (slopeShader.aTriangleNormalCamera,  slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00483\"></a><span class=\"lineno\">  483</span>&#160;    slopeShader.attributeAffects (slopeShader.aDirtyShaderAttr, slopeShader.aOutColor)</div>\n\
<div class=\"line\"><a name=\"l00484\"></a><span class=\"lineno\">  484</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00485\"></a><span class=\"lineno\">  485</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00486\"></a><span class=\"lineno\">  486</span>&#160;<span class=\"comment\"># initialize the script plug-in</span></div>\n\
<div class=\"line\"><a name=\"l00487\"></a><span class=\"lineno\">  487</span>&#160;<span class=\"keyword\">def </span>initializePlugin(mobject):</div>\n\
<div class=\"line\"><a name=\"l00488\"></a><span class=\"lineno\">  488</span>&#160;    mplugin = OpenMayaMPx.MFnPlugin(mobject)</div>\n\
<div class=\"line\"><a name=\"l00489\"></a><span class=\"lineno\">  489</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00490\"></a><span class=\"lineno\">  490</span>&#160;    <span class=\"comment\"># register node</span></div>\n\
<div class=\"line\"><a name=\"l00491\"></a><span class=\"lineno\">  491</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00492\"></a><span class=\"lineno\">  492</span>&#160;        mplugin.registerNode(kSlopeNodeName, kSlopeNodeId, nodeCreator, nodeInitializer, OpenMayaMPx.MPxNode.kDependNode, kSlopeNodeClassify)</div>\n\
<div class=\"line\"><a name=\"l00493\"></a><span class=\"lineno\">  493</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00494\"></a><span class=\"lineno\">  494</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register node: %s&quot;</span> % kSlopeNodeName )</div>\n\
<div class=\"line\"><a name=\"l00495\"></a><span class=\"lineno\">  495</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00496\"></a><span class=\"lineno\">  496</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00497\"></a><span class=\"lineno\">  497</span>&#160;    <span class=\"comment\"># register behaviors</span></div>\n\
<div class=\"line\"><a name=\"l00498\"></a><span class=\"lineno\">  498</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00499\"></a><span class=\"lineno\">  499</span>&#160;        mplugin.registerDragAndDropBehavior(kSlopeShaderBehaviourName, behaviourCreator)</div>\n\
<div class=\"line\"><a name=\"l00500\"></a><span class=\"lineno\">  500</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00501\"></a><span class=\"lineno\">  501</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register behaviour: %s&quot;</span> % kSlopeShaderBehaviourName)</div>\n\
<div class=\"line\"><a name=\"l00502\"></a><span class=\"lineno\">  502</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00503\"></a><span class=\"lineno\">  503</span>&#160;    postCmd = <span class=\"stringliteral\">&quot;if( `window -exists createRenderNodeWindow` )  {refreshCreateRenderNodeWindow(\\&quot;%s\\&quot;);}\\n&quot;</span> % kSlopeNodeClassify</div>\n\
<div class=\"line\"><a name=\"l00504\"></a><span class=\"lineno\">  504</span>&#160;    OpenMaya.MGlobal.executeCommand(postCmd)</div>\n\
<div class=\"line\"><a name=\"l00505\"></a><span class=\"lineno\">  505</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00506\"></a><span class=\"lineno\">  506</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00507\"></a><span class=\"lineno\">  507</span>&#160;<span class=\"comment\"># uninitialize the script plug-in</span></div>\n\
<div class=\"line\"><a name=\"l00508\"></a><span class=\"lineno\">  508</span>&#160;<span class=\"keyword\">def </span>uninitializePlugin(mobject):</div>\n\
<div class=\"line\"><a name=\"l00509\"></a><span class=\"lineno\">  509</span>&#160;    mplugin = OpenMayaMPx.MFnPlugin(mobject, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;1.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l00510\"></a><span class=\"lineno\">  510</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00511\"></a><span class=\"lineno\">  511</span>&#160;        mplugin.deregisterNode(kSlopeNodeId)</div>\n\
<div class=\"line\"><a name=\"l00512\"></a><span class=\"lineno\">  512</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00513\"></a><span class=\"lineno\">  513</span>&#160;        sys.stderr.write( <span class=\"stringliteral\">&quot;Failed to unregister node: %s&quot;</span> % kSlopeNodeName )</div>\n\
<div class=\"line\"><a name=\"l00514\"></a><span class=\"lineno\">  514</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l00515\"></a><span class=\"lineno\">  515</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00516\"></a><span class=\"lineno\">  516</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00517\"></a><span class=\"lineno\">  517</span>&#160;        plugin.deregisterDragAndDropBehavior(kSlopeShaderBehaviourName)</div>\n\
<div class=\"line\"><a name=\"l00518\"></a><span class=\"lineno\">  518</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00519\"></a><span class=\"lineno\">  519</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister behaviour: %s&quot;</span> % kSlopeShaderBehaviourName)</div>\n\
<div class=\"line\"><a name=\"l00520\"></a><span class=\"lineno\">  520</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00521\"></a><span class=\"lineno\">  521</span>&#160;    postCmd = <span class=\"stringliteral\">&quot;if( `window -exists createRenderNodeWindow` )  {refreshCreateRenderNodeWindow(\\&quot;%s\\&quot;);}\\n&quot;</span> % kSlopeNodeClassify</div>\n\
<div class=\"line\"><a name=\"l00522\"></a><span class=\"lineno\">  522</span>&#160;    OpenMaya.MGlobal.executeCommand(postCmd)</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";