var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: XmlGeometryCacheDesc/XmlGeometryCacheDesc.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_xml_geometry_cache_desc_2_xml_geometry_cache_desc_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: XmlGeometryCacheDesc/XmlGeometryCacheDesc.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">XmlGeometryCacheDesc/XmlGeometryCacheDesc.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2009,2010 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This plug-in provides an example of the use of MPxCacheFormat.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  In this example, the cache files are written in xml format.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Also, the handling of the description file is overridden.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This example extends the XmlGeometryCache.cpp example.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;string&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stack&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;fstream&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;sstream&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;assert.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCacheFormatDescription.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxCacheFormat.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVectorArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDoubleArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIntArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVectorArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>std;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>XmlCacheFormat : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_cache_format.html\">MPxCacheFormat</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    XmlCacheFormat();</div>\n\
<div class=\"line\">    ~XmlCacheFormat() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*    creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>     setPluginName( <span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  translatorName();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         isValid() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         open( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; fileName, FileAccessMode mode ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            close() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readHeader() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeHeader( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; version, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; startTime, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; endTime ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            beginWriteChunk() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            endWriteChunk() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         beginReadChunk() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            endReadChunk() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         findTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; foundTime ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readNextTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; foundTime ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>        readArraySize() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeDoubleArray( <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readDoubleArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>&amp;, <span class=\"keywordtype\">unsigned</span> size ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeFloatArray( <span class=\"keyword\">const</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readFloatArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>&amp;, <span class=\"keywordtype\">unsigned</span> size ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeDoubleVectorArray( <span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp; array ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readDoubleVectorArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp;, <span class=\"keywordtype\">unsigned</span> arraySize ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeFloatVectorArray( <span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html\">MFloatVectorArray</a>&amp; array ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readFloatVectorArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html\">MFloatVectorArray</a>&amp; array, <span class=\"keywordtype\">unsigned</span> arraySize ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeChannelName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         findChannelName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readChannelName( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeInt32( <span class=\"keywordtype\">int</span> ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>             readInt32() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         rewind() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         extension() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            handlesDescription() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         readDescription( <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html\">MCacheFormatDescription</a>&amp; description,</div>\n\
<div class=\"line\">                                     <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; descriptionFileLocation,</div>\n\
<div class=\"line\">                                     <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; baseFileName ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         writeDescription( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html\">MCacheFormatDescription</a>&amp; description,</div>\n\
<div class=\"line\">                                      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; descriptionFileLocation,</div>\n\
<div class=\"line\">                                      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; baseFileName ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  comment( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; text );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  quote( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; text );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  fExtension;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  fCacheFormatName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            startXmlBlock( <span class=\"keywordtype\">string</span>&amp; t );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlTagValue( <span class=\"keywordtype\">string</span>&amp; tag, <span class=\"keywordtype\">string</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlTagValue( <span class=\"keywordtype\">string</span>&amp; tag, <span class=\"keywordtype\">int</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            readXmlTagValue( <span class=\"keywordtype\">string</span> tag, <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            readXmlTagValueInChunk( <span class=\"keywordtype\">string</span> tag, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; values );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            readXmlTag( <span class=\"keywordtype\">string</span>&amp; value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            findXmlStartTag( <span class=\"keywordtype\">string</span>&amp; tag );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            findXmlStartTagInChunk( <span class=\"keywordtype\">string</span>&amp; tag );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            findXmlEndTag( <span class=\"keywordtype\">string</span>&amp; tag );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlValue( <span class=\"keywordtype\">string</span>&amp; value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlValue( <span class=\"keywordtype\">double</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlValue( <span class=\"keywordtype\">float</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            writeXmlValue( <span class=\"keywordtype\">int</span> value );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fFileName;</div>\n\
<div class=\"line\">    fstream         fFile;</div>\n\
<div class=\"line\">    stack&lt;string&gt;   fXmlStack;</div>\n\
<div class=\"line\">    FileAccessMode  fMode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> XmlCacheFormat::fExtension = <span class=\"stringliteral\">&quot;mc&quot;</span>;                  <span class=\"comment\">// For files on disk</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> XmlCacheFormat::fCacheFormatName = <span class=\"stringliteral\">&quot;xml_no_desc&quot;</span>;   <span class=\"comment\">// For presentation in GUI</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> XmlCacheFormat::translatorName()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fCacheFormatName;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* XmlCacheFormat::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> XmlCacheFormat();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// ****************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Helper functions</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> XMLSTARTTAG( <span class=\"keywordtype\">string</span> x ) </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ( <span class=\"stringliteral\">&quot;&lt;&quot;</span> + x + <span class=\"stringliteral\">&quot;&gt;&quot;</span> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> XMLENDTAG( <span class=\"keywordtype\">string</span> x ) </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ( <span class=\"stringliteral\">&quot;&lt;/&quot;</span> + x + <span class=\"stringliteral\">&quot;&gt;&quot;</span> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> cacheTag(<span class=\"stringliteral\">&quot;awGeoCache&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> startTimeTag(<span class=\"stringliteral\">&quot;startTime&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> endTimeTag(<span class=\"stringliteral\">&quot;endTime&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> versionTag(<span class=\"stringliteral\">&quot;version&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> timeTag(<span class=\"stringliteral\">&quot;time&quot;</span>); </div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> sizeTag(<span class=\"stringliteral\">&quot;size&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> intTag(<span class=\"stringliteral\">&quot;integer32&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> doubleArrayTag(<span class=\"stringliteral\">&quot;doubleArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> floatArrayTag(<span class=\"stringliteral\">&quot;floatArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> doubleVectorArrayTag(<span class=\"stringliteral\">&quot;doubleVectorArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> floatVectorArrayTag(<span class=\"stringliteral\">&quot;floatVectorArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> channelTag(<span class=\"stringliteral\">&quot;channel&quot;</span>);   </div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> chunkTag(<span class=\"stringliteral\">&quot;chunk&quot;</span>);           </div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Autodesk_Cache_File(<span class=\"stringliteral\">&quot;Autodesk_Cache_File&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> cacheType_Type(<span class=\"stringliteral\">&quot;cacheType-Type&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> OneFilePerFrame(<span class=\"stringliteral\">&quot;OneFilePerFrame&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> OneFile(<span class=\"stringliteral\">&quot;OneFile&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> cacheType_Format(<span class=\"stringliteral\">&quot;cacheType-Format&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> time_Range(<span class=\"stringliteral\">&quot;time-Range&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> cacheTimePerFrame_TimePerFrame(<span class=\"stringliteral\">&quot;cacheTimePerFrame-TimePerFrame&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> cacheVersion_Version(<span class=\"stringliteral\">&quot;cacheVersion-Version&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> extra(<span class=\"stringliteral\">&quot;extra&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Channels(<span class=\"stringliteral\">&quot;Channels&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> ChannelName(<span class=\"stringliteral\">&quot;ChannelName&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> ChannelType(<span class=\"stringliteral\">&quot;ChannelType&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> ChannelInterpretation(<span class=\"stringliteral\">&quot;ChannelInterpretation&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> SamplingType(<span class=\"stringliteral\">&quot;SamplingType&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Double(<span class=\"stringliteral\">&quot;Double&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> DoubleArray(<span class=\"stringliteral\">&quot;DoubleArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> DoubleVectorArray(<span class=\"stringliteral\">&quot;DoubleVectorArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Int32Array(<span class=\"stringliteral\">&quot;Int32Array&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> FloatArray(<span class=\"stringliteral\">&quot;FloatArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> FloatVectorArray(<span class=\"stringliteral\">&quot;FloatVectorArray&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Regular(<span class=\"stringliteral\">&quot;Regular&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> Irregular(<span class=\"stringliteral\">&quot;Irregular&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> SamplingRate(<span class=\"stringliteral\">&quot;SamplingRate&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> StartTime(<span class=\"stringliteral\">&quot;StartTime&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keywordtype\">string</span> EndTime(<span class=\"stringliteral\">&quot;EndTime&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XmlCacheFormat::XmlCacheFormat()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XmlCacheFormat::~XmlCacheFormat()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    close();    </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::open( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; fileName, FileAccessMode mode )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> rtn = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert((fileName.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFileName = fileName;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( mode == kWrite ) {</div>\n\
<div class=\"line\">        fFile.open(fFileName.asChar(), ios::out);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (mode == kReadWrite) {</div>\n\
<div class=\"line\">        fFile.open(fFileName.asChar(), ios::app);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        fFile.open(fFileName.asChar(), ios::in);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fFile.is_open()) {</div>\n\
<div class=\"line\">        rtn = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mode == kRead) {</div>\n\
<div class=\"line\">            rtn = readHeader();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> rtn ? MS::kSuccess : MS::kFailure ;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::isValid()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> rtn = fFile.is_open();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> rtn ? MS::kSuccess : MS::kFailure ;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readHeader() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> rtn = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (kWrite != fMode) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( fFile.is_open() ) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">string</span> tag;</div>\n\
<div class=\"line\">            readXmlTag( tag );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( tag == XMLSTARTTAG(cacheTag) ) </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">                readXmlTagValue( versionTag, value );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                readXmlTagValue( startTimeTag, value );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                readXmlTagValue( endTimeTag, value );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                readXmlTag( tag );  <span class=\"comment\">// Should be header close tag, check</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>( tag != XMLENDTAG(cacheTag) )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// TODO - handle this error case</span></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                rtn = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> rtn ? MS::kSuccess : MS::kFailure ;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::rewind()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( fFile.is_open() ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        close();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!open(fFileName, kRead ))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::close() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( fFile.is_open() ) {</div>\n\
<div class=\"line\">    fFile.close();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> XmlCacheFormat::writeInt32( <span class=\"keywordtype\">int</span> i ) </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">        writeXmlTagValue(intTag, i);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span></div>\n\
<div class=\"line\">XmlCacheFormat::readInt32()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    readXmlTagValue(intTag, value);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> atoi( value[0].asChar() );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeHeader( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; version, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; startTime, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; endTime )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    stringstream oss;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startXmlBlock(cacheTag);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> v(version.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">    writeXmlTagValue(versionTag, v);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    oss &lt;&lt; startTime;</div>\n\
<div class=\"line\">    writeXmlTagValue(startTimeTag, oss.str() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    oss.str(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">    oss.clear();</div>\n\
<div class=\"line\">    oss &lt;&lt; endTime;</div>\n\
<div class=\"line\">    writeXmlTagValue(endTimeTag, oss.str() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> timeValue;</div>\n\
<div class=\"line\">    readXmlTagValue(timeTag, timeValue);</div>\n\
<div class=\"line\">    time.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a3fe76d477f88cbe7a9e4729fadbcf055\">setValue</a>( strtod( timeValue[0].asChar(), NULL ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    stringstream oss;</div>\n\
<div class=\"line\">    oss &lt;&lt; time;</div>\n\
<div class=\"line\">    writeXmlTagValue(timeTag, oss.str() );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::findChannelName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name )</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Given that the right time has already been found, find the name</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  of the channel we&#39;re trying to read.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (readXmlTagValueInChunk(channelTag, value)) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( value.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 1 &amp;&amp; value[0] == name )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readChannelName( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name )</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Given that the right time has already been found, find the name</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  of the channel we&#39;re trying to read.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  If no more channels exist, return false. Some callers rely on this false return </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  value to terminate scanning for channels, thus it&#39;s not an error condition.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  TODO: the current implementation assumes there are numChannels of data stored</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  for every time.  This assumption needs to be removed.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    readXmlTagValueInChunk(channelTag, value);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    name = value[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0 ? MS::kFailure : MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readNextTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; foundTime )</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Read the next time based on the current read position.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{   </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> readAwTime(0.0, <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> ret = readTime(readAwTime);</div>\n\
<div class=\"line\">    foundTime = readAwTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ret ? MS::kSuccess : MS::kFailure ;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::findTime( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; foundTime )</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Find the biggest cached time, which is smaller or equal to </span></div>\n\
<div class=\"line\"><span class=\"comment\">// seekTime and return foundTime</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> timeTolerance(0.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> seekTime(time);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> preTime( seekTime - timeTolerance );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> postTime( seekTime + timeTolerance );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fileRewound = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> timeTagFound = beginReadChunk();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( ! timeTagFound &amp;&amp; !fileRewound )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!rewind())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            fileRewound = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            timeTagFound = beginReadChunk();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( timeTagFound ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> rTime(0.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a>);</div>\n\
<div class=\"line\">            readTime(rTime);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(rTime &gt;= preTime &amp;&amp; rTime &lt;= postTime)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                foundTime = rTime;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(rTime &gt; postTime ) </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!fileRewound) </div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span>(!rewind())</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    fileRewound = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                } </div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> </div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Time could not be found</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            } </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fileRewound = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            endReadChunk();</div>\n\
<div class=\"line\">        } </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Not a valid disk cache file.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeChannelName( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> chan = name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\">    writeXmlTagValue( channelTag, chan );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::beginWriteChunk()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    startXmlBlock(chunkTag);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::endWriteChunk()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> XmlCacheFormat::beginReadChunk()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> findXmlStartTag(chunkTag) ? MS::kSuccess : MS::kFailure;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::endReadChunk()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    findXmlEndTag(chunkTag);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeDoubleArray( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>&amp; array )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> size = array.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    assert(size != 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    writeXmlTagValue(sizeTag,size);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startXmlBlock( doubleArrayTag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; size; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        writeXmlValue(array[i]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeFloatArray( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>&amp; array )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> size = array.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    assert(size != 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    writeXmlTagValue(sizeTag,size);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startXmlBlock( floatArrayTag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; size; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        writeXmlValue(array[i]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeDoubleVectorArray( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp; array )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> size = array.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    assert(size != 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    writeXmlTagValue(sizeTag,size);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startXmlBlock( doubleVectorArrayTag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; size; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        writeXmlValue(array[i][0]);</div>\n\
<div class=\"line\">        writeXmlValue(array[i][1]);</div>\n\
<div class=\"line\">        writeXmlValue(array[i][2]);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">string</span> endl(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">        writeXmlValue(endl);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> </div>\n\
<div class=\"line\">XmlCacheFormat::writeFloatVectorArray( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html\">MFloatVectorArray</a>&amp; array )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> size = array.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    assert(size != 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    writeXmlTagValue(sizeTag,size);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startXmlBlock( floatVectorArrayTag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; size; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        writeXmlValue(array[i][0]);</div>\n\
<div class=\"line\">        writeXmlValue(array[i][1]);</div>\n\
<div class=\"line\">        writeXmlValue(array[i][2]);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">string</span> endl(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">        writeXmlValue(endl);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    endXmlBlock();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span></div>\n\
<div class=\"line\">XmlCacheFormat::readArraySize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (readXmlTagValue(sizeTag, value))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> readSize = (unsigned) atoi( value[0].asChar() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> readSize;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readDoubleArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>&amp; array, <span class=\"keywordtype\">unsigned</span> arraySize )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    readXmlTagValue(doubleArrayTag, value);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert( value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == arraySize );</div>\n\
<div class=\"line\">    array.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>( arraySize );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        array[i] = strtod( value[i].asChar(), NULL );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readFloatArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>&amp; array, <span class=\"keywordtype\">unsigned</span> arraySize )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    readXmlTagValue(floatArrayTag, value);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert( value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == arraySize );</div>\n\
<div class=\"line\">    array.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>( arraySize );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        array[i] = (float)strtod( value[i].asChar(), NULL );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readDoubleVectorArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp; array, <span class=\"keywordtype\">unsigned</span> arraySize )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !readXmlTagValue(doubleVectorArrayTag, value) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert( value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == arraySize * 3 );</div>\n\
<div class=\"line\">    array.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>( arraySize );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> i = 0; i &lt; arraySize; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> v[3];</div>\n\
<div class=\"line\">        v[0] = strtod( value[i*3].asChar(), NULL );</div>\n\
<div class=\"line\">        v[1] = strtod( value[i*3+1].asChar(), NULL );</div>\n\
<div class=\"line\">        v[2] = strtod( value[i*3+2].asChar(), NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        array.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a842198fddbced9798234dc9843c3482b\">set</a>( v, i );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> </div>\n\
<div class=\"line\">XmlCacheFormat::readFloatVectorArray( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html\">MFloatVectorArray</a>&amp; array, <span class=\"keywordtype\">unsigned</span> arraySize )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> value;</div>\n\
<div class=\"line\">    readXmlTagValue(floatVectorArrayTag, value);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert( value.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == arraySize * 3 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    array.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    array.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>( arraySize );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> i = 0; i &lt; arraySize; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> v[3];</div>\n\
<div class=\"line\">        v[0] = (float)strtod( value[i*3].asChar(), NULL );</div>\n\
<div class=\"line\">        v[1] = (float)strtod( value[i*3+1].asChar(), NULL );</div>\n\
<div class=\"line\">        v[2] = (float)strtod( value[i*3+2].asChar(), NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        array.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector_array.html#a8b3ad5eb63bbbe33e255533bf080bf34\">set</a>(v,i);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a></div>\n\
<div class=\"line\">XmlCacheFormat::extension()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fExtension;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">XmlCacheFormat::handlesDescription()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> readKeyAndValue( fstream&amp; file, std::string&amp; key, std::string&amp; value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> line[256];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ;; )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( file.eof() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            key.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">            value.clear();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !file.good() )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        line[0] = 0;</div>\n\
<div class=\"line\">        file.getline( line, <span class=\"keyword\">sizeof</span> line );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( line[0] != 0 )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span>* delimiter = strchr( line, <span class=\"charliteral\">&#39;=&#39;</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( delimiter == NULL )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    *delimiter = 0;</div>\n\
<div class=\"line\">    key = line;</div>\n\
<div class=\"line\">    value = delimiter+1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> readValue( fstream&amp; file, <span class=\"keyword\">const</span> std::string&amp; key, std::string&amp; value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    std::string readKey;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !readKeyAndValue( file, readKey, value ) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( readKey != key )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> readValue( fstream&amp; file, <span class=\"keyword\">const</span> std::string&amp; key, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>&amp; time )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    std::string value;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !readValue( file, key, value ) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> d;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 1 != sscanf( value.c_str(), <span class=\"stringliteral\">&quot;%lf&quot;</span>, &amp;d ) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    time = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>( d, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::readDescription( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html\">MCacheFormatDescription</a>&amp; description,</div>\n\
<div class=\"line\">                                 <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; descriptionFileLocation,</div>\n\
<div class=\"line\">                                 <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; baseFileName )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filename = descriptionFileLocation + baseFileName + <span class=\"stringliteral\">&quot;.txt&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fstream file;</div>\n\
<div class=\"line\">    file.open( filename.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), ios::in );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !file.is_open() )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> line[256] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    file.getline( line, <span class=\"keyword\">sizeof</span> line );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( line != Autodesk_Cache_File )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> channels = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> ( file.good() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        std::string key, value;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !readKeyAndValue( file, key, value ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( key == cacheType_Type )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0\">MCacheFormatDescription::CacheFileDistribution</a> distribution = <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0a537cd821c498982f19fb58b1a91336d9\">MCacheFormatDescription::kNoFile</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( value == OneFilePerFrame )</div>\n\
<div class=\"line\">                distribution = <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0a1f150498a3da344ed46a5330a190c2e5\">MCacheFormatDescription::kOneFilePerFrame</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( value == OneFile )</div>\n\
<div class=\"line\">                distribution = <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0a8748428bfb9465d8d3609aa433a6d41a\">MCacheFormatDescription::kOneFile</a>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                status = MS::kFailure;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            description.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a0e688a95e2ef8d089b7543357ce7799f\">setDistribution</a>( distribution );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == cacheType_Format )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( value != fCacheFormatName.asChar() )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                status = MS::kFailure;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == time_Range )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// no-op</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == cacheTimePerFrame_TimePerFrame )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> time = 0.0;</div>\n\
<div class=\"line\">            sscanf( value.c_str(), <span class=\"stringliteral\">&quot;%lf&quot;</span>, &amp;time );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( time == 0.0 )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                status = MS::kFailure;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            description.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a41e638f3fbbc21a8f41132b027c24741\">setTimePerFrame</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>( time, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == cacheVersion_Version )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// no-op</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == extra )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            description.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ae8bca5e6e06676ebe772aebc4453f53d\">addDescriptionInfo</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( value.c_str() ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( key == Channels )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            sscanf( value.c_str(), <span class=\"stringliteral\">&quot;%d&quot;</span>, &amp;channels );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( status &amp;&amp; !channels )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status = MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// parse channels</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span> ( file.good() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            std::string key, channelName;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readKeyAndValue( file, key, channelName ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( key != ChannelName )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            std::string interpretation, dataTypeString, samplingTypeString;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, ChannelType, dataTypeString ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, ChannelInterpretation, interpretation ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, SamplingType, samplingTypeString ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672b\">MCacheFormatDescription::CacheDataType</a> dataType;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( dataTypeString == Double )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672bacd70f5d2b5e8c1bb8e83b0482a33e518\">MCacheFormatDescription::kDouble</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( dataTypeString == DoubleArray )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672baaee060f77390647f2195ea07f5bda194\">MCacheFormatDescription::kDoubleArray</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( dataTypeString == DoubleVectorArray )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba8b4e7f975280655110287171dcda2c78\">MCacheFormatDescription::kDoubleVectorArray</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( dataTypeString == Int32Array )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672baddb45974008facb86032a0d530c64fcc\">MCacheFormatDescription::kInt32Array</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( dataTypeString == FloatArray )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba0d70752d8c4c50d04789b164af6f54ce\">MCacheFormatDescription::kFloatArray</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( dataTypeString == FloatVectorArray )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                dataType = <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba4b8f39a97ad7bc7e6daee6f9f530a81d\">MCacheFormatDescription::kFloatVectorArray</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                status = MS::kFailure;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5f\">MCacheFormatDescription::CacheSamplingType</a> samplingType;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( samplingTypeString == Regular )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                samplingType = <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5fa2380f0bbad4d2fa7313eddc5ea80ef13\">MCacheFormatDescription::kRegular</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( samplingTypeString == Irregular )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                samplingType = <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5fa8215d1a12cffff8bd5c126b91bc80482\">MCacheFormatDescription::kIrregular</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                status = MS::kFailure;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> samplingRate, startTime, endTime;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, SamplingRate, samplingRate ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, StartTime, startTime ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !readValue( file, EndTime, endTime ) ) { status = MS::kFailure; <span class=\"keywordflow\">break</span>; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            description.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a9d11cb9ad0e12e770a546af7a3143eab\">addChannel</a>( </div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( channelName.c_str() ),</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>( interpretation.c_str() ),</div>\n\
<div class=\"line\">                        dataType,</div>\n\
<div class=\"line\">                        samplingType,</div>\n\
<div class=\"line\">                        samplingRate,</div>\n\
<div class=\"line\">                        startTime,</div>\n\
<div class=\"line\">                        endTime,</div>\n\
<div class=\"line\">                        &amp;status );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file.close();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">XmlCacheFormat::writeDescription( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html\">MCacheFormatDescription</a>&amp; description,</div>\n\
<div class=\"line\">                                  <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; descriptionFileLocation,</div>\n\
<div class=\"line\">                                  <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; baseFileName )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filename = descriptionFileLocation + baseFileName + <span class=\"stringliteral\">&quot;.txt&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fstream file;</div>\n\
<div class=\"line\">    file.open( filename.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), ios::out );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !file.is_open() )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file &lt;&lt; Autodesk_Cache_File &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file &lt;&lt; cacheType_Type &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0\">MCacheFormatDescription::CacheFileDistribution</a> distribution = description.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a6de04219327af7e4235fd631499f990e\">getDistribution</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> ( distribution )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0a8748428bfb9465d8d3609aa433a6d41a\">MCacheFormatDescription::kOneFile</a>:         file &lt;&lt; OneFile;            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#acf9750666d49fe325cb660a46eee32d0a1f150498a3da344ed46a5330a190c2e5\">MCacheFormatDescription::kOneFilePerFrame</a>: file &lt;&lt; OneFilePerFrame;    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">        status = MS::kFailure;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    file &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file &lt;&lt; cacheType_Format &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; fCacheFormatName &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> startTime, endTime;</div>\n\
<div class=\"line\">    description.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ac74db1385571d53f0974a19ae3a6a67b\">getStartAndEndTimes</a>( startTime, endTime );</div>\n\
<div class=\"line\">    file &lt;&lt; time_Range &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; (int)startTime.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;-&quot;</span> &lt;&lt; (int)endTime.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> timePerFrame = description.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a4540520ea523af6a17547288ffb838fb\">getTimePerFrame</a>();</div>\n\
<div class=\"line\">    file &lt;&lt; cacheTimePerFrame_TimePerFrame &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; (int)timePerFrame.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file &lt;&lt; cacheVersion_Version &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; <span class=\"stringliteral\">&quot;2.0&quot;</span> &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> info;</div>\n\
<div class=\"line\">    description.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a7aec6891e30f2fb3d7f933417c0deb85\">getDescriptionInfo</a>( info );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> i=0; i&lt;info.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i )</div>\n\
<div class=\"line\">        file &lt;&lt; extra &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; info[i] &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> channels = description.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a07dc36488a4ac2e5559bd6f7d212d1d7\">getNumChannels</a>();</div>\n\
<div class=\"line\">    file &lt;&lt; Channels &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; channels &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> i=0; i&lt;channels; ++i )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> channelName = description.<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a44a0afe031358d4c2d00ca9491fe6f2e\">getChannelName</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> interpretation = description.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#aa98d16670a74fc8897eb1ab93e2e32a5\">getChannelInterpretation</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672b\">MCacheFormatDescription::CacheDataType</a> dataType = description.<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a184e4f1a1957287332f24e7c274a3b22\">getChannelDataType</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5f\">MCacheFormatDescription::CacheSamplingType</a> samplingType = description.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#a8e5e2e431ace99027697e60466bc7c77\">getChannelSamplingType</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> samplingRate = description.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#aac9577d3cc8ba92798296f3934f61f18\">getChannelSamplingRate</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> startTime = description.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#afdfbff187ef3a9a30f74af2762fe83a8\">getChannelStartTime</a>( i );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> endTime = description.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abb341cc9ee01e2057a28c948e30d3d5e\">getChannelEndTime</a>( i );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        file &lt;&lt; ChannelName &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; channelName &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; ChannelType &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> ( dataType )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672bacd70f5d2b5e8c1bb8e83b0482a33e518\">MCacheFormatDescription::kDouble</a>:              file &lt;&lt; Double;             <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672baaee060f77390647f2195ea07f5bda194\">MCacheFormatDescription::kDoubleArray</a>:         file &lt;&lt; DoubleArray;        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba8b4e7f975280655110287171dcda2c78\">MCacheFormatDescription::kDoubleVectorArray</a>:   file &lt;&lt; DoubleVectorArray;  <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672baddb45974008facb86032a0d530c64fcc\">MCacheFormatDescription::kInt32Array</a>:          file &lt;&lt; Int32Array;         <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba0d70752d8c4c50d04789b164af6f54ce\">MCacheFormatDescription::kFloatArray</a>:          file &lt;&lt; FloatArray;         <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#abd273bd6d760985c7c89f950d544672ba4b8f39a97ad7bc7e6daee6f9f530a81d\">MCacheFormatDescription::kFloatVectorArray</a>:    file &lt;&lt; FloatVectorArray;   <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            status = MS::kFailure;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        file &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; ChannelInterpretation &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; interpretation &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; SamplingType &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> ( samplingType )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5fa2380f0bbad4d2fa7313eddc5ea80ef13\">MCacheFormatDescription::kRegular</a>:         file &lt;&lt; Regular;        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cache_format_description.html#ab48dce9e7f948dfb4ee29cbf90c11d5fa8215d1a12cffff8bd5c126b91bc80482\">MCacheFormatDescription::kIrregular</a>:       file &lt;&lt; Irregular;      <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            status = MS::kFailure;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        file &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; SamplingRate &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; (int)samplingRate.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; StartTime &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; (int)startTime.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">        file &lt;&lt; EndTime &lt;&lt; <span class=\"stringliteral\">&quot;=&quot;</span> &lt;&lt; (int)endTime.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda54297b5d0fb572fc10f9d71ed7002bc1\">MTime::k6000FPS</a> ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    file.close();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// ****************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Helper functions</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::startXmlBlock( <span class=\"keywordtype\">string</span>&amp; t )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fXmlStack.push(t);</div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot;&lt;&quot;</span> &lt;&lt; t &lt;&lt; <span class=\"stringliteral\">&quot;&gt;\\n&quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::endXmlBlock()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> block = fXmlStack.top();</div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot;&lt;/&quot;</span> &lt;&lt; block &lt;&lt; <span class=\"stringliteral\">&quot;&gt;\\n&quot;</span>;</div>\n\
<div class=\"line\">    fXmlStack.pop();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlTagValue( <span class=\"keywordtype\">string</span>&amp; tag, <span class=\"keywordtype\">string</span> value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; fXmlStack.size(); i++ )</div>\n\
<div class=\"line\">        fFile &lt;&lt; <span class=\"stringliteral\">&quot;\\t&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot;&lt;&quot;</span> &lt;&lt; tag &lt;&lt; <span class=\"stringliteral\">&quot;&gt; &quot;</span>;    <span class=\"comment\">// Extra space is important for reading</span></div>\n\
<div class=\"line\">    fFile &lt;&lt; value;</div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot; &lt;/&quot;</span> &lt;&lt; tag &lt;&lt; <span class=\"stringliteral\">&quot;&gt;\\n&quot;</span>; <span class=\"comment\">// Extra space is important for reading</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlTagValue( <span class=\"keywordtype\">string</span>&amp; tag, <span class=\"keywordtype\">int</span> value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; fXmlStack.size(); i++ )</div>\n\
<div class=\"line\">        fFile &lt;&lt; <span class=\"stringliteral\">&quot;\\t&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot;&lt;&quot;</span> &lt;&lt; tag &lt;&lt; <span class=\"stringliteral\">&quot;&gt; &quot;</span>;    <span class=\"comment\">// Extra space is important for reading</span></div>\n\
<div class=\"line\">    ostringstream oss;</div>\n\
<div class=\"line\">    oss &lt;&lt; value;</div>\n\
<div class=\"line\">    fFile &lt;&lt; oss.str();</div>\n\
<div class=\"line\">    fFile &lt;&lt; <span class=\"stringliteral\">&quot; &lt;/&quot;</span> &lt;&lt; tag &lt;&lt; <span class=\"stringliteral\">&quot;&gt;\\n&quot;</span>; <span class=\"comment\">// Extra space is important for reading</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> XmlCacheFormat::readXmlTagValue( <span class=\"keywordtype\">string</span> tag, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; values )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> endTag = XMLENDTAG(tag);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> status = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    values.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Yes this could be much much smarter</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( findXmlStartTag(tag) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">string</span> token;</div>\n\
<div class=\"line\">        fFile &gt;&gt; token;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span> ( !fFile.eof() &amp;&amp; token != endTag )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            values.<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( token.data() );</div>\n\
<div class=\"line\">            fFile &gt;&gt; token;</div>\n\
<div class=\"line\">        } </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> XmlCacheFormat::readXmlTagValueInChunk( <span class=\"keywordtype\">string</span> tag, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; values )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> endTag = XMLENDTAG(tag);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> status = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    values.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the tag in the currently read chunk.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( findXmlStartTagInChunk(tag) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">string</span> token;</div>\n\
<div class=\"line\">        fFile &gt;&gt; token;</div>\n\
<div class=\"line\">        <span class=\"comment\">// Look for the values within the bounds of the tag.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span> ( !fFile.eof() &amp;&amp; token != endTag )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            values.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( token.data() );</div>\n\
<div class=\"line\">            fFile &gt;&gt; token;</div>\n\
<div class=\"line\">        } </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::readXmlTag( <span class=\"keywordtype\">string</span>&amp; value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    value.<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">        fFile &gt;&gt; value;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> XmlCacheFormat::findXmlStartTag( <span class=\"keywordtype\">string</span>&amp; tag )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagRead;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagExpected = XMLSTARTTAG(tag);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFile &gt;&gt; tagRead;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Keep looking all the way to EOF</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>(!fFile.eof() &amp;&amp; tagRead != tagExpected) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fFile &gt;&gt; tagRead;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( tagRead != tagExpected )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ( tagRead == tagExpected );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> XmlCacheFormat::findXmlStartTagInChunk( <span class=\"keywordtype\">string</span>&amp; tag )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Look for the given tag within the currently read chunk.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagRead;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagExpected = XMLSTARTTAG(tag);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagEndChunk(<span class=\"stringliteral\">&quot;&lt;/&quot;</span>+chunkTag+<span class=\"stringliteral\">&quot;&gt;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFile &gt;&gt; tagRead;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Keep looking all the way to EOF</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>((!fFile.eof()) &amp;&amp; (tagRead != tagExpected) &amp;&amp; (tagRead != tagEndChunk)) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fFile &gt;&gt; tagRead;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( (tagRead != tagExpected) &amp;&amp; (tagRead != tagEndChunk) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ( tagRead == tagExpected );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> XmlCacheFormat::findXmlEndTag(<span class=\"keywordtype\">string</span>&amp; tag)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagRead;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">string</span> tagExpected(<span class=\"stringliteral\">&quot;&lt;/&quot;</span>+tag+<span class=\"stringliteral\">&quot;&gt;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFile &gt;&gt; tagRead;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( tagRead != tagExpected )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ( tagRead == tagExpected );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlValue( <span class=\"keywordtype\">string</span>&amp; value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fFile &lt;&lt; value &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlValue( <span class=\"keywordtype\">double</span> value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fFile &lt;&lt; value &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlValue( <span class=\"keywordtype\">float</span> value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fFile &lt;&lt; value &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> XmlCacheFormat::writeXmlValue( <span class=\"keywordtype\">int</span> value )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fFile &lt;&lt; value &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// ****************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a name=\"_a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;1.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    plugin.registerCacheFormat(</div>\n\
<div class=\"line\">        XmlCacheFormat::translatorName(),</div>\n\
<div class=\"line\">        XmlCacheFormat::creator</div>\n\
<div class=\"line\">    );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    plugin.deregisterCacheFormat( XmlCacheFormat::translatorName() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";