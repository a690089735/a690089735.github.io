var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: dynExprField/dynExprField.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'dyn_expr_field_2dyn_expr_field_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: dynExprField/dynExprField.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">dynExprField/dynExprField.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in implements a dynExprField node for a uniform field.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This allows the per particle attributes to drive the field&#39;s attributes. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To run the plug-in, do the following:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// source dynExprFieldTest.mel</span></div>\n\
<div class=\"line\"><span class=\"comment\">// dynExprFieldTest;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;dynExprField.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVectorArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDoubleArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArrayDataBuilder.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCompoundAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnVectorArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDoubleArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMatrixData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnArrayAttrsData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dynExprField::mDirection;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> dynExprField::id( 0x00107340 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *dynExprField::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> dynExprField;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> dynExprField::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Descriptions:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Initialize the node, attributes.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> numAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// create the field basic attributes.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    mDirection = numAttr.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a333c2adbb4839dd894e4d37b18089d94\">createPoint</a>(<span class=\"stringliteral\">&quot;direction&quot;</span>,<span class=\"stringliteral\">&quot;dir&quot;</span>);</div>\n\
<div class=\"line\">    numAttr.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( 0.0, 1.0, 0.0 );</div>\n\
<div class=\"line\">    numAttr.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    numAttr.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    numAttr.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    numAttr.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    status = addAttribute( mDirection );</div>\n\
<div class=\"line\">    attributeAffects(mDirection, mOutputForce);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( MS::kSuccess );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> dynExprField::compute(<span class=\"keyword\">const</span> <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Descriptions:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      compute output force.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !(plug == mOutputForce) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>( MS::kUnknownParameter );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// get the logical index of the element this plug refers to.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> multiIndex = plug.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aee365de27bc5ea401941e79738cc4afe\">logicalIndex</a>( &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in plug.logicalIndex.\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get input data handle, use outputArrayValue since we do not</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// want to evaluate both inputs, only the one related to the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// requested multiIndex. Evaluating both inputs at once would cause</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// a dependency graph loop.</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> hInputArray = block.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a11fd41c7d97d656a2bffdc23015f1496\">outputArrayValue</a>( mInputData, &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status,<span class=\"stringliteral\">&quot;ERROR in hInputArray = block.outputArrayValue().\\n&quot;</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    status = hInputArray.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">jumpToElement</a>( multiIndex );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR: hInputArray.jumpToElement failed.\\n&quot;</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// get children of aInputData.</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hCompond = hInputArray.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">inputValue</a>( &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in hCompond=hInputArray.inputValue\\n&quot;</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hPosition = hCompond.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a58951af761a410e17982060cae4fdf49\">child</a>( mInputPositions );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dPosition = hPosition.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">    <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_vector_array_data.html\">MFnVectorArrayData</a> fnPosition( dPosition );</div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> points = fnPosition.array( &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in fnPosition.array(), not find points.\\n&quot;</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Comment out the following since velocity, and mass are </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// not needed in this field.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MDataHandle hVelocity = hCompond.child( mInputVelocities );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MObject dVelocity = hVelocity.data();</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MFnVectorArrayData fnVelocity( dVelocity );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MVectorArray velocities = fnVelocity.array( &amp;status );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in fnVelocity.array(), not find velocities.\\n&quot;);</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MDataHandle hMass = hCompond.child( mInputMass );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MObject dMass = hMass.data();</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MFnDoubleArrayData fnMass( dMass );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MDoubleArray masses = fnMass.array( &amp;status );</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in fnMass.array(), not find masses.\\n&quot;);</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The attribute mInputPPData contains the attribute in an array form </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// parpared by the particleShape if the particleShape has per particle </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// attribute fieldName_attrName.  </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Suppose a field with the name dynExprField1 is connecting to </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// particleShape1, and the particleShape1 has per particle float attribute</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// dynExprField1_magnitude and vector attribute dynExprField1_direction,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// then hInputPPArray will contains a MdoubleArray with the corresponding</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// name &quot;magnitude&quot; and a MvectorArray with the name &quot;direction&quot;.  This </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// is a mechanism to allow the field attributes being driven by dynamic </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// expression.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> mhInputPPData = block.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a6ba8ea2b4af93fabd2a7c846a1625587\">inputArrayValue</a>( mInputPPData, &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status,<span class=\"stringliteral\">&quot;ERROR in mhInputPPData = block.inputArrayValue().\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = mhInputPPData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">jumpToElement</a>( multiIndex );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR: mhInputPPArray.jumpToElement failed.\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hInputPPData = mhInputPPData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">inputValue</a>( &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in hInputPPData = mhInputPPData.inputValue\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dInputPPData = hInputPPData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">    <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html\">MFnArrayAttrsData</a> inputPPArray( dInputPPData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hOwnerPPData = block.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( mOwnerPPData, &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in hOwnerPPData = block.inputValue\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dOwnerPPData = hOwnerPPData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html\">MFnArrayAttrsData</a> ownerPPArray( dOwnerPPData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> magString(<span class=\"stringliteral\">&quot;magnitude&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFnArrayAttrsData::Type</a> doubleType(<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html#a1d1cfd8ffb84e947f82999c682b666a7aaee060f77390647f2195ea07f5bda194\">MFnArrayAttrsData::kDoubleArray</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> arrayExist;</div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> magnitudeArray;</div>\n\
<div class=\"line\">    arrayExist = inputPPArray.checkArrayExist(magString, doubleType, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in checkArrayExist(magnitude)\\n&quot;);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(arrayExist) {</div>\n\
<div class=\"line\">        magnitudeArray = inputPPArray.getDoubleData(magString, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"comment\">// McheckErr(status, &quot;ERROR in inputPPArray.doubleArray(magnitude)\\n&quot;);</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> magnitudeOwnerArray;</div>\n\
<div class=\"line\">    arrayExist = ownerPPArray.checkArrayExist(magString, doubleType, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in checkArrayExist(magnitude)\\n&quot;);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(arrayExist) {</div>\n\
<div class=\"line\">        magnitudeOwnerArray = ownerPPArray.getDoubleData(magString, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"comment\">// McheckErr(status, &quot;ERROR in ownerPPArray.doubleArray(magnitude)\\n&quot;);</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> dirString(<span class=\"stringliteral\">&quot;direction&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFnArrayAttrsData::Type</a> vectorType(<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_array_attrs_data.html#a1d1cfd8ffb84e947f82999c682b666a7a155fba435c9f5acc854c40a9895a4cf1\">MFnArrayAttrsData::kVectorArray</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    arrayExist = inputPPArray.checkArrayExist(dirString, vectorType, &amp;status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> directionArray;</div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in checkArrayExist(direction)\\n&quot;);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(arrayExist) {</div>\n\
<div class=\"line\">        directionArray = inputPPArray.getVectorData(dirString, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"comment\">// McheckErr(status, &quot;ERROR in inputPPArray.vectorArray(direction)\\n&quot;);</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    arrayExist = ownerPPArray.checkArrayExist(dirString, vectorType, &amp;status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> directionOwnerArray;</div>\n\
<div class=\"line\">    <span class=\"comment\">// McheckErr(status, &quot;ERROR in checkArrayExist(direction)\\n&quot;);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(arrayExist) {</div>\n\
<div class=\"line\">        directionOwnerArray = ownerPPArray.getVectorData(dirString, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"comment\">// McheckErr(status, &quot;ERROR in ownerPPArray.vectorArray(direction)\\n&quot;);</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute the output force.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> forceArray;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    apply( block, points.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), magnitudeArray, magnitudeOwnerArray, </div>\n\
<div class=\"line\">           directionArray, directionOwnerArray, forceArray );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// get output data handle</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> hOutArray = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a11fd41c7d97d656a2bffdc23015f1496\">outputArrayValue</a>( mOutputForce, &amp;status);</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in hOutArray = block.outputArrayValue.\\n&quot;</span>);</div>\n\
<div class=\"line\">    <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html\">MArrayDataBuilder</a> bOutArray = hOutArray.builder( &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in bOutArray = hOutArray.builder.\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// get output force array from block.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hOut = bOutArray.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html#a6d195a24b9624f2e38079e1ce412c9bb\">addElement</a>(multiIndex, &amp;status);</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in hOut = bOutArray.addElement.\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_vector_array_data.html\">MFnVectorArrayData</a> fnOutputForce;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dOutputForce = fnOutputForce.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_vector_array_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>( forceArray, &amp;status );</div>\n\
<div class=\"line\">    McheckErr(status, <span class=\"stringliteral\">&quot;ERROR in dOutputForce = fnOutputForce.create\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// update data block with new output force data.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    hOut.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( dOutputForce );</div>\n\
<div class=\"line\">    block.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( MS::kSuccess );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> dynExprField::iconSizeAndOrigin(GLuint&amp; width,</div>\n\
<div class=\"line\">                    GLuint&amp; height,</div>\n\
<div class=\"line\">                    GLuint&amp; xbo,</div>\n\
<div class=\"line\">                    GLuint&amp; ybo   )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This method is not required to be overridden.  It should be overridden</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  if the plug-in has custom icon.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  The width and height have to be a multiple of 32 on Windows and 16 on </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  other platform.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Define an 8x8 icon at the lower left corner of the 32x32 grid. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (xbo, ybo) of (4,4) makes sure the icon is center at origin.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    width = 32;</div>\n\
<div class=\"line\">    height = 32;</div>\n\
<div class=\"line\">    xbo = 4;</div>\n\
<div class=\"line\">    ybo = 4;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> dynExprField::iconBitmap(GLubyte* bitmap)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This method is not required to be overridden.  It should be overridden</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  if the plug-in has custom icon.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Define an 8x8 icon at the lower left corner of the 32x32 grid. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (xbo, ybo) of (4,4) makes sure the icon is center at origin.</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    bitmap[0]  = 0x18;</div>\n\
<div class=\"line\">    bitmap[4]  = 0x18;</div>\n\
<div class=\"line\">    bitmap[8]  = 0x18;</div>\n\
<div class=\"line\">    bitmap[12] = 0x18;</div>\n\
<div class=\"line\">    bitmap[16] = 0x18;</div>\n\
<div class=\"line\">    bitmap[20] = 0x5A;</div>\n\
<div class=\"line\">    bitmap[24] = 0x3C;</div>\n\
<div class=\"line\">    bitmap[28] = 0x18;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(  <span class=\"stringliteral\">&quot;dynExprField&quot;</span>, </div>\n\
<div class=\"line\">                       dynExprField::id,</div>\n\
<div class=\"line\">                      &amp;dynExprField::creator, </div>\n\
<div class=\"line\">                      &amp;dynExprField::initialize,</div>\n\
<div class=\"line\">                       <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a1ee02d3f908149cf7ee4de4fef95e357\">MPxNode::kFieldNode</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( dynExprField::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">double</span> dynExprField::magnitude( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> hValue = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( mMagnitude, &amp;status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> value = 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( status == MS::kSuccess )</div>\n\
<div class=\"line\">        value = hValue.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( value );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> dynExprField::direction( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> &amp;fV = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(mDirection).<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(fV.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, fV.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, fV.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a>) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> dynExprField::apply(</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>         &amp;block,</div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span>                 receptorSize,</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> &amp;magnitudeArray,</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> &amp;magnitudeOwnerArray,</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> &amp;directionArray,</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> &amp;directionOwnerArray,</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>       &amp;outputForce</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Compute output force for each particle.  If there exists the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      corresponding per particle attribute, use the data passed from</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      particle shape (stored in magnitudeArray and directionArray).  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Otherwise, use the attribute value from the field.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">        <span class=\"comment\">// get the default values</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> defaultDir = direction(block);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  defaultMag = magnitude(block);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> magArraySize = magnitudeArray.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> dirArraySize = directionArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> magOwnerArraySize = magnitudeOwnerArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> dirOwnerArraySize = directionOwnerArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numOfOwner = magOwnerArraySize;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( dirOwnerArraySize &gt; numOfOwner )</div>\n\
<div class=\"line\">        numOfOwner = dirOwnerArraySize;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  magnitude = defaultMag;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> direction = defaultDir;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> ptIndex = 0; ptIndex &lt; receptorSize; ptIndex ++ ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(receptorSize == magArraySize)</div>\n\
<div class=\"line\">            magnitude = magnitudeArray[ptIndex];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(receptorSize == dirArraySize)</div>\n\
<div class=\"line\">            direction = directionArray[ptIndex];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( numOfOwner &gt; 0) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">int</span> nthOwner = 0; nthOwner &lt; numOfOwner; nthOwner++ ) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(magOwnerArraySize == numOfOwner)</div>\n\
<div class=\"line\">                magnitude = magnitudeOwnerArray[nthOwner];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(dirOwnerArraySize == numOfOwner)</div>\n\
<div class=\"line\">                direction = directionOwnerArray[nthOwner];</div>\n\
<div class=\"line\">            outputForce.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( direction * magnitude );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            outputForce.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( direction * magnitude );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";