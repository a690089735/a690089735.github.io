var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: surfaceBumpManip/surfaceBumpManip.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'surface_bump_manip_2surface_bump_manip_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: surfaceBumpManip/surfaceBumpManip.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">surfaceBumpManip/surfaceBumpManip.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This example demonstrates how to use the PointOnSurface manipulator in the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// API. This example uses three classes to accomplish this task: First, a </span></div>\n\
<div class=\"line\"><span class=\"comment\">// context command (surfaceBumpContext) is provided to create instances of </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the context. Next, a custom selection context (SurfaceBumpContext) is </span></div>\n\
<div class=\"line\"><span class=\"comment\">// created to manage the surface manipulator. Finally, the surface </span></div>\n\
<div class=\"line\"><span class=\"comment\">// manipulator is provided as a custom node class.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Loading and unloading:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The surface bump manipulator context can be created with the following </span></div>\n\
<div class=\"line\"><span class=\"comment\">// MEL commands:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  surfaceBumpContext;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  setToolTo surfaceBumpContext1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// If the preceding commands were used to create the manipulator context, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the following commands can destroy it:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  deleteUI surfaceBumpContext1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  deleteUI surfaceBumpManip;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// If the plugin is loaded and unloaded frequently (such as during testing),</span></div>\n\
<div class=\"line\"><span class=\"comment\">// it is useful to make these command sequences into shelf buttons.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To create the tool button for the plug-in:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (1) Create a new shelf named &quot;Shelf1&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (2) Execute the following MEL commands to create the tool button in this shelf:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  surfaceBumpContext;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  setParent Shelf1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  toolButton -cl toolCluster -t surfaceBumpContext1 -i1 &quot;moveManip.xpm&quot;;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// How to use:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Select the tool button, and then click on a NURBS surface object. The PointOnSurface </span></div>\n\
<div class=\"line\"><span class=\"comment\">// manipulator should appear on the object. Then, drag the manipulator over</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the surface of the object and a bump should appear on the CV nearest to </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the manipulator. If the bump is too small, try adjusting the BUMP_SCALE</span></div>\n\
<div class=\"line\"><span class=\"comment\">// value and recompile.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFn.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxManipContainer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxSelectionContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContextCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MModelMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MManipData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDependencyNodes.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDependencyGraph.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsSurface.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Manipulators</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPointOnSurfaceManip.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// BUMP_SCALE is the factor indicating how far the bump created by the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// manipulator should protrude from the object surface.  The value is treated</span></div>\n\
<div class=\"line\"><span class=\"comment\">// as a distance in object space.  Note that this value is how far the CV is</span></div>\n\
<div class=\"line\"><span class=\"comment\">// moved away from the surface, not the actual distance that the surface is</span></div>\n\
<div class=\"line\"><span class=\"comment\">// moved at the point.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> BUMP_SCALE = 0.5;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This is a utility method used to find the surface plug that should be used</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to connect a pointOnSurface manipulator to a surface.  The method takes the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// input node (which must be a DAG node whose child is the nurbs shape) and</span></div>\n\
<div class=\"line\"><span class=\"comment\">// finds the nurbs shape node (shape) and the surface plug (plug).</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> findSurfacePlug(<span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node, <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; shape) {</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!node.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a7f6b3e140a92b64ca6c088012cca49af\">MFn::kDagNode</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Nodes passed to findSurfacePlug must be DAG&quot;</span></div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot; nodes&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> nodeFn(node);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (nodeFn.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html#a7c6cdc0f5380b205fcf6e524e307b47f\">childCount</a>() != 1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;DAG node must have 1 child&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    shape = nodeFn.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html#aaba05ce0a6791c69b8c850afaeb3bf67\">child</a>(0);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shape.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Child node is not a nurbs surface&quot;</span>);</div>\n\
<div class=\"line\">        shape = <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the connection to the create attribute on the shape node.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> shapeNode(shape);</div>\n\
<div class=\"line\">    plug = shapeNode.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#aac29b4a3b51c9d236175e955638f7153\">findPlug</a>(<span class=\"stringliteral\">&quot;create&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// surfaceBumpManip</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This class implements the example pointOnSurface manipulator</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>surfaceBumpManip : <span class=\"keyword\">public</span> <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html\">MPxManipContainer</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    surfaceBumpManip();</div>\n\
<div class=\"line\">    ~surfaceBumpManip() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> * creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ab775d976c0f4b24e540bd06af23a0738\">initialize</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#a5f6e1ab823f87eddad380cd85f61293c\">createChildren</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ac7013eba743cd3226bc9a72b1ea27cff\">connectToDependNode</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#aef28aea1609504c09c2096a532c0cebe\">draw</a>(<a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, </div>\n\
<div class=\"line\">                      <span class=\"keyword\">const</span> <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path, </div>\n\
<div class=\"line\">                      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8a\">M3dView::DisplayStyle</a> style,</div>\n\
<div class=\"line\">                      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> status) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Callback function</span></div>\n\
<div class=\"line\">    <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_manip_data.html\">MManipData</a> surfacePointChangedCallback(<span class=\"keywordtype\">unsigned</span> index);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> fPointOnSurfaceManip;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fSurfaceShape;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Previous parameters</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> saved_u,saved_v;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Previous position of the CV</span></div>\n\
<div class=\"line\">    <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> savedPoint;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> dummyPlugIndex;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> surfaceBumpManip::id( 0x80023 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">surfaceBumpManip::surfaceBumpManip() : saved_u(-1),saved_v(-1)</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// The constructor must not call createChildren for user-defined</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// manipulators.</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">surfaceBumpManip::~surfaceBumpManip() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *surfaceBumpManip::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">     <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> surfaceBumpManip();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> surfaceBumpManip::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ab775d976c0f4b24e540bd06af23a0738\">MPxManipContainer::initialize</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> surfaceBumpManip::createChildren()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add the pointOnSurface manip</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    fPointOnSurfaceManip = addPointOnSurfaceManip(<span class=\"stringliteral\">&quot;surfaceBumpManip&quot;</span>, <span class=\"stringliteral\">&quot;point&quot;</span>);</div>\n\
<div class=\"line\">    <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_point_on_surface_manip.html\">MFnPointOnSurfaceManip</a> pointOnSurfaceManip(fPointOnSurfaceManip);</div>\n\
<div class=\"line\">    pointOnSurfaceManip.setDrawSurface(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    pointOnSurfaceManip.setDrawArrows(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    pointOnSurfaceManip.setParameters(0.0,0.0);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> surfaceBumpManip::connectToDependNode(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_point_on_surface_manip.html\">MFnPointOnSurfaceManip</a> pointOnSurfaceManip(fPointOnSurfaceManip);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Connect to the nurbs surface plug.  The surface plug indicates the </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// surface that should be used as the source for the uv manipulation.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> surfacePlug;</div>\n\
<div class=\"line\">    findSurfacePlug(node, surfacePlug, fSurfaceShape);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!surfacePlug.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Using surface plug: &quot;</span>) + surfacePlug.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>());</div>\n\
<div class=\"line\">        stat = pointOnSurfaceManip.connectToSurfacePlug(surfacePlug);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Could not connect surface plug&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Error finding surface plug&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add a dynamic attribute to the node to be computed by the manipToPlug </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// conversion function.  For this manipulator, the manipToPlug conversion </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// function is used as a callback so this plug is just a placeholder.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note that this plugin leaves the dummy plugs on the nodes it manipulates.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> nodeFn(node);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> dummyPlug = nodeFn.findPlug(<span class=\"stringliteral\">&quot;dummyPlug&quot;</span>,  <span class=\"keyword\">true</span>,  &amp;stat);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (dummyPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> attributeFn;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr = attributeFn.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;dummyPlug&quot;</span>, <span class=\"stringliteral\">&quot;dp&quot;</span>, <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7add817d1d2e1e1d24ac2e2819a58e8f99\">MFnNumericData::k3Double</a>);</div>\n\
<div class=\"line\">        nodeFn.addAttribute(attr);</div>\n\
<div class=\"line\">        dummyPlug = nodeFn.findPlug(<span class=\"stringliteral\">&quot;dummyPlug&quot;</span>, <span class=\"keyword\">true</span>, &amp;stat);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dummyPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Could not find dummyPlug on the manipulator.&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a manipToPlug callback for the param plug.  For now, the plug</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// that is computed is irrelevant (we only care about the callback being</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// invoked), so we pass in the dummy plug.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    dummyPlugIndex = addManipToPlugConversionCallback(dummyPlug, </div>\n\
<div class=\"line\">        (manipToPlugConversionCallback) </div>\n\
<div class=\"line\">        &amp;surfaceBumpManip::surfacePointChangedCallback);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the transformation from the object and set it in the </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// manipulator.  This allows the manipulator to display with the object</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// it is manipulating.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> transform(node);</div>\n\
<div class=\"line\">    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html\">MTransformationMatrix</a> matrix = transform.transformation();</div>\n\
<div class=\"line\">    pointOnSurfaceManip.set(matrix);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    finishAddingManips();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ac7013eba743cd3226bc9a72b1ea27cff\">MPxManipContainer::connectToDependNode</a>(node);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> surfaceBumpManip::draw(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view, </div>\n\
<div class=\"line\">                     <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; path, </div>\n\
<div class=\"line\">                     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8a\">M3dView::DisplayStyle</a> style,</div>\n\
<div class=\"line\">                     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> status)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Uses default manipulator drawing to draw the pointOnSurface manip</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#aef28aea1609504c09c2096a532c0cebe\">MPxManipContainer::draw</a>(view, path, style, status);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_manip_data.html\">MManipData</a> surfaceBumpManip::surfacePointChangedCallback(<span class=\"keywordtype\">unsigned</span> index) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Always return (0.0,0.0,0.0) to the dummy plug.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html\">MFnNumericData</a> numericData;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = numericData.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a82c1cfe8ea0f4ed6e13097715906d600\">create</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7add817d1d2e1e1d24ac2e2819a58e8f99\">MFnNumericData::k3Double</a> );</div>\n\
<div class=\"line\">    numericData.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a5a8685975c5472876e8e3558911a7b7b\">setData</a>(0.0,0.0,0.0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index != dummyPlugIndex)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Invalid index in surface point changed callback!&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> obj;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a> nurbsSurface(fSurfaceShape);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the parameter values from the node</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> u = 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> v = 0.0;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_point_on_surface_manip.html\">MFnPointOnSurfaceManip</a> pointOnSurfaceManip(fPointOnSurfaceManip);</div>\n\
<div class=\"line\">    pointOnSurfaceManip.getParameters(u,v);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Uncomment to see the parameters that are received by the callback.</span></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    MGlobal::displayInfo(MString(&quot;Num CVs are: &quot;) + </span></div>\n\
<div class=\"line\"><span class=\"comment\">        nurbsSurface.numSpansInU() + &quot;,&quot; + nurbsSurface.numSpansInV());</span></div>\n\
<div class=\"line\"><span class=\"comment\">    MGlobal::displayInfo(MString(&quot;Parameters are: &quot;) + u + &quot;,&quot; + v);</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Snap the parameters to the nearest CV.  This code assumes that CVs are </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// a unit distance apart in both the U and V directions.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> u_int = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> v_int = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (nurbsSurface.formInU() == <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a99f5203c7742378941e34926280c8e66a0ed9d38a35a60087a093558dad96d882\">MFnNurbsSurface::kPeriodic</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        u_int = (int)(floor(u+1.5)) % nurbsSurface.numSpansInU();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (u_int &lt; 0)</div>\n\
<div class=\"line\">            u_int += nurbsSurface.numSpansInU();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        u_int = (int)(floor(u+1.5));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (nurbsSurface.formInV() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html#a99f5203c7742378941e34926280c8e66a0ed9d38a35a60087a093558dad96d882\">MFnNurbsSurface::kPeriodic</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        v_int = (int)(floor(v+1.5)) % nurbsSurface.numSpansInV();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (v_int &lt; 0)</div>\n\
<div class=\"line\">            v_int += nurbsSurface.numSpansInV();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        v_int = (int)(floor(v+1.5));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Uncomment to see the CVs that were determined from the parameters.</span></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    MGlobal::displayInfo(MString(&quot;Int params are: &quot;) + u_int + &quot;,&quot; + v_int);</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Is it the same CV?</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (u_int == saved_u &amp;&amp; v_int == saved_v)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_manip_data.html\">MManipData</a>(obj);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Is it the first one?  We need a special case to initialize the class</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// variables.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (saved_u == -1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        nurbsSurface.getCV(u_int,v_int,savedPoint,<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\">        saved_u = u_int;</div>\n\
<div class=\"line\">        saved_v = v_int;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the old CV back</span></div>\n\
<div class=\"line\">    nurbsSurface.setCV(saved_u,saved_v,savedPoint,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the position for this CV and store the u and v values</span></div>\n\
<div class=\"line\">    nurbsSurface.getCV(u_int,v_int,savedPoint,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\">    saved_u = u_int;</div>\n\
<div class=\"line\">    saved_v = v_int;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Move the CV out by the normal</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> perturbedPosition = savedPoint + </div>\n\
<div class=\"line\">        BUMP_SCALE*nurbsSurface.normal((<span class=\"keywordtype\">double</span>)u_int,(<span class=\"keywordtype\">double</span>)v_int,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    nurbsSurface.setCV(u_int,v_int,perturbedPosition,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_manip_data.html\">MManipData</a>(obj);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// SurfaceBumpContext</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This class is a simple context for supporting a pointOnSurface manip.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>SurfaceBumpContext : <span class=\"keyword\">public</span> <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html\">MPxSelectionContext</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    SurfaceBumpContext();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a658f83d3a196c6c8e77e7ed2655eb6d7\">toolOnSetup</a>(<a name=\"_a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a1a7ea794ab903ce98dfe7498619a2518\">toolOffCleanup</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Callback issued when selection list changes</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> updateManipulators(<span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    MCallbackId id1;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">SurfaceBumpContext::SurfaceBumpContext()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> str(<span class=\"stringliteral\">&quot;Plugin Surface Bump Manipulator&quot;</span>);</div>\n\
<div class=\"line\">    setTitleString(str);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SurfaceBumpContext::toolOnSetup(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> str(<span class=\"stringliteral\">&quot;Drag the manipulator around the surface&quot;</span>);</div>\n\
<div class=\"line\">    setHelpString(str);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    updateManipulators(<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    id1 = <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_model_message.html#ac4dd423a333cf2a97157987532b36675\">MModelMessage::addCallback</a>(<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_model_message.html#a4f09127c805cc1f5ee20e67db7b45efaa256632550aa8e279dac1d41927c59d84\">MModelMessage::kActiveListModified</a>,</div>\n\
<div class=\"line\">                                     updateManipulators, </div>\n\
<div class=\"line\">                                     <span class=\"keyword\">this</span>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Model addCallback failed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SurfaceBumpContext::toolOffCleanup()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    status = <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MModelMessage::removeCallback</a>(id1);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Model remove callback failed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a1a7ea794ab903ce98dfe7498619a2518\">MPxContext::toolOffCleanup</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SurfaceBumpContext::updateManipulators(<span class=\"keywordtype\">void</span> * data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    SurfaceBumpContext * ctxPtr = (SurfaceBumpContext *) data;</div>\n\
<div class=\"line\">    ctxPtr-&gt;deleteManipulators(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> list;</div>\n\
<div class=\"line\">    stat = <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(list);</div>\n\
<div class=\"line\">    <a name=\"_a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> iter(list, <a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a94dd08feda7b2cf0ff8262312c4fcc09\">MFn::kInvalid</a>, &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess == stat) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (; !iter.isDone(); iter.next()) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Make sure the selection list item is a depend node and has the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// required plugs before manipulating it.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dependNode;</div>\n\
<div class=\"line\">            iter.getDependNode(dependNode);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (dependNode.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>() || !dependNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a2feeef9d7a0ae8bba1f9da9ed24e819b\">MFn::kDependencyNode</a>))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(<span class=\"stringliteral\">&quot;Object in selection list is not &quot;</span></div>\n\
<div class=\"line\">                    <span class=\"stringliteral\">&quot;a depend node.&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Add manipulator to the selected object</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> manipName (<span class=\"stringliteral\">&quot;surfaceBumpManip&quot;</span>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> manipObject;</div>\n\
<div class=\"line\">            surfaceBumpManip* manipulator =</div>\n\
<div class=\"line\">                (surfaceBumpManip *) surfaceBumpManip::newManipulator(</div>\n\
<div class=\"line\">                    manipName, </div>\n\
<div class=\"line\">                    manipObject);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (NULL != manipulator) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Add the manipulator</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                ctxPtr-&gt;addManipulator(manipObject);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Connect the manipulator to the object in the selection list.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!manipulator-&gt;connectToDependNode(dependNode))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dependNodeFn(dependNode);</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(<span class=\"stringliteral\">&quot;Error connecting manipulator to&quot;</span></div>\n\
<div class=\"line\">                        <span class=\"stringliteral\">&quot; object: &quot;</span> + dependNodeFn.name());</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            } </div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// surfaceBumpContext</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This is the command that will be used to create instances</span></div>\n\
<div class=\"line\"><span class=\"comment\">// of our context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>surfaceBumpContext : <span class=\"keyword\">public</span> <a name=\"_a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html\">MPxContextCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    surfaceBumpContext() {};</div>\n\
<div class=\"line\">    <a name=\"_a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a> * <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#a69d6fc56205518e4be6c0ced911e6523\">makeObj</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>* creator();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a> *surfaceBumpContext::makeObj()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> SurfaceBumpContext();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *surfaceBumpContext::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> surfaceBumpContext;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The following routines are used to register/unregister</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the context and manipulator</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerContextCommand(<span class=\"stringliteral\">&quot;surfaceBumpContext&quot;</span>,</div>\n\
<div class=\"line\">                                           &amp;surfaceBumpContext::creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Error registering surfaceBumpContext command&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(<span class=\"stringliteral\">&quot;surfaceBumpManip&quot;</span>, surfaceBumpManip::id, </div>\n\
<div class=\"line\">                                 &amp;surfaceBumpManip::creator, &amp;surfaceBumpManip::initialize,</div>\n\
<div class=\"line\">                                 <a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4501afd1a084198ccd007e64ed2074c9\">MPxNode::kManipContainer</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Error registering surfaceBumpManip node&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterContextCommand(<span class=\"stringliteral\">&quot;surfaceBumpContext&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Error deregistering surfaceBumpContext command&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(surfaceBumpManip::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(<span class=\"stringliteral\">&quot;Error deregistering surfaceBumpManip node&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";