var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MAtomic Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_atomic.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MAtomic Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MAtomic Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya.html\">OpenMaya - API module for common classes</a></div></div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_atomic.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_atomic-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Methods for atomic operations.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_atomic.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MAtomic.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a6e8874b8bf5bfffb6fac137dba28f888\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#a6e8874b8bf5bfffb6fac137dba28f888\">preIncrement</a> (volatile int *variable)</td></tr>\n\
<tr class=\"memdesc:a6e8874b8bf5bfffb6fac137dba28f888\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Increment variable, return value after increment.  <a href=\"class_m_atomic.html#a6e8874b8bf5bfffb6fac137dba28f888\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6e8874b8bf5bfffb6fac137dba28f888\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac2c0d7597183016c73e3e44f3eca453b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#ac2c0d7597183016c73e3e44f3eca453b\">postIncrement</a> (volatile int *variable)</td></tr>\n\
<tr class=\"memdesc:ac2c0d7597183016c73e3e44f3eca453b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Increment variable, return value before increment.  <a href=\"class_m_atomic.html#ac2c0d7597183016c73e3e44f3eca453b\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac2c0d7597183016c73e3e44f3eca453b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acddba9e14f0627bf4e38792f81a47fd4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#acddba9e14f0627bf4e38792f81a47fd4\">increment</a> (volatile int *variable, int incrementValue)</td></tr>\n\
<tr class=\"memdesc:acddba9e14f0627bf4e38792f81a47fd4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Increment variable by incrementValue, return value before increment.  <a href=\"class_m_atomic.html#acddba9e14f0627bf4e38792f81a47fd4\">More...</a><br></td></tr>\n\
<tr class=\"separator:acddba9e14f0627bf4e38792f81a47fd4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa9a012890f5cbfe4b7cb76d29d934fd9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#aa9a012890f5cbfe4b7cb76d29d934fd9\">preDecrement</a> (volatile int *variable)</td></tr>\n\
<tr class=\"memdesc:aa9a012890f5cbfe4b7cb76d29d934fd9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Decrement variable, return value after increment.  <a href=\"class_m_atomic.html#aa9a012890f5cbfe4b7cb76d29d934fd9\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa9a012890f5cbfe4b7cb76d29d934fd9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a65228d140e8bc76f047708eaff3a9210\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#a65228d140e8bc76f047708eaff3a9210\">postDecrement</a> (volatile int *variable)</td></tr>\n\
<tr class=\"memdesc:a65228d140e8bc76f047708eaff3a9210\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Decrement variable, return value before decrement.  <a href=\"class_m_atomic.html#a65228d140e8bc76f047708eaff3a9210\">More...</a><br></td></tr>\n\
<tr class=\"separator:a65228d140e8bc76f047708eaff3a9210\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afe75af9726e9e7070d5a4ded46b49df2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#afe75af9726e9e7070d5a4ded46b49df2\">decrement</a> (volatile int *variable, int decrementValue)</td></tr>\n\
<tr class=\"memdesc:afe75af9726e9e7070d5a4ded46b49df2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Decrement variable by decrementValue, return value before decrement.  <a href=\"class_m_atomic.html#afe75af9726e9e7070d5a4ded46b49df2\">More...</a><br></td></tr>\n\
<tr class=\"separator:afe75af9726e9e7070d5a4ded46b49df2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afadcfa2eca88f808d9eb8b3b73c1e515\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#afadcfa2eca88f808d9eb8b3b73c1e515\">set</a> (volatile int *variable, int newValue)</td></tr>\n\
<tr class=\"memdesc:afadcfa2eca88f808d9eb8b3b73c1e515\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set variable to newValue, return value of variable before set.  <a href=\"class_m_atomic.html#afadcfa2eca88f808d9eb8b3b73c1e515\">More...</a><br></td></tr>\n\
<tr class=\"separator:afadcfa2eca88f808d9eb8b3b73c1e515\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ada84e1d5fb08e43440e14bff2793fb69\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static FORCE_INLINE int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html#ada84e1d5fb08e43440e14bff2793fb69\">compareAndSwap</a> (volatile int *variable, int compareValue, int swapValue)</td></tr>\n\
<tr class=\"memdesc:ada84e1d5fb08e43440e14bff2793fb69\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Compare variable with compareValue and if the values are equal, sets *variable equal to swapValue.  <a href=\"class_m_atomic.html#ada84e1d5fb08e43440e14bff2793fb69\">More...</a><br></td></tr>\n\
<tr class=\"separator:ada84e1d5fb08e43440e14bff2793fb69\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Methods for atomic operations. </p>\n\
<p>The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_atomic.html\" title=\"Methods for atomic operations. \">MAtomic</a> class implements several cross-platform atomic operations which are useful when writing a multithreaded application. Atomic operations are those that appear to happen as a single operation when viewed from other threads.</p>\n\
<p>As a usage example, during reference counting in an SMP environment, it is important to ensure that decrementing and testing the counter against zero happens atomically. If coded this way:</p>\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"keywordflow\">if</span> (--counter == 0) {}</div>\n\
</div><!-- fragment --><p>then another thread could modify the value of counter between the decrement and the if test. The above code would therefore get the wrong value. This class provides a routine to perform the decrement and return the previous value atomically, so the above snippet could be written as:</p>\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_atomic.html#aa9a012890f5cbfe4b7cb76d29d934fd9\">MAtomic::preDecrement</a>(&amp;counter) == 0) {}</div>\n\
</div><!-- fragment --> </div><h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a6e8874b8bf5bfffb6fac137dba28f888\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int preIncrement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Increment variable, return value after increment. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value after incrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac2c0d7597183016c73e3e44f3eca453b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int postIncrement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Increment variable, return value before increment. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value before incrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acddba9e14f0627bf4e38792f81a47fd4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int increment </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>incrementValue</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Increment variable by incrementValue, return value before increment. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">incrementValue</td><td>Value by which to increment variable</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value before incrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa9a012890f5cbfe4b7cb76d29d934fd9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int preDecrement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Decrement variable, return value after increment. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value after decrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a65228d140e8bc76f047708eaff3a9210\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int postDecrement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Decrement variable, return value before decrement. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value before decrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afe75af9726e9e7070d5a4ded46b49df2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int decrement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>decrementValue</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Decrement variable by decrementValue, return value before decrement. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">decrementValue</td><td>Value by which to decrement variable</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value before decrementing </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afadcfa2eca88f808d9eb8b3b73c1e515\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int set </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>newValue</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set variable to newValue, return value of variable before set. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>Value to be modified </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newValue</td><td>Value to which to set variable</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. Variable value before set </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ada84e1d5fb08e43440e14bff2793fb69\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">static FORCE_INLINE int compareAndSwap </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">volatile int *&#160;</td>\n\
          <td class=\"paramname\"><em>variable</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>compareValue</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>swapValue</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Compare variable with compareValue and if the values are equal, sets *variable equal to swapValue. </p>\n\
<p>The result of the comparison is returned, true if the compare was sucessful, false otherwise.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">variable</td><td>First value to be compared </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">compareValue</td><td>Second value to be compared </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">swapValue</td><td>Value to set *variable to if comparison is successful</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>. True if variable equals compareValue, otherwise false </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li>MAtomic.h</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";