var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: simpleSimulationNode/simpleSimulationNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'simple_simulation_node_2simple_simulation_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: simpleSimulationNode/simpleSimulationNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">simpleSimulationNode/simpleSimulationNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2019 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in demonstrates how to use the MPxNode::getCacheSetup() method</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to interact with Cached Playback.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It implements a very simple simulation and tells the Cached Playback</span></div>\n\
<div class=\"line\"><span class=\"comment\">// system about it.  That way, when filling the cache in the background,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the filling direction will be adjusted accordingly to make sure simulation</span></div>\n\
<div class=\"line\"><span class=\"comment\">// is evaluated on consecutive frames.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To run this example, execute the MEL code below.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    MEL:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    loadPlugin simpleSimulationNode;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    file -f -new;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    polySphere;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setAttr pSphere1.translateZ 5;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    polyCube;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time   1 -value   0 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time  20 -value  10 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time  40 -value   0 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time  60 -value -10 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time  80 -value   0 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time 100 -value  10 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setKeyframe -time 120 -value   0 pCube1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNode simpleSimulationNode;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setAttr simpleSimulationNode1.dampingFactor 0.1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr time1.outTime simpleSimulationNode1.currentTime;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setAttr simpleSimulationNode1.simulationStartTime 20;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr pCube1.translateX simpleSimulationNode1.target;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr simpleSimulationNode1.output pSphere1.translateX ;</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;string.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MNodeCacheDisablingInfoHelper.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;cassert&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;limits&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This class implements a simple simulation that soften the movement</span></div>\n\
<div class=\"line\"><span class=\"comment\">// of what is driving it.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It basically computes the following simulation:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// output          = simulationState + (target - simulationState) * dampingFactor</span></div>\n\
<div class=\"line\"><span class=\"comment\">// simulationState = output</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Basically, it tries to reach the target by bridging the distance between the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// current simulation state and the current target.</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>simpleSimulationNode : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html\">MPxNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>(<span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>        <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6f70ff175ac7ba65cb65aa3b5592f05b\">getCacheSetup</a>(<span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evaluationNode,</div>\n\
<div class=\"line\">                              <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info.html\">MNodeCacheDisablingInfo</a>&amp; disablingInfo,</div>\n\
<div class=\"line\">                              <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html\">MNodeCacheSetupInfo</a>&amp; setupInfo,</div>\n\
<div class=\"line\">                              <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a>&amp; monitoredAttributes) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>  <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a68b5f4da814941edd141ca207d1c7369\">transformInvalidationRange</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; source, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>&amp; input) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span>*       creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// The target value this node tries to reach (input attribute).</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aTarget;</div>\n\
<div class=\"line\">    <span class=\"comment\">// The amount of the different between the current simulation state and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// current target to be bridged in an evaluation (input attribute).</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aDampingFactor;</div>\n\
<div class=\"line\">    <span class=\"comment\">// The current time value used to control the simulation (input attribute).</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This attribute should be connected to the time node.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aCurrentTime;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Whether or not the simulation is enabled.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Disabling this attribute makes this node a passthrough where output = target (input attribute)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This attribute should NOT be animated.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aSimulationEnabled;</div>\n\
<div class=\"line\">    <span class=\"comment\">// The time at which the simulation starts (intput attribute).</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This attribute should NOT be animated.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aSimulationStartTime;</div>\n\
<div class=\"line\">    <span class=\"comment\">// The output of this node, i.e. where the simulation is when</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// trying to reach the target (output attribute).</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aOutput;</div>\n\
<div class=\"line\">    <span class=\"comment\">// The simulation state, i.e. basically the last output state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// (internal attribute, only used internally).</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aSimulationState;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Time of previous computation</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     aPrevTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     id;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Statics</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aTarget;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aDampingFactor;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aCurrentTime;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aSimulationEnabled;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aSimulationStartTime;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aOutput;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aSimulationState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     simpleSimulationNode::aPrevTime;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     simpleSimulationNode::id{ 0x00081160 };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Class implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> simpleSimulationNode::compute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == aOutput)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        assert(!aTarget.isNull());</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> targetValue = data.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aTarget, &amp;returnStatus).<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">        assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        assert(!aSimulationEnabled.isNull());</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> simulationEnabledValue = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aSimulationEnabled, &amp;returnStatus).<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>();</div>\n\
<div class=\"line\">        assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> currentTime;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (simulationEnabledValue)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            assert(!aPrevTime.isNull());</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> prevTime = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aPrevTime, &amp;returnStatus).<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\">            assert(returnStatus);</div>\n\
<div class=\"line\">            assert(!aCurrentTime.isNull());</div>\n\
<div class=\"line\">            currentTime = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aCurrentTime, &amp;returnStatus).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\">            assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (prevTime == currentTime) {</div>\n\
<div class=\"line\">                data.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(aOutput);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            assert(!aSimulationStartTime.isNull());</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> simulationStartTime = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aSimulationStartTime, &amp;returnStatus).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\">            assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Apply the simulation if we are past the start time; otherwise just take the target directly.</span></div>\n\
<div class=\"line\">            simulationEnabledValue = (simulationStartTime &lt; currentTime);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> outputValue = targetValue;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (simulationEnabledValue)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            assert(!aDampingFactor.isNull());</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> dampingFactorValue = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aDampingFactor, &amp;returnStatus).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">            assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            assert(!aSimulationState.isNull());</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> simulationStateValue = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aSimulationState, &amp;returnStatus).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">            assert(returnStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            outputValue = simulationStateValue + (targetValue - simulationStateValue) * dampingFactorValue;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outputHandle = data.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(aOutput);</div>\n\
<div class=\"line\">        outputHandle.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(outputValue);</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> simulationStateHandle = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(aSimulationState);</div>\n\
<div class=\"line\">        simulationStateHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(outputValue);</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(aSimulationState);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(aPrevTime).<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5102ef7eda0642f58f9358adc0e93c64\">setMTime</a>(currentTime);</div>\n\
<div class=\"line\">        assert(data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(aPrevTime).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>() == currentTime);</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(aPrevTime);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> simpleSimulationNode::getCacheSetup(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evaluationNode,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info.html\">MNodeCacheDisablingInfo</a>&amp; disablingInfo,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html\">MNodeCacheSetupInfo</a>&amp; setupInfo,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a>&amp; monitoredAttributes)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Check if the attribute is animated.  If it is animated, requestSimulation</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// will be true so that the behavior is the same as if the scene was played back from</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the beginning of the time range.  That being said, it makes very little sense</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to animate whether the simulation is active or not.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> requestSimulation = <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info_helper.html#a025bcecdd5cbf3d1f9f0ae91eb2448f3\">MNodeCacheDisablingInfoHelper::testBooleanAttribute</a>(</div>\n\
<div class=\"line\">        <span class=\"keyword\">nullptr</span>, monitoredAttributes, evaluationNode, aSimulationEnabled, <span class=\"keyword\">false</span></div>\n\
<div class=\"line\">    );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (requestSimulation)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Request simulation support</span></div>\n\
<div class=\"line\">        setupInfo.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html#a86492224abbc49a832bd0178a3d2fc46\">setRequirement</a>(<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html#a7d1b79c8994c6cb481c43cb757d69c2fa046cce158dc36735188793bbd998b660\">MNodeCacheSetupInfo::kSimulationSupport</a>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a> simpleSimulationNode::transformInvalidationRange(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; source, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>&amp; input)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Never call the parent class method, it&#39;s not meant to be called from the base class,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the implementation is only used to detect whether there is an override or not.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// When setting infinite values, do not use max()/min() directly, could overflow easily.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> constexpr MTime::MTick kMaximumTimeTick = std::numeric_limits&lt;MTime::MTick&gt;::max()/2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> constexpr MTime::MTick kMinimumTimeTick = std::numeric_limits&lt;MTime::MTick&gt;::min()/2+1;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> kMaximumTime{ kMaximumTimeTick / <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">double</span><span class=\"keyword\">&gt;</span>(<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a888028acba20a796ec978227cd43f9de\">MTime::ticksPerSecond</a>()), <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a> };</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> kMinimumTime{ kMinimumTimeTick / <span class=\"keyword\">static_cast&lt;</span><span class=\"keywordtype\">double</span><span class=\"keyword\">&gt;</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a888028acba20a796ec978227cd43f9de\">MTime::ticksPerSecond</a>()), <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a> };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the start time and whether simulation is enabled., but it should NOT be animated, so it should be clean.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> data = <span class=\"keyword\">const_cast&lt;</span>simpleSimulationNode*<span class=\"keyword\">&gt;</span>(<span class=\"keyword\">this</span>)-&gt;forceCache();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!data.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a09f4b5726085e604cb22c22a25aaf6b9\">isClean</a>(aSimulationStartTime) || !data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a09f4b5726085e604cb22c22a25aaf6b9\">isClean</a>(aSimulationEnabled))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>{ kMinimumTime, kMaximumTime };</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Whether the simulation is enabled or not is clean, get its value.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> simulationEnabledData = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aSimulationEnabled, &amp;returnStatus);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> simulationEnabled = returnStatus ? simulationEnabledData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() : <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!simulationEnabled)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> input;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The start time is clean, get its value.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> simulationStartTimeData = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(aSimulationStartTime, &amp;returnStatus);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> simulationStartTime = returnStatus ? simulationStartTimeData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>() : kMinimumTime;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> simulationEndTime = kMaximumTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (input.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html#a36406ba0e13e74604af20b2fbe0453d1\">intersects</a>(simulationStartTime, simulationEndTime))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// We invalidate the whole simulation time range, because something in the range was invalidated,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// therefore we have to recompute the whole simulation.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> input | <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>{ simulationStartTime, simulationEndTime };</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Since the invalidation range does not touch the simulation,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// We don&#39;t need to invalidate anything.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time_range.html\">MTimeRange</a>{};</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* simpleSimulationNode::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> simpleSimulationNode();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> simpleSimulationNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a>    uAttr;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>             status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTarget = nAttr.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;target&quot;</span>, <span class=\"stringliteral\">&quot;tg&quot;</span>, <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.0);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aDampingFactor = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;dampingFactor&quot;</span>, <span class=\"stringliteral\">&quot;df&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.1);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aCurrentTime = uAttr.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>(<span class=\"stringliteral\">&quot;currentTime&quot;</span>, <span class=\"stringliteral\">&quot;ct&quot;</span>, <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>, 0.0);</div>\n\
<div class=\"line\">    uAttr.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    uAttr.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    uAttr.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aSimulationEnabled = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;simulationEnabled&quot;</span>, <span class=\"stringliteral\">&quot;se&quot;</span>, <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1.0);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aSimulationStartTime = uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>(<span class=\"stringliteral\">&quot;simulationStartTime&quot;</span>, <span class=\"stringliteral\">&quot;sst&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>, 0.0);</div>\n\
<div class=\"line\">    uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aOutput = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;output&quot;</span>, <span class=\"stringliteral\">&quot;out&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.0);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aSimulationState = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;simulationState&quot;</span>, <span class=\"stringliteral\">&quot;pi&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.0);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aPrevTime = uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>(<span class=\"stringliteral\">&quot;prevTime&quot;</span>, <span class=\"stringliteral\">&quot;pt&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>, 0);</div>\n\
<div class=\"line\">    uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    uAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = addAttribute(aTarget);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aDampingFactor);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aCurrentTime);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aSimulationEnabled);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aSimulationStartTime);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aSimulationState);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = addAttribute(aPrevTime);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = attributeAffects(aTarget, aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = attributeAffects(aDampingFactor, aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = attributeAffects(aCurrentTime, aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = attributeAffects(aSimulationEnabled, aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\">    status = attributeAffects(aSimulationStartTime, aOutput);</div>\n\
<div class=\"line\">    assert(status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Plug-in entry points</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;1.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;simpleSimulationNode&quot;</span>,</div>\n\
<div class=\"line\">        simpleSimulationNode::id,</div>\n\
<div class=\"line\">        simpleSimulationNode::creator,</div>\n\
<div class=\"line\">        simpleSimulationNode::initialize</div>\n\
<div class=\"line\">    );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(simpleSimulationNode::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";