var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: lassoTool/lassoTool.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'lasso_tool_2lasso_tool_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: lassoTool/lassoTool.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">lassoTool/lassoTool.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Lasso selection within a user defined context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSelectionList.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContextCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCursor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEvent.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGL.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItCurveCV.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSurfaceCV.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshVertex.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshEdge.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshPolygon.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">LPCSTR lassoToolCursor = <span class=\"stringliteral\">&quot;lassoToolCursor.cur&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;lassoToolCursor.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;lassoToolCursorMask.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define lassoToolCursor_x_hot 1</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define lassoToolCursor_y_hot 16</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>coord {</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span> h;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span> v;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">extern</span> <span class=\"stringliteral\">&quot;C&quot;</span> <span class=\"keywordtype\">int</span> xycompare( coord *p1, coord *p2 );</div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> xycompare( coord *p1, coord *p2 )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( p1-&gt;v &gt; p2-&gt;v )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( p2-&gt;v &gt; p1-&gt;v )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> -1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( p1-&gt;h &gt; p2-&gt;h )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( p2-&gt;h &gt; p1-&gt;h )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The user Context</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> initialSize       = 1024;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> increment         =  256;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> helpString[]     = <span class=\"stringliteral\">&quot;drag mouse to select points by encircling&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lassoTool : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    lassoTool();</div>\n\
<div class=\"line\">                ~lassoTool() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>*           creator();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a658f83d3a196c6c8e77e7ed2655eb6d7\">toolOnSetup</a>( <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a0207c206f23f9ed9ba2cd52afd01cd0f\">doPress</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a531f370c5c8612e10b504a4858c44c60\">doDrag</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a560e1136f32f260f7de42b579ad1f27b\">doRelease</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>                    append_lasso( <span class=\"keywordtype\">short</span> x, <span class=\"keywordtype\">short</span> y );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>                    draw_lasso();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    point_in_lasso( coord pt );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    firstDraw;</div>\n\
<div class=\"line\">    coord                   min;</div>\n\
<div class=\"line\">    coord                   max;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>                maxSize;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>                num_points;</div>\n\
<div class=\"line\">    coord*                  lasso;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4\">MGlobal::ListAdjustment</a> listAdjustment;</div>\n\
<div class=\"line\">    <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>                 view;</div>\n\
<div class=\"line\">    <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cursor.html\">MCursor</a>                 lassoCursor;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">lassoTool::lassoTool()</div>\n\
<div class=\"line\">    : maxSize(0)</div>\n\
<div class=\"line\">    , num_points(0)</div>\n\
<div class=\"line\">    , lasso(NULL)</div>\n\
<div class=\"line\">#ifdef _WIN32</div>\n\
<div class=\"line\">    , lassoCursor(lassoToolCursor)</div>\n\
<div class=\"line\">#else</div>\n\
<div class=\"line\">    , lassoCursor(lassoToolCursor_width,</div>\n\
<div class=\"line\">              lassoToolCursor_height,</div>\n\
<div class=\"line\">              lassoToolCursor_x_hot,</div>\n\
<div class=\"line\">              lassoToolCursor_y_hot,</div>\n\
<div class=\"line\">              lassoToolCursor_bits,</div>\n\
<div class=\"line\">              lassoToolCursorMask_bits)</div>\n\
<div class=\"line\">#endif</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setTitleString ( <span class=\"stringliteral\">&quot;Lasso Pick&quot;</span> );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// set the initial state of the cursor</span></div>\n\
<div class=\"line\">    setCursor(lassoCursor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Tell the context which XPM to use so the tool can properly</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// be a candidate for the 6th position on the mini-bar.</span></div>\n\
<div class=\"line\">    setImage(<span class=\"stringliteral\">&quot;lassoTool.xpm&quot;</span>, <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a5680fcec77b562f3c18fbd3001f4f29dab537113dbc917348d5d70fe16eaba09b\">MPxContext::kImage1</a> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">lassoTool::~lassoTool() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* lassoTool::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> lassoTool;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lassoTool::toolOnSetup ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setHelpString( helpString );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lassoTool::doPress( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event )</div>\n\
<div class=\"line\"><span class=\"comment\">// Set up for overlay drawing, and remember our starting point</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Figure out which modifier keys were pressed, and set up the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// listAdjustment parameter to reflect what to do with the selected points.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (event.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a64775a125eaf8ec9e67e50242e103a88\">isModifierShift</a>() || <span class=\"keyword\">event</span>.isModifierControl() ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( event.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a64775a125eaf8ec9e67e50242e103a88\">isModifierShift</a>() ) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( event.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a4d394a4b2239de7b92b1e36fbe617655\">isModifierControl</a>() ) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// both shift and control pressed, merge new selections</span></div>\n\
<div class=\"line\">                listAdjustment = <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4adc09789778e2bb82b1121c0aab78da12\">MGlobal::kAddToList</a>;</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">// shift only, xor new selections with previous ones</span></div>\n\
<div class=\"line\">                listAdjustment = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4a3a0570bd44a3245270b3e7b94934f3f1\">MGlobal::kXORWithList</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( event.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a4d394a4b2239de7b92b1e36fbe617655\">isModifierControl</a>() ) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// control only, remove new selections from the previous list</span></div>\n\
<div class=\"line\">            listAdjustment = <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4a7cb7dd787f22a4dab08af6fe7c408534\">MGlobal::kRemoveFromList</a>; </div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        listAdjustment = <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4a7f418bb5928b79c7e0222251461055a6\">MGlobal::kReplaceList</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the active 3D view.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    view = <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a3cda809eff914b04ff47de958c365f09\">M3dView::active3dView</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create an array to hold the lasso points. Assume no mem failures</span></div>\n\
<div class=\"line\">    maxSize = initialSize;</div>\n\
<div class=\"line\">    lasso = (coord*) malloc (<span class=\"keyword\">sizeof</span>(coord) * maxSize);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    coord start;</div>\n\
<div class=\"line\">    <span class=\"keyword\">event</span>.getPosition( start.h, start.v );</div>\n\
<div class=\"line\">    num_points = 1;</div>\n\
<div class=\"line\">    lasso[0] = min = max = start;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    firstDraw = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lassoTool::doDrag( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event )</div>\n\
<div class=\"line\"><span class=\"comment\">// Add to the growing lasso</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.beginXorDrawing(<span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>, 1.0f, <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0bc3cb1fabcc93f82025ed689fb0421aa75ff72f4ead6406eef0ac1c1ac32e174\">M3dView::kStippleDashed</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!firstDraw) {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  Redraw the old lasso to clear it.</span></div>\n\
<div class=\"line\">        draw_lasso();</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        firstDraw = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    coord currentPos;</div>\n\
<div class=\"line\">    <span class=\"keyword\">event</span>.getPosition( currentPos.h, currentPos.v );</div>\n\
<div class=\"line\">    append_lasso( currentPos.h, currentPos.v );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Draw the new lasso.</span></div>\n\
<div class=\"line\">    draw_lasso();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.endXorDrawing();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lassoTool::doRelease( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; <span class=\"comment\">/*event*/</span> )</div>\n\
<div class=\"line\"><span class=\"comment\">// Selects objects within the lasso</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>                         stat;</div>\n\
<div class=\"line\">    <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a>                  incomingList, boundingBoxList, newList;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!firstDraw) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Redraw the lasso to clear it.</span></div>\n\
<div class=\"line\">        view.beginXorDrawing(<span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>, 1.0f, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0bc3cb1fabcc93f82025ed689fb0421aa75ff72f4ead6406eef0ac1c1ac32e174\">M3dView::kStippleDashed</a>);</div>\n\
<div class=\"line\">        draw_lasso();</div>\n\
<div class=\"line\">        view.endXorDrawing();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// We have a non-zero sized lasso.  Close the lasso, and sort</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// all the points on it.</span></div>\n\
<div class=\"line\">    append_lasso(lasso[0].h, lasso[0].v);</div>\n\
<div class=\"line\">    qsort( &amp;(lasso[0]), num_points, <span class=\"keyword\">sizeof</span>( coord  ),</div>\n\
<div class=\"line\">        (<span class=\"keywordtype\">int</span> (*)(<span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *, <span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *))xycompare);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Save the state of the current selections.  The &quot;selectFromSceen&quot;</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// below will alter the active list, and we have to be able to put</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// it back.</span></div>\n\
<div class=\"line\">    <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(incomingList);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// As a first approximation to the lasso, select all components with</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the bounding box that just contains the lasso.</span></div>\n\
<div class=\"line\">    <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#aea0845f235cfea903f2dde8562854b48\">MGlobal::selectFromScreen</a>( min.h, min.v, max.h, max.v,</div>\n\
<div class=\"line\">                               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4a7f418bb5928b79c7e0222251461055a6\">MGlobal::kReplaceList</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the list of selected items from within the bounding box</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and create a iterator for them.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(boundingBoxList);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore the active selection list to what it was before we</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the &quot;selectFromScreen&quot;</span></div>\n\
<div class=\"line\">    <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a33e6a7c8fa1c06fd64063bd08d4e4aef\">MGlobal::setActiveSelectionList</a>(incomingList, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b77552a306fb2b916ef75e34e1298d4a7f418bb5928b79c7e0222251461055a6\">MGlobal::kReplaceList</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Iterate over the objects within the bounding box, extract the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// ones that are within the lasso, and add those to newList.</span></div>\n\
<div class=\"line\">    <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> iter(boundingBoxList);</div>\n\
<div class=\"line\">    newList.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    foundEntireObjects = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    foundComponents = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ; !iter.isDone(); iter.next() ) {</div>\n\
<div class=\"line\">        <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>    dagPath;</div>\n\
<div class=\"line\">        <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     component;</div>\n\
<div class=\"line\">        <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>      point;</div>\n\
<div class=\"line\">        coord       pt;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     singleComponent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        iter.getDagPath( dagPath, component );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (component.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>()) {</div>\n\
<div class=\"line\">            foundEntireObjects = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>; <span class=\"comment\">// not a component</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        foundComponents = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (component.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#a7e5fd5d37dde6df8c0cf350e00ca0a75\">apiType</a>()) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a904be66e6029ec717a5a4a2aea7ffebf\">MFn::kCurveCVComponent</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_curve_c_v.html\">MItCurveCV</a> curveCVIter( dagPath, component, &amp;stat );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( ; !curveCVIter.isDone(); curveCVIter.next() ) {</div>\n\
<div class=\"line\">                    point = curveCVIter.position(<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>, &amp;stat );</div>\n\
<div class=\"line\">                    view.worldToView( point, pt.h, pt.v, &amp;stat );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">                        stat.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Could not get position&quot;</span>);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( point_in_lasso( pt ) ) {</div>\n\
<div class=\"line\">                        singleComponent = curveCVIter.currentItem();</div>\n\
<div class=\"line\">                        newList.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a> (dagPath, singleComponent);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a972735c65ba6351b4db180769f7e01c0\">MFn::kSurfaceCVComponent</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_surface_c_v.html\">MItSurfaceCV</a> surfCVIter( dagPath, component, <span class=\"keyword\">true</span>, &amp;stat );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( ; !surfCVIter.isDone(); surfCVIter.next() ) {</div>\n\
<div class=\"line\">                    point = surfCVIter.position(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>, &amp;stat );</div>\n\
<div class=\"line\">                    view.worldToView( point, pt.h, pt.v, &amp;stat );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">                        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Could not get position&quot;</span>);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( point_in_lasso( pt ) ) {</div>\n\
<div class=\"line\">                        singleComponent = surfCVIter.currentItem();</div>\n\
<div class=\"line\">                        newList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a> (dagPath, singleComponent);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_vertex.html\">MItMeshVertex</a> vertexIter( dagPath, component, &amp;stat );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( ; !vertexIter.isDone(); vertexIter.next() ) {</div>\n\
<div class=\"line\">                    point = vertexIter.position(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>, &amp;stat );</div>\n\
<div class=\"line\">                    view.worldToView( point, pt.h, pt.v, &amp;stat );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">                        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Could not get position&quot;</span>);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( point_in_lasso( pt ) ) {</div>\n\
<div class=\"line\">                        singleComponent = vertexIter.currentItem();</div>\n\
<div class=\"line\">                        newList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a> (dagPath, singleComponent);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_edge.html\">MItMeshEdge</a> edgeIter( dagPath, component, &amp;stat );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( ; !edgeIter.isDone(); edgeIter.next() ) {</div>\n\
<div class=\"line\">                    point = edgeIter.center(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>, &amp;stat );</div>\n\
<div class=\"line\">                    view.worldToView( point, pt.h, pt.v, &amp;stat );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">                        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Could not get position&quot;</span>);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( point_in_lasso( pt ) ) {</div>\n\
<div class=\"line\">                        singleComponent = edgeIter.currentItem();</div>\n\
<div class=\"line\">                        newList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a> (dagPath, singleComponent);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_polygon.html\">MItMeshPolygon</a> polygonIter( dagPath, component, &amp;stat );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> ( ; !polygonIter.isDone(); polygonIter.next() ) {</div>\n\
<div class=\"line\">                    point = polygonIter.center(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>, &amp;stat );</div>\n\
<div class=\"line\">                    view.worldToView( point, pt.h, pt.v, &amp;stat );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">                        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Could not get position&quot;</span>);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( point_in_lasso( pt ) ) {</div>\n\
<div class=\"line\">                        singleComponent = polygonIter.currentItem();</div>\n\
<div class=\"line\">                        newList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a> (dagPath, singleComponent);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef MAYA_PRINT_DEBUG_INFO</span></div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;Selected unsupported type: (&quot;</span> &lt;&lt; component.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#a7e5fd5d37dde6df8c0cf350e00ca0a75\">apiType</a>()</div>\n\
<div class=\"line\">                 &lt;&lt; <span class=\"stringliteral\">&quot;): &quot;</span> &lt;&lt; component.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#a3dad4d354c5b968cf4eccfffcdb824f4\">apiTypeStr</a>() &lt;&lt; endl;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Warn user if zie is trying to select objects rather than components.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (foundEntireObjects &amp;&amp; !foundComponents) {</div>\n\
<div class=\"line\">        <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(<span class=\"stringliteral\">&quot;lassoTool can only select components, not entire objects.&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update the selection list as indicated by the modifier keys.</span></div>\n\
<div class=\"line\">    <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a527b2aeb16d0fbbe515ff407383f31a1\">MGlobal::selectCommand</a>(newList, listAdjustment);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Free the memory that held our lasso points.</span></div>\n\
<div class=\"line\">    free(lasso);</div>\n\
<div class=\"line\">    lasso = (coord*) 0;</div>\n\
<div class=\"line\">    maxSize = 0;</div>\n\
<div class=\"line\">    num_points = 0;</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lassoTool::append_lasso( <span class=\"keywordtype\">short</span> x, <span class=\"keywordtype\">short</span> y )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     cy, iy, ix, ydif, yinc, i;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   fx, xinc;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    iy = (int)lasso[num_points-1].v;</div>\n\
<div class=\"line\">    ix = (int)lasso[num_points-1].h;</div>\n\
<div class=\"line\">    ydif = abs( y - iy ); </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ydif == 0 )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Keep track of smallest rectangular area of the screen that</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// completely contains the lasso.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( min.h &gt; x )</div>\n\
<div class=\"line\">        min.h = x;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( max.h &lt; x )</div>\n\
<div class=\"line\">        max.h = x;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( min.v &gt; y )</div>\n\
<div class=\"line\">        min.v = y;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( max.v &lt; y )</div>\n\
<div class=\"line\">        max.v = y;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ((<span class=\"keywordtype\">int</span>)y - iy ) &lt; 0 )</div>\n\
<div class=\"line\">        yinc = -1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        yinc = 1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    xinc = (float)((<span class=\"keywordtype\">int</span>)x - ix)/(<span class=\"keywordtype\">float</span>)ydif;</div>\n\
<div class=\"line\">    fx = (float)ix + xinc;</div>\n\
<div class=\"line\">    cy = iy + yinc;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; ydif; i++ ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( num_points &gt;= maxSize ) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Make the array of lasso points bigger</span></div>\n\
<div class=\"line\">            maxSize += increment;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// If realloc() fails, it returns NULL but keeps the old block</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of memory around, so let&#39;s not overwrite the contents of</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// &#39;lasso&#39; until we know that realloc() worked.</span></div>\n\
<div class=\"line\">            coord* newLasso = (coord*) realloc (lasso, <span class=\"keyword\">sizeof</span>(coord) * maxSize);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (newLasso == NULL) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            lasso = newLasso;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        lasso[num_points].h = (short) fx;</div>\n\
<div class=\"line\">        lasso[num_points].v = (short) cy;</div>\n\
<div class=\"line\">        fx += xinc;</div>\n\
<div class=\"line\">        cy += yinc;</div>\n\
<div class=\"line\">        num_points++;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lassoTool::draw_lasso()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    glBegin( GL_LINE_LOOP );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> i = 0; i &lt; num_points ; i++ ){</div>\n\
<div class=\"line\">        glVertex2i( lasso[i].h, lasso[i].v );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> lassoTool::point_in_lasso( coord pt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> i, sides;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; num_points; i++ ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( lasso[i].v == pt.v ) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> ( (lasso[i].v == pt.v ) &amp;&amp; (lasso[i].h &lt; pt.h) )</div>\n\
<div class=\"line\">                i++;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( lasso[i].v != pt.v )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">            sides = 0;</div>\n\
<div class=\"line\">            i++;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> ( lasso[i].v == pt.v  ) {</div>\n\
<div class=\"line\">                i++;</div>\n\
<div class=\"line\">                sides++;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( sides % 2 )</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Command to create contexts</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lassoContextCmd : <span class=\"keyword\">public</span> <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html\">MPxContextCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\">                        lassoContextCmd() {};</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a>* <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#a69d6fc56205518e4be6c0ced911e6523\">makeObj</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*        creator();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a>* lassoContextCmd::makeObj()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> lassoTool;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* lassoContextCmd::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> lassoContextCmd;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// plugin initialization</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     status;</div>\n\
<div class=\"line\">    <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerContextCommand( <span class=\"stringliteral\">&quot;lassoToolContext&quot;</span>,</div>\n\
<div class=\"line\">                                            lassoContextCmd::creator );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set the mel scripts to be run when the plugin is loaded / unloaded</span></div>\n\
<div class=\"line\">    status = plugin.registerUI(<span class=\"stringliteral\">&quot;lassoToolCreateUI&quot;</span>, <span class=\"stringliteral\">&quot;lassoToolDeleteUI&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerUIScripts&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterContextCommand( <span class=\"stringliteral\">&quot;lassoToolContext&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";