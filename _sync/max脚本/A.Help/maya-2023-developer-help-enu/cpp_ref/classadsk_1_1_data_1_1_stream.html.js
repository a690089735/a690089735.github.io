var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: Stream Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_stream.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: Stream Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">Stream Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Maya-NET-API/Meta-Data.html\">Maya .NET API &gt; Meta Data</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_stream.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_stream.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Class handling a list of generic data.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;adskDataStream.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a22beda3d71a767ab4601c6e3eee69491\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a22beda3d71a767ab4601c6e3eee69491\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a22beda3d71a767ab4601c6e3eee69491\">~Stream</a> ()</td></tr>\n\
<tr class=\"memdesc:a22beda3d71a767ab4601c6e3eee69491\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default destructor, disowns the implementation object. <br></td></tr>\n\
<tr class=\"separator:a22beda3d71a767ab4601c6e3eee69491\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0b64003a4aa6dde92dff71c7d66aa138\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a0b64003a4aa6dde92dff71c7d66aa138\">Stream</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a0b64003a4aa6dde92dff71c7d66aa138\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor, shares a reference with the copy if possible.  <a href=\"classadsk_1_1_data_1_1_stream.html#a0b64003a4aa6dde92dff71c7d66aa138\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0b64003a4aa6dde92dff71c7d66aa138\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abc9a23e893f78202a425c0a916e9c778\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"abc9a23e893f78202a425c0a916e9c778\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#abc9a23e893f78202a425c0a916e9c778\">Stream</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;dataStructure, const std::string &amp;streamName)</td></tr>\n\
<tr class=\"memdesc:abc9a23e893f78202a425c0a916e9c778\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Usual constructor, initializes the definition of data to store. <br></td></tr>\n\
<tr class=\"separator:abc9a23e893f78202a425c0a916e9c778\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1c5bd3d31b86627c0ea03b5c163b47a0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a1c5bd3d31b86627c0ea03b5c163b47a0\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a1c5bd3d31b86627c0ea03b5c163b47a0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator, shares implementation with the rhs.  <a href=\"classadsk_1_1_data_1_1_stream.html#a1c5bd3d31b86627c0ea03b5c163b47a0\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1c5bd3d31b86627c0ea03b5c163b47a0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a464c4a26f0839525283ced7ad296e8d7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a464c4a26f0839525283ced7ad296e8d7\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;) const </td></tr>\n\
<tr class=\"memdesc:a464c4a26f0839525283ced7ad296e8d7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Comparison operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> is the same as another.  <a href=\"classadsk_1_1_data_1_1_stream.html#a464c4a26f0839525283ced7ad296e8d7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a464c4a26f0839525283ced7ad296e8d7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a10ce148dbc3def3aa1cbb6ecc1def183\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a10ce148dbc3def3aa1cbb6ecc1def183\">begin</a> ()</td></tr>\n\
<tr class=\"memdesc:a10ce148dbc3def3aa1cbb6ecc1def183\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a10ce148dbc3def3aa1cbb6ecc1def183\">More...</a><br></td></tr>\n\
<tr class=\"separator:a10ce148dbc3def3aa1cbb6ecc1def183\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa19b8913d1dad053ea1e2ddad6b0df67\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#aa19b8913d1dad053ea1e2ddad6b0df67\">end</a> ()</td></tr>\n\
<tr class=\"memdesc:aa19b8913d1dad053ea1e2ddad6b0df67\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator to the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#aa19b8913d1dad053ea1e2ddad6b0df67\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa19b8913d1dad053ea1e2ddad6b0df67\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8e6f02a246a54e592efc9350e2931d19\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a8e6f02a246a54e592efc9350e2931d19\">cbegin</a> () const </td></tr>\n\
<tr class=\"memdesc:a8e6f02a246a54e592efc9350e2931d19\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a const Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a8e6f02a246a54e592efc9350e2931d19\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8e6f02a246a54e592efc9350e2931d19\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a99fc6faa360f231defa7846e54cfedfe\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a99fc6faa360f231defa7846e54cfedfe\">cend</a> () const </td></tr>\n\
<tr class=\"memdesc:a99fc6faa360f231defa7846e54cfedfe\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator to the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a99fc6faa360f231defa7846e54cfedfe\">More...</a><br></td></tr>\n\
<tr class=\"separator:a99fc6faa360f231defa7846e54cfedfe\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab4c287cc4420efa18680b016bb7dc8a0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#ab4c287cc4420efa18680b016bb7dc8a0\">setIndexType</a> (const std::string &amp;indexTypeName)</td></tr>\n\
<tr class=\"memdesc:ab4c287cc4420efa18680b016bb7dc8a0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Define the type of index used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#ab4c287cc4420efa18680b016bb7dc8a0\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab4c287cc4420efa18680b016bb7dc8a0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:add01a6339df687dda4c074cc203b7384\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">std::string&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#add01a6339df687dda4c074cc203b7384\">indexType</a> () const </td></tr>\n\
<tr class=\"memdesc:add01a6339df687dda4c074cc203b7384\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return the type of index used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#add01a6339df687dda4c074cc203b7384\">More...</a><br></td></tr>\n\
<tr class=\"separator:add01a6339df687dda4c074cc203b7384\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a120f2d366b139860767ac171ba719979\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a120f2d366b139860767ac171ba719979\">makeUnique</a> ()</td></tr>\n\
<tr class=\"memdesc:a120f2d366b139860767ac171ba719979\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Make the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data unique to this object.  <a href=\"classadsk_1_1_data_1_1_stream.html#a120f2d366b139860767ac171ba719979\">More...</a><br></td></tr>\n\
<tr class=\"separator:a120f2d366b139860767ac171ba719979\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa0cf457d7170b358f40a5ffa13051b83\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#aa0cf457d7170b358f40a5ffa13051b83\">clear</a> ()</td></tr>\n\
<tr class=\"memdesc:aa0cf457d7170b358f40a5ffa13051b83\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Clear out all data currently in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#aa0cf457d7170b358f40a5ffa13051b83\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa0cf457d7170b358f40a5ffa13051b83\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a157cc0fcb678996fe497d9afb78f61c7\">structure</a> () const </td></tr>\n\
<tr class=\"memdesc:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> being used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a157cc0fcb678996fe497d9afb78f61c7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a157cc0fcb678996fe497d9afb78f61c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3504a53b73e17df59b772d4108aafb53\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a3504a53b73e17df59b772d4108aafb53\">setStructure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;newStructure)</td></tr>\n\
<tr class=\"memdesc:a3504a53b73e17df59b772d4108aafb53\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the structure to be used in this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a3504a53b73e17df59b772d4108aafb53\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3504a53b73e17df59b772d4108aafb53\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af8370604529de0f829b8424e1288a104\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const std::string &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#af8370604529de0f829b8424e1288a104\">name</a> () const </td></tr>\n\
<tr class=\"memdesc:af8370604529de0f829b8424e1288a104\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the name of this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#af8370604529de0f829b8424e1288a104\">More...</a><br></td></tr>\n\
<tr class=\"separator:af8370604529de0f829b8424e1288a104\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2cf54c09c7946e9fed5c17c5959c8e98\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">IndexCount&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a2cf54c09c7946e9fed5c17c5959c8e98\">elementCount</a> () const </td></tr>\n\
<tr class=\"memdesc:a2cf54c09c7946e9fed5c17c5959c8e98\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the number of elements currently in this data <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a2cf54c09c7946e9fed5c17c5959c8e98\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2cf54c09c7946e9fed5c17c5959c8e98\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aef9b7a8254f1a60bf8e766f117243401\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#aef9b7a8254f1a60bf8e766f117243401\">mergeStream</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;streamEdits)</td></tr>\n\
<tr class=\"memdesc:aef9b7a8254f1a60bf8e766f117243401\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Merge a stream of metadata into this stream.  <a href=\"classadsk_1_1_data_1_1_stream.html#aef9b7a8254f1a60bf8e766f117243401\">More...</a><br></td></tr>\n\
<tr class=\"separator:aef9b7a8254f1a60bf8e766f117243401\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a25473d5d5872cfc437efaebb5a6739bd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a25473d5d5872cfc437efaebb5a6739bd\">setElementRange</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> firstEl, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> lastEl)</td></tr>\n\
<tr class=\"memdesc:a25473d5d5872cfc437efaebb5a6739bd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Create space for a fixed range of elements on the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a25473d5d5872cfc437efaebb5a6739bd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a25473d5d5872cfc437efaebb5a6739bd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa03b6b91252d3d3b867ab318fae9d6ba\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#aa03b6b91252d3d3b867ab318fae9d6ba\">useDenseStorage</a> (bool isDataDense)</td></tr>\n\
<tr class=\"memdesc:aa03b6b91252d3d3b867ab318fae9d6ba\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Switch the current storage mode to dense or sparse.  <a href=\"classadsk_1_1_data_1_1_stream.html#aa03b6b91252d3d3b867ab318fae9d6ba\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa03b6b91252d3d3b867ab318fae9d6ba\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a48f957f8b6c24adbb05d05219aba7bc1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a48f957f8b6c24adbb05d05219aba7bc1\">setUseDefaults</a> (bool useTheDefaults)</td></tr>\n\
<tr class=\"memdesc:a48f957f8b6c24adbb05d05219aba7bc1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Switch the current retrieval mode of values which are not explicitly stored.  <a href=\"classadsk_1_1_data_1_1_stream.html#a48f957f8b6c24adbb05d05219aba7bc1\">More...</a><br></td></tr>\n\
<tr class=\"separator:a48f957f8b6c24adbb05d05219aba7bc1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac1bf479c154ec18cdb0376c1a196638e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#ac1bf479c154ec18cdb0376c1a196638e\">useDefaults</a> () const </td></tr>\n\
<tr class=\"memdesc:ac1bf479c154ec18cdb0376c1a196638e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Ask if the storage is using defaults for unspecified values.  <a href=\"classadsk_1_1_data_1_1_stream.html#ac1bf479c154ec18cdb0376c1a196638e\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac1bf479c154ec18cdb0376c1a196638e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af5b9bd96d037b7ceecb05bba5d646ee9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#af5b9bd96d037b7ceecb05bba5d646ee9\">setElement</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> elementIndex, const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp;newElement)</td></tr>\n\
<tr class=\"memdesc:af5b9bd96d037b7ceecb05bba5d646ee9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a new data element to the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#af5b9bd96d037b7ceecb05bba5d646ee9\">More...</a><br></td></tr>\n\
<tr class=\"separator:af5b9bd96d037b7ceecb05bba5d646ee9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae5ac2be84506f4117b59cff6554d85a3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#ae5ac2be84506f4117b59cff6554d85a3\">element</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> elementIndex)</td></tr>\n\
<tr class=\"memdesc:ae5ac2be84506f4117b59cff6554d85a3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the element at the given index.  <a href=\"classadsk_1_1_data_1_1_stream.html#ae5ac2be84506f4117b59cff6554d85a3\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae5ac2be84506f4117b59cff6554d85a3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad0e96cf98bea11b307a25d881e7dc34a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#ad0e96cf98bea11b307a25d881e7dc34a\">hasElement</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> elementIndex) const </td></tr>\n\
<tr class=\"memdesc:ad0e96cf98bea11b307a25d881e7dc34a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if the element exists in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#ad0e96cf98bea11b307a25d881e7dc34a\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad0e96cf98bea11b307a25d881e7dc34a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2a51b5c4497c9d709278f94b69a7c4fe\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a2a51b5c4497c9d709278f94b69a7c4fe\">reindexElement</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> oldIndex, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> newIndex)</td></tr>\n\
<tr class=\"memdesc:a2a51b5c4497c9d709278f94b69a7c4fe\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Change the index of a single element.  <a href=\"classadsk_1_1_data_1_1_stream.html#a2a51b5c4497c9d709278f94b69a7c4fe\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2a51b5c4497c9d709278f94b69a7c4fe\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af163191c12a0e2612e9aeba8c32d4486\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#af163191c12a0e2612e9aeba8c32d4486\">swapElements</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> oldIndex, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> newIndex)</td></tr>\n\
<tr class=\"memdesc:af163191c12a0e2612e9aeba8c32d4486\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Swap two indices in a list.  <a href=\"classadsk_1_1_data_1_1_stream.html#af163191c12a0e2612e9aeba8c32d4486\">More...</a><br></td></tr>\n\
<tr class=\"separator:af163191c12a0e2612e9aeba8c32d4486\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6972658b36dcf0888192f577bdae01df\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a6972658b36dcf0888192f577bdae01df\">removeElement</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> elementIndex)</td></tr>\n\
<tr class=\"memdesc:a6972658b36dcf0888192f577bdae01df\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove a single element from this data <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.  <a href=\"classadsk_1_1_data_1_1_stream.html#a6972658b36dcf0888192f577bdae01df\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6972658b36dcf0888192f577bdae01df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a364d869dbe51d0b53aca6f7142636209\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a364d869dbe51d0b53aca6f7142636209\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a364d869dbe51d0b53aca6f7142636209\">DeclareObjectCounter</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a>)</td></tr>\n\
<tr class=\"memdesc:a364d869dbe51d0b53aca6f7142636209\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Flag indicating to print as hex. <br></td></tr>\n\
<tr class=\"separator:a364d869dbe51d0b53aca6f7142636209\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:aec805dc9aa33ad5146b813bf3c16129e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#aec805dc9aa33ad5146b813bf3c16129e\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:aec805dc9aa33ad5146b813bf3c16129e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> object.  <a href=\"classadsk_1_1_data_1_1_stream.html#aec805dc9aa33ad5146b813bf3c16129e\">More...</a><br></td></tr>\n\
<tr class=\"separator:aec805dc9aa33ad5146b813bf3c16129e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a57b18fce75ac8516b9f8cb30118a8c62\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a57b18fce75ac8516b9f8cb30118a8c62\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a57b18fce75ac8516b9f8cb30118a8c62\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> object.  <a href=\"classadsk_1_1_data_1_1_stream.html#a57b18fce75ac8516b9f8cb30118a8c62\">More...</a><br></td></tr>\n\
<tr class=\"separator:a57b18fce75ac8516b9f8cb30118a8c62\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Class handling a list of generic data. </p>\n\
<p>This class maintains a list of data with efficient operations for manipulating elements on the list. It works in the class hierarchy controlled by <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">adsk::Data::Associations</a>; see the documentation for that class for the bigger picture of how the classes interrelate.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">adsk::Data::Stream</a> is responsible for managing an indexed list of data. It\'s conceptually like an array, optimized for operations expected to be common for this class hierarchy (deleting from the middle, inserting into several different spots in the middle, duplicating entries, filling sections of the array in one operation, etc.) </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2create_metadata_cmd_8cpp-example.html#_a25\">MetadataSample/createMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2import_metadata_cmd_8cpp-example.html#_a14\">MetadataSample/importMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2tweak_metadata_node_8cpp-example.html#_a24\">MetadataSample/tweakMetadataNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2channel_serializer_x_m_l_8cpp-example.html#_a2\">MetadataXML/channelSerializerXML.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#_a1\">MetadataXML/streamSerializerXML.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8h-example.html#_a1\">MetadataXML/streamSerializerXML.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#_a19\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a0b64003a4aa6dde92dff71c7d66aa138\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor, shares a reference with the copy if possible. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a1c5bd3d31b86627c0ea03b5c163b47a0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator, shares implementation with the rhs. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a464c4a26f0839525283ced7ad296e8d7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Comparison operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> is the same as another. </p>\n\
<p>Equivalence means \"is it the same object\". Having the same content is meaningless at this level so just check to see if the objects are sharing the same <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> implementation object.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the two Streams refer to the same data </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a10ce148dbc3def3aa1cbb6ecc1def183\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::iterator</a> begin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A Member iterator pointing at the first element of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa19b8913d1dad053ea1e2ddad6b0df67\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::iterator</a> end </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator to the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> iterator positioned off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8e6f02a246a54e592efc9350e2931d19\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::const_iterator</a> cbegin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a const Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A Member iterator pointing at the first element of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a19\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a99fc6faa360f231defa7846e54cfedfe\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">Stream::const_iterator</a> cend </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator to the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> iterator positioned off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a20\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab4c287cc4420efa18680b016bb7dc8a0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool setIndexType </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>indexTypeName</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Define the type of index used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<p>Only a single <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\" title=\"Complex index type for referencing metadata. \">IndexType</a> is allowed for any given <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. This method sets and remembers the allowed type so that it can be verified when values are being set or requested.</p>\n\
<p>If no explicit index type is set the default of \"numeric\" is used. i.e. <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">adsk::Data::Index</a> values are all numerics and <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> members are accessed the same as an array would be</p>\n\
<p>If the new index type does not support dense storage and the current data is already stored densely then it must be copied over into a mapped implementation first.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">indexTypeName</td><td>Name of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> type to be used</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>false if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> type could not be set, e.g. because the type name was not recognized, or uncopyable data was present </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a8\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"add01a6339df687dda4c074cc203b7384\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">std::string indexType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return the type of index used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\" title=\"Complex index type for referencing metadata. \">IndexType</a> class used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> for indexing its data </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a11\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a120f2d366b139860767ac171ba719979\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool makeUnique </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Make the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data unique to this object. </p>\n\
<p>Makes a copy of the data if it\'s currently being shared, otherwise leaves it as-is. Note that it can still be shared afterwards by some other object, i.e. this is not a persistent state, just an operation to perform before making changes you don\'t want any other copies of the associations to share.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the data was duplicated in order to make it unique </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa0cf457d7170b358f40a5ffa13051b83\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool clear </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Clear out all data currently in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<p>Removes and destroys if necessary all current elements in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the data was successfully cleared </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a157cc0fcb678996fe497d9afb78f61c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp; structure </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> being used by this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>reference to this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>\'s structure </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a16\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3504a53b73e17df59b772d4108aafb53\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool setStructure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>newStructure</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set the structure to be used in this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<p>It\'s an error to redefine the structure if there is any existing data. If that is the case then this method will return \'false\' and the structure definition will not be changed.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newStructure</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> definition to use for this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a></td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>false if any data already existed </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af8370604529de0f829b8424e1288a104\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const std::string &amp; name </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the name of this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>reference to this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>\'s name </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2import_metadata_cmd_8cpp-example.html#a16\">MetadataSample/importMetadataCmd.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a15\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2cf54c09c7946e9fed5c17c5959c8e98\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">IndexCount elementCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the number of elements currently in this data <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>count of the number of elements currently in this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2tweak_metadata_node_8cpp-example.html#a25\">MetadataSample/tweakMetadataNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a20\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aef9b7a8254f1a60bf8e766f117243401\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool mergeStream </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>streamEdits</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Merge a stream of metadata into this stream. </p>\n\
<p>An efficient way of adding and setting new values on a metadata <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> is to create a new <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> and merge its values in to the original. When an index had a value already the value will be changed to the one in the edits, when it did not the value from the edits is added to the current <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">streamEdits</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> containing the new values to be merged in</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the edits in the streamEdits <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> were successful </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a25473d5d5872cfc437efaebb5a6739bd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool setElementRange </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>firstEl</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>lastEl</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Create space for a fixed range of elements on the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<p>If there are already elements in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> then leave them intact. If there are more than requested then the extras will be removed. e.g. if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> had elements [0,5] then after setElementRange(0,4) the 5th element will be removed, but after setElementRange(0,6) the original 5 will be intact and one element with the default value will be added to the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>.</p>\n\
<p>Subsequent calls to addElement with an index outside of this range will still work, this is just a hint as to where the range might be. Those subsequent calls will expand the element range to included the added index. (e.g. setElementRange(3,8) and addElement(20, DATA) will make the valid range [3,20])</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">firstEl</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the first valid element </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">lastEl</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the last valid element</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> now has space for the element range specified </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa03b6b91252d3d3b867ab318fae9d6ba\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool useDenseStorage </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>isDataDense</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Switch the current storage mode to dense or sparse. </p>\n\
<p>In some cases you will know that you wish to set values on most or all of your metadata elements. In those cases it is more efficient to store every single value separately rather than a map of (index, value) pairs. This method lets you provide that information to the class.</p>\n\
<p>This is purely for performance optimization. The answers returned from the data query methods will be the same no matter which storage mode is in use.</p>\n\
<p>This method switches the current storage type. It provides no guarantee that this storage type will continue to be used in the future.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">isDataDense</td><td>Should every element be explicitly stored rather than only the ones with values assigned?</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the new storage mode was successfully set </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a48f957f8b6c24adbb05d05219aba7bc1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool setUseDefaults </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>useTheDefaults</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Switch the current retrieval mode of values which are not explicitly stored. </p>\n\
<p>(Possibilities are return fail and return default.)</p>\n\
<p>When values which are not explicitly stored are requested then that could either mean that they don\'t exist at all, or that they have the default value and are just not stored for performance reasons.</p>\n\
<p>This method sets the interpretation for this missing data. The interpretation also depends on the storage mode. So when a value for the requested index is not found in storage:</p>\n\
<p>Returns failure when setUseDefaults is false if: </p><ul>\n\
<li>value is outside of the setElementRange range, if defined and </li>\n\
<li>index does not exist in the sparse map, if it exists</li>\n\
</ul>\n\
<p>Returns failure when setUseDefaults is true if: </p><ul>\n\
<li>value is outside of the setElementRange range, if defined</li>\n\
</ul>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">useTheDefaults</td><td>If true then if an index is in range but has no explicit value return the default value instead. If false this returns failure.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the new missing value mode was successfully set </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac1bf479c154ec18cdb0376c1a196638e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool useDefaults </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Ask if the storage is using defaults for unspecified values. </p>\n\
<p>See documentation for <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a48f957f8b6c24adbb05d05219aba7bc1\" title=\"Switch the current retrieval mode of values which are not explicitly stored. \">Stream::setUseDefaults</a> for deteails on what it means to use defaults for unspecified values.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if defaults are being used for unspecified values </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af5b9bd96d037b7ceecb05bba5d646ee9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool setElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>elementIndex</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>newElement</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Add a new data element to the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<p>The indexes are not necessarily sequential so only the given index is guaranteed to be added regardless of what other index values already have data. The values of the other indexes, if added, will depend on structure information. See the documentation for <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">adsk::Data::Structure</a> for details.</p>\n\
<p>If an element already exists at that particular index the old data will be replaced by the new data so be sure to check element(index) first if that\'s not the desired behavior.</p>\n\
<p>The handle has to have the same data structure as the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>, otherwise nothing is added and false is returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">elementIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the element to be added </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newElement</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> to the element to be added at the new index</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the element was added </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a14\">MetadataXML/streamSerializerXML.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a31\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae5ac2be84506f4117b59cff6554d85a3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> element </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>elementIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the element at the given index. </p>\n\
<p>In the current implementation some elements may be NULL so be sure to check the return value before dereferencing it. The return value is a direct reference to the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>\'s copy of the data so modifying it effects the values immediately. There is no need to call setElement when the modifications are complete.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">elementIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the element to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>data handle for the given index </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2tweak_metadata_node_8cpp-example.html#a27\">MetadataSample/tweakMetadataNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a22\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad0e96cf98bea11b307a25d881e7dc34a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool hasElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>elementIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if the element exists in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">elementIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the element to find</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the element is a member of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2a51b5c4497c9d709278f94b69a7c4fe\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool reindexElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>oldIndex</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>newIndex</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Change the index of a single element. </p>\n\
<p>If the newIndex already had a value it will be overwritten. The oldIndex value is copied to the newIndex location. In sparse mode the oldIndex value is removed; in dense mode it is overwritten with default values.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">oldIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the element to be altered </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newIndex</td><td>New index for the element</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the element exists and was renumbered </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af163191c12a0e2612e9aeba8c32d4486\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool swapElements </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>firstIndex</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>secondIndex</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Swap two indices in a list. </p>\n\
<p>This does a one-for-one swap of the elements at two different indices in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. It preserves both sets of values, just swapping their indices. (i.e. the return values from calling element(firstIndex) and element(secondIndex) are reversed)</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">firstIndex</td><td>One index to swap </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">secondIndex</td><td>The other index to swap</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the element exists and was renumbered </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6972658b36dcf0888192f577bdae01df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool removeElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td>\n\
          <td class=\"paramname\"><em>elementIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove a single element from this data <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">elementIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the data to be removed</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the element exists and was removed, or if it didn\'t exist </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aec805dc9aa33ad5146b813bf3c16129e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> object. </p>\n\
<p>Use the request object to dump all information on the \"me\" <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a>, or all static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> information if \"me\" is NULL.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to debug, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Print request object</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a57b18fce75ac8516b9f8cb30118a8c62\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> object. </p>\n\
<p>Populate the Footprint request with the information on all data stored within this class if \"me\" is NULL, otherwise the information stored in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> object pointed at by \"me\".</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to footprint, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Footprint object to populate</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. The Footprint object will have all information added to it. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>adskDataStream.h</li>\n\
<li>adskDataStream.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";