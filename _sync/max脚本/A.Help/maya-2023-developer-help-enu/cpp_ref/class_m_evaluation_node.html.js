var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MEvaluationNode Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_evaluation_node.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MEvaluationNode Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MEvaluationNode Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya.html\">OpenMaya - API module for common classes</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2023-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s new in the Maya 2023 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2022-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2022 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2020-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2020 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Custom-evaluator-overview/Custom-Evaluator-API.html\">Custom evaluator overview &gt; Custom Evaluator API</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_evaluation_node.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_evaluation_node.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_evaluation_node-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Provides access to Evaluation Manager node information.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MEvaluationNode.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a79a933f48679f479ada7e854dbf3de1f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a79a933f48679f479ada7e854dbf3de1f\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a79a933f48679f479ada7e854dbf3de1f\">~MEvaluationNode</a> ()</td></tr>\n\
<tr class=\"memdesc:a79a933f48679f479ada7e854dbf3de1f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor. <br></td></tr>\n\
<tr class=\"separator:a79a933f48679f479ada7e854dbf3de1f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6dea5a51479619d212f5b822f297c8a4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a6dea5a51479619d212f5b822f297c8a4\">MEvaluationNode</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;evalNode)</td></tr>\n\
<tr class=\"memdesc:a6dea5a51479619d212f5b822f297c8a4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy Constructor.  <a href=\"class_m_evaluation_node.html#a6dea5a51479619d212f5b822f297c8a4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6dea5a51479619d212f5b822f297c8a4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afc2300aa77520ec87f6de4de484534a2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#afc2300aa77520ec87f6de4de484534a2\">parentCount</a> () const </td></tr>\n\
<tr class=\"memdesc:afc2300aa77520ec87f6de4de484534a2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of parent nodes this evaluation node has.  <a href=\"class_m_evaluation_node.html#afc2300aa77520ec87f6de4de484534a2\">More...</a><br></td></tr>\n\
<tr class=\"separator:afc2300aa77520ec87f6de4de484534a2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a24e440602b1e04c7671098af66723647\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a24e440602b1e04c7671098af66723647\">parent</a> (int index) const </td></tr>\n\
<tr class=\"memdesc:a24e440602b1e04c7671098af66723647\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the parent node of this evaluation node at given index.  <a href=\"class_m_evaluation_node.html#a24e440602b1e04c7671098af66723647\">More...</a><br></td></tr>\n\
<tr class=\"separator:a24e440602b1e04c7671098af66723647\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5aafdfadef3077516ece45d1f27380a3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a5aafdfadef3077516ece45d1f27380a3\">childCount</a> () const </td></tr>\n\
<tr class=\"memdesc:a5aafdfadef3077516ece45d1f27380a3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of children nodes this evaluation node has.  <a href=\"class_m_evaluation_node.html#a5aafdfadef3077516ece45d1f27380a3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5aafdfadef3077516ece45d1f27380a3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4f271aa3d950d3e630edcee5b739bf3f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a4f271aa3d950d3e630edcee5b739bf3f\">child</a> (int index) const </td></tr>\n\
<tr class=\"memdesc:a4f271aa3d950d3e630edcee5b739bf3f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the child node of this evaluation node at given index.  <a href=\"class_m_evaluation_node.html#a4f271aa3d950d3e630edcee5b739bf3f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4f271aa3d950d3e630edcee5b739bf3f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a411e944b3d2bb66b3b8710db05d8501e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a411e944b3d2bb66b3b8710db05d8501e\">iterator</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:a411e944b3d2bb66b3b8710db05d8501e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns an iterator at the beginning of the dirty plug list.  <a href=\"class_m_evaluation_node.html#a411e944b3d2bb66b3b8710db05d8501e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a411e944b3d2bb66b3b8710db05d8501e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abc632b073f3b3abeb4ca052f20573dd6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#abc632b073f3b3abeb4ca052f20573dd6\">dirtyPlugExists</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;attribute, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:abc632b073f3b3abeb4ca052f20573dd6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns true if the specified attribute has a dirty plug.  <a href=\"class_m_evaluation_node.html#abc632b073f3b3abeb4ca052f20573dd6\">More...</a><br></td></tr>\n\
<tr class=\"separator:abc632b073f3b3abeb4ca052f20573dd6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0073936f1691f8e0b2b6fa4899a5bfe4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a0073936f1691f8e0b2b6fa4899a5bfe4\">dirtyPlug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;attribute, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:a0073936f1691f8e0b2b6fa4899a5bfe4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the top-most plug for the specified attribute if the attribute has dirty plugs.  <a href=\"class_m_evaluation_node.html#a0073936f1691f8e0b2b6fa4899a5bfe4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0073936f1691f8e0b2b6fa4899a5bfe4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa5993ce527f6ca41e8532d4bb848ac97\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#aa5993ce527f6ca41e8532d4bb848ac97\">dependencyNode</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:aa5993ce527f6ca41e8532d4bb848ac97\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the dependency node this evaluation node represents.  <a href=\"class_m_evaluation_node.html#aa5993ce527f6ca41e8532d4bb848ac97\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa5993ce527f6ca41e8532d4bb848ac97\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8020acf5e607c87d867f1707544505e8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a8020acf5e607c87d867f1707544505e8\">datablock</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:a8020acf5e607c87d867f1707544505e8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the datablock for this node.  <a href=\"class_m_evaluation_node.html#a8020acf5e607c87d867f1707544505e8\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8020acf5e607c87d867f1707544505e8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a278eb08035433924667ef1be8342c699\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a278eb08035433924667ef1be8342c699\">connect</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a4f271aa3d950d3e630edcee5b739bf3f\">child</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr)</td></tr>\n\
<tr class=\"memdesc:a278eb08035433924667ef1be8342c699\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2019.0</b>  <a href=\"class_m_evaluation_node.html#a278eb08035433924667ef1be8342c699\">More...</a><br></td></tr>\n\
<tr class=\"separator:a278eb08035433924667ef1be8342c699\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa8319e8d242c2a6bd5ecac159b665d02\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#aa8319e8d242c2a6bd5ecac159b665d02\">skipEvaluation</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;attribute, bool allowSingleDownstreamDependency=false, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:aa8319e8d242c2a6bd5ecac159b665d02\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2022.0</b>  <a href=\"class_m_evaluation_node.html#aa8319e8d242c2a6bd5ecac159b665d02\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa8319e8d242c2a6bd5ecac159b665d02\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:accb85777ab76fdc0a38b7536bc97915a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#accb85777ab76fdc0a38b7536bc97915a\">skippingEvaluation</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;attribute, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=nullptr) const </td></tr>\n\
<tr class=\"memdesc:accb85777ab76fdc0a38b7536bc97915a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2022.0</b>  <a href=\"class_m_evaluation_node.html#accb85777ab76fdc0a38b7536bc97915a\">More...</a><br></td></tr>\n\
<tr class=\"separator:accb85777ab76fdc0a38b7536bc97915a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_evaluation_node.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Provides access to Evaluation Manager node information. </p>\n\
<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\" title=\"Provides access to the Evaluation Manager node dirty plug list. \">MEvaluationNodeIterator</a></dd></dl>\n\
<p>An evaluation node and the connections between them form an evaluation graph. Each evaluation context uses a unique evaluation graph with its own set of evaluation nodes. Evaluation graphs are scheduled to speed up the operations within Maya.</p>\n\
<p>This class contains methods for querying which attributes or plugs on a node will be set dirty prior to evaluation by the evaluation manager.</p>\n\
<p>It is sometimes necessary to know the dirty state of plugs/attributes if your node is handling custom information. This handling would be done in the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html\" title=\"Base class for user defined dependency nodes. \">MPxNode</a> preEvaluation()/postEvaluation() methods.</p>\n\
<p>If you need to access the list of dirty plugs in the evaluation node then use the internal iterator:</p>\n\
<p>for( <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\" title=\"Provides access to the Evaluation Manager node dirty plug list. \">MEvaluationNodeIterator</a> nodeIt = theNode.iterator(); ! nodeIt.isDone(); nodeIt.next() ) { doSomePlugThing( nodeIt.plug() ); } </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#_a9\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8h-example.html#_a5\">apiMeshShape/apiMeshShape.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#_a34\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#_a3\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/evaluation_pruning_evaluator_2evaluation_pruning_evaluator_8cpp-example.html#_a2\">evaluationPruningEvaluator/evaluationPruningEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node_2foot_print_node_8cpp-example.html#_a10\">footPrintNode/footPrintNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__animated_material_2foot_print_node__geometry_override__animated_material_8cpp-example.html#_a10\">footPrintNode_AnimatedMaterial/footPrintNode_GeometryOverride_AnimatedMaterial.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#_a10\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#_a16\">identityNode/identityNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/name_filter_2_name_filter_8cpp-example.html#_a5\">nameFilter/NameFilter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/name_filter_2_name_filter_8h-example.html#_a3\">nameFilter/NameFilter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#_a48\">offsetNode/offsetNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#_a6\">rawfootPrintNode/rawfootPrintNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_evaluation_draw_2simple_evaluation_draw_8cpp-example.html#_a3\">simpleEvaluationDraw/simpleEvaluationDraw.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_evaluation_node_2simple_evaluation_node_8cpp-example.html#_a9\">simpleEvaluationNode/simpleEvaluationNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_evaluator_2simple_evaluator_8cpp-example.html#_a3\">simpleEvaluator/simpleEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_physics_engine_2simple_physics_engine_8cpp-example.html#_a17\">simplePhysicsEngine/simplePhysicsEngine.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_simulation_node_2simple_simulation_node_8cpp-example.html#_a6\">simpleSimulationNode/simpleSimulationNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_skip_node_2simple_skip_node_8cpp-example.html#_a7\">simpleSkipNode/simpleSkipNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#_a1\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8h-example.html#_a10\">testMTopologyEvaluator/testMTopologyEvaluator.h</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a6dea5a51479619d212f5b822f297c8a4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>evalNode</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">default</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy Constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">evalNode</td><td>An existing evaluation node </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"afc2300aa77520ec87f6de4de484534a2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">int parentCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of parent nodes this evaluation node has. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The number of parent nodes this evauation node has. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a9\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a24e440602b1e04c7671098af66723647\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> parent </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>index</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the parent node of this evaluation node at given index. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">index</td><td>Index of the parent evaluation node to access. No bound check is done so respect parentCount.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a> parent object at given index. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a10\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5aafdfadef3077516ece45d1f27380a3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">int childCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of children nodes this evaluation node has. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The number of children nodes this evauation node has. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a14\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4f271aa3d950d3e630edcee5b739bf3f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> child </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>index</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the child node of this evaluation node at given index. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">index</td><td>Index of the child evaluation node to access. No bound check is done so respect childCount.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a> child object at given index. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a15\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a411e944b3d2bb66b3b8710db05d8501e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> iterator </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns an iterator at the beginning of the dirty plug list. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Iterator positioned at the beginning of the evaluation node\'s dirty plug list</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kFailure</b> Object error - no evaluation node </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abc632b073f3b3abeb4ca052f20573dd6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool dirtyPlugExists </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>attribute</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns true if the specified attribute has a dirty plug. </p>\n\
<p>This call should be made from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html#ad40cff55ba4000788eda78c8b4258b3d\" title=\"Prepare a node&#39;s internal state for threaded evaluation. \">MPxNode::preEvaluation()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a93e355c11a2c9a0f19f8d7cfa887af2b\" title=\"Clean up node&#39;s internal state after threaded evaluation. \">MPxNode::postEvaluation()</a> to verify which plugs are going to be dirty and computed.</p>\n\
<dl class=\"section note\"><dt>Note</dt><dd>Dirty plug is storing top-most array/parent of the plug tree in which given attribute exists. When a new computation starts with the evaluation manager, everything under a dirty plug is considered as dirty and will be computed.</dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">attribute</td><td>Attribute whose root plug is to be checked for membership in the dirty plug list </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the attribute exists in the dirty plug list, otherwise false.</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kInvalidParameter</b> <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> parameter is not an attribute </li>\n\
<li><b>MS::kFailure</b> Object error - no plug </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a11\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node_2foot_print_node_8cpp-example.html#a28\">footPrintNode/footPrintNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__animated_material_2foot_print_node__geometry_override__animated_material_8cpp-example.html#a34\">footPrintNode_AnimatedMaterial/footPrintNode_GeometryOverride_AnimatedMaterial.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#a31\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a17\">rawfootPrintNode/rawfootPrintNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_evaluation_draw_2simple_evaluation_draw_8cpp-example.html#a9\">simpleEvaluationDraw/simpleEvaluationDraw.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_evaluation_node_2simple_evaluation_node_8cpp-example.html#a26\">simpleEvaluationNode/simpleEvaluationNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/simple_physics_engine_2simple_physics_engine_8cpp-example.html#a31\">simplePhysicsEngine/simplePhysicsEngine.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0073936f1691f8e0b2b6fa4899a5bfe4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> dirtyPlug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>attribute</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the top-most plug for the specified attribute if the attribute has dirty plugs. </p>\n\
<p>This call should be made from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html#ad40cff55ba4000788eda78c8b4258b3d\" title=\"Prepare a node&#39;s internal state for threaded evaluation. \">MPxNode::preEvaluation()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a93e355c11a2c9a0f19f8d7cfa887af2b\" title=\"Clean up node&#39;s internal state after threaded evaluation. \">MPxNode::postEvaluation()</a> to access a networked plug which is going to be dirty and computed.</p>\n\
<dl class=\"section note\"><dt>Note</dt><dd>Dirty plug is storing top-most array/parent of the plug tree in which given attribute exists. When a new computation starts with the evaluation manager, everything under a dirty plug is considered as dirty and will be computed.</dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">attribute</td><td>Attribute whose root plug is returned if it is in the dirty plug list </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The top-most dirty plug for the specified attribute if it exists, a null plug otherwise.</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kInvalidParameter</b> <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> parameter is not an attribute </li>\n\
<li><b>MS::kFailure</b> Object error - no plug </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa5993ce527f6ca41e8532d4bb848ac97\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dependencyNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the dependency node this evaluation node represents. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> representing the dependency node for this evaluation node.</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kFailure</b> Object error. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#a9\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/evaluation_pruning_evaluator_2evaluation_pruning_evaluator_8cpp-example.html#a14\">evaluationPruningEvaluator/evaluationPruningEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/name_filter_2_name_filter_8cpp-example.html#a7\">nameFilter/NameFilter.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a5\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8020acf5e607c87d867f1707544505e8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> datablock </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the datablock for this node. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The MDatablock representing the datablock for this evaluation node.</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kFailure</b> Object error. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#a29\">constraintEvaluator/constraintEvaluator.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a57\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a278eb08035433924667ef1be8342c699\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void connect </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>child</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2019.0</b> </p>\n\
<p>Connect two generic evaluation nodes.</p>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000045\">2019.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>Generic evaluation nodes are explicitly created by topology evaluators to override topology of base layer evaluation nodes claimed by topology cluster nodes.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">child</td><td>Generic evaluation node to connect as a child </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> Nodes were connected in evaluation graph </li>\n\
<li><b>MS::kFailure</b> Object error, trying to connect non-generic evaluation nodes </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/test_m_topology_evaluator_2test_m_topology_evaluator_8cpp-example.html#a59\">testMTopologyEvaluator/testMTopologyEvaluator.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa8319e8d242c2a6bd5ecac159b665d02\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void skipEvaluation </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>attribute</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>allowSingleDownstreamDependency</em> = <code>false</code>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2022.0</b> </p>\n\
<p>Hint the Evaluation Manager that the attribute can be skipped for the current evaluation.</p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000005\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>This method tries to mark the attribute for the Evaluation Manager to skip its evaluation.</p>\n\
<p>Attributes can be marked for their evaluation to be skipped if it\'s safe to do so. If the attribute is skipped, it will not be evaluated but will be left dirty so that subsequent pull evaluation will trigger evaluation and report the right value.</p>\n\
<p>If the attribute is animated and driving more than one connected node, it is never safe to skip its evaluation, because the downstream nodes could trigger concurrent, and unsafe, pull evaluation. Therefore, this method does not have an effect if the attribute has more than one downstream dependency.</p>\n\
<p>If the attribute has a single downstream dependency, it is potentially safe. Only a single node can pull on this attribute, but other nodes might be pulling on other attributes on the same node, which could result in a race condition. If the attribute is the only one skipped, the skipEvaluation method can allow a single connection through the allowSingleDownstreamDependency parameter.</p>\n\
<p>If this attribute is not set, the skipEvaluation method will have the safest possible behavior of only skipping the evaluation if there are no downstream dependencies for the attribute to skip.</p>\n\
<dl class=\"section note\"><dt>Note</dt><dd>This method should only be called from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html#ad40cff55ba4000788eda78c8b4258b3d\" title=\"Prepare a node&#39;s internal state for threaded evaluation. \">MPxNode::preEvaluation()</a>.</dd>\n\
<dd>\n\
Skipping evaluation info is stored on the top-most array/parent of the plug tree in which given attribute exists. When skipping an attribute, everything under the top-most array/parent is what is actually considered for skipping.</dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">attribute</td><td>Attribute whose root plug is to be marked for skipping </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">allowSingleDownstreamDependency</td><td>True to allow one downstream dependency, false for the safest behavior of allowing none. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded. This does not guarantee the plug is marked for skipping. </li>\n\
<li><b>MS::kInvalidParameter</b> <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> parameter is not an attribute </li>\n\
<li><b>MS::kFailure</b> Object error - not the right type of evaluation node </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/simple_skip_node_2simple_skip_node_8cpp-example.html#a16\">simpleSkipNode/simpleSkipNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"accb85777ab76fdc0a38b7536bc97915a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool skippingEvaluation </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>attribute</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>nullptr</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2022.0</b> </p>\n\
<p>Returns true if the attribute was marked to be skipped.</p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000006\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">attribute</td><td>Attribute whose root plug is to be checked for skipping </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded. </li>\n\
<li><b>MS::kInvalidParameter</b> <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> parameter is not an attribute </li>\n\
<li><b>MS::kFailure</b> Object error - not the right type of evaluation node </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MEvaluationNode.h</li>\n\
<li>MEvaluationNode.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";