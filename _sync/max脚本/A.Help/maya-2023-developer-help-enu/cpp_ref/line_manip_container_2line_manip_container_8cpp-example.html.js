var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: lineManipContainer/lineManipContainer.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'line_manip_container_2line_manip_container_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: lineManipContainer/lineManipContainer.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">lineManipContainer/lineManipContainer.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This example is based on the lineManip.cpp example but</span></div>\n\
<div class=\"line\"><span class=\"comment\">// incorporates a manip container so that two lines can</span></div>\n\
<div class=\"line\"><span class=\"comment\">// be created as children.  The left line will change</span></div>\n\
<div class=\"line\"><span class=\"comment\">// translateX of the selected nodes.  The right line</span></div>\n\
<div class=\"line\"><span class=\"comment\">// will change scaleX of the selected node.  </span></div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    // To show this example using MEL, run the following:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    loadPlugin lineManipContainer;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    lineManipContainerContext lineManipContainerContext1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    setParent Shelf1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    toolButton -cl toolCluster</span></div>\n\
<div class=\"line\"><span class=\"comment\">                -i1 &quot;moveManip.xpm&quot;</span></div>\n\
<div class=\"line\"><span class=\"comment\">                -t lineManipContainerContext1</span></div>\n\
<div class=\"line\"><span class=\"comment\">                lineManipContainer1;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    If the preceding commands were used to create the manipulator context, </span></div>\n\
<div class=\"line\"><span class=\"comment\">    the following commands can destroy it:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">        deleteUI lineManipContainerContext1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">        deleteUI lineManipContainer1;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;lineManipContainer.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTransform.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTemplateManipulator.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Statics</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> lineManip::id( 0x81049 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> lineManipContainer::id( 0x8104A );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Utility class for returning line points</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lineGeometry</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> topPoint( <span class=\"keywordtype\">bool</span> rightLine = <span class=\"keyword\">true</span> ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( rightLine )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( 1.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -1.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> bottomPoint( <span class=\"keywordtype\">bool</span> rightLine = <span class=\"keyword\">true</span> ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( rightLine )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( 1.0f, -1.0f, 0.0f );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -1.0f, -1.0f, 0.0f );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> otherPoint() {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( 2.0f, -1.0f, 0.0f );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// class implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">lineManip::lineManip()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Setup the plane with a point on the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// plane along with a normal</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pointOnPlane(lineGeometry::topPoint());</div>\n\
<div class=\"line\">    <span class=\"comment\">// Normal = cross product of two vectors on the plane</span></div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> normalToPlane = (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(lineGeometry::topPoint()) - <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(lineGeometry::otherPoint())) ^ </div>\n\
<div class=\"line\">                    (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(lineGeometry::otherPoint()) - <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(lineGeometry::bottomPoint()));</div>\n\
<div class=\"line\">    <span class=\"comment\">// Necessary to normalize</span></div>\n\
<div class=\"line\">    normalToPlane.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html#ab66b0c7697d96a278da9bca810f4dee1\">normalize</a>();</div>\n\
<div class=\"line\">    plane.setPlane( pointOnPlane, normalToPlane );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// default case</span></div>\n\
<div class=\"line\">    affectScale = affectTranslate = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">lineManip::~lineManip()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// No-op</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lineManip::postConstructor()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    glFirstHandle(lineName);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//virtual </span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lineManip::preDrawUI( <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Initial as draw manipulator in vp2</span></div>\n\
<div class=\"line\">    fDrawManip = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Are we in the right view</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> *viewPtr = <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>*<span class=\"keyword\">&gt;</span>( &amp;view );</div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> dpath;</div>\n\
<div class=\"line\">    viewPtr-&gt;<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a5e6ea41ec1bab5ed980b2ddffe398a73\">getCamera</a>(dpath);</div>\n\
<div class=\"line\">    <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> viewCamera(dpath);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *nameBuffer = viewCamera.name().asChar();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 0 == nameBuffer )</div>\n\
<div class=\"line\">        fDrawManip = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ( 0 == strstr(nameBuffer,<span class=\"stringliteral\">&quot;persp&quot;</span>) ) &amp;&amp; ( 0 == strstr(nameBuffer,<span class=\"stringliteral\">&quot;front&quot;</span>) ) )</div>\n\
<div class=\"line\">        fDrawManip = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !fDrawManip )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Populate the point arrays which are in local space</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Return values change with setting of rightLine</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// boolean</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> top[4], bottom[4];</div>\n\
<div class=\"line\">    getManipLinePos(top, bottom);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fLineStart = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(top);</div>\n\
<div class=\"line\">    fLineEnd = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(bottom);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//virtual </span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lineManip::drawUI(<a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager, <span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!fDrawManip)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9008ebfa63c02670625076230d77c3f9\">beginDrawable</a>(<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#aca4f23adbdedb44537a170c5b1d5a08eaee505722dbb2915f1f4de201abed95dc\">MHWRender::MUIDrawManager::kSelectable</a>, lineName);</div>\n\
<div class=\"line\">    setHandleColor(drawManager, lineName, mainColor());</div>\n\
<div class=\"line\">    drawManager.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#abe48ac82aa2ede6d0efd3c9cfadb068c\">line</a>(fLineStart, fLineEnd);</div>\n\
<div class=\"line\">    drawManager.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a78c343c25a05be7e46dd4b7ebab82ff6\">endDrawable</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual </span></div>\n\
<div class=\"line\"><a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManip::doPress( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Reset the mousePoint information on</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// a new press</span></div>\n\
<div class=\"line\">    mousePointGlName = <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#a00b995f41b11d33118a799cfb2bf00ac\">MPoint::origin</a>;</div>\n\
<div class=\"line\">    updateDragInformation();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManip::doDrag( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    updateDragInformation();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManip::doRelease( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Scale nodes on the selection list</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// No undo supported</span></div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> list;</div>\n\
<div class=\"line\">    <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>( list );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> iter( list ); !iter.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html#ac0f0d6fc806b11d246e05cb94e886b38\">isDone</a>(); iter.next() ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> node;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">            iter.getDependNode( node );</div>\n\
<div class=\"line\">        <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> xform( node, &amp;status );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( MS::kSuccess == status )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( affectScale )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span> newScale[3];</div>\n\
<div class=\"line\">                newScale[0] = mousePointGlName.x + 1;</div>\n\
<div class=\"line\">                newScale[1] = mousePointGlName.y + 1;</div>\n\
<div class=\"line\">                newScale[2] = mousePointGlName.z + 1;</div>\n\
<div class=\"line\">                xform.setScale( newScale );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( affectTranslate )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span> newTranslate[3];</div>\n\
<div class=\"line\">                newTranslate[0] = mousePointGlName.x;</div>\n\
<div class=\"line\">                newTranslate[1] = mousePointGlName.y;</div>\n\
<div class=\"line\">                newTranslate[2] = mousePointGlName.z;</div>\n\
<div class=\"line\">                xform.setTranslation( newTranslate, <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"> <span class=\"comment\">// Utility method for finding the mouse delta</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManip::updateDragInformation()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the mouse point in local space</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> localMousePoint;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> localMouseDirection;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( MS::kFailure == mouseRay( localMousePoint, localMouseDirection) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the intersection of the mouse point with the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// manip plane</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> mouseIntersectionWithManipPlane;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! plane.intersect( localMousePoint, localMouseDirection,   mouseIntersectionWithManipPlane ) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mousePointGlName = mouseIntersectionWithManipPlane;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MGLuint active = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( glActiveName( active ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> start[4] = {0,0,0,0},end[4] = {0,0,0,0};</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( active == lineName )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> rightLine = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( affectTranslate )</div>\n\
<div class=\"line\">                    rightLine = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            lineGeometry::topPoint(rightLine).<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#aa54ebbec9252a61bd66cdd442bc5758a\">get</a>(start);</div>\n\
<div class=\"line\">            lineGeometry::bottomPoint(rightLine).get(end);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( active != 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            lineMath line;</div>\n\
<div class=\"line\">            <span class=\"comment\">// Find a vector on the plane</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> a( start[0], start[1], start[2] );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> b( end[0], end[1], end[2] );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vab = a - b;</div>\n\
<div class=\"line\">            <span class=\"comment\">// Define line with a point and a vector on the plane</span></div>\n\
<div class=\"line\">            line.setLine( start, vab );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> cpt;</div>\n\
<div class=\"line\">            <span class=\"comment\">// Find the closest point so that we can get the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// delta change of the mouse in local space</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( line.closestPoint( mousePointGlName, cpt ) )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                mousePointGlName.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a> -= cpt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>;</div>\n\
<div class=\"line\">                mousePointGlName.y -= cpt.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>;</div>\n\
<div class=\"line\">                mousePointGlName.z -= cpt.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Get the line position of this manip</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> lineManip::getManipLinePos(<span class=\"keywordtype\">float</span>* top, <span class=\"keywordtype\">float</span>* bottom)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> rightLine = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( affectTranslate )</div>\n\
<div class=\"line\">        rightLine = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lineGeometry::topPoint(rightLine).get(top);</div>\n\
<div class=\"line\">    lineGeometry::bottomPoint(rightLine).get(bottom);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Depending on what&#39;s active, we modify the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// end points with mouse deltas in local</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// space</span></div>\n\
<div class=\"line\">    MGLuint active = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(glActiveName(active))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(active &amp;&amp; active == lineName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            top[0] += (float) mousePointGlName.x; </div>\n\
<div class=\"line\">            top[1] += (<span class=\"keywordtype\">float</span>) mousePointGlName.y; </div>\n\
<div class=\"line\">            top[2] += (float) mousePointGlName.z;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            bottom[0] += (<span class=\"keywordtype\">float</span>) mousePointGlName.x; </div>\n\
<div class=\"line\">            bottom[1] += (float) mousePointGlName.y; </div>\n\
<div class=\"line\">            bottom[2] += (<span class=\"keywordtype\">float</span>) mousePointGlName.z;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Manip container</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">lineManipContainer::lineManipContainer() </div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// No-op</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">lineManipContainer::~lineManipContainer() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// No-op</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Make the children manipulators: left and</span></div>\n\
<div class=\"line\"><span class=\"comment\">// right lines</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManipContainer::createChildren()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manipulator_node.html\">MPxManipulatorNode</a> *proxyManip = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> manipTypeName(<span class=\"stringliteral\">&quot;singleLineManip&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> manipName(<span class=\"stringliteral\">&quot;rightLineManip&quot;</span>);</div>\n\
<div class=\"line\">    status = addMPxManipulatorNode( manipTypeName, manipName, proxyManip );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lineManip *rightManipPtr = (lineManip *) proxyManip;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( rightManipPtr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        rightManipPtr-&gt;affectScale = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    proxyManip = 0;</div>\n\
<div class=\"line\">    manipTypeName = <span class=\"stringliteral\">&quot;singleLineManip&quot;</span>;</div>\n\
<div class=\"line\">    manipName = <span class=\"stringliteral\">&quot;leftLineManip&quot;</span>;</div>\n\
<div class=\"line\">    status = addMPxManipulatorNode( manipTypeName, manipName, proxyManip );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lineManip *leftManipPtr = (lineManip *) proxyManip;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( leftManipPtr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        leftManipPtr-&gt;affectTranslate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManipContainer::connectToDependNode(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// No-op</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// lineManipContainerContext: implemented as a template</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lineManipContainerContext;</div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> contextName[] = <span class=\"stringliteral\">&quot;lineManipContainerContext&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> manipulatorContainerNodeName[] = <span class=\"stringliteral\">&quot;lineManipContainer&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lineManipContainerContext : </div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span> <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_template_selection_context.html\">MTemplateSelectionContext</a>&lt;contextName, lineManipContainerContext, </div>\n\
<div class=\"line\">        MFn::kTransform, lineManipContainer, manipulatorContainerNodeName &gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    lineManipContainerContext() {}</div>\n\
<div class=\"line\">    ~lineManipContainerContext()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_template_selection_context.html#adb9244c35f5bf3d8c9943fe1e2c8da40\">namesOfAttributes</a>(<a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; namesOfAttributes)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        namesOfAttributes.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;scaleX&quot;</span>);</div>\n\
<div class=\"line\">        namesOfAttributes.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;translateX&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  lineManipContainerContextCommand: implemented as a template</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lineManipContainerContextCommand;</div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> contextCommandName[] = <span class=\"stringliteral\">&quot;lineManipContainerContext&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lineManipContainerContextCommand : </div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span> <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_template_context_command.html\">MTemplateContextCommand</a>&lt;contextCommandName, lineManipContainerContextCommand, lineManipContainerContext &gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    lineManipContainerContextCommand() {}</div>\n\
<div class=\"line\">    ~lineManipContainerContextCommand()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> lineManipContainerContextCommand _lineManipContainerContextCommand;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Static methods</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* lineManip::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> lineManip();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManip::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* lineManipContainer::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">     <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> lineManipContainer();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lineManipContainer::initialize()</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    status = <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ab775d976c0f4b24e540bd06af23a0738\">MPxManipContainer::initialize</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Entry points</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;2009&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;singleLineManip&quot;</span>, lineManip::id, lineManip::creator,</div>\n\
<div class=\"line\">        lineManip::initialize, <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a8c853991fe2b41cc995d02e4c3ba0019\">MPxNode::kManipulatorNode</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( manipulatorContainerNodeName, lineManipContainer::id, lineManipContainer::creator,</div>\n\
<div class=\"line\">             &amp;lineManipContainer::initialize, <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4501afd1a084198ccd007e64ed2074c9\">MPxNode::kManipContainer</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = _lineManipContainerContextCommand.registerContextCommand( obj );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( lineManip::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    status = plugin.deregisterNode(lineManipContainer::id);;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    status = _lineManipContainerContextCommand.deregisterContextCommand( obj );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";