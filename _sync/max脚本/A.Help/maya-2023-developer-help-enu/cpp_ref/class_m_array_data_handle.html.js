var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MArrayDataHandle Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_array_data_handle.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MArrayDataHandle Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MArrayDataHandle Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya.html\">OpenMaya - API module for common classes</a></div></div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_array_data_handle.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_array_data_handle.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_array_data_handle-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Data block handle for array data.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MArrayDataHandle.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:afeda893a9db7b4488547f2eb9b1cb48e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#afeda893a9db7b4488547f2eb9b1cb48e\">MArrayDataHandle</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> &amp;in, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:afeda893a9db7b4488547f2eb9b1cb48e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor.  <a href=\"class_m_array_data_handle.html#afeda893a9db7b4488547f2eb9b1cb48e\">More...</a><br></td></tr>\n\
<tr class=\"separator:afeda893a9db7b4488547f2eb9b1cb48e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a81d24dca6d647d8d0a8fe0ef2c63b170\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">inputValue</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a81d24dca6d647d8d0a8fe0ef2c63b170\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Gets a handle into this data block for the current array element.  <a href=\"class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">More...</a><br></td></tr>\n\
<tr class=\"separator:a81d24dca6d647d8d0a8fe0ef2c63b170\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae7d0b57302500d19b7a3f57f8aef45df\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">outputValue</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:ae7d0b57302500d19b7a3f57f8aef45df\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Gets a handle into this data block for the current array element.  <a href=\"class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae7d0b57302500d19b7a3f57f8aef45df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2cee08084f8de2a3394fffe7356e2002\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2cee08084f8de2a3394fffe7356e2002\">inputArrayValue</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a2cee08084f8de2a3394fffe7356e2002\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Gets a handle into this data block for the current array element.  <a href=\"class_m_array_data_handle.html#a2cee08084f8de2a3394fffe7356e2002\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2cee08084f8de2a3394fffe7356e2002\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a70d35c4ffcfa0fa184e0c7164fceddc0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a70d35c4ffcfa0fa184e0c7164fceddc0\">outputArrayValue</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a70d35c4ffcfa0fa184e0c7164fceddc0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Gets a handle into this data block for the current array element.  <a href=\"class_m_array_data_handle.html#a70d35c4ffcfa0fa184e0c7164fceddc0\">More...</a><br></td></tr>\n\
<tr class=\"separator:a70d35c4ffcfa0fa184e0c7164fceddc0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a73616f002814b8abe6d921db72d7a496\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">next</a> ()</td></tr>\n\
<tr class=\"memdesc:a73616f002814b8abe6d921db72d7a496\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Advance to the next element in the array.  <a href=\"class_m_array_data_handle.html#a73616f002814b8abe6d921db72d7a496\">More...</a><br></td></tr>\n\
<tr class=\"separator:a73616f002814b8abe6d921db72d7a496\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5f3dd1d27853eccbbe78b6d4383ccb79\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a5f3dd1d27853eccbbe78b6d4383ccb79\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of elements in the array.  <a href=\"class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5f3dd1d27853eccbbe78b6d4383ccb79\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2ca3c3d60cf2f3ac005b651379f26143\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">elementIndex</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a2ca3c3d60cf2f3ac005b651379f26143\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the index that we are currently at in the array.  <a href=\"class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2ca3c3d60cf2f3ac005b651379f26143\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8d77f0fea87bb6854b60cd199bf26240\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">jumpToElement</a> (unsigned int index)</td></tr>\n\
<tr class=\"memdesc:a8d77f0fea87bb6854b60cd199bf26240\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Jump to a specific element in the array.  <a href=\"class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8d77f0fea87bb6854b60cd199bf26240\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a28412cfb4b329b4835dab46800c3dca1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a28412cfb4b329b4835dab46800c3dca1\">jumpToArrayElement</a> (unsigned int position)</td></tr>\n\
<tr class=\"memdesc:a28412cfb4b329b4835dab46800c3dca1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Jump to a specific array element in the array.  <a href=\"class_m_array_data_handle.html#a28412cfb4b329b4835dab46800c3dca1\">More...</a><br></td></tr>\n\
<tr class=\"separator:a28412cfb4b329b4835dab46800c3dca1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae86bc33baaf2125242e1cf4a846d6cb0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae86bc33baaf2125242e1cf4a846d6cb0\">setClean</a> ()</td></tr>\n\
<tr class=\"memdesc:ae86bc33baaf2125242e1cf4a846d6cb0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Marks the data that is represented by this handle as being clean.  <a href=\"class_m_array_data_handle.html#ae86bc33baaf2125242e1cf4a846d6cb0\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae86bc33baaf2125242e1cf4a846d6cb0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aff40e8c8c255448d5d19a05148b83058\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">setAllClean</a> ()</td></tr>\n\
<tr class=\"memdesc:aff40e8c8c255448d5d19a05148b83058\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Marks every element of the array attribute represented by the handle as clean.  <a href=\"class_m_array_data_handle.html#aff40e8c8c255448d5d19a05148b83058\">More...</a><br></td></tr>\n\
<tr class=\"separator:aff40e8c8c255448d5d19a05148b83058\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a48b34beab40fa4ae60cfe40e556f591a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html\">MArrayDataBuilder</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a48b34beab40fa4ae60cfe40e556f591a\">builder</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a48b34beab40fa4ae60cfe40e556f591a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns a builder for this handle\'s array so that it can be expanded.  <a href=\"class_m_array_data_handle.html#a48b34beab40fa4ae60cfe40e556f591a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a48b34beab40fa4ae60cfe40e556f591a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a575cf7adebfd8e3c29e588d2cd1c47a6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a575cf7adebfd8e3c29e588d2cd1c47a6\">set</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html\">MArrayDataBuilder</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a48b34beab40fa4ae60cfe40e556f591a\">builder</a>)</td></tr>\n\
<tr class=\"memdesc:a575cf7adebfd8e3c29e588d2cd1c47a6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Sets the data for this array from the data in the builder object.  <a href=\"class_m_array_data_handle.html#a575cf7adebfd8e3c29e588d2cd1c47a6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a575cf7adebfd8e3c29e588d2cd1c47a6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1b311743938ab855c1546164f1f55f59\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a1b311743938ab855c1546164f1f55f59\">MArrayDataHandle</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp;other)</td></tr>\n\
<tr class=\"memdesc:a1b311743938ab855c1546164f1f55f59\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor.  <a href=\"class_m_array_data_handle.html#a1b311743938ab855c1546164f1f55f59\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1b311743938ab855c1546164f1f55f59\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6582e0fdac5add80e8c372e49b3d6b85\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a6582e0fdac5add80e8c372e49b3d6b85\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp;other)</td></tr>\n\
<tr class=\"memdesc:a6582e0fdac5add80e8c372e49b3d6b85\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator.  <a href=\"class_m_array_data_handle.html#a6582e0fdac5add80e8c372e49b3d6b85\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6582e0fdac5add80e8c372e49b3d6b85\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_array_data_handle.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Data block handle for array data. </p>\n\
<p>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\" title=\"Data block handle for array data. \">MArrayDataHandle</a> is a smart pointer into a data block (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a>) that handles access to array data. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\" title=\"Data block handle for array data. \">MArrayDataHandle</a> supports attributes that can have an array of data.</p>\n\
<p>The array indices do not have to be continuous. The array can be sparse. Thus, an array could have four elements with the indicies 1, 6, 8, and 10.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\" title=\"Data block handle for array data. \">MArrayDataHandle</a> methods cannot be assumed to be threadsafe. The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\" title=\"Jump to a specific element in the array. \">jumpToElement()</a> method sets an internal pointer so definitely cannot be called by multiple threads simultaneously. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#_a91\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/anisotropic_shader_2anisotropic_shader_8cpp-example.html#_a39\">anisotropicShader/anisotropicShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#_a94\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8h-example.html#_a43\">apiMeshShape/apiMeshShape.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/backfill_shader_2backfill_shader_8cpp-example.html#_a33\">backfillShader/backfillShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#_a8\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#_a12\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#_a19\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_skin_cluster_2basic_skin_cluster_8cpp-example.html#_a8\">basicSkinCluster/basicSkinCluster.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#_a32\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/dyn_expr_field_2dyn_expr_field_8cpp-example.html#_a13\">dynExprField/dynExprField.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node_2foot_print_node_8cpp-example.html#_a19\">footPrintNode/footPrintNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/full_loft_node_2full_loft_node_8cpp-example.html#_a6\">fullLoftNode/fullLoftNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_surface_constraint_2geometry_surface_constraint_8cpp-example.html#_a6\">geometrySurfaceConstraint/geometrySurfaceConstraint.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/lambert_shader_2lambert_shader_8cpp-example.html#_a29\">lambertShader/lambertShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/multi_curve_node_2multi_curve_node_8cpp-example.html#_a27\">multiCurveNode/multiCurveNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/multi_plug_info_cmd_2multi_plug_info_cmd_8cpp-example.html#_a18\">multiPlugInfoCmd/multiPlugInfoCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_8cpp-example.html#_a34\">onbShader/onbShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/owner_emitter_2owner_emitter_8cpp-example.html#_a5\">ownerEmitter/ownerEmitter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/owner_emitter_2owner_emitter_8h-example.html#_a16\">ownerEmitter/ownerEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/phong_shader_2phong_shader_8cpp-example.html#_a33\">phongShader/phongShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/shadow_matte_shader_2shadow_matte_shader_8cpp-example.html#_a29\">shadowMatteShader/shadowMatteShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_emitter_2simple_emitter_8cpp-example.html#_a5\">simpleEmitter/simpleEmitter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_emitter_2simple_emitter_8h-example.html#_a20\">simpleEmitter/simpleEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/splat_deformer_2splat_deformer_8cpp-example.html#_a19\">splatDeformer/splatDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/sse_deformer_2sse_deformer_8cpp-example.html#_a15\">sseDeformer/sseDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/string_format_node_2string_format_node_8cpp-example.html#_a26\">stringFormatNode/stringFormatNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/swept_emitter_2swept_emitter_8cpp-example.html#_a5\">sweptEmitter/sweptEmitter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/swept_emitter_2swept_emitter_8h-example.html#_a15\">sweptEmitter/sweptEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nsolver_node_2test_nsolver_node_8cpp-example.html#_a12\">testNsolverNode/testNsolverNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nucleus_node_2test_nucleus_node_8cpp-example.html#_a10\">testNucleusNode/testNucleusNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/torus_field_2torus_field_8cpp-example.html#_a11\">torusField/torusField.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/weight_list_node_2weight_list_node_8cpp-example.html#_a19\">weightListNode/weightListNode.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"afeda893a9db7b4488547f2eb9b1cb48e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OPENMAYA_MAJOR_NAMESPACE_OPEN <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor. </p>\n\
<p>Creates an new array data handle from the specified data handle.</p>\n\
<p>This method can be used to access an array attribute that is a child of a compound array. Example: weightList[].weights[]</p>\n\
<p>This method will only work for data handles to attributes that are arrays.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">in</td><td>Handle to the child array attribute. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> source handle is null or is not an array </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1b311743938ab855c1546164f1f55f59\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>other</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">other</td><td>the source object to copy from. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a81d24dca6d647d8d0a8fe0ef2c63b170\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> inputValue </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Gets a handle into this data block for the current array element. </p>\n\
<p>The data represented by the handle will be valid. If the data is from an dirty connection, then the connection will be evaluated.</p>\n\
<p>It is important to note that you can not call inputValue on an element that is greater than the elementCount in this arrayDataHandle. That is, calls to inputValue must be protected by a call to elementCount to ensure the element exists. If this is not done, the call to inputValue will fail with an invalidParameter error.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid as it cannot legally trigger evaluation. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\" title=\"Gets a handle into this data block for the current array element. \">MArrayDataHandle::outputValue()</a> instead.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Data handle for the current element\'s data</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> the requested element is out of range </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/anisotropic_shader_2anisotropic_shader_8cpp-example.html#a43\">anisotropicShader/anisotropicShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/backfill_shader_2backfill_shader_8cpp-example.html#a37\">backfillShader/backfillShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#a13\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#a17\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a77\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_skin_cluster_2basic_skin_cluster_8cpp-example.html#a14\">basicSkinCluster/basicSkinCluster.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#a37\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/dyn_expr_field_2dyn_expr_field_8cpp-example.html#a17\">dynExprField/dynExprField.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/full_loft_node_2full_loft_node_8cpp-example.html#a21\">fullLoftNode/fullLoftNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_surface_constraint_2geometry_surface_constraint_8cpp-example.html#a10\">geometrySurfaceConstraint/geometrySurfaceConstraint.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/lambert_shader_2lambert_shader_8cpp-example.html#a33\">lambertShader/lambertShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_8cpp-example.html#a38\">onbShader/onbShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/owner_emitter_2owner_emitter_8h-example.html#a19\">ownerEmitter/ownerEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/phong_shader_2phong_shader_8cpp-example.html#a37\">phongShader/phongShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/shadow_matte_shader_2shadow_matte_shader_8cpp-example.html#a33\">shadowMatteShader/shadowMatteShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_emitter_2simple_emitter_8h-example.html#a23\">simpleEmitter/simpleEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/splat_deformer_2splat_deformer_8cpp-example.html#a22\">splatDeformer/splatDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/sse_deformer_2sse_deformer_8cpp-example.html#a18\">sseDeformer/sseDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/string_format_node_2string_format_node_8cpp-example.html#a30\">stringFormatNode/stringFormatNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/swept_emitter_2swept_emitter_8h-example.html#a18\">sweptEmitter/sweptEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nsolver_node_2test_nsolver_node_8cpp-example.html#a16\">testNsolverNode/testNsolverNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nucleus_node_2test_nucleus_node_8cpp-example.html#a13\">testNucleusNode/testNucleusNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/torus_field_2torus_field_8cpp-example.html#a15\">torusField/torusField.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae7d0b57302500d19b7a3f57f8aef45df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outputValue </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Gets a handle into this data block for the current array element. </p>\n\
<p>The data is not guaranteed to be valid. Therefore, this handle should only be used for writing over the data.</p>\n\
<p>This method can also be used to retrieve handles to individual elements of non-datablock array handles, such as those returned by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Data handle for the current element\'s data</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#a94\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a138\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a22\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/weight_list_node_2weight_list_node_8cpp-example.html#a27\">weightListNode/weightListNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2cee08084f8de2a3394fffe7356e2002\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> inputArrayValue </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Gets a handle into this data block for the current array element. </p>\n\
<p>This method should be used when the array elements are also arrays. The data represented by the handle will be valid. If the data is from an dirty connection, then the connection will be evailuated.</p>\n\
<p>It is important to note that you can not call inputArrayValue on an element that is greater than the elementCount in this arrayDataHandle. That is, calls to inputValue must be protected by a call to elementCount to ensure the element exists. If this is not done, the the call to inputArrayValue will fail with an invalidParameter error.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid as it cannot legally trigger evaluation. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\" title=\"Gets a handle into this data block for the current array element. \">MArrayDataHandle::outputValue()</a> instead.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Data handle for the current element\'s data</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> the current item is not an array or the requested element is out of range. </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a134\">apiMeshShape/apiMeshShape.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a70d35c4ffcfa0fa184e0c7164fceddc0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> outputArrayValue </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Gets a handle into this data block for the current array element. </p>\n\
<p>This method should be used when the array elements are also arrays. The data is not guaranteed to be valid. Therefore, this handle should only be used for writing over the data.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid as it cannot legally trigger evaluation. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#ae7d0b57302500d19b7a3f57f8aef45df\" title=\"Gets a handle into this data block for the current array element. \">MArrayDataHandle::outputValue()</a> instead.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Data handle for the current element\'s data</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> the current item is not an array </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a73616f002814b8abe6d921db72d7a496\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> next </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Advance to the next element in the array. </p>\n\
<p>These may be sparse arrays so the next consecutive element may not necessarily have a consecutive index.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><ul>\n\
<li>MS::kSuccess if there was a next element </li>\n\
<li>MS::kFailure if the object is invalid or there is no next element </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#a96\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/anisotropic_shader_2anisotropic_shader_8cpp-example.html#a47\">anisotropicShader/anisotropicShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a139\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/backfill_shader_2backfill_shader_8cpp-example.html#a41\">backfillShader/backfillShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#a15\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#a19\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a80\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_skin_cluster_2basic_skin_cluster_8cpp-example.html#a16\">basicSkinCluster/basicSkinCluster.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/full_loft_node_2full_loft_node_8cpp-example.html#a29\">fullLoftNode/fullLoftNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_surface_constraint_2geometry_surface_constraint_8cpp-example.html#a15\">geometrySurfaceConstraint/geometrySurfaceConstraint.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/lambert_shader_2lambert_shader_8cpp-example.html#a36\">lambertShader/lambertShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_8cpp-example.html#a41\">onbShader/onbShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/phong_shader_2phong_shader_8cpp-example.html#a45\">phongShader/phongShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/shadow_matte_shader_2shadow_matte_shader_8cpp-example.html#a36\">shadowMatteShader/shadowMatteShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/splat_deformer_2splat_deformer_8cpp-example.html#a24\">splatDeformer/splatDeformer.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/sse_deformer_2sse_deformer_8cpp-example.html#a20\">sseDeformer/sseDeformer.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5f3dd1d27853eccbbe78b6d4383ccb79\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int elementCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of elements in the array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The number of elements</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#a98\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/anisotropic_shader_2anisotropic_shader_8cpp-example.html#a41\">anisotropicShader/anisotropicShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/backfill_shader_2backfill_shader_8cpp-example.html#a35\">backfillShader/backfillShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#a10\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#a14\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a79\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_skin_cluster_2basic_skin_cluster_8cpp-example.html#a10\">basicSkinCluster/basicSkinCluster.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#a34\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/full_loft_node_2full_loft_node_8cpp-example.html#a18\">fullLoftNode/fullLoftNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_surface_constraint_2geometry_surface_constraint_8cpp-example.html#a8\">geometrySurfaceConstraint/geometrySurfaceConstraint.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/lambert_shader_2lambert_shader_8cpp-example.html#a31\">lambertShader/lambertShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_8cpp-example.html#a36\">onbShader/onbShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/phong_shader_2phong_shader_8cpp-example.html#a35\">phongShader/phongShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/shadow_matte_shader_2shadow_matte_shader_8cpp-example.html#a31\">shadowMatteShader/shadowMatteShader.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nsolver_node_2test_nsolver_node_8cpp-example.html#a14\">testNsolverNode/testNsolverNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/weight_list_node_2weight_list_node_8cpp-example.html#a25\">weightListNode/weightListNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2ca3c3d60cf2f3ac005b651379f26143\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int elementIndex </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the index that we are currently at in the array. </p>\n\
<p>It is possible for the index to be invalid, in which case the return status will report an error. These may be sparse arrays so the element index returned will be a logical index.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The current element\'s logical index</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kFailure</b> current element has an invalid index, or this function set has an invalid object </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#a93\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a137\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a81\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/splat_deformer_2splat_deformer_8cpp-example.html#a23\">splatDeformer/splatDeformer.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/sse_deformer_2sse_deformer_8cpp-example.html#a19\">sseDeformer/sseDeformer.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8d77f0fea87bb6854b60cd199bf26240\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> jumpToElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>index</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Jump to a specific element in the array. </p>\n\
<p>The array is sparse, so the indices may not be consecutive.</p>\n\
<p>NOTE: The index is the logical element index, which may be sparse.</p>\n\
<p>Jumping to an element is done through a binary search, with heuristics that improve the starting point for the search for simpler cases, such as:</p>\n\
<ul>\n\
<li>where the elements are contiguous (or at least mostly contiguous), or</li>\n\
<li>if you ask for the element that immediately follows the previously searched result.</li>\n\
</ul>\n\
<p>In those cases the search will be more likely to find the right spot in one or two guesses instead of always needing to search over the entire range. The algorithm is therefore still O(logn) in the worst case (as a typical binary search), but it should average closer to O(1) if the dataset is not very sparse and if it is being searched iteratively, in order.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">index</td><td>the logical index to jump to</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> the operation was successful </li>\n\
<li><b>MS::kInvalidParameter</b> the given index does not exist </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#a16\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#a20\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a21\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_skin_cluster_2basic_skin_cluster_8cpp-example.html#a22\">basicSkinCluster/basicSkinCluster.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/constraint_evaluator_2constraint_evaluator_8cpp-example.html#a35\">constraintEvaluator/constraintEvaluator.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/dyn_expr_field_2dyn_expr_field_8cpp-example.html#a15\">dynExprField/dynExprField.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/full_loft_node_2full_loft_node_8cpp-example.html#a19\">fullLoftNode/fullLoftNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/owner_emitter_2owner_emitter_8h-example.html#a18\">ownerEmitter/ownerEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_emitter_2simple_emitter_8h-example.html#a22\">simpleEmitter/simpleEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/string_format_node_2string_format_node_8cpp-example.html#a28\">stringFormatNode/stringFormatNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/swept_emitter_2swept_emitter_8h-example.html#a17\">sweptEmitter/sweptEmitter.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nsolver_node_2test_nsolver_node_8cpp-example.html#a15\">testNsolverNode/testNsolverNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/test_nucleus_node_2test_nucleus_node_8cpp-example.html#a12\">testNucleusNode/testNucleusNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/torus_field_2torus_field_8cpp-example.html#a13\">torusField/torusField.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/weight_list_node_2weight_list_node_8cpp-example.html#a26\">weightListNode/weightListNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a28412cfb4b329b4835dab46800c3dca1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> jumpToArrayElement </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>position</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Jump to a specific array element in the array. </p>\n\
<p>This method can be used to iterate over the entire array.</p>\n\
<p>NOTE: Jumping to an array element does not require a search, since the array indices are non-sparse. The <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a2ca3c3d60cf2f3ac005b651379f26143\" title=\"Returns the index that we are currently at in the array. \">MArrayDataHandle::elementIndex()</a> method can be used to determine the logical index related to the current array index.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">position</td><td>the array position to jump to</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> the operation was successful </li>\n\
<li><b>MS::kInvalidParameter</b> the given array element does not exist </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_2basic_blend_shape_8cpp-example.html#a24\">basicBlendShape/basicBlendShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/basic_blend_shape_deformer_2basic_blend_shape_deformer_8cpp-example.html#a26\">basicBlendShapeDeformer/basicBlendShapeDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/splat_deformer_2splat_deformer_8cpp-example.html#a21\">splatDeformer/splatDeformer.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/sse_deformer_2sse_deformer_8cpp-example.html#a17\">sseDeformer/sseDeformer.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/weight_list_node_2weight_list_node_8cpp-example.html#a29\">weightListNode/weightListNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae86bc33baaf2125242e1cf4a846d6cb0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setClean </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Marks the data that is represented by this handle as being clean. </p>\n\
<p>This should be done after recalculating the data from the inputs.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Return status</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aff40e8c8c255448d5d19a05148b83058\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setAllClean </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Marks every element of the array attribute represented by the handle as clean. </p>\n\
<p>This method should be used if a compute function is asked to compute a single element of a multi, but instead calculates all the elements. Calling <em>setAllClean</em> in this situation will prevent further calls to the node\'s compute method for the other elements of the multi.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Return status</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_abc_import_2_alembic_node_8cpp-example.html#a97\">AbcImport/AlembicNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a135\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node_2foot_print_node_8cpp-example.html#a21\">footPrintNode/footPrintNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/multi_curve_node_2multi_curve_node_8cpp-example.html#a37\">multiCurveNode/multiCurveNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a48b34beab40fa4ae60cfe40e556f591a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html\">MArrayDataBuilder</a> builder </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns a builder for this handle\'s array so that it can be expanded. </p>\n\
<p>This method will fail if the current array does not support array data builders. This can be changed in a node\'s initialize routine using the setUsesArrayDataBuilder method in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html\" title=\"Dependency node attribute function set. \">MFnAttribute</a>.</p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The builder object</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> This item does not support array data builders </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example10\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example10-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example10-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a98\">apiMeshShape/apiMeshShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/owner_emitter_2owner_emitter_8cpp-example.html#a8\">ownerEmitter/ownerEmitter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/simple_emitter_2simple_emitter_8cpp-example.html#a8\">simpleEmitter/simpleEmitter.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/swept_emitter_2swept_emitter_8cpp-example.html#a8\">sweptEmitter/sweptEmitter.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/torus_field_2torus_field_8cpp-example.html#a23\">torusField/torusField.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a575cf7adebfd8e3c29e588d2cd1c47a6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> set </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_builder.html\">MArrayDataBuilder</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>builder</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Sets the data for this array from the data in the builder object. </p>\n\
<p>The data handle that this arrayDataHandle represents must come from a valid data block, such as one returned from one of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> methods like <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\" title=\"Gets a handle to this data block for the given plug&#39;s data. \">MDataBlock::inputValue()</a>. If a data handle created and returned from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\" title=\"NO SCRIPT SUPPORT. \">MPlug::getValue()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html#a8c808b891c9b65d2318f4ab8e0a5a27d\" title=\"Retrieve the value in the current evaluation context of the attribute this plug references. \">MPlug::asMDataHandle()</a> is passed to this arrayDataHandle, then the use of this method will be invalid.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">builder</td><td>the builder object</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Return status</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>kSuccess</b> operation successful </li>\n\
<li><b>kInvalidParameter</b> the builder passed is invalid </li>\n\
<li><b>kFailure</b> an object error has occurred </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example11\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example11-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example11-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a100\">apiMeshShape/apiMeshShape.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/multi_curve_node_2multi_curve_node_8cpp-example.html#a36\">multiCurveNode/multiCurveNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6582e0fdac5add80e8c372e49b3d6b85\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>other</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">other</td><td>the source object to copy from. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MArrayDataHandle.h</li>\n\
<li>MArrayDataHandle.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";