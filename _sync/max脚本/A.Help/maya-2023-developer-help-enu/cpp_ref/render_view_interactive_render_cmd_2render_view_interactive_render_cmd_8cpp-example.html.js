var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: renderViewInteractiveRenderCmd/renderViewInteractiveRenderCmd.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'render_view_interactive_render_cmd_2render_view_interactive_render_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: renderViewInteractiveRenderCmd/renderViewInteractiveRenderCmd.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">renderViewInteractiveRenderCmd/renderViewInteractiveRenderCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// A new example that demonstrates the immediate feedback setting that has</span></div>\n\
<div class=\"line\"><span class=\"comment\">// been added to the startRender() methods of the MRenderView class.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// After loading this plug-in, execute the following to see what options</span></div>\n\
<div class=\"line\"><span class=\"comment\">// it supports:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// help renderViewInteractiveRender;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSimple.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MRenderView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDGMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimControl.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  renderViewInteractiveRender command declaration</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>renderViewInteractiveRender : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html\">MPxCommand</a> </div>\n\
<div class=\"line\">{                           </div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:                 </div>\n\
<div class=\"line\">    renderViewInteractiveRender() {};</div>\n\
<div class=\"line\">    ~renderViewInteractiveRender()<span class=\"keyword\"> override </span>{};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>    <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#ade7d0a873cbe811d6eab464e695390a9\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*       creator();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a>     newSyntax();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>            parseSyntax (<a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> &amp;argData);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// methods to support render view updates</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     updateRenderView();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     updateRenderViewDefault();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// methods to support IPR rendering</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>        timeChangeCB(<a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> &amp;time, <span class=\"keywordtype\">void</span> *clientData);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     updateRenderViewIpr();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>  *cmdName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>    evaluate(<span class=\"keywordtype\">int</span> x, <span class=\"keywordtype\">int</span> y);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         fullRefresh;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         immediateRefresh;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         doNotClearBackground        = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         verbose;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         editMode                    = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         useRandomColors             = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>       radius;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> size[2];</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> tileSize[2];</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numberLoops;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>     color1;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>     color2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         iprPaused                   = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         iprMode                     = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> width                       = 640;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> height                      = 480;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> left                        = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> right                       = width;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> top                         = height;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> bottom                      = 0;</div>\n\
<div class=\"line\">    MCallbackId  timeChangeCallbackID;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kVerbose                    = <span class=\"stringliteral\">&quot;-v&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kVerboseLong                = <span class=\"stringliteral\">&quot;-verbose&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kDoNotClearBackground       = <span class=\"stringliteral\">&quot;-b&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kDoNotClearBackgroundLong   = <span class=\"stringliteral\">&quot;-background&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRadius                     = <span class=\"stringliteral\">&quot;-r&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRadiusLong                 = <span class=\"stringliteral\">&quot;-radius&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeX                      = <span class=\"stringliteral\">&quot;-sx&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeXLong                  = <span class=\"stringliteral\">&quot;-sizeX&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeY                      = <span class=\"stringliteral\">&quot;-sy&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeYLong                  = <span class=\"stringliteral\">&quot;-sizeY&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeTileX                  = <span class=\"stringliteral\">&quot;-tx&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeTileXLong              = <span class=\"stringliteral\">&quot;-sizeTileX&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeTileY                  = <span class=\"stringliteral\">&quot;-ty&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSizeTileYLong              = <span class=\"stringliteral\">&quot;-sizeTileY&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kNumberLoops                = <span class=\"stringliteral\">&quot;-nl&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kNumberLoopsLong            = <span class=\"stringliteral\">&quot;-numberLoops&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kImmediateRefresh           = <span class=\"stringliteral\">&quot;-ir&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kImmediateRefreshLong       = <span class=\"stringliteral\">&quot;-immediateRefresh&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kFullRefresh                = <span class=\"stringliteral\">&quot;-fr&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kFullRefreshLong            = <span class=\"stringliteral\">&quot;-fullRefresh&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kIprMode                    = <span class=\"stringliteral\">&quot;-ipr&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kIprModeLong                = <span class=\"stringliteral\">&quot;-iprMode&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPause                      = <span class=\"stringliteral\">&quot;-p&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPauseLong                  = <span class=\"stringliteral\">&quot;-pause&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kLeft                       = <span class=\"stringliteral\">&quot;-lft&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kLeftLong                   = <span class=\"stringliteral\">&quot;-leftEdge&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRight                      = <span class=\"stringliteral\">&quot;-rgt&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRightLong                  = <span class=\"stringliteral\">&quot;-rightEdge&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kTop                        = <span class=\"stringliteral\">&quot;-tp&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kTopLong                    = <span class=\"stringliteral\">&quot;-topEdge&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kBottom                     = <span class=\"stringliteral\">&quot;-bot&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kBottomLong                 = <span class=\"stringliteral\">&quot;-bottomEdge&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUseRandomColors            = <span class=\"stringliteral\">&quot;-rc&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUseRandomColorsLong        = <span class=\"stringliteral\">&quot;-useRandomColors&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kEditMode                   = <span class=\"stringliteral\">&quot;-e&quot;</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kEditModeLong               = <span class=\"stringliteral\">&quot;-editMode&quot;</span>;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> * renderViewInteractiveRender::cmdName = <span class=\"stringliteral\">&quot;renderViewInteractiveRender&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* renderViewInteractiveRender::creator()                    </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> renderViewInteractiveRender;</div>\n\
<div class=\"line\">}                                                   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> renderViewInteractiveRender::newSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kDoNotClearBackground, kDoNotClearBackgroundLong);</div>\n\
<div class=\"line\">    <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kEditMode, kEditModeLong);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kVerbose, kVerboseLong);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kImmediateRefresh, kImmediateRefreshLong);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kFullRefresh, kFullRefreshLong);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kRadius, kRadiusLong, <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kSizeX, kSizeXLong, <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada762e1602488228e1b11b83501bb3832e\">MSyntax::kLong</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kSizeY, kSizeYLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada762e1602488228e1b11b83501bb3832e\">MSyntax::kLong</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kSizeTileX, kSizeTileXLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada762e1602488228e1b11b83501bb3832e\">MSyntax::kLong</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kSizeTileY, kSizeTileYLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada762e1602488228e1b11b83501bb3832e\">MSyntax::kLong</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kNumberLoops, kNumberLoopsLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada762e1602488228e1b11b83501bb3832e\">MSyntax::kLong</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kPause, kPauseLong, <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8cfc0ab572a96edfc9db7c02f0d025d7\">MSyntax::kBoolean</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kIprMode, kIprModeLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8cfc0ab572a96edfc9db7c02f0d025d7\">MSyntax::kBoolean</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kLeft, kLeftLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kRight, kRightLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kTop, kTopLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kBottom, kBottomLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kUseRandomColors, kUseRandomColorsLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8cfc0ab572a96edfc9db7c02f0d025d7\">MSyntax::kBoolean</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga1c1d4871f9859a07b14c0218a3609fd9\">CHECK_MSTATUS_AND_RETURN</a>(status, syntax);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read the values of the additional flags for this command.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> renderViewInteractiveRender::parseSyntax (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> &amp;argData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the flag values, otherwise the default values are used.</span></div>\n\
<div class=\"line\">    doNotClearBackground = argData.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kDoNotClearBackground );</div>\n\
<div class=\"line\">    verbose = argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kVerbose );</div>\n\
<div class=\"line\">    fullRefresh = argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kFullRefresh );</div>\n\
<div class=\"line\">    immediateRefresh = argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kImmediateRefresh );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    editMode = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    editMode = argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kEditMode );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    radius = 50.;                           <span class=\"comment\">// pattern frequency, in pixels</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kRadius ))</div>\n\
<div class=\"line\">        argData.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kRadius, 0, radius);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    size[0] = width;</div>\n\
<div class=\"line\">    size[1] = height;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kSizeX ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kSizeX, 0, size[0]);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kSizeY ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kSizeY, 0, size[1]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    tileSize[0] = 16;</div>\n\
<div class=\"line\">    tileSize[1] = 16;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kSizeTileX ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kSizeTileX, 0, tileSize[0]);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kSizeTileY ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kSizeTileY, 0, tileSize[1]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    numberLoops = 10;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kNumberLoops ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kNumberLoops, 0, numberLoops);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kPause ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kPauseLong, 0, iprPaused);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kIprMode ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kIprModeLong, 0, iprMode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kLeft ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kLeftLong, 0, left);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kRight ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kRightLong, 0, right);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kTop ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kTopLong, 0, top);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kBottom ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kBottomLong, 0, bottom);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kUseRandomColors ))</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>(kUseRandomColorsLong, 0, useRandomColors);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      If during an IPR session, perform an update of the Render View Window</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> renderViewInteractiveRender::timeChangeCB(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> &amp;time, <span class=\"keywordtype\">void</span> *clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(iprMode &amp;&amp; !iprPaused)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Avoid flickering if someone scrubs the timeline</span></div>\n\
<div class=\"line\">        doNotClearBackground = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        renderViewInteractiveRender::updateRenderView();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      register the command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )         </div>\n\
<div class=\"line\">{                                                           </div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.5&quot;</span> );   </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     stat;                                       </div>\n\
<div class=\"line\">    stat = plugin.registerCommand(  renderViewInteractiveRender::cmdName,</div>\n\
<div class=\"line\">                                    renderViewInteractiveRender::creator,</div>\n\
<div class=\"line\">                                    renderViewInteractiveRender::newSyntax);    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )                                                </div>\n\
<div class=\"line\">        stat.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>( <span class=\"stringliteral\">&quot;registerCommand&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    plugin.registerUI(<span class=\"stringliteral\">&quot;registerSampleRenderer&quot;</span>, <span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    timeChangeCallbackID = <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_message.html#a0cf2d487672abd947a5abc89ac788789\">MDGMessage::addTimeChangeCallback</a>(renderViewInteractiveRender::timeChangeCB, NULL, &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !stat )</div>\n\
<div class=\"line\">        timeChangeCallbackID = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;                                                </div>\n\
<div class=\"line\">}                                                               </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      unregister the command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )                       </div>\n\
<div class=\"line\">{                                                               </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj );                                  </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     stat;                                           </div>\n\
<div class=\"line\">    stat = plugin.deregisterCommand( renderViewInteractiveRender::cmdName );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )                                    </div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>( <span class=\"stringliteral\">&quot;deregisterCommand&quot;</span> );     </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MDGMessage::removeCallback</a>(timeChangeCallbackID);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )                                    </div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>( <span class=\"stringliteral\">&quot;removeCallback&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;                                    </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a> renderViewInteractiveRender::evaluate(<span class=\"keywordtype\">int</span> x, <span class=\"keywordtype\">int</span> y)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Generates a simple procedural circular pattern to be sent to the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Render View.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      x, y - coordinates in the current tile (the pattern is centered </span></div>\n\
<div class=\"line\"><span class=\"comment\">//             around (0,0) ).</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Return Value:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      An RV_PIXEL structure containing the colour of pixel (x,y).</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> distance = sqrt(<span class=\"keywordtype\">double</span>((x*x) + (y*y))) / radius;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> percent = (float)(cos(distance*2*3.1415927)/2.+.5);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a> pixel;</div>\n\
<div class=\"line\">    pixel.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> = color1.r * percent + color2.r * (1-percent);</div>\n\
<div class=\"line\">    pixel.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> = color1.g * percent + color2.g * (1-percent);</div>\n\
<div class=\"line\">    pixel.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> = color1.b * percent + color2.b * (1-percent);</div>\n\
<div class=\"line\">    pixel.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4aec1a5be9d9a4a394a2e49e9744286e\">a</a> = 255.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> pixel;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      update the Render View Window</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> renderViewInteractiveRender::updateRenderView()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check if the render view exists. It should always exist, unless</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Maya is running in batch mode.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a184bee2968fa3b152091a411990cfe52\">MRenderView::doesRenderEditorExist</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError( </div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;Cannot renderViewInteractiveRender in batch render mode.\\n&quot;</span></div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;Run in interactive mode, so that the render editor exists.&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(iprMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        stat = updateRenderViewIpr();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        stat = updateRenderViewDefault();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Inform the Render View that we have completed rendering the entire image.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#ab0d5ac2c66d80fc19cfba57e2c3f0c94\">MRenderView::endRender</a>() != MS::kSuccess)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError( <span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in endRender.&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      update the Render View Window</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> renderViewInteractiveRender::updateRenderViewDefault()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> image_width = size[0], image_height = size[1];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a83fe29675c567275fe349381ee1f6f2d\">MRenderView::startRender</a>( image_width, image_height, </div>\n\
<div class=\"line\">        doNotClearBackground, </div>\n\
<div class=\"line\">        immediateRefresh) != MS::kSuccess)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in startRender.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The image will be composed of tiles consisting of circular patterns.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw each tile</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> colors[] = { 255, 150,  69, </div>\n\
<div class=\"line\">                              255,  84, 112,</div>\n\
<div class=\"line\">                              255,  94, 249,</div>\n\
<div class=\"line\">                               86,  62, 255,</div>\n\
<div class=\"line\">                               46, 195, 255,</div>\n\
<div class=\"line\">                               56, 255, 159,</div>\n\
<div class=\"line\">                              130, 255,  64 };</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> indx1 = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> indx2 = 3*3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>* pixels = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>[tileSize[0] * tileSize[1]];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> loopId = 0 ; loopId &lt; numberLoops ; loopId++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        color1.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> = colors[indx1]; </div>\n\
<div class=\"line\">        color1.g = colors[indx1+1]; </div>\n\
<div class=\"line\">        color1.b = colors[indx1+2];</div>\n\
<div class=\"line\">        color1.a = 255;</div>\n\
<div class=\"line\">        indx1 += 3; <span class=\"keywordflow\">if</span> (indx1 &gt;= 21) indx1 -= 21;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        color2.r = colors[indx2]; </div>\n\
<div class=\"line\">        color2.g = colors[indx2+1]; </div>\n\
<div class=\"line\">        color2.b = colors[indx2+2]; </div>\n\
<div class=\"line\">        color2.a = 255;</div>\n\
<div class=\"line\">        indx2 += 6; <span class=\"keywordflow\">if</span> (indx2 &gt;= 21) indx2 -= 21;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> min_y = 0; min_y &lt; size[1] ; min_y += tileSize[1] )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> max_y = min_y + tileSize[1] - 1;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (max_y &gt;= size[1]) max_y = size[1]-1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> min_x = 0; min_x &lt; size[0] ; min_x += tileSize[0] )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> max_x = min_x + tileSize[0] - 1;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (max_x &gt;= size[0]) max_x = size[0]-1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Fill up the pixel array with some the pattern, which is </span></div>\n\
<div class=\"line\">                <span class=\"comment\">// generated by the &#39;evaluate&#39; function.  The Render View</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// accepts floating point pixel values only.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> index = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = min_y; j &lt;= max_y; j++ )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = min_x; i &lt;= max_x; i++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        pixels[index] = evaluate(i, j);</div>\n\
<div class=\"line\">                        index++;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Send the data to the render view.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a43020ec6829729869e63e7d894453a5b\">MRenderView::startRegionRender</a>( width, height, left, right-1, bottom, top-1, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>) != MS::kSuccess)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    displayError( <span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in updatePixels.&quot;</span> );</div>\n\
<div class=\"line\">                    <span class=\"keyword\">delete</span> [] pixels;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Force the Render View to refresh the display of the</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// affected region.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> st;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fullRefresh)</div>\n\
<div class=\"line\">                    st =<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a146003ed92b5f9f1572fa619557709ed\">MRenderView::refresh</a>(0, image_width-1, 0, image_height-1);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    st = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a146003ed92b5f9f1572fa619557709ed\">MRenderView::refresh</a>(min_x, max_x, min_y, max_y);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (st != MS::kSuccess)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    displayError( <span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in refresh.&quot;</span> );</div>\n\
<div class=\"line\">                    <span class=\"keyword\">delete</span> [] pixels;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (verbose)</div>\n\
<div class=\"line\">                    cerr &lt;&lt; <span class=\"stringliteral\">&quot;Tile &quot;</span>&lt;&lt;min_x&lt;&lt;<span class=\"stringliteral\">&quot;, &quot;</span>&lt;&lt;min_y&lt;&lt;</div>\n\
<div class=\"line\">                    <span class=\"stringliteral\">&quot; (iteration &quot;</span>&lt;&lt;loopId&lt;&lt;<span class=\"stringliteral\">&quot;)completed\\n&quot;</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> [] pixels;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      update the Render View Window for and IPR session</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> renderViewInteractiveRender::updateRenderViewIpr()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> image_width  = right - left;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> image_height = top - bottom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a83fe29675c567275fe349381ee1f6f2d\">MRenderView::startRender</a>( width, height, doNotClearBackground, <span class=\"keyword\">true</span>) != MS::kSuccess)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in startRender.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>* pixels = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a>[image_width * image_height];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html\">RV_PIXEL</a> pixel;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(useRandomColors)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> = (float)(rand() % 255);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> = (float)(rand() % 255);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> = (float)(rand() % 255);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4aec1a5be9d9a4a394a2e49e9744286e\">a</a> = 255.0f;</div>\n\
<div class=\"line\">    }<span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> currentTimeObj = <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_control.html#a8cb1e013d828c1d012fee789b14e0060\">MAnimControl::currentTime</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> currentTime = currentTimeObj.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a324b14b7506c6e4f47912161956974ed\">value</a>();</div>\n\
<div class=\"line\">        <span class=\"comment\">// Arbitrary function to create non gray colors for the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// purpose of illustration</span></div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> = (float)((sin(currentTime * 0.05) + 1.0) * 127.5);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> = (float)((sin(currentTime * 0.10) + 1.0) * 127.5);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> = (float)((sin(currentTime * 0.20) + 1.0) * 127.5);</div>\n\
<div class=\"line\">        pixel.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_r_v___p_i_x_e_l.html#a4aec1a5be9d9a4a394a2e49e9744286e\">a</a> = 255.0f;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill buffer with uniform color</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> index = 0; index &lt; image_height * image_width; ++index )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        pixels[index] = pixel;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Pushing buffer to Render View</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_view.html#a933dc6f93a84fdd9ebb889d1af7b9a6a\">MRenderView::updatePixels</a>(left, right - 1, bottom, top - 1, pixels) </div>\n\
<div class=\"line\">        != MS::kSuccess)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError( <span class=\"stringliteral\">&quot;renderViewInteractiveRender: error occurred in updatePixels.&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span>[] pixels;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span>[] pixels;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> renderViewInteractiveRender::doIt( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Implements the MEL renderViewInteractiveRender command. This command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Draws a 640x480 tiled pattern of circles into Maya&#39;s Render</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      View window.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      args - The argument list that was passed to the command from MEL.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Return Value:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MS::kSuccess - command succeeded</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MS::kFailure - command failed (returning this value will cause the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//                     MEL script that is being run to terminate unless the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                     error is caught using a &quot;catch&quot; statement.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// get optional flags</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> argData( syntax(), args );</div>\n\
<div class=\"line\">    parseSyntax( argData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// When running the command in editMode, we are only</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// interested in updating the arguments passed to the plugin</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// i.e. we don&#39;t want to render anything</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!editMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        renderViewInteractiveRender::updateRenderView();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";