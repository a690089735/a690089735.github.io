var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MFalloffContext Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_falloff_context.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MFalloffContext Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MFalloffContext Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_anim.html\">OpenMayaAnim - API module for animation</a></div></div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_falloff_context.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_falloff_context-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><b>Introduced in 2022.0</b>  \n\
 <a href=\"#!/url=./cpp_ref/class_m_falloff_context.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MFnFalloffData.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a1a4fd97453ef244e85d138cc9393ebe8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a1a4fd97453ef244e85d138cc9393ebe8\">getValues</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;bufferId) const </td></tr>\n\
<tr class=\"memdesc:a1a4fd97453ef244e85d138cc9393ebe8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the weight for the given bufferId.  <a href=\"class_m_falloff_context.html#a1a4fd97453ef244e85d138cc9393ebe8\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1a4fd97453ef244e85d138cc9393ebe8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac0b3351a5dc5d651c9d78288f1882655\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#ac0b3351a5dc5d651c9d78288f1882655\">setValue</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;array, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;bufferId)</td></tr>\n\
<tr class=\"memdesc:ac0b3351a5dc5d651c9d78288f1882655\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">copy the value into the buffer addressed by bufferId  <a href=\"class_m_falloff_context.html#ac0b3351a5dc5d651c9d78288f1882655\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac0b3351a5dc5d651c9d78288f1882655\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acdcf7e10045852a41da8c29e6032a805\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#acdcf7e10045852a41da8c29e6032a805\">isTopologyDirty</a> () const </td></tr>\n\
<tr class=\"memdesc:acdcf7e10045852a41da8c29e6032a805\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Tells if the geometry topology targeted by this falloff has changed sinced last time it evaluated.  <a href=\"class_m_falloff_context.html#acdcf7e10045852a41da8c29e6032a805\">More...</a><br></td></tr>\n\
<tr class=\"separator:acdcf7e10045852a41da8c29e6032a805\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a87b3b5abda17215beee4ee90c8cdcb14\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a87b3b5abda17215beee4ee90c8cdcb14\">isSync</a> (int syncId, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;bufferId) const </td></tr>\n\
<tr class=\"memdesc:a87b3b5abda17215beee4ee90c8cdcb14\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">isSync is used to quickly bail out of a fallout function, if it is in sync and additional requirement (no topology change) are met then we can return bufferId as Cached.  <a href=\"class_m_falloff_context.html#a87b3b5abda17215beee4ee90c8cdcb14\">More...</a><br></td></tr>\n\
<tr class=\"separator:a87b3b5abda17215beee4ee90c8cdcb14\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0314406bed463aa3c99db7c4b46b19c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a0314406bed463aa3c99db7c4b46b19c7\">sync</a> (int syncId, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;bufferId)</td></tr>\n\
<tr class=\"memdesc:a0314406bed463aa3c99db7c4b46b19c7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Synchronize the target buffer with a user supplied id.  <a href=\"class_m_falloff_context.html#a0314406bed463aa3c99db7c4b46b19c7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0314406bed463aa3c99db7c4b46b19c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7e40ddf4a5e3e9a9777288f90c62efee\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a7e40ddf4a5e3e9a9777288f90c62efee\">getGeometry</a> (bool originalGeometry=false)</td></tr>\n\
<tr class=\"memdesc:a7e40ddf4a5e3e9a9777288f90c62efee\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">returns the working indexMapper.  <a href=\"class_m_falloff_context.html#a7e40ddf4a5e3e9a9777288f90c62efee\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7e40ddf4a5e3e9a9777288f90c62efee\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7bad31e9c09f8360aa7a2cb6a01f93bb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_index_mapper.html\">MIndexMapper</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a7bad31e9c09f8360aa7a2cb6a01f93bb\">getIndexMapper</a> () const </td></tr>\n\
<tr class=\"memdesc:a7bad31e9c09f8360aa7a2cb6a01f93bb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">returns the working indexMapper.  <a href=\"class_m_falloff_context.html#a7bad31e9c09f8360aa7a2cb6a01f93bb\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7bad31e9c09f8360aa7a2cb6a01f93bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7239f4c176df2f43659c4f820ffc34f6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a7239f4c176df2f43659c4f820ffc34f6\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html#a7239f4c176df2f43659c4f820ffc34f6\">~MFalloffContext</a> ()</td></tr>\n\
<tr class=\"memdesc:a7239f4c176df2f43659c4f820ffc34f6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html\" title=\"Introduced in 2022.0 \">MFalloffContext</a> destructor. <br></td></tr>\n\
<tr class=\"separator:a7239f4c176df2f43659c4f820ffc34f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p><b>Introduced in 2022.0</b> </p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000012\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>falloff context use in a falloff function to get/set information for weight computation.</p>\n\
<p>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_falloff_context.html\" title=\"Introduced in 2022.0 \">MFalloffContext</a> is provided to a MFalloffFunction::operator() that user override to create its own weight falloff. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#_a33\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a1a4fd97453ef244e85d138cc9393ebe8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> getValues </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>bufferId</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the weight for the given bufferId. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bufferId</td><td>tells wich buffer to return. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>weight data designed by the bufferId </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a38\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac0b3351a5dc5d651c9d78288f1882655\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void setValue </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>array</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>bufferId</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>copy the value into the buffer addressed by bufferId </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">array</td><td>represent the array of weight to be copied into the buffer </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bufferId</td><td>tells wich buffer to copy the data on. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a41\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acdcf7e10045852a41da8c29e6032a805\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isTopologyDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Tells if the geometry topology targeted by this falloff has changed sinced last time it evaluated. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if topology has changed. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a36\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a87b3b5abda17215beee4ee90c8cdcb14\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isSync </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>syncId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>bufferId</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>isSync is used to quickly bail out of a fallout function, if it is in sync and additional requirement (no topology change) are met then we can return bufferId as Cached. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true is bufferId syncId is the samke as supplied syncId </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a37\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0314406bed463aa3c99db7c4b46b19c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void sync </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>syncId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_buffer_identifier.html\">MBufferIdentifier</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>bufferId</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Synchronize the target buffer with a user supplied id. </p>\n\
<p>This enable user to check if buffer match the syncId stored on an attribute on the compute object that holdthe falloff data function. This allow to avoid useless computation when the falloff ask to recompute an already computed weight. </p><dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">syncId</td><td>is provided by the implementor of the falloff function and it track the dirtyness of the buffer based on its input dirtyness. Basically every time a computation of the falloff is trigger this id should change since the weight buffer would potentially change. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">bufferId</td><td>which buffer to synchronized. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a42\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7e40ddf4a5e3e9a9777288f90c62efee\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> getGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>originalGeometry</em> = <code>false</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>returns the working indexMapper. </p>\n\
<p>Falloff can be reused for different deformer. The context tells us the information that we need concerning the geometry that we are working on at the moment of the call.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Indexmapper for the geometry that this falloff operates on. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a39\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7bad31e9c09f8360aa7a2cb6a01f93bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_index_mapper.html\">MIndexMapper</a> getIndexMapper </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>returns the working indexMapper. </p>\n\
<p>Falloff can be reused for different deformer. The context tells us the information that we need concerning the geometry that we are working on at the moment of the call.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Indexmapper for the geometry that this falloff operates on. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/example_falloff_2smooth_falloff_node_8cpp-example.html#a40\">exampleFalloff/smoothFalloffNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MFnFalloffData.h</li>\n\
<li>MFnFalloffData.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";