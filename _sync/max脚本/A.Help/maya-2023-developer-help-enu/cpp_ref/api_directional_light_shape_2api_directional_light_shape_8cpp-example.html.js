var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: apiDirectionalLightShape/apiDirectionalLightShape.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'api_directional_light_shape_2api_directional_light_shape_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: apiDirectionalLightShape/apiDirectionalLightShape.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DescriptioN:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Creates plug-in shapes which is classified generally as a light</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  and specifically as a VP2 point, area, directional or spot lights.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  The second classification allows for the usage of the internal</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  light and UI (geometry drawing) VP2 evluators to be used.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Note that there is no explicit VP2 override class used as</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  the internal VP2 geometry evaluator will handle drawing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Attributes which control the light are created to match names on</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  a Maya lights so that they will be picked up when DG</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  evaluation occurs.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Usage:   Create node and set it&#39;s object color to a one of the user defined </span></div>\n\
<div class=\"line\"><span class=\"comment\">//          preference colors:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node = `shadingNode -asLight apiDirectionalLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  color -ud 7 $node;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node2 = `shadingNode -asLight apiSpotLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node3 = `shadingNode -asLight apiAreaLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node4 = `shadingNode -asLight apiPointLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node5 = `shadingNode -asLight apiImageLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to create nodes which is categorized one of the internal light types.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  string $node5 = `shadingNode -asLight apiCusomtDirectionalLightShape`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to create nodes which have custom UI but use internal directional light</span></div>\n\
<div class=\"line\"><span class=\"comment\">// evaluation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Caveats:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Not all attributes are currently supported fully.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span>           </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxGeometryOverride.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometryUtilities.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEventMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiDirectionalLightShape.h&quot;</span>           </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Light shape implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiDirectionalLightShape::id( 0x00081103 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiSpotLightShape::id( 0x00081104 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiPointLightShape::id( 0x00081105 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiAreaLightShape::id( 0x00081106 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiCustomDirectionalLightShape::id( 0x00081107 );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiImageLightShape::id( 0x00081108 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Generic Input attributes</span></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aColor;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aIntensity; </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aExposure; </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aEmitDiffuse;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aEmitSpecular;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aDecayRate;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aLocatorScale;</div>\n\
<div class=\"line\"><span class=\"comment\">// Attributes for lights which shadow</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiShadowingLightShape::aUseDepthMapShadows;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiShadowingLightShape::aUseRayTraceShadows;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiShadowingLightShape::aShadowColor;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiShadowingLightShape::aDepthMapResolution;</div>\n\
<div class=\"line\"><span class=\"comment\">// Input spotlight attributes</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiSpotLightShape::aConeAngle;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiSpotLightShape::aPenumbraAngle;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiSpotLightShape::aDropOff;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Output attributes</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  apiLightShape::aOutColor;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAKE_INPUT(attr)    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setKeyable(true) );      \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setStorable(true) );     \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setReadable(true) );     \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setWritable(true) );     \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setAffectsAppearance(true) );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAKE_OUTPUT(attr)   \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setKeyable(false) );     \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setStorable(false) );    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setReadable(true) );     \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setWritable(false) );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Base light</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColor = nAttr.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;color&quot;</span>, <span class=\"stringliteral\">&quot;cl&quot;</span> );</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f, 0.5f, 0.5f) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aEmitDiffuse = nAttr.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;emitDiffuse&quot;</span>, <span class=\"stringliteral\">&quot;ed&quot;</span>, <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aEmitSpecular = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;emitSpecular&quot;</span>, <span class=\"stringliteral\">&quot;sn&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aIntensity = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;intensity&quot;</span>, <span class=\"stringliteral\">&quot;i&quot;</span>, <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aExposure = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;exposure&quot;</span>, <span class=\"stringliteral\">&quot;exp&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0f) );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    aLocatorScale = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;locatorScale&quot;</span>, <span class=\"stringliteral\">&quot;lls&quot;</span>, <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0) );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    aDecayRate = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;decayRate&quot;</span>, <span class=\"stringliteral\">&quot;de&quot;</span>, <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a868c593a83291c3c805f13f49e46bd44\">MFnNumericData::kShort</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0) );    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aColor) ); </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aIntensity) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aExposure) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aEmitDiffuse) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aEmitSpecular) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aLocatorScale) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aDecayRate) ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Note that &quot;oc&quot; conflicts with objectColor so we use something else.</span></div>\n\
<div class=\"line\">    aOutColor = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;outColor&quot;</span>, <span class=\"stringliteral\">&quot;ocl&quot;</span> );</div>\n\
<div class=\"line\">    MAKE_OUTPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aOutColor) );  </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aColor, aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aIntensity, aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aExposure, aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aEmitDiffuse, aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aEmitSpecular, aOutColor));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Compute output</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiLightShape::compute(<span class=\"keyword\">const</span> <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug,</div>\n\
<div class=\"line\">                                            <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((plug != aOutColor) &amp;&amp; (plug.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aa2338038d1c59dc4d35f37f918aabfab\">parent</a>() != aOutColor))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set outColor be color</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> resultColor = block.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aColor ).<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outColorHandle = block.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( aOutColor );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; outColor = outColorHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    outColor = resultColor;</div>\n\
<div class=\"line\">    outColorHandle.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a7bdd61b8405188bb547fdba3fddace91\">setClean</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Shadowing light</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiShadowingLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya shadowing light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiLightShape::initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aUseDepthMapShadows = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;useDepthMapShadows&quot;</span>, <span class=\"stringliteral\">&quot;dms&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(<span class=\"keyword\">false</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aUseRayTraceShadows = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;useRayTraceShadows&quot;</span>, <span class=\"stringliteral\">&quot;urs&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aShadowColor = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;shadowColor&quot;</span>, <span class=\"stringliteral\">&quot;sc&quot;</span> );</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0f, 0.0f, 0.0f) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aDepthMapResolution = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;dmapResolution&quot;</span>, <span class=\"stringliteral\">&quot;dr&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a868c593a83291c3c805f13f49e46bd44\">MFnNumericData::kShort</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(512) );    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aUseDepthMapShadows) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aUseRayTraceShadows) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aShadowColor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aDepthMapResolution) );    </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aUseDepthMapShadows, apiLightShape::aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aUseRayTraceShadows, apiLightShape::aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aShadowColor, apiLightShape::aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aDepthMapResolution, apiLightShape::aOutColor));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> apiLightShape::getShapeSelectionMask()<span class=\"keyword\"> const </span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879dae3d3c6ea60039108c7ae45d9551c5e59\">MSelectionMask::kSelectLights</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Point light shape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* apiPointLightShape::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiPointLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiPointLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya point light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiShadowingLightShape::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiPointLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the internal support for a given light in VP2.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/pointLight&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Directional light shape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* apiDirectionalLightShape::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiDirectionalLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiDirectionalLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya directional light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiShadowingLightShape::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiDirectionalLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the internal support for a given light in VP2.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/directionalLight&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Spotlight shape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* apiSpotLightShape::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiSpotLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiSpotLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya spot light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiShadowingLightShape::initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    aConeAngle = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;coneAngle&quot;</span>, <span class=\"stringliteral\">&quot;ca&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(40.0) );</div>\n\
<div class=\"line\">    aPenumbraAngle = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;penumbraAngle&quot;</span>, <span class=\"stringliteral\">&quot;pa&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0) );</div>\n\
<div class=\"line\">    aDropOff = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;dropoff&quot;</span>, <span class=\"stringliteral\">&quot;dro&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aConeAngle) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aPenumbraAngle) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a> ( addAttribute(aDropOff) );</div>\n\
<div class=\"line\">  </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aConeAngle, apiLightShape::aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aPenumbraAngle, apiLightShape::aOutColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(attributeAffects(aDropOff, apiLightShape::aOutColor));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiSpotLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the internal support for a given light in VP2.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/spotLight&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Area shape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* apiAreaLightShape::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiAreaLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiAreaLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya area light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiShadowingLightShape::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiAreaLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the internal support for a given light in VP2.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/areaLight&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Directional light shape with custom drawing + associated geometry override</span></div>\n\
<div class=\"line\"><span class=\"comment\">// See the drawdbIdentifier() method for more information.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>apiCustomDirectionalLightShape::apiCustomDirectionalLightShape()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Add callback so we can update drawing style on viewport changes</span></div>\n\
<div class=\"line\">    mModelEditorChangedCbId = <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event_message.html#a8d22c58b90484867755273c2f7ffc6ec\">MEventMessage::addEventCallback</a>(</div>\n\
<div class=\"line\">                <span class=\"stringliteral\">&quot;modelEditorChanged&quot;</span>, OnModelEditorChanged, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiCustomDirectionalLightShape::~apiCustomDirectionalLightShape()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mModelEditorChangedCbId != 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(mModelEditorChangedCbId);</div>\n\
<div class=\"line\">        mModelEditorChangedCbId = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* apiCustomDirectionalLightShape::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiCustomDirectionalLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya directional light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiCustomDirectionalLightShape::initialize()</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiDirectionalLightShape::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiCustomDirectionalLightShape::OnModelEditorChanged(<span class=\"keywordtype\">void</span> *clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    apiCustomDirectionalLightShape* shape = <span class=\"keyword\">static_cast&lt;</span>apiCustomDirectionalLightShape*<span class=\"keyword\">&gt;</span>(clientData);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (shape)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\">MHWRender::MRenderer::setGeometryDrawDirty</a>(shape-&gt;thisMObject());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// To allow for custom geometry drawing while still using an internal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// VP2 lighting computation:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   of the internal support for a given light in VP2. In this example we choose &lt;light type&gt; tb be directionalLight.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - We use &quot;drawdb/geometry/light/&lt;custom type&gt; to indicate usage of a plug-in override. In this example</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   we use &lt;custom type&gt; to be &quot;directionalLightCustom&quot;, which matches the classification of </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   the geometry override class apiDirectionalLightShape_GeometryOverride.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiCustomDirectionalLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/directionalLight:drawdb/geometry/light/directionalLightCustom&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiCustomDirectionalLightShape::isBounded()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> apiCustomDirectionalLightShape::boundingBox()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner1( -2.0, -2.0, -2.0);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner2( 2.0, 2.0, 2.0 );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>( corner1, corner2 );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Geometry override for custom drawing of apiCustomDirectionalLightShape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keyword\">class </span>apiDirectionalLightShape_GeometryOverride : <span class=\"keyword\">public</span> <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\">MHWRender::MPxGeometryOverride</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\">MHWRender::MPxGeometryOverride</a>* Creator(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiDirectionalLightShape_GeometryOverride(obj);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~apiDirectionalLightShape_GeometryOverride() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DrawAPI <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">supportedDrawAPIs</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a2bd5a3515d1cf5223d6b0851dec33aa2\">isIndexingDirty</a>(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; item) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a45aa4d75f1caf5b4783871b4996b38b6\">isStreamDirty</a>(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>&amp; desc) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\">updateDG</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\">updateRenderItems</a>(<span class=\"keyword\">const</span> <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a name=\"_a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\">populateGeometry</a>(<span class=\"keyword\">const</span> <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MHWRender::MGeometryRequirements</a>&amp; requirements,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItems,</div>\n\
<div class=\"line\">                    <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\">hasUIDrawables</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\">addUIDrawables</a>(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">        <a name=\"_a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\">cleanUp</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    apiDirectionalLightShape_GeometryOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//apiCustomDirectionalLightShape* mNode;</span></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiDirectionalLightShape_GeometryOverride::apiDirectionalLightShape_GeometryOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">    : <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxGeometryOverride(obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//MStatus status;</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//MFnDependencyNode node(obj, &amp;status);</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//mNode = status ? dynamic_cast&lt;apiCustomDirectionalLightShape*&gt;(node.userNode()) : NULL;</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiDirectionalLightShape_GeometryOverride::~apiDirectionalLightShape_GeometryOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//mNode = NULL;</span></div>\n\
<div class=\"line\">} </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MHWRender::DrawAPI apiDirectionalLightShape_GeometryOverride::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MHWRender::kAllDevices);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiDirectionalLightShape_GeometryOverride::isIndexingDirty(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; item)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiDirectionalLightShape_GeometryOverride::isStreamDirty(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>&amp; desc)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiDirectionalLightShape_GeometryOverride::updateDG()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiDirectionalLightShape_GeometryOverride::updateRenderItems(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiDirectionalLightShape_GeometryOverride::populateGeometry(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MHWRender::MGeometryRequirements</a>&amp; requirements,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItems,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiDirectionalLightShape_GeometryOverride::cleanUp()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiDirectionalLightShape_GeometryOverride::hasUIDrawables()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Some simple drawing to be used to display the UI for apiCustomDirectionalLightShape</span></div>\n\
<div class=\"line\"><span class=\"comment\">// instances.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiDirectionalLightShape_GeometryOverride::addUIDrawables(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// See if the camera path transform is the same object&#39;s. If so we are</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// looking through the child camera.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> objectTransformPath(path);</div>\n\
<div class=\"line\">    objectTransformPath.pop();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> cameraPath = frameContext.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7785aa5262ffc0200653a692b16fa608\">getCurrentCameraPath</a>();</div>\n\
<div class=\"line\">    cameraPath.<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ac71eca2b78b8cfc088adc9af6f851dfd\">pop</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (objectTransformPath == cameraPath)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> coneDirection(0, 0, -1);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  coneHeight = 1;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  coneRadius = 0.5;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw a basic cone and line to show direction of the light</span></div>\n\
<div class=\"line\">    drawManager.<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9008ebfa63c02670625076230d77c3f9\">beginDrawable</a>(<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#aca4f23adbdedb44537a170c5b1d5a08eaee505722dbb2915f1f4de201abed95dc\">MHWRender::MUIDrawManager::kSelectable</a>, 20);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus = <a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (displayStatus == MHWRender::kDormant)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawManager.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9baede3e37abe9551e50a8c6be65ec4d\">setColor</a>( <a name=\"_a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>(0.375f, 0.525f, 0.7f) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> color = <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(path);</div>\n\
<div class=\"line\">        drawManager.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9baede3e37abe9551e50a8c6be65ec4d\">setColor</a>( color );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> displayStyle = frameContext.<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acd5ce60bbd3d03181b1ad681023ff44d\">getDisplayStyle</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> filled = !(displayStyle &amp; <a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa53c5241bb4e72f6c9547de918125d068\">MHWRender::MFrameContext::kWireFrame</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (filled)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawManager.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#ab142b056f5485b2b808dc74f72953e7e\">setPaintStyle</a>(<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a2ec8cac626b2e11a639ce60bef590cb8a3ba47eb2caff6eea24d37de5f572f769\">MHWRender::MUIDrawManager::kShaded</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawManager.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#ab142b056f5485b2b808dc74f72953e7e\">setPaintStyle</a>(<a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a2ec8cac626b2e11a639ce60bef590cb8adde52b45b968d7b38c85697e56efb294\">MHWRender::MUIDrawManager::kFlat</a>);        </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    drawManager.<a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#af16b142f516bfaf49eb2231f4046d9b8\">cone</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(0,0,0),</div>\n\
<div class=\"line\">                    coneDirection,</div>\n\
<div class=\"line\">                    coneRadius,</div>\n\
<div class=\"line\">                    coneHeight,</div>\n\
<div class=\"line\">                    filled);</div>\n\
<div class=\"line\">    drawManager.<a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a00a63eea91630b196deea094e30c0f42\">setLineWidth</a>(2);</div>\n\
<div class=\"line\">    drawManager.<a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#abe48ac82aa2ede6d0efd3c9cfadb068c\">line</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(0,0,2), <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(0,0,0) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a78c343c25a05be7e46dd4b7ebab82ff6\">endDrawable</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Image light shape</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span>* apiImageLightShape::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called to create new instance of this node type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiImageLightShape();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiImageLightShape::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Attribute initialization.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Note that the long and short names are made to match a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Maya image light.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    apiLightShape::initialize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; apiImageLightShape::drawdbIdentfier() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;light&quot; to give a general classification as a light</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - We use &quot;drawdb/light/&lt;light type&gt;&quot; to indicate reuse</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the internal support for a given light in VP2.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> drawdb(<span class=\"stringliteral\">&quot;light:drawdb/light/image&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drawdb;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Node registristration</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - apiPointLightShape, apiDirectionalLightShape, apiSpotLightShape, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// apiAreaLightShape, and apiImageLightShape all just use a &quot;drawdb/light/&lt;light type&gt;&quot; </span></div>\n\
<div class=\"line\"><span class=\"comment\">// classification to allow for internally specified UI drawing and VP2 lighting support.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - apiCustomDirectionalLightShape additionally specifies a geometry override</span></div>\n\
<div class=\"line\"><span class=\"comment\">// classification to allow apiDirectionalLightShape_GeometryOverride to perform</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the UI drawing (instead of the internally specified implementation)</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a name=\"_a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;1.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// - Note that we do not specify a UI shape creator (for VP1 drawing)</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiPointLightShape&quot;</span>, apiPointLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiPointLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiPointLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiPointLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiPointLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiDirectionalLightShape&quot;</span>, apiDirectionalLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiDirectionalLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiDirectionalLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiDirectionalLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiDirectionalLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiSpotLightShape&quot;</span>, apiSpotLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiSpotLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiSpotLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiSpotLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiSpotLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiAreaLightShape&quot;</span>, apiAreaLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiAreaLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiAreaLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiAreaLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiAreaLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiImageLightShape&quot;</span>, apiImageLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiImageLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiImageLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiImageLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiImageLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note: We add use &quot;drawdb/geometry/light/directionalLightCustom&quot; to match</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// one of the classifications used for apiCustomDirectionalLightShape.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    stat = <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a36f6ac92077e5064d897187608c9e548\">MHWRender::MDrawRegistry::registerGeometryOverrideCreator</a>(<span class=\"stringliteral\">&quot;drawdb/geometry/light/directionalLightCustom&quot;</span>,</div>\n\
<div class=\"line\">                                                          <span class=\"stringliteral\">&quot;directionalLightRegistrantId&quot;</span>,</div>\n\
<div class=\"line\">                                                            apiDirectionalLightShape_GeometryOverride::Creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiDirectionalLightShape_GeometryOverride\\n&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note: apiCustomDirectionalLightShape drawdbIdentifier() returns both the lighting and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the geometry override classification: &quot;drawdb/geometry/light/directionalLightCustom&quot;</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// allowing for the custom geometry override to replace the default light drawing.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    stat = plugin.registerShape( <span class=\"stringliteral\">&quot;apiCustomDirectionalLightShape&quot;</span>, apiCustomDirectionalLightShape::id,</div>\n\
<div class=\"line\">        &amp;apiCustomDirectionalLightShape::creator,</div>\n\
<div class=\"line\">        &amp;apiCustomDirectionalLightShape::initialize,</div>\n\
<div class=\"line\">        NULL,</div>\n\
<div class=\"line\">        &amp;apiCustomDirectionalLightShape::drawdbIdentfier());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to register apiCustomDirectionalLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiPointLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiPointLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiDirectionalLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiDirectionalLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiSpotLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiSpotLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiAreaLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiAreaLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiImageLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiImageLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = <a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a24f600902d1e1a22ccd8985f9eee39a1\">MHWRender::MDrawRegistry::deregisterGeometryOverrideCreator</a>(<span class=\"stringliteral\">&quot;drawdb/geometry/light/directionalLightCustom&quot;</span>,</div>\n\
<div class=\"line\">                                                          <span class=\"stringliteral\">&quot;directionalLightRegistrantId&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiDirectionalLightShape_GeometryOverride\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    stat = plugin.deregisterNode( apiCustomDirectionalLightShape::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! stat ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to deregister apiCustomDirectionalLightShape\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";