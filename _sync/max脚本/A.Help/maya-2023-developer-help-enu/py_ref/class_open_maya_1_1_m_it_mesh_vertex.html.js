var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: OpenMaya.MItMeshVertex Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'class_open_maya_1_1_m_it_mesh_vertex.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: OpenMaya.MItMeshVertex Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenMaya.MItMeshVertex Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2023-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s new in the Maya 2023 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Polygon-API/The-five-basic-polygonal-API.html\">Polygon API &gt; The five basic polygonal API classes</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Appendices/Appendix-C-Frequently-asked.html\">Appendices &gt; Appendix C: Frequently asked questions</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_open_maya_1_1_m_it_mesh_vertex.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_1_1_m_it_mesh_vertex.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Inheritance diagram for OpenMaya.MItMeshVertex:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"py_ref/class_open_maya_1_1_m_it_mesh_vertex.png\" usemap=\"#OpenMaya.MItMeshVertex_map\" alt=\"\">\n\
  <map id=\"OpenMaya.MItMeshVertex_map\" name=\"OpenMaya.MItMeshVertex_map\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:adfef1aa97eceb5116e8d025e20bd6b70\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#adfef1aa97eceb5116e8d025e20bd6b70\">__init__</a> ()</td></tr>\n\
<tr class=\"separator:adfef1aa97eceb5116e8d025e20bd6b70\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afd65200b58684d5c34c2fe6de47a3187\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#afd65200b58684d5c34c2fe6de47a3187\">__iter__</a> ()</td></tr>\n\
<tr class=\"separator:afd65200b58684d5c34c2fe6de47a3187\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af3ce73b5bffb969554289c78398f9e29\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#af3ce73b5bffb969554289c78398f9e29\">__next__</a> ()</td></tr>\n\
<tr class=\"separator:af3ce73b5bffb969554289c78398f9e29\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab2f226b7689ec8a5248826d925c9f029\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ab2f226b7689ec8a5248826d925c9f029\">connectedToEdge</a> ()</td></tr>\n\
<tr class=\"separator:ab2f226b7689ec8a5248826d925c9f029\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a06929a5a4246fe063a33b4710f77aac1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a06929a5a4246fe063a33b4710f77aac1\">connectedToFace</a> ()</td></tr>\n\
<tr class=\"separator:a06929a5a4246fe063a33b4710f77aac1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a98bc6bb2c19885943217422a44e51721\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a98bc6bb2c19885943217422a44e51721\">count</a> ()</td></tr>\n\
<tr class=\"separator:a98bc6bb2c19885943217422a44e51721\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac15ae323bd86ef978d6f10ae4e1ba116\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ac15ae323bd86ef978d6f10ae4e1ba116\">currentItem</a> ()</td></tr>\n\
<tr class=\"separator:ac15ae323bd86ef978d6f10ae4e1ba116\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4d01fabec4710fb818401dc73d0a5a0b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a4d01fabec4710fb818401dc73d0a5a0b\">geomChanged</a> ()</td></tr>\n\
<tr class=\"separator:a4d01fabec4710fb818401dc73d0a5a0b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aee5efbdfd7c34bfbe77131bfc1ce688e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#aee5efbdfd7c34bfbe77131bfc1ce688e\">getColor</a> ()</td></tr>\n\
<tr class=\"separator:aee5efbdfd7c34bfbe77131bfc1ce688e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa92c49f64fee2187e9fad99c4b4295c0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#aa92c49f64fee2187e9fad99c4b4295c0\">getColorIndices</a> ()</td></tr>\n\
<tr class=\"separator:aa92c49f64fee2187e9fad99c4b4295c0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac1462c627272a2b2c27f3b7d6d2b5dfe\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ac1462c627272a2b2c27f3b7d6d2b5dfe\">getColors</a> ()</td></tr>\n\
<tr class=\"separator:ac1462c627272a2b2c27f3b7d6d2b5dfe\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a39b3aec4941f0867322c058b691589bb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a39b3aec4941f0867322c058b691589bb\">getConnectedEdges</a> ()</td></tr>\n\
<tr class=\"separator:a39b3aec4941f0867322c058b691589bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1045e3c6a212082e1be30a2fc52e1f53\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a1045e3c6a212082e1be30a2fc52e1f53\">getConnectedFaces</a> ()</td></tr>\n\
<tr class=\"separator:a1045e3c6a212082e1be30a2fc52e1f53\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a90935917bf0b262bcd5e9af96faea856\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a90935917bf0b262bcd5e9af96faea856\">getConnectedVertices</a> ()</td></tr>\n\
<tr class=\"separator:a90935917bf0b262bcd5e9af96faea856\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a285bf7953c82d88ea398d85a4961577f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a285bf7953c82d88ea398d85a4961577f\">getNormal</a> ()</td></tr>\n\
<tr class=\"separator:a285bf7953c82d88ea398d85a4961577f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acb1b11a49ab9ccf226baddbb935ce81b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#acb1b11a49ab9ccf226baddbb935ce81b\">getNormalIndices</a> ()</td></tr>\n\
<tr class=\"separator:acb1b11a49ab9ccf226baddbb935ce81b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af9e20956abc2ccbcf946845f9777ada1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#af9e20956abc2ccbcf946845f9777ada1\">getNormals</a> ()</td></tr>\n\
<tr class=\"separator:af9e20956abc2ccbcf946845f9777ada1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a325d629b4a1e64ffe56717c767ec3932\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a325d629b4a1e64ffe56717c767ec3932\">getOppositeVertex</a> ()</td></tr>\n\
<tr class=\"separator:a325d629b4a1e64ffe56717c767ec3932\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9b7a296ad43f608776894c0fc4039cf7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a9b7a296ad43f608776894c0fc4039cf7\">getUV</a> ()</td></tr>\n\
<tr class=\"separator:a9b7a296ad43f608776894c0fc4039cf7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6120e2a9e314d908c863e45234e51cd8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a6120e2a9e314d908c863e45234e51cd8\">getUVIndices</a> ()</td></tr>\n\
<tr class=\"separator:a6120e2a9e314d908c863e45234e51cd8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae0226bb34d5415bef064bd31b35283ad\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ae0226bb34d5415bef064bd31b35283ad\">getUVs</a> ()</td></tr>\n\
<tr class=\"separator:ae0226bb34d5415bef064bd31b35283ad\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a25842337a6c8c2479a7f2992cc6ae6d4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a25842337a6c8c2479a7f2992cc6ae6d4\">hasColor</a> ()</td></tr>\n\
<tr class=\"separator:a25842337a6c8c2479a7f2992cc6ae6d4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a070a19d7759706ecc0cdb4dede763645\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a070a19d7759706ecc0cdb4dede763645\">index</a> ()</td></tr>\n\
<tr class=\"separator:a070a19d7759706ecc0cdb4dede763645\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aba10e259228d217de7a9f98b6a0482e2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#aba10e259228d217de7a9f98b6a0482e2\">isDone</a> ()</td></tr>\n\
<tr class=\"separator:aba10e259228d217de7a9f98b6a0482e2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a06884d85fb1cc3d5ebf8cec4ae5861a9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a06884d85fb1cc3d5ebf8cec4ae5861a9\">iter</a> ()</td></tr>\n\
<tr class=\"separator:a06884d85fb1cc3d5ebf8cec4ae5861a9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a601fffd28bcb35713c5c0141ea10e913\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a601fffd28bcb35713c5c0141ea10e913\">iternext</a> ()</td></tr>\n\
<tr class=\"separator:a601fffd28bcb35713c5c0141ea10e913\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a558efb22bbdd44a87713c2bc3f1401b2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a558efb22bbdd44a87713c2bc3f1401b2\">next</a> ()</td></tr>\n\
<tr class=\"separator:a558efb22bbdd44a87713c2bc3f1401b2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a72732faec40d16fd0d6de54558843fe3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a72732faec40d16fd0d6de54558843fe3\">numConnectedEdges</a> ()</td></tr>\n\
<tr class=\"separator:a72732faec40d16fd0d6de54558843fe3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a567ee4896bc59d43f06ffaaec5ef2ff0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a567ee4896bc59d43f06ffaaec5ef2ff0\">numConnectedFaces</a> ()</td></tr>\n\
<tr class=\"separator:a567ee4896bc59d43f06ffaaec5ef2ff0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c4c113fff0ef693a777da6e7785d38f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a7c4c113fff0ef693a777da6e7785d38f\">numUVs</a> ()</td></tr>\n\
<tr class=\"separator:a7c4c113fff0ef693a777da6e7785d38f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6137fabb121a793ab4bc9e6040651e19\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a6137fabb121a793ab4bc9e6040651e19\">onBoundary</a> ()</td></tr>\n\
<tr class=\"separator:a6137fabb121a793ab4bc9e6040651e19\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afaf34677254346c01cd396b3282f8a5b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#afaf34677254346c01cd396b3282f8a5b\">position</a> ()</td></tr>\n\
<tr class=\"separator:afaf34677254346c01cd396b3282f8a5b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3e63d711a4fcf061906f8177ee382d09\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a3e63d711a4fcf061906f8177ee382d09\">reset</a> ()</td></tr>\n\
<tr class=\"separator:a3e63d711a4fcf061906f8177ee382d09\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0aa56b1d6a73632575d7bddb4141b4c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a0aa56b1d6a73632575d7bddb4141b4c7\">setIndex</a> ()</td></tr>\n\
<tr class=\"separator:a0aa56b1d6a73632575d7bddb4141b4c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a63808cb451baccd9145938067eba1eae\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a63808cb451baccd9145938067eba1eae\">setPosition</a> ()</td></tr>\n\
<tr class=\"separator:a63808cb451baccd9145938067eba1eae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a757cc0b4ff182d92ce72e76157a516d3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#a757cc0b4ff182d92ce72e76157a516d3\">setUV</a> ()</td></tr>\n\
<tr class=\"separator:a757cc0b4ff182d92ce72e76157a516d3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab350da369659082b7cf1cdd8e528107d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ab350da369659082b7cf1cdd8e528107d\">setUVs</a> ()</td></tr>\n\
<tr class=\"separator:ab350da369659082b7cf1cdd8e528107d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac3db512ab84b9ed38fb1c40d5a88fc5a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ac3db512ab84b9ed38fb1c40d5a88fc5a\">translateBy</a> ()</td></tr>\n\
<tr class=\"separator:ac3db512ab84b9ed38fb1c40d5a88fc5a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ade875341b68a517e6314071cb1e98861\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#ade875341b68a517e6314071cb1e98861\">updateSurface</a> ()</td></tr>\n\
<tr class=\"separator:ade875341b68a517e6314071cb1e98861\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:aeaf26e94dd7a24f97dcbb2a0d6e9c544\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_mesh_vertex.html#aeaf26e94dd7a24f97dcbb2a0d6e9c544\">__new__</a> ()</td></tr>\n\
<tr class=\"separator:aeaf26e94dd7a24f97dcbb2a0d6e9c544\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><pre class=\"fragment\">This class is the iterator for polygonal surfaces (meshes).</pre> </div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"adfef1aa97eceb5116e8d025e20bd6b70\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.__init__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Initialize self.  See help(type(self)) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"afd65200b58684d5c34c2fe6de47a3187\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.__iter__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Implement iter(self).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aeaf26e94dd7a24f97dcbb2a0d6e9c544\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.__new__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Create and return a new object.  See help(type) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af3ce73b5bffb969554289c78398f9e29\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.__next__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Implement next(self).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab2f226b7689ec8a5248826d925c9f029\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.connectedToEdge </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">connectedToEdge(index) -&gt; bool\n\
\n\
This method determines whether the given edge contains the current vertex\n\
\n\
* index (int) - Index of edge to check.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a06929a5a4246fe063a33b4710f77aac1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.connectedToFace </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">connectedToFace(index) -&gt; bool\n\
\n\
This method determines whether the given face contains the current vertex\n\
\n\
* index (int) - Index of face to check.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a98bc6bb2c19885943217422a44e51721\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.count </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">count() -&gt; int\n\
\n\
Return the number of vertices in the iteration</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac15ae323bd86ef978d6f10ae4e1ba116\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.currentItem </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentItem() -&gt; MObject\n\
\n\
Get the current vertex in the iteration as a component.\n\
\n\
Components are used to specify one or more vertices and are usefull in operating on groups of non-contiguous vertices for a surface.\n\
Components do not contain any information about the surface that they refer to so an MDagPath must be specified when dealing with components.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4d01fabec4710fb818401dc73d0a5a0b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.geomChanged </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">geomChanged() -&gt; self\n\
\n\
Reset the geom pointer in the MItMeshVertex. If you\'re using MFnMesh to\n\
update Normals or Color per vertex while iterating, you must call geomChanged\n\
on the iteratior immediately after the MFnMesh call to make sure that your\n\
geometry is up to date. A crash may result if this method is not called.\n\
A similar approach must be taken for updating upstream vertex tweaks\n\
with an MPlug. After the update, call this method.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aee5efbdfd7c34bfbe77131bfc1ce688e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getColor </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getColor(colorSetName=None) -&gt; MColor\n\
getColor(faceIndex, colorSetName=None) -&gt; MColor\n\
\n\
This method gets the average color of the vertex\n\
\n\
* colorSetName (string) - Name of the color set.\n\
\n\
This method gets the color of the current vertex in the specified face\n\
\n\
* index (int) - The face to get the color for this vertex for* colorSetName (string) - Name of the color set.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa92c49f64fee2187e9fad99c4b4295c0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getColorIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getColorIndices(colorSetName=None) -&gt; MIntArray\n\
\n\
This method returns the colorIndices into the color array see MFnMesh::getColors()\n\
of the current vertex.\n\
\n\
* colorSetName (string) - Name of the color set.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac1462c627272a2b2c27f3b7d6d2b5dfe\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getColors </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getColors(colorSetName=None) -&gt; MColorArray\n\
\n\
This method gets the colors of the current vertex for each face it\n\
belongs to. If no colors are assigned to the vertex at all, the\n\
return values will be (-1 -1 -1 1). If some but not all of the\n\
vertex/face colors have been explicitly set, the ones that have not\n\
been set will be (0, 0, 0, 1).\n\
\n\
* colorSetName (string) - Name of the color set.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a39b3aec4941f0867322c058b691589bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getConnectedEdges </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getConnectedEdges() -&gt; MIntArray\n\
\n\
This method gets the indices of the edges contained in the current vertex.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1045e3c6a212082e1be30a2fc52e1f53\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getConnectedFaces </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getConnectedFaces() -&gt; MIntArray\n\
\n\
This method gets the indices of the faces connected to the current vertex.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a90935917bf0b262bcd5e9af96faea856\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getConnectedVertices </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getConnectedVertices() -&gt; MIntArray\n\
\n\
This method gets the indices of the vertices surrounding the current vertex.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a285bf7953c82d88ea398d85a4961577f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getNormal </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNormal(space=kObject) -&gt; MVector\n\
getNormal(faceIndex, space=kObject) -&gt; MVector\n\
\n\
Return the normal or averaged normal if unshared of the current vertex.\n\
\n\
* space (int) - The transformation space\n\
\n\
Return the normal of the current vertex in the specified face.\n\
\n\
* faceIndex (int) - face index to get normal for\n\
* space (int) - The transformation space</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acb1b11a49ab9ccf226baddbb935ce81b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getNormalIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNormalIndices() -&gt; MIntArray\n\
\n\
This method returns the normal indices of the face/vertex associated\n\
with the current vertex.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af9e20956abc2ccbcf946845f9777ada1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getNormals </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNormals(space=kObject) -&gt; MVectorArray\n\
\n\
Return the normals of the current vertex for all faces\n\
\n\
* space (int) - The transformation space</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a325d629b4a1e64ffe56717c767ec3932\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getOppositeVertex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getOppositeVertex(edgeId) -&gt; int\n\
\n\
This method gets the other vertex of the given edge\n\
\n\
* edgeId (int) - The edge to get the other vertex for</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9b7a296ad43f608776894c0fc4039cf7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getUV </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getUV(uvSet=None) -&gt; [float, float]getUV(faceId, uvSet=None) -&gt; [float, float]\n\
\n\
Get the shared UV value at this vertex.\n\
\n\
* uvSet (string) - Name of the uv set to work with.\n\
\n\
Get the UV value for the give facen at the current vertex.\n\
\n\
* faceId (int) - Index of the required face\n\
* uvSet (string) - Name of the uv set to work with</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6120e2a9e314d908c863e45234e51cd8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getUVIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getUVIndices(uvSet=None) -&gt; MIntArray\n\
\n\
This method returns the uv indices into the normal array see MFnMesh::getUVs()\n\
of the current vertex.\n\
\n\
* uvSet (string) - Name of the uv set.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae0226bb34d5415bef064bd31b35283ad\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.getUVs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getUVs(uvSet=None) -&gt; [MFloatArray, MFloatArray, MIntArray]\n\
\n\
Get the UV values for all mapped faces at the current vertex.\n\
If at least one face was mapped the method will succeed.\n\
\n\
* uvSet (string) - Name of the uv set to work with</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a25842337a6c8c2479a7f2992cc6ae6d4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.hasColor </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">hasColor() -&gt; bool\n\
hasColor(index) -&gt; bool\n\
\n\
This method determines whether the current Vertex has a color set\n\
for one or more faces.\n\
\n\
* index (int) - Index of face to check</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a070a19d7759706ecc0cdb4dede763645\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.index </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">index() -&gt; int\n\
\n\
Returns the index of the current vertex in the vertex list for this\n\
polygonal object.\n\
Polygonal objects contain a list of vertices. Faces and edges are\n\
specified as indicies from this list, in this way vertices can\n\
be shared amoung faces and edges.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aba10e259228d217de7a9f98b6a0482e2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.isDone </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">isDone() -&gt; bool\n\
\n\
Indicates if all of the vertices have been traversed yet.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a06884d85fb1cc3d5ebf8cec4ae5861a9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.iter </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">iter() -&gt; self\n\
\n\
Initializes the iterator object for pythonic iteration.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a601fffd28bcb35713c5c0141ea10e913\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.iternext </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">iternext() -&gt; self\n\
\n\
Used in pythonic iteration to move the iterator</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a558efb22bbdd44a87713c2bc3f1401b2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.next </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">next() -&gt; self\n\
\n\
Advance to the next edge in the iteration.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a72732faec40d16fd0d6de54558843fe3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.numConnectedEdges </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">numConnectedEdges() -&gt; int\n\
\n\
This Method checks for the number of connected Edges on this vertex</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a567ee4896bc59d43f06ffaaec5ef2ff0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.numConnectedFaces </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">numConnectedFaces() -&gt; int\n\
\n\
This Method checks for the number of Connected Faces</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7c4c113fff0ef693a777da6e7785d38f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.numUVs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">numUVs(uvSet=None) -&gt; int\n\
\n\
This method returns the number of unique UVs mapped on this vertex\n\
\n\
* uvSet (string) - Name of the uv set to work with</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6137fabb121a793ab4bc9e6040651e19\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.onBoundary </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">onBoundary() -&gt; bool\n\
\n\
This method determines whether the current vertex is on a Boundary</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afaf34677254346c01cd396b3282f8a5b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.position </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">position(space=kObject) -&gt; MPoint\n\
\n\
Return the position of the current vertex in the specified space.\n\
Object space ignores all transformations for the polygon, world space\n\
includes all such transformations.\n\
\n\
* space (int) - The  transformation space</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3e63d711a4fcf061906f8177ee382d09\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.reset </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">reset() -&gt; self\n\
reset(polyObject) -&gt; self\n\
reset(polyObject, component=None) -&gt; self\n\
\n\
Reset the iterator to the first polygon\n\
\n\
Reset the iterator to the first polygon in the supplied polygon\n\
\n\
* polyObject (MObject) - The polygon for the iteration\n\
\n\
Reset the iterator with the given surface and component.\n\
If component is None then the iteration will be for all vertices in the given polygon.\n\
\n\
* polyObject (MDagPath) - The surface (mesh) to iterate over\n\
* component (MObject) - The vertices of the polyObject to iterate over</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0aa56b1d6a73632575d7bddb4141b4c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.setIndex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setIndex(index) -&gt; int\n\
\n\
This method sets the index of the current vertex to be accessed.\n\
The current vertex will no longer be in sync with any previous iteration.\n\
\n\
* index (int) - The index of desired vertex to access.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a63808cb451baccd9145938067eba1eae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.setPosition </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setPosition(point, space=kObject) -&gt; self\n\
\n\
Set the position of the current vertex in the given space.\n\
\n\
* point (MPoint) - The new position for the current vertex\n\
* space (int) - The Transformation space</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a757cc0b4ff182d92ce72e76157a516d3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.setUV </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setUV(uvPoint, uvSet=None) -&gt; selfsetUV(faceId, uvPoint, uvSet=None) -&gt; self\n\
\n\
Set the shared UV value at this vertex\n\
\n\
* uvPoint ([float, float]) - The UV values to set\n\
* uvSet (string) - Name of the UV set to work with\n\
\n\
Set the UV value for the given face at the current vertex\n\
\n\
* faceId (int) - Index of required face\n\
* uvPoint ([float, float]) - The UV values to set\n\
* uvSet (string) - Name of the UV set to work with</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab350da369659082b7cf1cdd8e528107d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.setUVs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setUVs(uArray, vArray, faceIds, uvSet=None) -&gt; self\n\
\n\
Set the UV value for the specified faces at the current vertex.\n\
If the face is not already mapped, the value will not be set.\n\
If at least ne face was previously mapped, the method should succeed.\n\
If no faces were mapped, the method will fail.\n\
\n\
* uArray (MFloatArray) - All the U values - in local face order\n\
* vArray (MFloatArray) - The corresponding V values\n\
* faceIds (MIntArray) - The corresponding face Ids\n\
* uvSet (string) - UV set to work with</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac3db512ab84b9ed38fb1c40d5a88fc5a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.translateBy </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">translateBy(vector, space=kObject) -&gt; self\n\
\n\
Translate the current vertex by the amount specified\n\
by the given vector.\n\
\n\
* vector (MVector) - The amount of translation\n\
* space (int) - The Transformation space</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ade875341b68a517e6314071cb1e98861\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItMeshVertex.updateSurface </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">updateSurface() -&gt; self\n\
\n\
Signal that this polygonal surface has changed and needs to redraw itself.</pre> \n\
</div>\n\
</div>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";