var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: blindDataShader/blindDataMesh.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'blind_data_shader_2blind_data_mesh_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: blindDataShader/blindDataMesh.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">blindDataShader/blindDataMesh.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2018 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIntArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshVertex.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;blindDataMesh.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define McheckErr(stat,msg)         \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    if ( MS::kSuccess != stat ) {   \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        cerr &lt;&lt; msg;                \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        return MS::kFailure;        \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    }</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> blindDataMesh::seed;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> blindDataMesh::outputMesh;</div>\n\
<div class=\"line\"><a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> blindDataMesh::id( 0x60EA );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* blindDataMesh::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> blindDataMesh;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> blindDataMesh::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> typedAttr;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    blindDataMesh::outputMesh = typedAttr.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;outputMesh&quot;</span>, <span class=\"stringliteral\">&quot;out&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>, <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;returnStatus ); </div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating blindDataMesh output attribute\\n&quot;</span>);</div>\n\
<div class=\"line\">    typedAttr.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = addAttribute(blindDataMesh::outputMesh);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR adding outputMesh attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> numAttr;</div>\n\
<div class=\"line\">    blindDataMesh::seed = numAttr.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;randomSeed&quot;</span>, <span class=\"stringliteral\">&quot;seed&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a762e1602488228e1b11b83501bb3832e\">MFnNumericData::kLong</a>, 0, &amp;returnStatus );</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating blindDataMesh input attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = addAttribute(blindDataMesh::seed);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR adding input attribute\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    returnStatus = attributeAffects(blindDataMesh::seed,</div>\n\
<div class=\"line\">                                    blindDataMesh::outputMesh);</div>\n\
<div class=\"line\">    McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR in attributeAffects\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> blindDataMesh::createMesh(<span class=\"keywordtype\">long</span> seed, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; outData, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; stat)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> vertices;</div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceDegrees;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceVertices;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i, j;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    srand(seed);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> planeSize = 20.0f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> planeOffset = planeSize / 2.0f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> planeDim = 0.5f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numDivisions = (int) (planeSize / planeDim);</div>\n\
<div class=\"line\">    <span class=\"comment\">// int numVertices = (numDivisions + 1) * (numDivisions + 1);</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// int numEdge = (2 * numDivisions) * (numDivisions + 1);</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numFaces = numDivisions * numDivisions;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the vertex positions for the plane. The</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// vertices are placed equi-distant on the X-Z plane to form a square</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// grid that has a side length of &quot;planeSize&quot;.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// The Y-coordinate of each vertex is the average of the neighbors already</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// calculated, if there are any, with a small random offset added. Because</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of the way the vertices are calculated, the whole plane will look like</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// it is streaked in a diagonal direction with mountains and depressions.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; (numDivisions + 1); ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (j = 0; j &lt; (numDivisions + 1); ++j)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> height;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (i == 0 &amp;&amp; j == 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                height = ((rand() % 101) / 100.0f - 0.5f);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (i == 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> previousHeight = vertices[j - 1][1];</div>\n\
<div class=\"line\">                height = previousHeight + ((rand() % 101) / 100.0f - 0.5f);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (j == 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> previousHeight = vertices[(i-1)*(numDivisions + 1)][1];</div>\n\
<div class=\"line\">                height = previousHeight + ((rand() % 101) / 100.0f - 0.5f);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> previousHeight</div>\n\
<div class=\"line\">                    = vertices[(i-1)*(numDivisions + 1) + j][1];</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> previousHeight2</div>\n\
<div class=\"line\">                    = vertices[i*(numDivisions + 1) + j - 1][1];</div>\n\
<div class=\"line\">                height = (previousHeight + previousHeight2)</div>\n\
<div class=\"line\">                    / 2.0f + ((rand() % 101) / 100.0f - 0.5f);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a> vtx( i * planeDim - planeOffset, height,</div>\n\
<div class=\"line\">                j * planeDim - planeOffset );</div>\n\
<div class=\"line\">            vertices.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a9a607c73c20aca58b154cd5d40befbb7\">append</a>(vtx);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the plane&#39;s faces</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numFaces; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        faceDegrees.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(4);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array to assign the vertices for each face</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numDivisions; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (j = 0; j &lt; numDivisions; ++j)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            faceVertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(i*(numDivisions+1) + j);</div>\n\
<div class=\"line\">            faceVertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(i*(numDivisions+1) + j + 1);</div>\n\
<div class=\"line\">            faceVertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>((i+1)*(numDivisions+1) + j + 1);</div>\n\
<div class=\"line\">            faceVertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>((i+1)*(numDivisions+1) + j);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFn;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newMesh = meshFn.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af9b9e5d33d289134d567c62bad4ca3d5\">create</a>(vertices.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), numFaces, vertices,</div>\n\
<div class=\"line\">        faceDegrees, faceVertices, outData, &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> newMesh;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> blindDataMesh::compute(<span class=\"keyword\">const</span> <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data)</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == outputMesh) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the given random number generator seed. We need to use a</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// seed, because a pseudo-random number generator will always give</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the same random numbers for a constant seed. This means that the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// mesh will not change when it is recalculated.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> seedHandle = data.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(seed, &amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus,<span class=\"stringliteral\">&quot;ERROR getting random number generator seed\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">long</span> seed = seedHandle.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the handle to the output mesh. The creation of the output mesh</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// is done in two steps. First, the mesh is created. That involves</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// calculating the position of the vertices and their connectivity.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Second, blind data is associated to the vertices on the mesh.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// For this example, three double blind data values is associated</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to each vertex: &quot;red&quot;, &quot;green&quot; and &quot;blue&quot;.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html\">MFnMeshData</a> dataCreator;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outputHandle = data.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(outputMesh, &amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR getting polygon data handle\\n&quot;</span>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> newOutputData = dataCreator.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh_data.html#af1adb4abaf5243c6c0749bcca7b5c418\">create</a>(&amp;returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating outputData&quot;</span>);</div>\n\
<div class=\"line\">        createMesh(seed, newOutputData, returnStatus);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR creating new plane&quot;</span>);</div>\n\
<div class=\"line\">        returnStatus = setMeshBlindData(newOutputData);</div>\n\
<div class=\"line\">        McheckErr(returnStatus, <span class=\"stringliteral\">&quot;ERROR setting the blind Data on the plane&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        outputHandle.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(newOutputData);</div>\n\
<div class=\"line\">        data.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> blindDataMesh::setMeshBlindData(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; mesh)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> meshFn(mesh);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// First, make sure that the blind data attribute exists,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Otherwise, create it.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> blindDataID = 60;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!meshFn.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#af736cc3ed8a3c7c459098b5c9470c1ff\">isBlindDataTypeUsed</a>(blindDataID, &amp;stat))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> longNames, shortNames, formatNames;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        longNames.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;red_color&quot;</span>);</div>\n\
<div class=\"line\">        shortNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;red&quot;</span>);</div>\n\
<div class=\"line\">        formatNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;double&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        longNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;green&quot;</span>);</div>\n\
<div class=\"line\">        shortNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;grn&quot;</span>);</div>\n\
<div class=\"line\">        formatNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;double&quot;</span>);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        longNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;blue_color&quot;</span>);</div>\n\
<div class=\"line\">        shortNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;blue&quot;</span>);</div>\n\
<div class=\"line\">        formatNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>(<span class=\"stringliteral\">&quot;double&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        stat = meshFn.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#aa5352e346243d140b7b30ac4242db937\">createBlindDataType</a>(</div>\n\
<div class=\"line\">            blindDataID, longNames, shortNames, formatNames );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Iterate through the mesh vertices and assign to each some</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// color value that is related to the height of the vertex</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so that it goes from dark blue at the lowest point to</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// white at the highest..</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the lowest and the highest points.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_vertex.html\">MItMeshVertex</a> itVertex(mesh);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> lowest = 1e10, highest = -1e10;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ; !itVertex.isDone(); itVertex.next() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertexPosition = itVertex.position();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> height = vertexPosition[1];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (height &lt; lowest) lowest = height;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (height &gt; highest) highest = height;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> range = highest - lowest;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( itVertex.reset(mesh); !itVertex.isDone(); itVertex.next() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertexPosition = itVertex.position();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> height = vertexPosition[1] - lowest;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> red, green, blue;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Calculate the interpolated color for each vertex</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// using its relative height</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        red = 2.0 * ( height / range ) - 1.0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (height &gt; range/2.0) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (red &lt; 0.7) green = 0.7;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> green = red;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> green = 0.7 * (1.0 - (((range/2.0) - height) / (range/2.0))</div>\n\
<div class=\"line\">            * (((range/2.0) - height) / (range/2.0)));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (height &gt; range/2.0) blue = red;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> blue = 1.0 - (green*green);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (red &lt; 0.0) red = 0.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the color values in the blind data</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        stat = meshFn.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#ae53fe2c510e9221ac92d64b8562c39af\">setDoubleBlindData</a>(itVertex.index(),</div>\n\
<div class=\"line\">            <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>, blindDataID, <span class=\"stringliteral\">&quot;red&quot;</span>, red);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">        stat = meshFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#ae53fe2c510e9221ac92d64b8562c39af\">setDoubleBlindData</a>(itVertex.index(),</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>, blindDataID, <span class=\"stringliteral\">&quot;green&quot;</span>, green);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">        stat = meshFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#ae53fe2c510e9221ac92d64b8562c39af\">setDoubleBlindData</a>(itVertex.index(),</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>, blindDataID, <span class=\"stringliteral\">&quot;blue&quot;</span>, blue);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";