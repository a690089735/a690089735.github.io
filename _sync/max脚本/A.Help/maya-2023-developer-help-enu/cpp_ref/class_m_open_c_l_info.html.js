var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MOpenCLInfo Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_open_c_l_info.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MOpenCLInfo Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MOpenCLInfo Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya.html\">OpenMaya - API module for common classes</a></div></div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_open_c_l_info.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_open_c_l_info-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Global OpenCL information used by Maya.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MOpenCLInfo.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a2ab4ea6f879cbd19b67ca57cb3474d7b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static cl_context&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a2ab4ea6f879cbd19b67ca57cb3474d7b\">getOpenCLContext</a> ()</td></tr>\n\
<tr class=\"memdesc:a2ab4ea6f879cbd19b67ca57cb3474d7b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">The method returns the Maya OpenCL context.  <a href=\"class_m_open_c_l_info.html#a2ab4ea6f879cbd19b67ca57cb3474d7b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2ab4ea6f879cbd19b67ca57cb3474d7b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a93e129c1488b06f3347eaaad703ffe34\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static cl_command_queue&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a93e129c1488b06f3347eaaad703ffe34\">getMayaDefaultOpenCLCommandQueue</a> ()</td></tr>\n\
<tr class=\"memdesc:a93e129c1488b06f3347eaaad703ffe34\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">The method returns the Maya default OpenCL command queue.  <a href=\"class_m_open_c_l_info.html#a93e129c1488b06f3347eaaad703ffe34\">More...</a><br></td></tr>\n\
<tr class=\"separator:a93e129c1488b06f3347eaaad703ffe34\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0ae4caa500b07e56a54756792e0c3594\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static cl_command_queue&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a0ae4caa500b07e56a54756792e0c3594\">createOpenCLCommandQueue</a> ()</td></tr>\n\
<tr class=\"memdesc:a0ae4caa500b07e56a54756792e0c3594\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method creates a new OpenCL command queue.  <a href=\"class_m_open_c_l_info.html#a0ae4caa500b07e56a54756792e0c3594\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0ae4caa500b07e56a54756792e0c3594\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7861622490349f1240dfbe76c21e3e0a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static cl_device_id&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a7861622490349f1240dfbe76c21e3e0a\">getOpenCLDeviceId</a> ()</td></tr>\n\
<tr class=\"memdesc:a7861622490349f1240dfbe76c21e3e0a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">The method returns the Maya OpenCL device ID.  <a href=\"class_m_open_c_l_info.html#a7861622490349f1240dfbe76c21e3e0a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7861622490349f1240dfbe76c21e3e0a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9b9a0680620c0ecac7dd1b07159ee72f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a9b9a0680620c0ecac7dd1b07159ee72f\">getOpenCLKernel</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;sourceFilePath, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;kernelName)</td></tr>\n\
<tr class=\"memdesc:a9b9a0680620c0ecac7dd1b07159ee72f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method compiles a dot cl (.cl) file into a cl_program, and then creates a cl_kernel that uses that program.  <a href=\"class_m_open_c_l_info.html#a9b9a0680620c0ecac7dd1b07159ee72f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9b9a0680620c0ecac7dd1b07159ee72f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5ec5031fba36b59d5e2c548a0ef18463\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a5ec5031fba36b59d5e2c548a0ef18463\">getOpenCLKernelFromString</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;programSource, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;programName, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;kernelName)</td></tr>\n\
<tr class=\"memdesc:a5ec5031fba36b59d5e2c548a0ef18463\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method compiles a string into a cl_program, and then creates a cl_kernel from one of the kernels in that program.  <a href=\"class_m_open_c_l_info.html#a5ec5031fba36b59d5e2c548a0ef18463\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5ec5031fba36b59d5e2c548a0ef18463\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a08df219d94dcf2dc03724eff7d5c6483\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a08df219d94dcf2dc03724eff7d5c6483\">releaseOpenCLKernel</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a> &amp;kernel)</td></tr>\n\
<tr class=\"memdesc:a08df219d94dcf2dc03724eff7d5c6483\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method releases a kernel that was obtained from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a9b9a0680620c0ecac7dd1b07159ee72f\" title=\"This method compiles a dot cl (.cl) file into a cl_program, and then creates a cl_kernel that uses th...\">getOpenCLKernel()</a>.  <a href=\"class_m_open_c_l_info.html#a08df219d94dcf2dc03724eff7d5c6483\">More...</a><br></td></tr>\n\
<tr class=\"separator:a08df219d94dcf2dc03724eff7d5c6483\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a753d7277906776cd710b3723d74f8b64\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a753d7277906776cd710b3723d74f8b64\">checkCLErrorStatus</a> (cl_int err)</td></tr>\n\
<tr class=\"memdesc:a753d7277906776cd710b3723d74f8b64\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method prints an error message to stderr that corresponds with the error received.  <a href=\"class_m_open_c_l_info.html#a753d7277906776cd710b3723d74f8b64\">More...</a><br></td></tr>\n\
<tr class=\"separator:a753d7277906776cd710b3723d74f8b64\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8682346bb79641242ffc37e0b163f136\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a8682346bb79641242ffc37e0b163f136\">appendMessage</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *messages, const char *format,...)</td></tr>\n\
<tr class=\"memdesc:a8682346bb79641242ffc37e0b163f136\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method appends a message to messages.  <a href=\"class_m_open_c_l_info.html#a8682346bb79641242ffc37e0b163f136\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8682346bb79641242ffc37e0b163f136\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a65a5169ce4e9b2fc45ca373e1233b827\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a65a5169ce4e9b2fc45ca373e1233b827\">appendMessage</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *messages, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_resource_id.html\">MStringResourceId</a> *formatResourceId,...)</td></tr>\n\
<tr class=\"memdesc:a65a5169ce4e9b2fc45ca373e1233b827\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method appends a message to messages.  <a href=\"class_m_open_c_l_info.html#a65a5169ce4e9b2fc45ca373e1233b827\">More...</a><br></td></tr>\n\
<tr class=\"separator:a65a5169ce4e9b2fc45ca373e1233b827\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae331414927e113e01a2bd15c204f4cc8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#ae331414927e113e01a2bd15c204f4cc8\">supportsDoublePrecision</a> ()</td></tr>\n\
<tr class=\"memdesc:ae331414927e113e01a2bd15c204f4cc8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns true if the OpenCL device supports double precision floating point operations.  <a href=\"class_m_open_c_l_info.html#ae331414927e113e01a2bd15c204f4cc8\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae331414927e113e01a2bd15c204f4cc8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Global OpenCL information used by Maya. </p>\n\
<p>This class provides access to all the global information Maya has about OpenCL. This information includes the chosen device ID, context, and command queue. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html\" title=\"Global OpenCL information used by Maya. \">MOpenCLInfo</a> also includes helper methods to handle basic kernel compilation and error status checking.</p>\n\
<p>You can only access <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html\" title=\"Global OpenCL information used by Maya. \">MOpenCLInfo</a> after VP2 is initialized. If you access it <em>before</em> VP2 initialization, the behavior of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html\" title=\"Global OpenCL information used by Maya. \">MOpenCLInfo</a> is undefined. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#_a62\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#_a37\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a2ab4ea6f879cbd19b67ca57cb3474d7b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OPENMAYA_MAJOR_NAMESPACE_OPEN cl_context getOpenCLContext </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>The method returns the Maya OpenCL context. </p>\n\
<p>This is the same context used by the deformerEvaluator plug-in. This may be the same context used by external libraries integrated with Maya, such as Bullet or OpenSubDiv.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The OpenCL context used by Maya. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a73\">basicMorphNode/basicMorphNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a93e129c1488b06f3347eaaad703ffe34\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">cl_command_queue getMayaDefaultOpenCLCommandQueue </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>The method returns the Maya default OpenCL command queue. </p>\n\
<p>This is the same command queue that the deformerEvaluator plug-in uses. This may be the same command queue used by external libraries integrated with Maya, such as Bullet or OpenSubDiv.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The default OpenCL command queue used by Maya. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a54\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a41\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0ae4caa500b07e56a54756792e0c3594\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">cl_command_queue createOpenCLCommandQueue </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method creates a new OpenCL command queue. </p>\n\
<p>The returned command queue is created using exactly the same parameters and logic as the Maya default OpenCL command queue (returned by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a93e129c1488b06f3347eaaad703ffe34\" title=\"The method returns the Maya default OpenCL command queue. \">getMayaDefaultOpenCLCommandQueue()</a>).</p>\n\
<p>The user must call clReleaseCommandQueue on the returned command queue when the queue is no longer in use.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The newly created OpenCL command queue. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7861622490349f1240dfbe76c21e3e0a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">cl_device_id getOpenCLDeviceId </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>The method returns the Maya OpenCL device ID. </p>\n\
<p>This is the same device ID used by the deformerEvaluator plug-in. This may be the same device ID used by external libraries integrated with Maya such as Bullet or OpenSubDiv.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The OpenCL device ID used by Maya. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a35\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9b9a0680620c0ecac7dd1b07159ee72f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a> getOpenCLKernel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourceFilePath</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>kernelName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method compiles a dot cl (.cl) file into a cl_program, and then creates a cl_kernel that uses that program. </p>\n\
<p>The sourceFilePath that passes into this method should be the absolute path of the cl file on disk and the kernel name must be an exact match of a kernel in the given file. The cl_program only generates once, even if multiple kernels are generated from the same source file.</p>\n\
<p>If this method returns a non-null kernel, the kernel should be released with <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a08df219d94dcf2dc03724eff7d5c6483\" title=\"This method releases a kernel that was obtained from getOpenCLKernel(). \">releaseOpenCLKernel()</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourceFilePath</td><td>The absolute path of the cl file on disk. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">kernelName</td><td>The name of a kernel inside the cl file.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\" title=\"Auto pointer for cl_kernel objects. \">MAutoCLKernel</a> handle corresponding to the named kernel from the file. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a67\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a33\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5ec5031fba36b59d5e2c548a0ef18463\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a> getOpenCLKernelFromString </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>programSource</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>programName</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>kernelName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method compiles a string into a cl_program, and then creates a cl_kernel from one of the kernels in that program. </p>\n\
<p>programSource should hold the cl source of the program and the kernelName must be an exact match for a kernel in the program string. programName should uniquely identify a programString. The cl_program is only generated once, even if multiple kernels are generated from the same program source.</p>\n\
<p>If this method returns a non-null kernel, the kernel should be released with <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a08df219d94dcf2dc03724eff7d5c6483\" title=\"This method releases a kernel that was obtained from getOpenCLKernel(). \">releaseOpenCLKernel()</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">programSource</td><td>The openCL source to be compiled </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">programName</td><td>A name which uniquely identifies programSouce </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">kernelName</td><td>The name of a kernel in the compiled program</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\" title=\"Auto pointer for cl_kernel objects. \">MAutoCLKernel</a> handle corresponding to the named kernel from the program. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a08df219d94dcf2dc03724eff7d5c6483\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool releaseOpenCLKernel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_auto_c_l_kernel.html\">MAutoCLKernel</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>kernel</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method releases a kernel that was obtained from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_open_c_l_info.html#a9b9a0680620c0ecac7dd1b07159ee72f\" title=\"This method compiles a dot cl (.cl) file into a cl_program, and then creates a cl_kernel that uses th...\">getOpenCLKernel()</a>. </p>\n\
<p>If the kernel is the last one associated with the cl_program program, the program will be released as well.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">kernel</td><td>The kernel to release.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the kernel was successfully released, false otherwise. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a71\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a45\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a753d7277906776cd710b3723d74f8b64\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void checkCLErrorStatus </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">cl_int&#160;</td>\n\
          <td class=\"paramname\"><em>err</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method prints an error message to stderr that corresponds with the error received. </p>\n\
<p>If the error is CL_SUCCESS, no message is printed. If the error is any other value, a message is printed to stderr that includes the error type.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">err</td><td>The error to be checked. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a60\">basicMorphNode/basicMorphNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a36\">identityNode/identityNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8682346bb79641242ffc37e0b163f136\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void appendMessage </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>messages</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>format</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">&#160;</td>\n\
          <td class=\"paramname\"><em>...</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method appends a message to messages. </p>\n\
<p>The message is created using <em>format</em> and the additional arguments . If messages is NULL, this method does nothing.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">messages</td><td>The list of messages to be added to. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">format</td><td>C string that contains a format string and follows the same specifications as <em>format</em> in printf. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">...</td><td>Additional arguments to be used to replace a <em>format specifier</em> in the <em>format</em> string. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#a64\">offsetNode/offsetNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a65a5169ce4e9b2fc45ca373e1233b827\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void appendMessage </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>messages</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_resource_id.html\">MStringResourceId</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>formatResourceId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">&#160;</td>\n\
          <td class=\"paramname\"><em>...</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method appends a message to messages. </p>\n\
<p>The message is created using <em>formatResourceId</em> and the additional arguments . If messages is NULL, this method does nothing.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">messages</td><td>The list of messages to be added to. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">formatResourceId</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_resource_id.html\" title=\"Unique identifier for an MString Resource. \">MStringResourceId</a> that contains a format string and follows the same specifications as <em>format</em> in printf. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">...</td><td>Additional arguments to be used to replace a <em>format specifier</em> in the <em>format</em> string. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae331414927e113e01a2bd15c204f4cc8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool supportsDoublePrecision </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns true if the OpenCL device supports double precision floating point operations. </p>\n\
<p>For OpenCL 1.1 and lower this method returns true if the extensions cl_khr_fp64 is supported. For OpenCL 1.2 and higher this method returns true if clGetDeviceInfo for CL_DEVICE_DOUBLE_FP_CONFIG returns a non-zero parameter value. </p>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MOpenCLInfo.h</li>\n\
<li>MOpenCLInfo.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";