var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MPxGeometryOverride Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_h_w_render_1_1_m_px_geometry_override.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MPxGeometryOverride Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MPxGeometryOverride Class Reference<span class=\"mlabels\"><span class=\"mlabel\">abstract</span></span><div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_render.html\">OpenMayaRender - API module for rendering</a> &#124; <a class=\"el\" href=\"#!/url=./cpp_ref/group___m_px.html\">Proxy classes</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2020-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2020 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2019-omnibus-whats-new.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2019 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Data-Classes.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Data Classes</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Scene-Overrides.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Scene Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Framework-Classes.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Framework Classes</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Transition-Guide.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Transition Guide</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Developer-Kit-Samples.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Developer Kit Samples</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/API-constructs/Frame-and-draw-contexts.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; API constructs &gt; Frame and draw contexts</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Geometry-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Geometry Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Effect-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Effect Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Draw-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Draw Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Sub-scene-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Sub-scene Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Render-Loop-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Render Loop Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/UI-draw-manager.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; UI draw manager</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Customizing-Geometric-Data-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Customizing Geometric Data for Shaders</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Effects-interfaces.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Post-effect interfaces</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Handling-custom-renderables-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Handling custom renderables for object overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Porting-Selection-from-Viewport.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Porting Selection from Viewport 1 to 2</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Basic-Viewport-2-0-pipeline.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Basic Viewport 2.0 pipeline sequencing</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Basic-Viewport-2-0-object.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Basic Viewport 2.0 object sequencing</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Color-management-support-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Color management support for plug-in shaders in Viewport 2.0</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Base for user-defined classes to prepare geometry for drawing.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MPxGeometryOverride.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a947d732b7cbf57f20220a07e1ac779b6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a947d732b7cbf57f20220a07e1ac779b6\">MPxGeometryOverride</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;obj)</td></tr>\n\
<tr class=\"memdesc:a947d732b7cbf57f20220a07e1ac779b6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Construct an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a947d732b7cbf57f20220a07e1ac779b6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a947d732b7cbf57f20220a07e1ac779b6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad89ac1b117f04e0026b73378ca097ff1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ad89ac1b117f04e0026b73378ca097ff1\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#ad89ac1b117f04e0026b73378ca097ff1\">~MPxGeometryOverride</a> ()</td></tr>\n\
<tr class=\"memdesc:ad89ac1b117f04e0026b73378ca097ff1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor. <br></td></tr>\n\
<tr class=\"separator:ad89ac1b117f04e0026b73378ca097ff1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual ::MHWRender::DrawAPI&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">supportedDrawAPIs</a> () const </td></tr>\n\
<tr class=\"memdesc:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the draw API supported by this override.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a05c70618c28196399681a784a3686b50\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\">hasUIDrawables</a> () const </td></tr>\n\
<tr class=\"memdesc:a05c70618c28196399681a784a3686b50\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">In order for any override for the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a> method to be called this method must also be overridden to return true.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\">More...</a><br></td></tr>\n\
<tr class=\"separator:a05c70618c28196399681a784a3686b50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a76b919d04fc3deb9262474e7e143733b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a76b919d04fc3deb9262474e7e143733b\">requiresGeometryUpdate</a> () const </td></tr>\n\
<tr class=\"memdesc:a76b919d04fc3deb9262474e7e143733b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2019.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a76b919d04fc3deb9262474e7e143733b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a76b919d04fc3deb9262474e7e143733b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3179af16c4aaaf82031b60a5acb82e86\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a3179af16c4aaaf82031b60a5acb82e86\">requiresUpdateRenderItems</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path) const </td></tr>\n\
<tr class=\"memdesc:a3179af16c4aaaf82031b60a5acb82e86\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2019.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a3179af16c4aaaf82031b60a5acb82e86\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3179af16c4aaaf82031b60a5acb82e86\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a04941a5d23a1f72a99e9a620a7f1bd73\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a04941a5d23a1f72a99e9a620a7f1bd73\">supportsEvaluationManagerParallelUpdate</a> () const </td></tr>\n\
<tr class=\"memdesc:a04941a5d23a1f72a99e9a620a7f1bd73\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2019.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a04941a5d23a1f72a99e9a620a7f1bd73\">More...</a><br></td></tr>\n\
<tr class=\"separator:a04941a5d23a1f72a99e9a620a7f1bd73\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa5eb31a442fb3f0eeca9b941b10691f4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa5eb31a442fb3f0eeca9b941b10691f4\">supportsVP2CustomCaching</a> () const </td></tr>\n\
<tr class=\"memdesc:aa5eb31a442fb3f0eeca9b941b10691f4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2019.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#aa5eb31a442fb3f0eeca9b941b10691f4\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa5eb31a442fb3f0eeca9b941b10691f4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af7be6b397b65f1a96b201e899c923d12\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#af7be6b397b65f1a96b201e899c923d12\">configCache</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_cache_schema.html\">MCacheSchema</a> &amp;) const </td></tr>\n\
<tr class=\"memdesc:af7be6b397b65f1a96b201e899c923d12\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2020.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#af7be6b397b65f1a96b201e899c923d12\">More...</a><br></td></tr>\n\
<tr class=\"separator:af7be6b397b65f1a96b201e899c923d12\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a66874f312bfb87c0159dfbfacafbc3fd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\">updateDG</a> ()=0</td></tr>\n\
<tr class=\"memdesc:a66874f312bfb87c0159dfbfacafbc3fd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Perform any work required to translate the geometry data that needs to get information from the dependency graph.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a66874f312bfb87c0159dfbfacafbc3fd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2bd5a3515d1cf5223d6b0851dec33aa2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a2bd5a3515d1cf5223d6b0851dec33aa2\">isIndexingDirty</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;item)</td></tr>\n\
<tr class=\"memdesc:a2bd5a3515d1cf5223d6b0851dec33aa2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called for each render item on the assocated DAG object whenever the object changes.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a2bd5a3515d1cf5223d6b0851dec33aa2\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2bd5a3515d1cf5223d6b0851dec33aa2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a45aa4d75f1caf5b4783871b4996b38b6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a45aa4d75f1caf5b4783871b4996b38b6\">isStreamDirty</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MVertexBufferDescriptor</a> &amp;desc)</td></tr>\n\
<tr class=\"memdesc:a45aa4d75f1caf5b4783871b4996b38b6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called for each geometry stream on the assocated DAG object whenever the object changes.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a45aa4d75f1caf5b4783871b4996b38b6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a45aa4d75f1caf5b4783871b4996b38b6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abad8e8b1f0e06eea32e2be8f97200941\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\">updateRenderItems</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MRenderItemList</a> &amp;list)=0</td></tr>\n\
<tr class=\"memdesc:abad8e8b1f0e06eea32e2be8f97200941\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called for each instance of the associated DAG object whenever the object changes.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\">More...</a><br></td></tr>\n\
<tr class=\"separator:abad8e8b1f0e06eea32e2be8f97200941\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adcde03658af182a854eead7da3ae7675\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\">addUIDrawables</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MUIDrawManager</a> &amp;drawManager, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;frameContext)</td></tr>\n\
<tr class=\"memdesc:adcde03658af182a854eead7da3ae7675\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">For each instance of the object, besides the render items updated in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> there is also a render item list for rendering simple UI elements.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\">More...</a><br></td></tr>\n\
<tr class=\"separator:adcde03658af182a854eead7da3ae7675\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a37c7a59c1e34ed5e0528fe0ac351b519\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\">populateGeometry</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MGeometryRequirements</a> &amp;requirements, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MRenderItemList</a> &amp;renderItems, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MGeometry</a> &amp;data)=0</td></tr>\n\
<tr class=\"memdesc:a37c7a59c1e34ed5e0528fe0ac351b519\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Implementations of this method should create and populate vertex and index buffers on the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\" title=\"Class for working with geometric structures used to draw objects. \">MGeometry</a> instance \'data\' in order to fulfill all of the geometry requirements defined by the \'requirements\' parameter.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\">More...</a><br></td></tr>\n\
<tr class=\"separator:a37c7a59c1e34ed5e0528fe0ac351b519\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa4c938a24a336e5ca1c28372bc6972d7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\">cleanUp</a> ()=0</td></tr>\n\
<tr class=\"memdesc:aa4c938a24a336e5ca1c28372bc6972d7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Called after all other stages are completed.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa4c938a24a336e5ca1c28372bc6972d7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a134d9274d060a8deb679db8408419cab\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a134d9274d060a8deb679db8408419cab\">refineSelectionPath</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MSelectionInfo</a> &amp;selectInfo, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;hitItem, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;multipath, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;geomComponents, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> &amp;objectMask)</td></tr>\n\
<tr class=\"memdesc:a134d9274d060a8deb679db8408419cab\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Maya calls this function during the selection interpretation phase of Viewport 2.0 selection and can be used to override the selected path, the selected components or simply reject the selection.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a134d9274d060a8deb679db8408419cab\">More...</a><br></td></tr>\n\
<tr class=\"separator:a134d9274d060a8deb679db8408419cab\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a35db327011e850bc4f290c65fdc8d8fd\">updateSelectionGranularity</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MSelectionContext</a> &amp;selectionContext)</td></tr>\n\
<tr class=\"memdesc:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to setup the selection context of the given DAG object.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a35db327011e850bc4f290c65fdc8d8fd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a498335c9c0b0ff5dce6efc063769eb3b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a498335c9c0b0ff5dce6efc063769eb3b\">traceCallSequence</a> () const </td></tr>\n\
<tr class=\"memdesc:a498335c9c0b0ff5dce6efc063769eb3b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method allows a way for a plug-in to examine the basic call sequence for a geometry override.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a498335c9c0b0ff5dce6efc063769eb3b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a498335c9c0b0ff5dce6efc063769eb3b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4ff99ebf5c2ae4a67e7ea54547c2e10b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a4ff99ebf5c2ae4a67e7ea54547c2e10b\">handleTraceMessage</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;message) const </td></tr>\n\
<tr class=\"memdesc:a4ff99ebf5c2ae4a67e7ea54547c2e10b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">When debug tracing is enabled via <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a498335c9c0b0ff5dce6efc063769eb3b\" title=\"This method allows a way for a plug-in to examine the basic call sequence for a geometry override...\">MPxGeometryOverride::traceCallSequence()</a>, this method will be called for each trace message.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a4ff99ebf5c2ae4a67e7ea54547c2e10b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4ff99ebf5c2ae4a67e7ea54547c2e10b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6291bc2cb817aacf060af3e78b178930\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a6291bc2cb817aacf060af3e78b178930\">getFrameContext</a> () const </td></tr>\n\
<tr class=\"memdesc:a6291bc2cb817aacf060af3e78b178930\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the frame context.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a6291bc2cb817aacf060af3e78b178930\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6291bc2cb817aacf060af3e78b178930\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a4a0af36ded25ebee92ce267d31004f0c\">pointSnappingActive</a> ()</td></tr>\n\
<tr class=\"memdesc:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns true if selection has been launched to find snap points.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a4a0af36ded25ebee92ce267d31004f0c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_h_w_render_1_1_m_px_geometry_override.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Base for user-defined classes to prepare geometry for drawing. </p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> allows the user to create an override to prepare vertex data that will be used to draw a specific Maya DAG object type with an arbitrary shader (standard Maya or custom) in Viewport 2.0.</p>\n\
<p>This class is designed to be a high level data-translator independent of any specific hardware draw API. Once registered through <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html\" title=\"Access the registry associating node types with custom implementations. \">MDrawRegistry</a>, an instance will be created for each node with a matching classification string. That instance will be used to generate the vertex streams needed by the assigned shaders in order to draw the object. The intent of this class is that it be used to provide data for plugin shape types (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_surface_shape.html\" title=\"Parent class of all user defined shapes. \">MPxSurfaceShape</a>) however it can also be used to override the geometry translation for any Maya geometry type.</p>\n\
<p>If a more low-level interface to the Viewport 2.0 draw loop is needed, look at either <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_draw_override.html\" title=\"Base class for user defined drawing of nodes. \">MPxDrawOverride</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html\" title=\"Base class for user defined shading effect draw overrides. \">MPxShaderOverride</a>.</p>\n\
<p>The override is only triggered when the associated DAG object has changed and that object is about to be drawn. So it is not invoked if the user is simply tumbling the scene, or if the object is not within the current view frustum.</p>\n\
<p>Implementations of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> must be registered with Maya through <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html\" title=\"Access the registry associating node types with custom implementations. \">MDrawRegistry</a>.</p>\n\
<p>Users of this interface must implement several virtual methods which will be called at specific times during the draw-preparation phase.</p>\n\
<p>1) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> : In the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> call, all data needed to compute the indexing and geometry data must be pulled from Maya and cached. It is invalid to query attribute values from Maya nodes in any later stage and doing so may result in instability.</p>\n\
<p>2) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> : For each shader assigned to the instance of the object Maya will assign a render item. A render item is a single atomic renderable entity containing a shader and some geometry. In <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a>, implementations of this class may enable or disable the automatic shader-based render items and they may add or remove custom user defined render items in order to cause additional things to be drawn. Look at the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> interface for more details.</p>\n\
<p>3) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a> : For each instance of the object, besides the render items updated in \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a>\' for the geometry rendering, there is also a render item list there for render the simple UI elements. \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a>\' happens just after normal geometry item updating, The original design for this stage is to allow user accessing \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\" title=\"Main interface for drawing basic UI drawables in Viewport 2.0 and Hardware Renderer 2...\">MUIDrawManager</a>\' which helps drawing the simple geometry easily like line, circle, rectangle, text, etc. Overriding this methods is not always necessary, but if you want to override it, please also override \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\" title=\"In order for any override for the addUIDrawables() method to be called this method must also be overr...\">hasUIDrawables()</a>\' to make it return true or the overrided method will not be called.</p>\n\
<p>4) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> : In this method the implementation is expected to fill the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\" title=\"Class for working with geometric structures used to draw objects. \">MGeometry</a> data structure with the vertex and index buffers required to draw the object as indicated by the data in the geometry requirements instance passed to this method. Failure to fulfill the geometry requirements may result in incorrect drawing or possibly complete failure to draw the object.</p>\n\
<p>5) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\" title=\"Called after all other stages are completed. \">cleanUp()</a> : Delete any cached data generated in the earlier phases that is no longer needed.</p>\n\
<p>Additionally, this interface includes some optional virtual methods which may be implemented to extend the functionality of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>.</p>\n\
<p>1) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a76b919d04fc3deb9262474e7e143733b\" title=\"Introduced in 2019.0 \">requiresGeometryUpdate()</a> : If this method returns true then all of the other methods will be called for this draw-preparation phase. This allows your <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> to depend on data outside of associated DAG object. By default this method returns false.</p>\n\
<p>2) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a3179af16c4aaaf82031b60a5acb82e86\" title=\"Introduced in 2019.0 \">requiresUpdateRenderItems()</a> : If this method returns false for an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\" title=\"DAG Path. \">MDagPath</a> instance of the associated DAG object then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> will not be called for that <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\" title=\"DAG Path. \">MDagPath</a> draw-preparation phase. If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a3179af16c4aaaf82031b60a5acb82e86\" title=\"Introduced in 2019.0 \">requiresUpdateRenderItems()</a> returns false for all MDagPaths then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> will not be called at all for the draw-preparation phase.</p>\n\
<p>3) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a04941a5d23a1f72a99e9a620a7f1bd73\" title=\"Introduced in 2019.0 \">supportsEvaluationManagerParallelUpdate()</a> : If this method returns true then the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> will be considered for Evaluation Manager Parallel Update.</p>\n\
<p>If the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> object returns false from hasUIDrawables and requiresUpdateRenderItems during the draw-preparation phase then the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is eligible for Evaluation Manager Parallel Update during that draw-preparation phase.</p>\n\
<p>Evaluation Manager Parallel Update is a performance optimization which allows the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> step of the draw update to occur during Evaluation Graph Execution rather than during VP2 scene rendering. The improves performance by allowing <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> calls of several plug-ins to run in parallel with each other and with Evaluation Manager dependency graph evaluation.</p>\n\
<p>Using Evaluation Manager Parallel Update incurs some additional overhead updating each object. For drawable objects where <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> calls are short (such as for UI objects) it may be faster to not support Evaluation Manager Parallel Update.</p>\n\
<p>Enabling Evaluation Manager Parallel Update for <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> does add some additional restrictions to the implementation of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a>.</p>\n\
<p>When Evaluation Manager Parallel Update is enabled, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> may be called from a worker thread which may not safely access the graphics API. To populate geometry you must use the methods on <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\" title=\"Index buffer for use with MGeometry. \">MIndexBuffer</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\" title=\"Vertex buffer for use with MGeometry. \">MVertexBuffer</a> which explicitly state they are safe to use on a worker thread. Furthermore, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> may only access values on the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> associated with the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>. Accessing values on other objects will result in undefined behavior.</p>\n\
<p>Using Evaluation Manager Parallel Update with Evaluation Caching enabled adds additional limitations on Evaluation Manager Parallel Update. During Evaluation Manager Parallel Update it is only safe to read attributes which are not animated, or attributes which are animated and cached. For more information on how to ensure attributes are cached with Evaluation Caching please refer to the Evaluation Caching documentation.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> automatically supports Evaluation Caching. No changes to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> are necessary to enable Evaluation Caching support. If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is attached to an user-defined node then some changes to the user-defined node may be necessary for Evaluation Caching to work correct with the user-defined node and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>. Specifically, all values read by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> must be cached by the user-defined node.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> includes optional support for VP2 Custom Caching. To support VP2 Custom Caching a node must also support Evaluation Manager Parallel Update. When VP2 Custom Caching is supported three new potential behaviors will occur.</p>\n\
<p>1) During evaluation when the VP2 Custom Cache is not ready the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> will be invoked as normal. After <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> the VP2 Custom Cache will save references to the MVertexBuffers and MIndexBuffers used to draw the object for the current time. It is not safe to hold references to these buffers after returning from populateGometry().</p>\n\
<p>2) During evaluation when the VP2 Custom Cache is ready a subset of the MPxGeomtryOverride methods will be invoked. The plug-in will have a chance to choose which render items draw and to add UI render items (hasUIDrawable(), <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a> will all be called). However, no <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> call will be made. The pre-existing buffers from an earlier evaluation will be used to draw.</p>\n\
<p>3) When Maya is idle Maya will fill the VP2 Custom Cache using background evaluation. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\" title=\"Called after all other stages are completed. \">cleanUp()</a> will be invoked in a worker thread which does not have the normal context as the current context. During background evaluation there are additional restrictions on <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\" title=\"Called after all other stages are completed. \">cleanUp()</a>: it is not safe to access the graphics API and it is only safe to access values on the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> associated with the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>. After the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> call the MVertexBuffers and MIndexBuffers prepared will be stored. It is not safe to hold references to these buffers after returning from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a>.</p>\n\
<p>When <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is invoked from background evaluation for VP2 Custom Caching the current context will already be set correctly for the frame being background evaluated.</p>\n\
<p>When VP2 Custom Caching is enabled and the desired content of the MVertexBuffers used to draw the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is changing then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a76b919d04fc3deb9262474e7e143733b\" title=\"Introduced in 2019.0 \">requiresGeometryUpdate()</a> must return true. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#_a29\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#_a0\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__animated_material_2foot_print_node__geometry_override__animated_material_8cpp-example.html#_a52\">footPrintNode_AnimatedMaterial/footPrintNode_GeometryOverride_AnimatedMaterial.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#_a46\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#_a9\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#_a9\">geometryOverrideExample2/geometryOverrideExample2.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_replicator_2geometry_replicator_8cpp-example.html#_a8\">geometryReplicator/geometryReplicator.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#_a0\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a947d732b7cbf57f20220a07e1ac779b6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\">MPxGeometryOverride</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>obj</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Construct an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">obj</td><td>The DAG object this override translates </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a9c43d7192e56c01d8dde77fabd843a0e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">DrawAPI supportedDrawAPIs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the draw API supported by this override. </p>\n\
<p>The returned value may be formed as the bitwise \'or\' of MHWRender::DrawAPI elements to indicate that the override supports multiple draw APIs. This method returns \'MHWRender::kOpenGL\' by default.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The draw API supported by this override </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a30\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a2\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a11\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a11\">geometryOverrideExample2/geometryOverrideExample2.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#a2\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a05c70618c28196399681a784a3686b50\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool hasUIDrawables </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>In order for any override for the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a> method to be called this method must also be overridden to return true. </p>\n\
<p>This method should not be overridden if <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a> has not also been overridden as there may be associated wasted overhead.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Whether \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#adcde03658af182a854eead7da3ae7675\" title=\"For each instance of the object, besides the render items updated in updateRenderItems() there is als...\">addUIDrawables()</a>\' will be called or not. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a42\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a76b919d04fc3deb9262474e7e143733b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool requiresGeometryUpdate </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2019.0</b> </p>\n\
<p>This method is called one during each draw-preparation phase.</p>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000160\">2019.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>If this method returns true then the associated DAG object will have a chance to update its render geometry this frame.</p>\n\
<p>Depending on the other features enabled by Maya and the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> the update could be completed by calling some combination of methods on <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> itself such as updateRenderItems and populateGeometry or by using VP2 custom caching and making no further calls to this object.</p>\n\
<p>If the desired contents of the MVertexBuffers used to draw the render items for this object have changed then this method must return true. The source of the new buffer contents (evaluation or caching) doesn\'t change the behavior of this method.</p>\n\
<p>This code has to be thread safe, non-blocking and work only on data owned by the associated DAG object.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if further draw-preparation methods are required. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a20\">geometryOverrideExample1/geometryOverrideExample1.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a20\">geometryOverrideExample2/geometryOverrideExample2.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3179af16c4aaaf82031b60a5acb82e86\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool requiresUpdateRenderItems </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2019.0</b> </p>\n\
<p>This method is called for each instance of the associated DAG object whenever the object changes.</p>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000161\">2019.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>If, during a single draw-preparation phase this method returns false for all DAG instances of this <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> will not be called for the draw-preparation phase.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">path</td><td>The path to the instance to update render items for</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> must be called. false if it is safe to not call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a>. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a04941a5d23a1f72a99e9a620a7f1bd73\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool supportsEvaluationManagerParallelUpdate </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2019.0</b> </p>\n\
<p>This method is called once each <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> in the scene to determine if the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is eligible for Evaluation Manager Parallel Update.</p>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000162\">2019.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if Evaluation Manager Parallel Update is supported by this plug-in. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a21\">geometryOverrideExample1/geometryOverrideExample1.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a21\">geometryOverrideExample2/geometryOverrideExample2.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa5eb31a442fb3f0eeca9b941b10691f4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool supportsVP2CustomCaching </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2019.0</b> </p>\n\
<p>This method is called at any time during evaluation to determine if VP2 Custom Caching is supported.</p>\n\
<dl class=\"changelog_2019_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2019_0.html#_changelog_2019_0000163\">2019.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>It is not safe to perform any DG evaluation from this method.</p>\n\
<p>This method must return the same value for the entire lifetime of the object.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if VP2 Custom Caching is supported by this plug-in. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af7be6b397b65f1a96b201e899c923d12\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void configCache </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\">, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_cache_schema.html\">MCacheSchema</a> &amp;&#160;</td>\n\
          <td class=\"paramname\">&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2020.0</b> </p>\n\
<p>Defines the node\'s behavior when participating in Cached Playback in VP2 Custom Caching.</p>\n\
<dl class=\"changelog_2020_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2020_0.html#_changelog_2020_0000049\">2020.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>This method will be called at EM partition time, after cache configuration rules evaluation, when the object is configured as a VP2 Custom Caching point. It allows configuring the cache, for instance by adding extra attributes to cache, when VP2 Custom Caching is used.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">evalNode</td><td>This node\'s evaluation node, contains animated plug information </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">schema</td><td>Specification about what attributes to cache. The attribute list is pre-populated by the output attributes in EM\'s dirty plug list. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a66874f312bfb87c0159dfbfacafbc3fd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void updateDG </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Perform any work required to translate the geometry data that needs to get information from the dependency graph. </p>\n\
<p>This should be the only place that dependency graph evaluation occurs. Any data retrieved should be cached for later stages. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a35\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a3\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a12\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a12\">geometryOverrideExample2/geometryOverrideExample2.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#a3\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2bd5a3515d1cf5223d6b0851dec33aa2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isIndexingDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>item</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called for each render item on the assocated DAG object whenever the object changes. </p>\n\
<p>This method is passed a render item. This method should return true if the indexing for the render item has changed since the last frame. Note that returning false from isIndexingDirty may NOT prevent populate geometry from requiring that an index buffer is updated.</p>\n\
<p>During evaluation with VP2 Custom Caching <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a2bd5a3515d1cf5223d6b0851dec33aa2\" title=\"This method is called for each render item on the assocated DAG object whenever the object changes...\">isIndexingDirty()</a> must return false for all render items on the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>. If any render items require an indexing update then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a37c7a59c1e34ed5e0528fe0ac351b519\" title=\"Implementations of this method should create and populate vertex and index buffers on the MGeometry i...\">populateGeometry()</a> will be called.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">item</td><td>The render item in question </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the index buffer needs to be updated </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a31\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a45aa4d75f1caf5b4783871b4996b38b6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isStreamDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MVertexBufferDescriptor</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>desc</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called for each geometry stream on the assocated DAG object whenever the object changes. </p>\n\
<p>This method is passed a vertex buffer descriptor representing one stream on the object to be updated. This method should return true if it is safe to reuse the existing buffer rather than filling a new buffer with data. Note that returning false from isStreamDirty may NOT prevent populateGeometry from requiring that a stream be updated.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">desc</td><td>The description of the vertex buffer </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the vertex buffer needs to be updated </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a33\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abad8e8b1f0e06eea32e2be8f97200941\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void updateRenderItems </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MRenderItemList</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>list</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called for each instance of the associated DAG object whenever the object changes. </p>\n\
<p>The method is passed the path to the instance and the current list of render items associated with that instance. By default the list will contain one render item for each shader assigned to the instance. Implementations of this method method may add, remove or modify items in the list. Note that removal of items created by Maya for assigned shaders is not allowed and will fail. As an alternative this method can disable those items so that they do not draw.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">path</td><td>The path to the instance to update render items for </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">list</td><td>The current render item list, items may be modified, added or removed. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a36\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a4\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a13\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a13\">geometryOverrideExample2/geometryOverrideExample2.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#a4\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adcde03658af182a854eead7da3ae7675\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void addUIDrawables </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MUIDrawManager</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>drawManager</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>frameContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>For each instance of the object, besides the render items updated in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a> there is also a render item list for rendering simple UI elements. </p>\n\
<p>updateAuxiliaryItems() is called just after <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#abad8e8b1f0e06eea32e2be8f97200941\" title=\"This method is called for each instance of the associated DAG object whenever the object changes...\">updateRenderItems()</a>. This stage gives the plugin access to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\" title=\"Main interface for drawing basic UI drawables in Viewport 2.0 and Hardware Renderer 2...\">MUIDrawManager</a> which aids in drawing simple geometry like line, circle, rectangle, text, etc.</p>\n\
<p>Overriding this methods is not always necessary, but if you want to override it, please also override \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\" title=\"In order for any override for the addUIDrawables() method to be called this method must also be overr...\">hasUIDrawables()</a>\' to make it return true or the overridden method will not be called.</p>\n\
<p>If you are not going to override this function, please don\'t make \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a05c70618c28196399681a784a3686b50\" title=\"In order for any override for the addUIDrawables() method to be called this method must also be overr...\">hasUIDrawables()</a>\' return true or there may be some wasted performance overhead.</p>\n\
<p>Implementation of this method here is empty.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">path</td><td>The path to the instance to update auxiliary items for </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">drawManager</td><td>The draw manager used to draw simple geometry </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">frameContext</td><td>Frame level context information </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a43\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a37c7a59c1e34ed5e0528fe0ac351b519\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void populateGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MGeometryRequirements</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>requirements</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MRenderItemList</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItems</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MGeometry</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>data</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Implementations of this method should create and populate vertex and index buffers on the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\" title=\"Class for working with geometric structures used to draw objects. \">MGeometry</a> instance \'data\' in order to fulfill all of the geometry requirements defined by the \'requirements\' parameter. </p>\n\
<p>Failure to do so will result in the object either drawing incorrectly or not drawing at all. See the documentation of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\" title=\"Geometry requirements. \">MGeometryRequirements</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\" title=\"Class for working with geometric structures used to draw objects. \">MGeometry</a> for more details on the usage of these classes. The geometry requirements will ask for index buffers on demand. Implementations can force the geometry requirements to update index buffers by calling <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\" title=\"Notify the Viewport 2.0 renderer that the geometry (size, shape, etc.) of obj has changed...\">MHWRender::MRenderer::setGeometryDrawDirty()</a> with topologyChanged setting to true.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">requirements</td><td>The requirements that need to be satisfied. </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">renderItems</td><td>The list of render items that need to be updated. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">data</td><td>The container for the geometry data </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example10\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example10-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example10-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a39\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a7\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a16\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a16\">geometryOverrideExample2/geometryOverrideExample2.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#a7\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa4c938a24a336e5ca1c28372bc6972d7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void cleanUp </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Called after all other stages are completed. </p>\n\
<p>Clean up any cached data stored from the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a66874f312bfb87c0159dfbfacafbc3fd\" title=\"Perform any work required to translate the geometry data that needs to get information from the depen...\">updateDG()</a> phase.</p>\n\
<p>When using Evaluation Manager Parallel Update it is safe to access the GPU representation of an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\" title=\"Index buffer for use with MGeometry. \">MIndexBuffer</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\" title=\"Vertex buffer for use with MGeometry. \">MVertexBuffer</a> during <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\" title=\"Called after all other stages are completed. \">cleanUp()</a>.</p>\n\
<p>When using VP2 Custom Caching it is not safe to access the GPU representation of an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\" title=\"Index buffer for use with MGeometry. \">MIndexBuffer</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\" title=\"Vertex buffer for use with MGeometry. \">MVertexBuffer</a> during <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#aa4c938a24a336e5ca1c28372bc6972d7\" title=\"Called after all other stages are completed. \">cleanUp()</a>. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example11\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example11-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example11-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_directional_light_shape_2api_directional_light_shape_8cpp-example.html#a46\">apiDirectionalLightShape/apiDirectionalLightShape.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a10\">apiMeshShape/apiMeshGeometryOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example1_2geometry_override_example1_8h-example.html#a19\">geometryOverrideExample1/geometryOverrideExample1.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/geometry_override_example2_2geometry_override_example2_8h-example.html#a19\">geometryOverrideExample2/geometryOverrideExample2.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/tessellated_quad_2_tessellated_quad_geom_override_8h-example.html#a10\">tessellatedQuad/TessellatedQuadGeomOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a134d9274d060a8deb679db8408419cab\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool refineSelectionPath </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MSelectionInfo</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>selectInfo</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>hitItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>components</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>objectMask</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Maya calls this function during the selection interpretation phase of Viewport 2.0 selection and can be used to override the selected path, the selected components or simply reject the selection. </p>\n\
<ul>\n\
<li>One can decide to change the selected path (ie: select the bottom-most transform instead of the proposed path). </li>\n\
<li>One can decide to remove or add component to the proposed selected list. </li>\n\
<li>One can decide to change the selection mask of the object (ie: override the selection mask returned by a component converter). </li>\n\
<li>One can decide that the proposed selection (path or component) is not acceptable and discard it (ie: return false).</li>\n\
</ul>\n\
<p>Implementation of this method here is empty and returns True (selection is accepted).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">selectInfo</td><td>The selection info </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">hitItem</td><td>The render item hit </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">path</td><td>The selected path </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">components</td><td>The selected components </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">objectMask</td><td>The object selection mask</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True the selection candidate is acceptable </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a35db327011e850bc4f290c65fdc8d8fd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void updateSelectionGranularity </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MSelectionContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>selectionContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to setup the selection context of the given DAG object. </p>\n\
<p>This is useful to specify the selection level, which defines what can be selected on the object :</p><ul>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da634ee767a8e90ff4d56e140459cca31f\" title=\"No selection available. \">MSelectionContext::kNone</a> Nothing can be selected</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625dad74f4c7c6562dc3f8339a8bba2d28dd0\" title=\"Object level. \">MSelectionContext::kObject</a> Object can be selected as a whole</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\" title=\"Component level. \">MSelectionContext::kComponent</a> Parts of the object - such as vertex, edge or face - are selectable</li>\n\
</ul>\n\
<p>This is used to discard objects that are not selectable given the current selection mode (see <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_global.html#a2166afd9d082dd5952bcd361f0a3abb5\" title=\"Determines Maya&#39;s selection mode. \">MGlobal::selectionMode()</a>).</p>\n\
<p>Implementation of this method here is empty, and default selection level is set to kObject.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">path</td><td>The path to the instance to update the selection context for </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">selectionContext</td><td>The selection context </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example12\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example12-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example12-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a11\">apiMeshShape/apiMeshGeometryOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a498335c9c0b0ff5dce6efc063769eb3b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool traceCallSequence </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method allows a way for a plug-in to examine the basic call sequence for a geometry override. </p>\n\
<p>The default implementation returns false meaning no tracing will occur.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Whether to turn on call sequence tracing </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example13\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example13-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example13-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a13\">apiMeshShape/apiMeshGeometryOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4ff99ebf5c2ae4a67e7ea54547c2e10b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void handleTraceMessage </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>message</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>When debug tracing is enabled via <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a498335c9c0b0ff5dce6efc063769eb3b\" title=\"This method allows a way for a plug-in to examine the basic call sequence for a geometry override...\">MPxGeometryOverride::traceCallSequence()</a>, this method will be called for each trace message. </p>\n\
<p>The default implementation will print the message to stderr.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">message</td><td>A string which will provide feedback on either an internal or plug-in call location. To help distinguish which geometry override a message is associated with, the full path name for the DAG object (associated with the geometry override) may be included as part of the string. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example14\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example14-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example14-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8h-example.html#a14\">apiMeshShape/apiMeshGeometryOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6291bc2cb817aacf060af3e78b178930\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> * getFrameContext </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the frame context. </p>\n\
<p>Note that this context is only valid between setup and cleanup.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to frame context. The context should never be deleted by the plug-in as it is owned by the geometry override. Null if obtained before setup or after cleanup. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4a0af36ded25ebee92ce267d31004f0c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool pointSnappingActive </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns true if selection has been launched to find snap points. </p>\n\
<p>To participate, you need to have at least one render item with point geometry and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\" title=\"&#160; \">MSelectionMask::kSelectPointsForGravity</a> set in MRenderItem::selectableMask().</p><ul>\n\
<li>The granularity must be set to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\" title=\"Component level. \">MSelectionContext::kComponent</a> in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a35db327011e850bc4f290c65fdc8d8fd\" title=\"Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to setu...\">updateSelectionGranularity()</a></li>\n\
<li>A component converter is not necessary in this scenario.</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a134d9274d060a8deb679db8408419cab\" title=\"Maya calls this function during the selection interpretation phase of Viewport 2.0 selection and can ...\">refineSelectionPath()</a> will not be called. All points present in the render item will be considered suitable locations for snapping.</li>\n\
</ul>\n\
<dl class=\"section return\"><dt>Returns</dt><dd></dd></dl>\n\
<ul>\n\
<li><b>true</b> Snapping is active </li>\n\
<li><b>false</b> Not currently snapping </li>\n\
</ul>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MPxGeometryOverride.h</li>\n\
<li>MPxGeometryOverride.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";