var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: lensDistortionCallback/lensDistortionCallback.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'lens_distortion_callback_2lens_distortion_callback_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: lensDistortionCallback/lensDistortionCallback.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">lensDistortionCallback/lensDistortionCallback.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _LENSDISTORTIONCALLBACK_H</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _LENSDISTORTIONCALLBACK_H</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUiMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MImage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAX_MODEL_PANEL 4</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\"> This example plug-in demonstrates how to perform mutiple draw pass with </span></div>\n\
<div class=\"line\"><span class=\"comment\"> MUiMessage::add3dViewPreMultipleDrawPassMsgCallback() and </span></div>\n\
<div class=\"line\"><span class=\"comment\"> MUiMessage::add3dViewPostMultipleDrawPassMsgCallback().</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"> The command &quot;lensDistortionCallback&quot; supports the following options.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    -r/-remove  : Remove lens distortion callback from given model panel.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    -ex/-exists : Query existence of lens distortion callback for given model panel.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    -l/-list    : List names of the panels which have a callback attached.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">If none of the above options are specified the default is to add the lens distortion </span></div>\n\
<div class=\"line\"><span class=\"comment\"> callback to the the given model panel</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"> Following dynamic attributes should be added to the camera which is associated with the model panel.</span></div>\n\
<div class=\"line\"><span class=\"comment\"> </span></div>\n\
<div class=\"line\"><span class=\"comment\">    int     previewResolutionX          : X division of lens distortion plane. e.g. 40.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    int     previewResolutionY          : Y division of lens distortion plane. e.g. 30.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    int     renderResolutionX           : Rendering resolution width. e.g. 1920.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    int     renderResolutionY           : Rendering resolution height. e.g. 1080.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  principalPointX             : Center of Lens X. e.g. 961.1.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  principalPointY             : Center of Lens Y. e.g. 540.5.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  radialDistortionCoef1       : Radial Distortion coeff 1. e.g 0.0068.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  radialDistortionCoef2       : Radial Distortion coeff 2. e.g -0.00016.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  tangentialDistortionCoef1   : Tangential Distortion coeff 1. e.g. -0.00051</span></div>\n\
<div class=\"line\"><span class=\"comment\">    double  tangentialDistortionCoef2   : Tangential Distortion coeff 2. e.g. 0.0000</span></div>\n\
<div class=\"line\"><span class=\"comment\">    bool    drawWireframe               : Turn on/off wireframe</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"> For details on the lens model used here and the meanings of the various parameters, see </span></div>\n\
<div class=\"line\"><span class=\"comment\"> &quot;Manual of Photogrammetry, fourth ed., C.C. Slama, ed., Falls Church, Va.: Am. Soc. Photogramettry, 1980&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"> Example:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    lensDistortionCallback `getPanel -withFocus`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lensDistortionCompute;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// lensDistortionCallback class offers</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  - Add an instance of lensDistortionCompute and </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  associate it with a model panel.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  - Remove an instance of lensDistortionCompute which </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  associated with model panel by &quot;-remove&quot; flag</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  - Query existence of instance of lensDistortionCompute</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  which associated with model panel by &quot;-exists&quot; flag</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  - List names of the panels which have a callback attached </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  by &quot;-list&quot; flag.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lensDistortionCallback : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html\">MPxCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    lensDistortionCallback();</div>\n\
<div class=\"line\">                    ~lensDistortionCallback() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>                 <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#ade7d0a873cbe811d6eab464e695390a9\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a>          newSyntax();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*            creator();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a new syntax and add removeFlag and existFlag</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kSuccess : Parsing finished successfully</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kFailure : Parsing failed. Member variable will not be set properly</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>                 parseArgs( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>                 mPanelName;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    mRemoveOperation;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    mExistOperation;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    mListOperation;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// lensDistortionCompute offers</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - deleteCB(): a callback when associated model panel deleted</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - preRenderCB(): a callback called before Maya drawing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Enable multiple pass drawing and set 2 to mulitple pass count</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - postRenderCB(): a callback called after Maya drawing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This callback draws lens distortion preview plane.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This callback blend buffers 1st pass image and with 2nd pass, and </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      disable multiple pass drawing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - preMultipleDrawPassCB() :</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - postMultipleDrawPassCB() :</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      These callback called twice.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      1st pass renders image plane only and store it to a buffer.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      2nd pass renders scene except image plane.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>lensDistortionCompute</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    lensDistortionCompute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;panelName);</div>\n\
<div class=\"line\">    ~lensDistortionCompute();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>             getPanelName(){ <span class=\"keywordflow\">return</span> mPanelName;};</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>                setPanelName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;panelName) { mPanelName = panelName; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add an instance of lensDistortionCompute to given panal </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kSuccess : Adding finished successfully</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kFailure : Adding failed. Panel is not added. </span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      addCallbackToPanel( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; pPanelName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Remove an instance of lensDistortionCompute from panel </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kSuccess : Removing finished successfully</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  MS::kFailure : Removing failed. Panel is not removed. </span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      removeCallbackFromPanel( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; pPanelName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Query existence of instance of lensDistortionCompute for panel</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span>         panelHasCallback( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; pPanelName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// List names of the panels which have a callback attached</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      listCallback( <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp; pPanelNames );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Clear all registered callbacks </span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>                clearCallbacks();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> lensDistortionCompute* currentLensDistortionCompute[MAX_MODEL_PANEL];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>         deleteCB(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; panelName, <span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>         preRenderCB(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; panelName, <span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>         postRenderCB(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; panelName, <span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>         preMultipleDrawPassCB( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; pPanelName, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> passIndex, <span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>         postMultipleDrawPassCB( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; pPanelName, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> passIndex, <span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MCallbackId         mDeleteId;</div>\n\
<div class=\"line\">    MCallbackId         mPreRenderId;</div>\n\
<div class=\"line\">    MCallbackId         mPostRenderId;</div>\n\
<div class=\"line\">    MCallbackId         mPreMultipleDrawPassId;</div>\n\
<div class=\"line\">    MCallbackId         mPostMultipleDrawPassId;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize/Update OpenGL texture object </span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    textureUpdate( );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Main draw routine</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    draw();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw lens distortion preview plane with given draw method.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    drawLensDistortionPlane( </div>\n\
<div class=\"line\">                GLenum drawMethod</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> renderResolutionX</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> renderResolutionY</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">int</span> previewResolutionX</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">int</span> previewResolutionY</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> width</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> height</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> principalPointX</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> principalPointY</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> kc1, <span class=\"keywordtype\">double</span> kc2, <span class=\"keywordtype\">double</span> kc3, <span class=\"keywordtype\">double</span> kc4</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> horizontalFilmAperture</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> verticalFilmAperture</div>\n\
<div class=\"line\">                );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Apply lens distortion to given x/y position.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    applyLensDistortion( </div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span>&amp; Xd</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span>&amp; Yd</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> renderResolutionX</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> renderResolutionY</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> width</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> height</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> principalPointX</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> principalPointY</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> kc1, <span class=\"keywordtype\">double</span> kc2, <span class=\"keywordtype\">double</span> kc3, <span class=\"keywordtype\">double</span> kc4</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> horizontalFilmAperture</div>\n\
<div class=\"line\">                , <span class=\"keywordtype\">double</span> verticalFilmAperture</div>\n\
<div class=\"line\">                );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get attribute values from given node;</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     getIntValueFromCameraAttr( <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> attrName );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  getDoubleValueFromCameraAttr( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> attrName );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    getBoolValueFromCameraAttr(  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> attrName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Panel related variables</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         mPanelName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Current view.</span></div>\n\
<div class=\"line\">    <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>         mCurrentView;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Store rendered buffer in 1st multiple draw pass that all objects are </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// drawn except the image plane.</span></div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>          mPrimaryBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Texture related member variables</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    mTextureIndex;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    mTextureWidth;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    mTextureHeight;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Store multiple draw pass count;</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    mMultipleDrawPassCount;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Store display status</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    mObjectDisplayState;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";