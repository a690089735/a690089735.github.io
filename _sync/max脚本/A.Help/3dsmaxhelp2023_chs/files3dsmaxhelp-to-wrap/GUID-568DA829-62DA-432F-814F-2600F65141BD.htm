<!DOCTYPE html><html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="3DSMAX">
      <meta name="release" content="2023">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2022-03-27">
      <meta name="topicid" content="GUID-568DA829-62DA-432F-814F-2600F65141BD">
      <meta name="description" content="通过开放式明暗处理语言 (OSL)，您可以使用新的 OSL 贴图（各种 OSL 贴图的统一类别），并且可以使用开发工具创建自己的 OSL 贴图以用于任何渲染器。">
      <meta name="indexterm" content="新功能">
      <meta name="topic-type" content="concept">
      <meta name="cmdname" content=". . . .,“编辑”,“编译明暗器”,“保存 OSL 文件”">
      <meta name="keywords" content=". . . ., “编辑”, “编译明暗器”, “保存 OSL 文件”">
      <meta name="keyword" content=". . . .">
      <meta name="keyword" content="“编辑”">
      <meta name="keyword" content="“编译明暗器”">
      <meta name="keyword" content="“保存 OSL 文件”">
      <title>开放式明暗处理语言 (OSL)</title><script language="javascript">var index = 'index3dsmaxhelp.html';</script></head>
   <body height="100%">
      <div class="body_content" id="body-content" dir="ltr"><a name="GUID-568DA829-62DA-432F-814F-2600F65141BD"></a><div class="head">
            <h1>开放式明暗处理语言 (OSL)</h1>
         </div>
         <p class="blurb">通过开放式明暗处理语言 (OSL)，您可以使用新的 OSL 贴图（各种 OSL 贴图的统一类别），并且可以使用开发工具创建自己的 OSL 贴图以用于任何渲染器。 
            
         </p><img src="../images/GUID-C74E9336-DB81-4C39-B9FA-4B587F40BFF9-low.png"><p> 开放式明暗处理语言 (OSL) 是比较容易理解的开源明暗处理语言。可以采用多种不同的方式使用此语言。您可以使用 OSL 贴图，这是 3ds Max 内部的 OSL 明暗器执行环境，其工作方式类似于任何常规的内置 3ds Max 贴图。还有一个可以轻松使用的预加载
            OSL 贴图类别。此外，还可以使用从 Internet 下载的任何 OSL 贴图。最后，您可以使用我们的开发工具通过 OSL 创建明暗器或贴图。与开发等效于 3ds Max C++ 贴图的功能相比，使用此方法创建自定义贴图要简单得多。 
            	 
         </p>
         <p>OSL 可在支持常规 3ds Max 明暗处理 API 的任何渲染器（扫描线、vRay、Corona 等）中使用。它也可以在渲染器之外、3ds Max 中需要常规贴图的任何位置（例如在置换修改器中）使用。它还可以在本身支持 OSL 的渲染器（例如
            Arnold）中使用。在这些情况下，不使用 OSL 贴图内的执行环境，而是将 OSL 源代码、参数值和明暗器绑定发送到渲染器，由渲染器执行 OSL 代码。每天都会出现更多本身支持 OSL 的渲染器。 
            	 
         </p>
         <p>只要明暗处理树中的所有明暗器都是 OSL 明暗器，OSL 便会对整个明暗处理树一次性进行即时编译和优化。您可以混合使用 OSL 明暗器和常规明暗器，但优化将会受影响。 
            	 
         </p>
         <div><a name="GUID-EA3A9DA7-CBC0-4A24-8386-939E674518D2"></a><div class="note-note"><span class="label label-target-language">注意:</span>计算机图形术语并不总是精确，在不同的上下文、应用程序和渲染器中使用时，明暗器、贴图、纹理、程序和材质等词表示不同的内容。由于 3ds Max 中的 OSL 不支持闭合，因此它显示为贴图。但是，由于 OSL 是明暗处理语言，因此在 OSL 上下文中，术语明暗器和贴图将作为同义词使用。
               
               	 
            </div>
         </div>
         <div><a name="GUID-106678B7-0F52-4455-978F-C5538DCAC0DF"></a><div class="note-note"><span class="label label-target-language">注意:</span> 原始的渲染 API 不支持多个输出。这是后来引入的扩展。因此，大多数材质和贴图无法识别与具有多个输出的贴图连接。为了解决此问题，引入了输出选择器贴图，作为在具有多个输出的对象与无法识别多个输出的对象之间自动插入的中间对象。在 Slate 材质编辑器中会自动隐藏输出选择器贴图，在那里它就像普通连接（除了连线是蓝色，而不是红色）。可以从
               Slate 材质编辑器中的“选项”菜单选择“首选项”，然后切换“隐藏单一贴图输出选择器”来启用或禁用该选项。 
               	 
            </div>
         </div>
         <div class="section"><a name="SECTION_348F823EDECB4F69B186374CF7F0A93B"></a> 
            <h2><a name="GUID-8AB19D16-5DDC-429C-BF54-95EF10FBB120"></a>OSL 限制
            </h2> 
            <p>在 3ds Max 中，OSL 贴图存在几个限制。 
               		
            </p> <a name="TABLE_948F5940FF8740E1BEA6906120508643"></a><div class="table-not-ruled">
               <table cellpadding="0" cellspacing="0" class="not-ruled">
                  <colgroup>
                     <col width="23.752969121140143%">
                     <col width="76.24703087885986%">
                  </colgroup>
                  <tr class="not-ruled-heading">
                     <th class="table-heading">限制 
                        				  
                     </th>
                     <th class="table-heading">描述 
                        				  
                     </th>
                  </tr>
                  <tr class="not-ruled-odd-row">
                     <td class="table-body"> 仅支持贴图，不支持材质 
                        				  
                     </td>
                     <td class="table-body"> 
                        <p class="table-body"> 采用 OSL 编写的明暗器可以有多个返回不同数据类型（例如颜色、浮点值、整数、字符串等）的输出。对此全部支持。 
                           					 
                        </p> 
                        <p class="table-body"> 但是，OSL 还支持称为闭合的特殊类型。您可以将闭合视为材质。对此不支持。实际上，这意味着 OSL 贴图只能用于构建程序纹理（贴图），不能用于构建材质。<em class="mild"></em> 
                        </p> 
                        <p class="table-body"> 因此，建议的工作流是采用 OSL 构建程序纹理贴图，但将输出连接到定义明确且与渲染器无关的标准化材质（例如物理材质）。 
                           					 
                        </p> 
                        <p class="table-body"> 如果您在网上找到的 OSL 明暗器看上去无法进行任何操作，或看上去没有任何输出，则可能是 OSL 材质。 
                           					 
                        </p> 
                     </td>
                  </tr>
                  <tr class="not-ruled-even-row">
                     <td class="table-body">只支持纯数据类型 
                        				  
                     </td>
                     <td class="table-body"> 
                        <p class="table-body"> 3ds Max 中的 OSL 贴图只支持纯数据类型：颜色、向量、浮点数、整数和字符串。它不支持阵列或结构作为输入。<em class="mild"></em> 
                        </p> 
                        <p class="table-body"> 实际上，一般情况下这不是问题，因为很少有 OSL 明暗器实际使用阵列或结构作为输入。只有参数存在此限制，在 OSL 代码内，阵列和结构仍可正常使用。 
                           					 
                        </p> 
                     </td>
                  </tr>
                  <tr class="not-ruled-odd-row">
                     <td class="table-body">无 #include 语句 
                        				  
                     </td>
                     <td class="table-body"> 
                        <p class="table-body">3ds Max 中的 OSL 代码不能包含 <span class="code">#include</span> 语句。如果您的 OSL 代码包含 <span class="code">#include &lt;stdosl.h&gt;</span>，这是不需要的，可以删除。文件 stdosl.h 由编译器隐式包含。 
                           					 
                        </p> 
                     </td>
                  </tr>
               </table>
            </div> 
         </div>
         <div class="section"><a name="SECTION_01A3A41AEF4D4F00BF3A283974DF1EE7"></a> 
            <h2><a name="GUID-08CAFE31-9ACE-49E7-BAEF-AEB5BD875E0B"></a>视口支持
            </h2> 
            <p>现在，许多 OSL 贴图将其实际明暗器用于视口显示，从而提高性能并大幅改善视觉表示。要执行此操作，请在“有贴图的真实模式”下运行视口。在“材质编辑器”中，使用此明暗器的 OSL 贴图将在其参数上方显示通知“视口: 使用的明暗器”<span class="MenuCascade"></span>。但是，仍使用烘焙纹理的 OSL 贴图将显示“视口: 使用的烘焙纹理”<span class="MenuCascade"></span>。 
               		
            </p> 
            <p>请注意，以下 OSL 明暗器当前仍使用烘焙纹理： 
               		
            </p> <a name="UL_7D9CD42948194A189D9A8DDCBC3753B1"></a><p class="list-intro">UVW</p>
            <ul>
               <li>UVW 变换 
                  		  
               </li>
               <li>UVW 通道 
                  		  
               </li>
            </ul> <a name="UL_CE857DA074E3462D807F812E34BBD6A3"></a><p class="list-intro">根</p>
            <ul>
               <li>糖果 
                  		  
               </li>
               <li>位 
                  		  
               </li>
               <li>波长 
                  		  
               </li>
               <li>Mandelbrot 
                  		  
               </li>
               <li>黑体 
                  		  
               </li>
               <li>位图查找 
                  		  
               </li>
               <li>随机化位图 
                  		  
               </li>
               <li>Uber 位图 
                  		  
               </li>
            </ul> <a name="UL_98C3E3E6A76C44ABBE3C7274630344AF"></a><p class="list-intro">场景</p>
            <ul>
               <li>材质 ID 
                  		  
               </li>
               <li>命名属性 
                  		  
               </li>
               <li>节点控制柄 
                  		  
               </li>
               <li>节点名称/哈希 
                  		  
               </li>
               <li>对象 ID 
                  		  
               </li>
               <li>粒子年龄 
                  		  
               </li>
               <li>线框颜色 
                  		  
               </li>
            </ul> <a name="UL_517E45F751A6412C8F483AE5DF59085F"></a><p class="list-intro">值</p>
            <ul>
               <li>文件名 
                  		  
               </li>
               <li>编号文件名 
                  		  
               </li>
            </ul> 
            <div><a name="GUID-7EBA575E-5A42-4AEE-B4B7-B26836632483"></a><div class="note-note"><span class="label label-target-language">注意:</span>此外，始终使用烘焙纹理的 Arnold 材质也不支持此视口改进举措。 
                  		
               </div>
            </div> 
         </div><span class="noindex">
            <div class="topic-list">
               <h4 class="related">本节内容</h4>
               <ul class="jumplist">
                  <li class="topiclist-litem"><a href="GUID-CF348181-6708-4CAF-B9C9-8B4CA5EEF55F.htm">OSL 工作流</a><p>针对在 3ds Max 中使用 OSL，有两个基本的工作流：一个适用于使用 OSL 类别中预先创建的贴图，另一个适用于使用 OSL 贴图本身。 
                        
                     </p>
                  </li>
                  <li class="topiclist-litem"><a href="GUID-CB9141FC-2D52-4EDA-8F78-2351AB53B31B.htm">安装 OSL 明暗器（贴图）</a><p>OSL 类别的明暗器（贴图）中包含多个常规明暗器以及一些子类别。 
                        
                     </p>
                  </li>
                  <li class="topiclist-litem"><a href="GUID-9DD7702C-31B0-47F2-965F-460FE2E42522.htm">添加 OSL 贴图（明暗器）</a><p>您可以将自己的 OSL 贴图/明暗器添加到贴图浏览器。
                        
                     </p>
                  </li>
                  <li class="topiclist-litem"><a href="GUID-16139ACA-4716-47FB-AAB4-15EFF35D7F17.htm">OSL 的计算默认值和 UVW 输入</a></li>
               </ul>
            </div></span><div class="footer-block"><a href=".." class="comments-anchor" target="_blank"><span class="comments-link">请将您关于此页内容的评论发送给我们</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>除非另有说明，否则此作品受到 <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"> Creative Commons 署名-非商业性使用-相同方式共享 3.0 未本地化版本许可证</a>的制约。请参见 <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons 常见问题</a>(英文)以获取更多信息。</em></p><br></div>
   </body>
</html>