var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license agreement</span></div>\n\
<div class=\"line\"><span class=\"comment\">// provided at the time of installation or download, or which otherwise</span></div>\n\
<div class=\"line\"><span class=\"comment\">// accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MRenderTargetManager.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;viewRenderOverrideMRT.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">viewRenderOverrideMRT::viewRenderOverrideMRT(<span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\">: MRenderOverride(name)</div>\n\
<div class=\"line\">, mUIName(<span class=\"stringliteral\">&quot;Sample VP2 MRT Override&quot;</span>)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i=0; i&lt;kOperationCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mRenderOperations[i] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    mCurrentOperation = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i=0; i&lt;kShaderCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mShaderInstances[i] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sampleCount = 1; <span class=\"comment\">// no multi-sampling, 16-bit floating point target</span></div>\n\
<div class=\"line\">    MHWRender::MRasterFormat colorFormat = MHWRender::kR16G16B16A16_FLOAT;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mTargetOverrideNames[kTempColor1] = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_MRT_Color_Target1__&quot;</span>);</div>\n\
<div class=\"line\">    mTargetDescriptions [kTempColor1] =</div>\n\
<div class=\"line\">        <span class=\"keyword\">new</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_description.html\">MHWRender::MRenderTargetDescription</a>(mTargetOverrideNames[kTempColor1], 256, 256, sampleCount, colorFormat, 0, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    mTargets            [kTempColor1] = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mTargetOverrideNames[kTempColor2] = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_MRT_Color_Target2__&quot;</span>);</div>\n\
<div class=\"line\">    mTargetDescriptions [kTempColor2] =</div>\n\
<div class=\"line\">        <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_description.html\">MHWRender::MRenderTargetDescription</a>(mTargetOverrideNames[kTempColor2], 256, 256, sampleCount, colorFormat, 0, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    mTargets            [kTempColor2] = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">viewRenderOverrideMRT::~viewRenderOverrideMRT()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;kOperationCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> mRenderOperations[i];</div>\n\
<div class=\"line\">        mRenderOperations[i] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* theRenderer = <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (theRenderer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Release shaders</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr = theRenderer-&gt;<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;kShaderCount; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (mShaderInstances[i])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (shaderMgr)</div>\n\
<div class=\"line\">                    shaderMgr-&gt;<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(mShaderInstances[i]);</div>\n\
<div class=\"line\">                mShaderInstances[i] = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Release targets</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html\">MHWRender::MRenderTargetManager</a>* targetManager = theRenderer-&gt;<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a2228b9005f574393fbe87a4477161dc3\">getRenderTargetManager</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;kTargetCount; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (mTargetDescriptions[i])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> mTargetDescriptions[i];</div>\n\
<div class=\"line\">                mTargetDescriptions[i] = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (mTargets[i])</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (targetManager)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    targetManager-&gt;<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html#a3ac81120f77bddaf281b6f1ba21c83d1\">releaseRenderTarget</a>(mTargets[i]);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                mTargets[i] = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MHWRender::DrawAPI viewRenderOverrideMRT::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MHWRender::kOpenGL | MHWRender::kDirectX11 | MHWRender::kOpenGLCoreProfile);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> viewRenderOverrideMRT::startOperationIterator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mCurrentOperation = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_operation.html\">MHWRender::MRenderOperation</a>* viewRenderOverrideMRT::renderOperation()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mCurrentOperation &gt;= 0 &amp;&amp; mCurrentOperation &lt; kOperationCount)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Skip empty and disabled operations</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span>(!mRenderOperations[mCurrentOperation] || !mRenderOperationEnabled[mCurrentOperation])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mCurrentOperation++;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (mCurrentOperation &gt;= kOperationCount)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mRenderOperations[mCurrentOperation])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> mRenderOperations[mCurrentOperation];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> viewRenderOverrideMRT::nextRenderOperation()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mCurrentOperation++;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mCurrentOperation &lt; kOperationCount)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Update list of operations to perform:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 1. Clear 2 color targets, 1 depth target. Set different fill colors for each MRT target</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 2. Render the scene to 2 color targets.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 3. Perform user operation on 2 targets</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 4. Preview the 2 targets as sub-regions in a 3rd target</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 5. Present 3rd target</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Operations before the preview can be enabled / disable to change</span></div>\n\
<div class=\"line\"><span class=\"comment\">// what is shown by the preview operation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> viewRenderOverrideMRT::updateRenderOperations()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> initOperations = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;kOperationCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mRenderOperations[i])</div>\n\
<div class=\"line\">            initOperations = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (initOperations)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mRenderOperationNames[kTargetClear] = <span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_TargetClearMRT&quot;</span>;</div>\n\
<div class=\"line\">        quadRenderMRT * quadOp = <span class=\"keyword\">new</span> quadRenderMRT (mRenderOperationNames[kTargetClear]);</div>\n\
<div class=\"line\">        mRenderOperations[kTargetClear] = quadOp ;</div>\n\
<div class=\"line\">        mRenderOperationEnabled[kTargetClear] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mRenderOperationNames[kMaya3dSceneRender] = <span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_SceneRenderMRT&quot;</span>;</div>\n\
<div class=\"line\">        sceneRenderMRT * sceneOp = <span class=\"keyword\">new</span> sceneRenderMRT (mRenderOperationNames[kMaya3dSceneRender]);</div>\n\
<div class=\"line\">        mRenderOperations[kMaya3dSceneRender] = sceneOp;</div>\n\
<div class=\"line\">        mRenderOperationEnabled[kMaya3dSceneRender] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mRenderOperationNames[kUserOp] = <span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_UserOpMRT&quot;</span>;</div>\n\
<div class=\"line\">        userOperationMRT * userOp = <span class=\"keyword\">new</span> userOperationMRT (mRenderOperationNames[kUserOp]);</div>\n\
<div class=\"line\">        mRenderOperations[kUserOp] = userOp;</div>\n\
<div class=\"line\">        mRenderOperationEnabled[kUserOp] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mRenderOperationNames[kTargetPreview] = <span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_TargetPreview&quot;</span>;</div>\n\
<div class=\"line\">        quadRenderMRT * quadOp2 = <span class=\"keyword\">new</span> quadRenderMRT (mRenderOperationNames[kTargetPreview]);</div>\n\
<div class=\"line\">        mRenderOperations[kTargetPreview] = quadOp2;</div>\n\
<div class=\"line\">        mRenderOperationEnabled[kTargetPreview] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mRenderOperationNames[kPresentOp] = <span class=\"stringliteral\">&quot;_viewRenderOverrideMRT_PresentTargetMRT&quot;</span>;</div>\n\
<div class=\"line\">        mRenderOperations[kPresentOp] = <span class=\"keyword\">new</span> presentTargetMRT(mRenderOperationNames[kPresentOp]);</div>\n\
<div class=\"line\">        mRenderOperationEnabled[kPresentOp] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    mCurrentOperation = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> haveOperations = <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;kOperationCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mRenderOperations[i])</div>\n\
<div class=\"line\">            haveOperations = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> haveOperations;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Update all targets used for rendering</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> viewRenderOverrideMRT::updateRenderTargets( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a> *theRenderer,</div>\n\
<div class=\"line\">                                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html\">MHWRender::MRenderTargetManager</a> *targetManager)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!targetManager || !theRenderer)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the current output target size</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> targetWidth = 256;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> targetHeight = 256;</div>\n\
<div class=\"line\">    theRenderer-&gt;<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aef186014d5c44ba270308a00286f75fd\">outputTargetSize</a>( targetWidth, targetHeight );</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set this to be true to test rendering to larger than current target size.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> testTargetResize = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (testTargetResize)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        targetWidth *= 2;</div>\n\
<div class=\"line\">        targetHeight *= 1;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create or resize the targets</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> targetId = 0; targetId &lt; kTargetCount; ++targetId)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mTargetDescriptions[targetId]-&gt;setWidth( targetWidth  );</div>\n\
<div class=\"line\">        mTargetDescriptions[targetId]-&gt;setHeight( targetHeight );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Contrived test code to create incompatible target descriptions.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (targetId &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mTargetDescriptions[targetId]-&gt;setWidth( 100 );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (! mTargetDescriptions[targetId]-&gt;compatibleWithDescription( *(mTargetDescriptions[0]) ))</div>\n\
<div class=\"line\">                mTargetDescriptions[targetId]-&gt;setWidth( targetWidth );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!mTargets[targetId])</div>\n\
<div class=\"line\">            mTargets[targetId] =  targetManager-&gt;<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html#a34596dab85af525cd42532e7e5e5c39e\">acquireRenderTarget</a>( *( mTargetDescriptions[targetId]) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            mTargets[targetId]-&gt;<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html#ad3c82c6bf98ed514ccb8e35b573f9f85\">updateDescription</a>( *( mTargetDescriptions[targetId]) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// We want to render to 2 targets for each of the following operations</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp = (quadRenderMRT * )mRenderOperations[kTargetClear];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        quadOp-&gt;useViewportRect(testTargetResize);</div>\n\
<div class=\"line\">        quadOp-&gt;setRenderTargets( mTargets, 2 );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    sceneRenderMRT *sceneOp = (sceneRenderMRT *)mRenderOperations[kMaya3dSceneRender];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sceneOp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        sceneOp-&gt;useViewportRect(testTargetResize);</div>\n\
<div class=\"line\">        sceneOp-&gt;setRenderTargets( mTargets );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    userOperationMRT * userOp = (userOperationMRT *)mRenderOperations[kUserOp];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (userOp)</div>\n\
<div class=\"line\">        userOp-&gt;setRenderTargets( mTargets );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// We NULL the output targets here so that the result will go into the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// internal target and be presented from the internal targets</span></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp2 = (quadRenderMRT * )mRenderOperations[kTargetPreview];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp2)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        quadOp2-&gt;useViewportRect(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        quadOp2-&gt;setRenderTargets( NULL, 0 );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    presentTargetMRT *presentOp = (presentTargetMRT *)mRenderOperations[kPresentOp];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (presentOp)</div>\n\
<div class=\"line\">        presentOp-&gt;setRenderTargets( NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Update all shaders used for rendering</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> viewRenderOverrideMRT::updateShaders(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up a MRT clear shader</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *shaderInstance = mShaderInstances[kTargetClearShader];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shaderInstance = mShaderInstances[kTargetClearShader] = shaderMgr-&gt;<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a581c659670f0e3168750382c61a91a25\">getEffectsFileShader</a>( <span class=\"stringliteral\">&quot;mayaClearColorMRT&quot;</span>, <span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shaderInstance)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set constant parameters</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> target1Color[4] = { 0.0f, 1.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> target2Color[4] = { 1.0f, 0.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            shaderInstance-&gt;<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gTargetColor1&quot;</span>, target1Color);</div>\n\
<div class=\"line\">            shaderInstance-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gTargetColor2&quot;</span>, target2Color);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shader on quad operation</span></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp = (quadRenderMRT * )mRenderOperations[kTargetClear];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp)</div>\n\
<div class=\"line\">        quadOp-&gt;setShader( mShaderInstances[kTargetClearShader] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up a MRT geometry attribute shader</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *shaderInstance1 = mShaderInstances[kSceneAttributeShader];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shaderInstance1 = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a581c659670f0e3168750382c61a91a25\">getEffectsFileShader</a>( <span class=\"stringliteral\">&quot;mayaGeometryAttributeMRT&quot;</span>, <span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">        mShaderInstances[kSceneAttributeShader] = shaderInstance1;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shader on scene operation</span></div>\n\
<div class=\"line\">    sceneRenderMRT *sceneOp = (sceneRenderMRT *)mRenderOperations[kMaya3dSceneRender];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sceneOp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        sceneOp-&gt;setShader( shaderInstance1 );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up a preview target shader (MRT as input)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *shaderInstance2 = mShaderInstances[kTargetPreviewShader];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance2)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shaderInstance2 = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a581c659670f0e3168750382c61a91a25\">getEffectsFileShader</a>( <span class=\"stringliteral\">&quot;FreeView&quot;</span>, <span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">        mShaderInstances[kTargetPreviewShader] = shaderInstance2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set constant parmaeters</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shaderInstance2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> borderClr[4] = { 1.0f, 1.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> backGroundClr[4] = { 0.0f, 0.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gBorderColor&quot;</span>, borderClr );</div>\n\
<div class=\"line\">            shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gBackgroundColor&quot;</span>, backGroundClr );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shader&#39;s per frame parameters</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (shaderInstance2)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> targetWidth = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> targetHeight = 0;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a> *theRenderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( theRenderer )</div>\n\
<div class=\"line\">            theRenderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aef186014d5c44ba270308a00286f75fd\">outputTargetSize</a>( targetWidth, targetHeight );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> vpSize[2] = { (float)targetWidth,  (<span class=\"keywordtype\">float</span>)targetHeight };</div>\n\
<div class=\"line\">        shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gViewportSizePixels&quot;</span>, vpSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> sourceSize[2] = { (float)targetWidth,  (<span class=\"keywordtype\">float</span>)targetHeight };</div>\n\
<div class=\"line\">        shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gSourceSizePixels&quot;</span>, sourceSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gBorderSizePixels&quot;</span>, 0.00625f * targetWidth );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Bind two input targets</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mTargets[0] &amp;&amp; mTargets[1])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_render_target_assignment.html\">MHWRender::MRenderTargetAssignment</a> assignment;</div>\n\
<div class=\"line\">            assignment.<a name=\"a21\"></a>target = mTargets[0];</div>\n\
<div class=\"line\">            shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gSourceTex&quot;</span>, assignment);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_render_target_assignment.html\">MHWRender::MRenderTargetAssignment</a> assignment2;</div>\n\
<div class=\"line\">            assignment2.target = mTargets[1];</div>\n\
<div class=\"line\">            shaderInstance2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;gSourceTex2&quot;</span>, assignment2);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shader on quad operation</span></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp2 = (quadRenderMRT * )mRenderOperations[kTargetPreview];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp2)</div>\n\
<div class=\"line\">        quadOp2-&gt;setShader( mShaderInstances[kTargetPreviewShader] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp &amp;&amp; shaderInstance &amp;&amp; quadOp2 &amp;&amp; shaderInstance2)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Update override for the current frame</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> viewRenderOverrideMRT::setup(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; destination)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Firewall checks</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!renderer) <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr = renderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderMgr) <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html\">MHWRender::MRenderTargetManager</a> *targetManager = renderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a2228b9005f574393fbe87a4477161dc3\">getRenderTargetManager</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!targetManager) <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update render operations</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = updateRenderOperations();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update render targets</span></div>\n\
<div class=\"line\">    status = updateRenderTargets( renderer, targetManager );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shaders</span></div>\n\
<div class=\"line\">    status = updateShaders( shaderMgr );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> viewRenderOverrideMRT::cleanup()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mCurrentOperation = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp = (quadRenderMRT * )mRenderOperations[kTargetClear];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp)</div>\n\
<div class=\"line\">        quadOp-&gt;setRenderTargets( NULL, 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    sceneRenderMRT *sceneOp = (sceneRenderMRT *)mRenderOperations[kMaya3dSceneRender];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sceneOp)</div>\n\
<div class=\"line\">        sceneOp-&gt;setRenderTargets( NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    userOperationMRT * userOp = (userOperationMRT *)mRenderOperations[kUserOp];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (userOp)</div>\n\
<div class=\"line\">        userOp-&gt;setRenderTargets( NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    quadRenderMRT * quadOp2 = (quadRenderMRT * )mRenderOperations[kTargetPreview];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (quadOp2)</div>\n\
<div class=\"line\">        quadOp2-&gt;setRenderTargets( NULL, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    presentTargetMRT *presentOp = (presentTargetMRT *)mRenderOperations[kPresentOp];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (presentOp)</div>\n\
<div class=\"line\">        presentOp-&gt;setRenderTargets( NULL );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">sceneRenderMRT ::sceneRenderMRT (<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\">: MSceneRender(name)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> val[4] = { 0.0f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">    mClearOperation.setClearColor(val);</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">    mShaderInstance = NULL;</div>\n\
<div class=\"line\">    mViewRectangle[0] = 0.1f;</div>\n\
<div class=\"line\">    mViewRectangle[1] = 0.1f;</div>\n\
<div class=\"line\">    mViewRectangle[2] = 0.8f;</div>\n\
<div class=\"line\">    mViewRectangle[3] = 0.8f;</div>\n\
<div class=\"line\">    mUseViewportRect = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">sceneRenderMRT ::~sceneRenderMRT ()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">    mShaderInstance = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a>* <span class=\"keyword\">const</span>*</div>\n\
<div class=\"line\">sceneRenderMRT::targetOverrideList(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;listSize)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mTargets)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        listSize = 2;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mTargets[0];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html\">MHWRender::MClearOperation</a> &amp;</div>\n\
<div class=\"line\">sceneRenderMRT::clearOperation()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mClearOperation.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html#a55f714c9e4e24d416b345bfadf133783\">setMask</a>( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)</div>\n\
<div class=\"line\">        ( <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html#a55b92d9e088b6065ff2e762739b064f9aec490b4906370791a9f33ecbb018a3d5\">MHWRender::MClearOperation::kClearDepth</a> | <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html#a55b92d9e088b6065ff2e762739b064f9af08a64dd996417b2d2c16cefa18046b0\">MHWRender::MClearOperation::kClearStencil</a> ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mClearOperation;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* sceneRenderMRT::shaderOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mShaderInstance;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"comment\">// We only care about the opaque objects</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_scene_render.html#a952370b3954e51c4f19349a9a440d471\">MHWRender::MSceneRender::MSceneFilterOption</a> sceneRenderMRT::renderFilterOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_scene_render.html#a952370b3954e51c4f19349a9a440d471aa495b7b7881d7dacc1e6f3191022c9f1\">MHWRender::MSceneRender::kRenderOpaqueShadedItems</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span></div>\n\
<div class=\"line\">sceneRenderMRT::setRenderTargets(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a> **targets)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = targets;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a> * </div>\n\
<div class=\"line\">sceneRenderMRT::viewportRectangleOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mUseViewportRect)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mViewRectangle;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">presentTargetMRT ::presentTargetMRT (<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\">: MPresentTarget(name)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">presentTargetMRT ::~presentTargetMRT ()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a>* <span class=\"keyword\">const</span>*</div>\n\
<div class=\"line\">presentTargetMRT::targetOverrideList(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;listSize)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mTargets)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        listSize = 2;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mTargets[0];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    listSize = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span></div>\n\
<div class=\"line\">presentTargetMRT::setRenderTargets(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a> **targets)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = targets;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">quadRenderMRT::quadRenderMRT(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</div>\n\
<div class=\"line\">    : MQuadRender( name )</div>\n\
<div class=\"line\">    , mShaderInstance(NULL)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mOutputTargetCount = 0;</div>\n\
<div class=\"line\">    mOutputTargets = NULL;</div>\n\
<div class=\"line\">    mViewRectangle[0] = 0.1f;</div>\n\
<div class=\"line\">    mViewRectangle[1] = 0.1f;</div>\n\
<div class=\"line\">    mViewRectangle[2] = 0.8f;</div>\n\
<div class=\"line\">    mViewRectangle[3] = 0.8f;</div>\n\
<div class=\"line\">    mUseViewportRect = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">quadRenderMRT::~quadRenderMRT()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mOutputTargetCount = 0;</div>\n\
<div class=\"line\">    mOutputTargets = NULL;</div>\n\
<div class=\"line\">    mShaderInstance = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *</div>\n\
<div class=\"line\">quadRenderMRT::shader()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mShaderInstance;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a>* <span class=\"keyword\">const</span>*</div>\n\
<div class=\"line\">quadRenderMRT::targetOverrideList(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;listSize)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mOutputTargets)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        listSize = mOutputTargetCount;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mOutputTargets[0];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    listSize = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a> * </div>\n\
<div class=\"line\">quadRenderMRT::viewportRectangleOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mUseViewportRect)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mViewRectangle;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html\">MHWRender::MClearOperation</a> &amp;</div>\n\
<div class=\"line\">quadRenderMRT::clearOperation()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mClearOperation.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html#a55f714c9e4e24d416b345bfadf133783\">setMask</a>( (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>) <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_clear_operation.html#a55b92d9e088b6065ff2e762739b064f9aa9836daa6e01048fcf03e7023c0654d2\">MHWRender::MClearOperation::kClearAll</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mClearOperation;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">userOperationMRT::userOperationMRT(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</div>\n\
<div class=\"line\">: MUserRenderOperation( name )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">userOperationMRT::~userOperationMRT()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mTargets = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> userOperationMRT::execute( <span class=\"keyword\">const</span> <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a> &amp; drawContext )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Empty execute</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MHWRender::MRenderTarget</a>* <span class=\"keyword\">const</span>*</div>\n\
<div class=\"line\">userOperationMRT::targetOverrideList(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> &amp;listSize)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mTargets)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        listSize = 2;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> &amp;mTargets[0];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";