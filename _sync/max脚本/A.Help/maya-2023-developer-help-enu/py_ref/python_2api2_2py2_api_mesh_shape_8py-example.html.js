var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: python/api2/py2ApiMeshShape.py</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'python_2api2_2py2_api_mesh_shape_8py-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: python/api2/py2ApiMeshShape.py</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">python/api2/py2ApiMeshShape.py</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><a name=\"l00001\"></a><span class=\"lineno\">    1</span>&#160;<span class=\"comment\">#-</span></div>\n\
<div class=\"line\"><a name=\"l00002\"></a><span class=\"lineno\">    2</span>&#160;<span class=\"comment\"># ===========================================================================</span></div>\n\
<div class=\"line\"><a name=\"l00003\"></a><span class=\"lineno\">    3</span>&#160;<span class=\"comment\"># Copyright 2020 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><a name=\"l00004\"></a><span class=\"lineno\">    4</span>&#160;<span class=\"comment\">#</span></div>\n\
<div class=\"line\"><a name=\"l00005\"></a><span class=\"lineno\">    5</span>&#160;<span class=\"comment\"># Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><a name=\"l00006\"></a><span class=\"lineno\">    6</span>&#160;<span class=\"comment\"># agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><a name=\"l00007\"></a><span class=\"lineno\">    7</span>&#160;<span class=\"comment\"># otherwise accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><a name=\"l00008\"></a><span class=\"lineno\">    8</span>&#160;<span class=\"comment\"># ===========================================================================</span></div>\n\
<div class=\"line\"><a name=\"l00009\"></a><span class=\"lineno\">    9</span>&#160;<span class=\"comment\">#+</span></div>\n\
<div class=\"line\"><a name=\"l00010\"></a><span class=\"lineno\">   10</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00011\"></a><span class=\"lineno\">   11</span>&#160;<span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> object</div>\n\
<div class=\"line\"><a name=\"l00012\"></a><span class=\"lineno\">   12</span>&#160;<span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> next</div>\n\
<div class=\"line\"><a name=\"l00013\"></a><span class=\"lineno\">   13</span>&#160;<span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> range</div>\n\
<div class=\"line\"><a name=\"l00014\"></a><span class=\"lineno\">   14</span>&#160;<span class=\"keyword\">import</span> sys, math, ctypes, collections</div>\n\
<div class=\"line\"><a name=\"l00015\"></a><span class=\"lineno\">   15</span>&#160;<span class=\"keyword\">import</span> maya.api.OpenMaya <span class=\"keyword\">as</span> om</div>\n\
<div class=\"line\"><a name=\"l00016\"></a><span class=\"lineno\">   16</span>&#160;<span class=\"keyword\">import</span> maya.api.OpenMayaUI <span class=\"keyword\">as</span> omui</div>\n\
<div class=\"line\"><a name=\"l00017\"></a><span class=\"lineno\">   17</span>&#160;<span class=\"keyword\">import</span> maya.api.OpenMayaRender <span class=\"keyword\">as</span> omr</div>\n\
<div class=\"line\"><a name=\"l00018\"></a><span class=\"lineno\">   18</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00019\"></a><span class=\"lineno\">   19</span>&#160;<span class=\"keyword\">def </span>maya_useNewAPI():</div>\n\
<div class=\"line\"><a name=\"l00020\"></a><span class=\"lineno\">   20</span>&#160;    <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00021\"></a><span class=\"lineno\">   21</span>&#160;<span class=\"stringliteral\">    The presence of this function tells Maya that the plugin produces, and</span></div>\n\
<div class=\"line\"><a name=\"l00022\"></a><span class=\"lineno\">   22</span>&#160;<span class=\"stringliteral\">    expects to be passed, objects created using the Maya Python API 2.0.</span></div>\n\
<div class=\"line\"><a name=\"l00023\"></a><span class=\"lineno\">   23</span>&#160;<span class=\"stringliteral\">    &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00024\"></a><span class=\"lineno\">   24</span>&#160;    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00025\"></a><span class=\"lineno\">   25</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00026\"></a><span class=\"lineno\">   26</span>&#160;<span class=\"comment\">## helper function</span></div>\n\
<div class=\"line\"><a name=\"l00027\"></a><span class=\"lineno\">   27</span>&#160;<span class=\"keyword\">def </span>useSelectHighlight(selectedList, path):</div>\n\
<div class=\"line\"><a name=\"l00028\"></a><span class=\"lineno\">   28</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00029\"></a><span class=\"lineno\">   29</span>&#160;    displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l00030\"></a><span class=\"lineno\">   30</span>&#160;    <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kHilite <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kActiveComponent:</div>\n\
<div class=\"line\"><a name=\"l00031\"></a><span class=\"lineno\">   31</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00032\"></a><span class=\"lineno\">   32</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00033\"></a><span class=\"lineno\">   33</span>&#160;    pathCopy = om.MDagPath(path)</div>\n\
<div class=\"line\"><a name=\"l00034\"></a><span class=\"lineno\">   34</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00035\"></a><span class=\"lineno\">   35</span>&#160;    <span class=\"keywordflow\">while</span> pathCopy.length() &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l00036\"></a><span class=\"lineno\">   36</span>&#160;        <span class=\"keywordflow\">if</span> selectedList.hasItem(pathCopy):</div>\n\
<div class=\"line\"><a name=\"l00037\"></a><span class=\"lineno\">   37</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00038\"></a><span class=\"lineno\">   38</span>&#160;        pathCopy.pop()</div>\n\
<div class=\"line\"><a name=\"l00039\"></a><span class=\"lineno\">   39</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00040\"></a><span class=\"lineno\">   40</span>&#160;    <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00041\"></a><span class=\"lineno\">   41</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00042\"></a><span class=\"lineno\">   42</span>&#160;<span class=\"keyword\">def </span>floatApproxEqual(left, right):</div>\n\
<div class=\"line\"><a name=\"l00043\"></a><span class=\"lineno\">   43</span>&#160;    <span class=\"keywordflow\">return</span> abs(left - right) &lt; 0.0001</div>\n\
<div class=\"line\"><a name=\"l00044\"></a><span class=\"lineno\">   44</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00045\"></a><span class=\"lineno\">   45</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00046\"></a><span class=\"lineno\">   46</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00047\"></a><span class=\"lineno\">   47</span>&#160;<span class=\"comment\">## This class holds the underlying geometry for the shape or data.</span></div>\n\
<div class=\"line\"><a name=\"l00048\"></a><span class=\"lineno\">   48</span>&#160;<span class=\"comment\">## This is where geometry specific data and methods should go.</span></div>\n\
<div class=\"line\"><a name=\"l00049\"></a><span class=\"lineno\">   49</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00050\"></a><span class=\"lineno\">   50</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00051\"></a><span class=\"lineno\">   51</span>&#160;<span class=\"keyword\">class </span>apiMeshGeomUV(object):</div>\n\
<div class=\"line\"><a name=\"l00052\"></a><span class=\"lineno\">   52</span>&#160;    <span class=\"keyword\">def </span>__init__(self, other=None):</div>\n\
<div class=\"line\"><a name=\"l00053\"></a><span class=\"lineno\">   53</span>&#160;        <span class=\"keywordflow\">if</span> other:</div>\n\
<div class=\"line\"><a name=\"l00054\"></a><span class=\"lineno\">   54</span>&#160;            self.copy(other)</div>\n\
<div class=\"line\"><a name=\"l00055\"></a><span class=\"lineno\">   55</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00056\"></a><span class=\"lineno\">   56</span>&#160;            self.reset()</div>\n\
<div class=\"line\"><a name=\"l00057\"></a><span class=\"lineno\">   57</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00058\"></a><span class=\"lineno\">   58</span>&#160;    <span class=\"keyword\">def </span>uvId(self, fvi):</div>\n\
<div class=\"line\"><a name=\"l00059\"></a><span class=\"lineno\">   59</span>&#160;        <span class=\"keywordflow\">return</span> self.faceVertexIndex[fvi]</div>\n\
<div class=\"line\"><a name=\"l00060\"></a><span class=\"lineno\">   60</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00061\"></a><span class=\"lineno\">   61</span>&#160;    <span class=\"keyword\">def </span>getUV(self, uvId):</div>\n\
<div class=\"line\"><a name=\"l00062\"></a><span class=\"lineno\">   62</span>&#160;        <span class=\"keywordflow\">return</span> [ self.ucoord[uvId], self.vcoord[uvId] ]</div>\n\
<div class=\"line\"><a name=\"l00063\"></a><span class=\"lineno\">   63</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00064\"></a><span class=\"lineno\">   64</span>&#160;    <span class=\"keyword\">def </span>u(self, uvId):</div>\n\
<div class=\"line\"><a name=\"l00065\"></a><span class=\"lineno\">   65</span>&#160;        <span class=\"keywordflow\">return</span> self.ucoord[uvId]</div>\n\
<div class=\"line\"><a name=\"l00066\"></a><span class=\"lineno\">   66</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00067\"></a><span class=\"lineno\">   67</span>&#160;    <span class=\"keyword\">def </span>v(self, uvId):</div>\n\
<div class=\"line\"><a name=\"l00068\"></a><span class=\"lineno\">   68</span>&#160;        <span class=\"keywordflow\">return</span> self.vcoord[uvId]</div>\n\
<div class=\"line\"><a name=\"l00069\"></a><span class=\"lineno\">   69</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00070\"></a><span class=\"lineno\">   70</span>&#160;    <span class=\"keyword\">def </span>uvcount(self):</div>\n\
<div class=\"line\"><a name=\"l00071\"></a><span class=\"lineno\">   71</span>&#160;        <span class=\"keywordflow\">return</span> len(self.ucoord)</div>\n\
<div class=\"line\"><a name=\"l00072\"></a><span class=\"lineno\">   72</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00073\"></a><span class=\"lineno\">   73</span>&#160;    <span class=\"keyword\">def </span>append_uv(self, u, v):</div>\n\
<div class=\"line\"><a name=\"l00074\"></a><span class=\"lineno\">   74</span>&#160;        self.ucoord.append( u ) </div>\n\
<div class=\"line\"><a name=\"l00075\"></a><span class=\"lineno\">   75</span>&#160;        self.vcoord.append( v ) </div>\n\
<div class=\"line\"><a name=\"l00076\"></a><span class=\"lineno\">   76</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00077\"></a><span class=\"lineno\">   77</span>&#160;    <span class=\"keyword\">def </span>reset(self):</div>\n\
<div class=\"line\"><a name=\"l00078\"></a><span class=\"lineno\">   78</span>&#160;        self.ucoord = om.MFloatArray()</div>\n\
<div class=\"line\"><a name=\"l00079\"></a><span class=\"lineno\">   79</span>&#160;        self.vcoord = om.MFloatArray()</div>\n\
<div class=\"line\"><a name=\"l00080\"></a><span class=\"lineno\">   80</span>&#160;        self.faceVertexIndex = om.MIntArray()</div>\n\
<div class=\"line\"><a name=\"l00081\"></a><span class=\"lineno\">   81</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00082\"></a><span class=\"lineno\">   82</span>&#160;    <span class=\"keyword\">def </span>copy(self, other):</div>\n\
<div class=\"line\"><a name=\"l00083\"></a><span class=\"lineno\">   83</span>&#160;        self.ucoord = om.MFloatArray(other.ucoord)</div>\n\
<div class=\"line\"><a name=\"l00084\"></a><span class=\"lineno\">   84</span>&#160;        self.vcoord = om.MFloatArray(other.vcoord)</div>\n\
<div class=\"line\"><a name=\"l00085\"></a><span class=\"lineno\">   85</span>&#160;        self.faceVertexIndex = om.MIntArray(other.faceVertexIndex)</div>\n\
<div class=\"line\"><a name=\"l00086\"></a><span class=\"lineno\">   86</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00087\"></a><span class=\"lineno\">   87</span>&#160;<span class=\"keyword\">class </span>apiMeshGeom(object):</div>\n\
<div class=\"line\"><a name=\"l00088\"></a><span class=\"lineno\">   88</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l00089\"></a><span class=\"lineno\">   89</span>&#160;        self.vertices = om.MPointArray()</div>\n\
<div class=\"line\"><a name=\"l00090\"></a><span class=\"lineno\">   90</span>&#160;        self.face_counts = om.MIntArray()</div>\n\
<div class=\"line\"><a name=\"l00091\"></a><span class=\"lineno\">   91</span>&#160;        self.face_connects = om.MIntArray()</div>\n\
<div class=\"line\"><a name=\"l00092\"></a><span class=\"lineno\">   92</span>&#160;        self.normals = om.MVectorArray()</div>\n\
<div class=\"line\"><a name=\"l00093\"></a><span class=\"lineno\">   93</span>&#160;        self.uvcoords = apiMeshGeomUV()</div>\n\
<div class=\"line\"><a name=\"l00094\"></a><span class=\"lineno\">   94</span>&#160;        self.faceCount = 0</div>\n\
<div class=\"line\"><a name=\"l00095\"></a><span class=\"lineno\">   95</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00096\"></a><span class=\"lineno\">   96</span>&#160;    <span class=\"keyword\">def </span>copy(self, other):</div>\n\
<div class=\"line\"><a name=\"l00097\"></a><span class=\"lineno\">   97</span>&#160;        self.vertices = om.MPointArray(other.vertices)</div>\n\
<div class=\"line\"><a name=\"l00098\"></a><span class=\"lineno\">   98</span>&#160;        self.face_counts = om.MIntArray(other.face_counts)</div>\n\
<div class=\"line\"><a name=\"l00099\"></a><span class=\"lineno\">   99</span>&#160;        self.face_connects = om.MIntArray(other.face_connects)</div>\n\
<div class=\"line\"><a name=\"l00100\"></a><span class=\"lineno\">  100</span>&#160;        self.normals = om.MVectorArray(other.normals)</div>\n\
<div class=\"line\"><a name=\"l00101\"></a><span class=\"lineno\">  101</span>&#160;        self.uvcoords = apiMeshGeomUV(other.uvcoords)</div>\n\
<div class=\"line\"><a name=\"l00102\"></a><span class=\"lineno\">  102</span>&#160;        self.faceCount = other.faceCount</div>\n\
<div class=\"line\"><a name=\"l00103\"></a><span class=\"lineno\">  103</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00104\"></a><span class=\"lineno\">  104</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00105\"></a><span class=\"lineno\">  105</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00106\"></a><span class=\"lineno\">  106</span>&#160;<span class=\"comment\">## Provides a data type for some arbitrary user geometry.</span></div>\n\
<div class=\"line\"><a name=\"l00107\"></a><span class=\"lineno\">  107</span>&#160;<span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l00108\"></a><span class=\"lineno\">  108</span>&#160;<span class=\"comment\">## A users geometry class can exist in the DAG by creating an</span></div>\n\
<div class=\"line\"><a name=\"l00109\"></a><span class=\"lineno\">  109</span>&#160;<span class=\"comment\">## MPxSurfaceShape (and UI) class for it and can also be passed through</span></div>\n\
<div class=\"line\"><a name=\"l00110\"></a><span class=\"lineno\">  110</span>&#160;<span class=\"comment\">## DG connections by creating an MPxGeometryData class for it.</span></div>\n\
<div class=\"line\"><a name=\"l00111\"></a><span class=\"lineno\">  111</span>&#160;<span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l00112\"></a><span class=\"lineno\">  112</span>&#160;<span class=\"comment\">## MPxGeometryData is the same as MPxData except it provides </span></div>\n\
<div class=\"line\"><a name=\"l00113\"></a><span class=\"lineno\">  113</span>&#160;<span class=\"comment\">## additional methods to modify the geometry data via an iterator.</span></div>\n\
<div class=\"line\"><a name=\"l00114\"></a><span class=\"lineno\">  114</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00115\"></a><span class=\"lineno\">  115</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00116\"></a><span class=\"lineno\">  116</span>&#160;<span class=\"comment\">## Ascii file IO defines</span></div>\n\
<div class=\"line\"><a name=\"l00117\"></a><span class=\"lineno\">  117</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00118\"></a><span class=\"lineno\">  118</span>&#160;kDblQteChar     = <span class=\"stringliteral\">&quot;\\&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00119\"></a><span class=\"lineno\">  119</span>&#160;kSpaceChar      = <span class=\"stringliteral\">&quot; &quot;</span></div>\n\
<div class=\"line\"><a name=\"l00120\"></a><span class=\"lineno\">  120</span>&#160;kWrapString     = <span class=\"stringliteral\">&quot;\\n\\t\\t&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00121\"></a><span class=\"lineno\">  121</span>&#160;kVertexKeyword  = <span class=\"stringliteral\">&quot;v&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00122\"></a><span class=\"lineno\">  122</span>&#160;kNormalKeyword  = <span class=\"stringliteral\">&quot;vn&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00123\"></a><span class=\"lineno\">  123</span>&#160;kTextureKeyword = <span class=\"stringliteral\">&quot;vt&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00124\"></a><span class=\"lineno\">  124</span>&#160;kFaceKeyword    = <span class=\"stringliteral\">&quot;face&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00125\"></a><span class=\"lineno\">  125</span>&#160;kUVKeyword      = <span class=\"stringliteral\">&quot;uv&quot;</span> </div>\n\
<div class=\"line\"><a name=\"l00126\"></a><span class=\"lineno\">  126</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00127\"></a><span class=\"lineno\">  127</span>&#160;<span class=\"keyword\">class </span>apiMeshGeomIterator(om.MPxGeometryIterator):</div>\n\
<div class=\"line\"><a name=\"l00128\"></a><span class=\"lineno\">  128</span>&#160;    <span class=\"keyword\">def </span>__init__(self, userGeometry, components):</div>\n\
<div class=\"line\"><a name=\"l00129\"></a><span class=\"lineno\">  129</span>&#160;        om.MPxGeometryIterator.__init__(self, userGeometry, components)</div>\n\
<div class=\"line\"><a name=\"l00130\"></a><span class=\"lineno\">  130</span>&#160;        self.geometry = userGeometry</div>\n\
<div class=\"line\"><a name=\"l00131\"></a><span class=\"lineno\">  131</span>&#160;        self.reset()</div>\n\
<div class=\"line\"><a name=\"l00132\"></a><span class=\"lineno\">  132</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00133\"></a><span class=\"lineno\">  133</span>&#160;    <span class=\"keyword\">def </span>reset(self):</div>\n\
<div class=\"line\"><a name=\"l00134\"></a><span class=\"lineno\">  134</span>&#160;        <span class=\"comment\">## Resets the iterator to the start of the components so that another</span></div>\n\
<div class=\"line\"><a name=\"l00135\"></a><span class=\"lineno\">  135</span>&#160;        <span class=\"comment\">## pass over them may be made.</span></div>\n\
<div class=\"line\"><a name=\"l00136\"></a><span class=\"lineno\">  136</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00137\"></a><span class=\"lineno\">  137</span>&#160;        om.MPxGeometryIterator.reset(self)</div>\n\
<div class=\"line\"><a name=\"l00138\"></a><span class=\"lineno\">  138</span>&#160;        self.currentPoint = 0</div>\n\
<div class=\"line\"><a name=\"l00139\"></a><span class=\"lineno\">  139</span>&#160;        <span class=\"keywordflow\">if</span> self.geometry:</div>\n\
<div class=\"line\"><a name=\"l00140\"></a><span class=\"lineno\">  140</span>&#160;            maxVertex = len(self.geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l00141\"></a><span class=\"lineno\">  141</span>&#160;            self.maxPoints = maxVertex</div>\n\
<div class=\"line\"><a name=\"l00142\"></a><span class=\"lineno\">  142</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00143\"></a><span class=\"lineno\">  143</span>&#160;    <span class=\"keyword\">def </span>point(self):</div>\n\
<div class=\"line\"><a name=\"l00144\"></a><span class=\"lineno\">  144</span>&#160;        <span class=\"comment\">## Returns the point for the current element in the iteration.</span></div>\n\
<div class=\"line\"><a name=\"l00145\"></a><span class=\"lineno\">  145</span>&#160;        <span class=\"comment\">## This is used by the transform tools for positioning the</span></div>\n\
<div class=\"line\"><a name=\"l00146\"></a><span class=\"lineno\">  146</span>&#160;        <span class=\"comment\">## manipulator in component mode. It is also used by deformers.</span></div>\n\
<div class=\"line\"><a name=\"l00147\"></a><span class=\"lineno\">  147</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00148\"></a><span class=\"lineno\">  148</span>&#160;        pnt = om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l00149\"></a><span class=\"lineno\">  149</span>&#160;        <span class=\"keywordflow\">if</span> self.geometry:</div>\n\
<div class=\"line\"><a name=\"l00150\"></a><span class=\"lineno\">  150</span>&#160;            pnt = self.geometry.vertices[ self.index() ]</div>\n\
<div class=\"line\"><a name=\"l00151\"></a><span class=\"lineno\">  151</span>&#160;        <span class=\"keywordflow\">return</span> pnt</div>\n\
<div class=\"line\"><a name=\"l00152\"></a><span class=\"lineno\">  152</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00153\"></a><span class=\"lineno\">  153</span>&#160;    <span class=\"keyword\">def </span>setPoint(self, pnt):</div>\n\
<div class=\"line\"><a name=\"l00154\"></a><span class=\"lineno\">  154</span>&#160;        <span class=\"comment\">## Set the point for the current element in the iteration.</span></div>\n\
<div class=\"line\"><a name=\"l00155\"></a><span class=\"lineno\">  155</span>&#160;        <span class=\"comment\">## This is used by deformers.</span></div>\n\
<div class=\"line\"><a name=\"l00156\"></a><span class=\"lineno\">  156</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00157\"></a><span class=\"lineno\">  157</span>&#160;        <span class=\"keywordflow\">if</span> self.geometry:</div>\n\
<div class=\"line\"><a name=\"l00158\"></a><span class=\"lineno\">  158</span>&#160;            self.geometry.vertices[ self.index() ] = pnt</div>\n\
<div class=\"line\"><a name=\"l00159\"></a><span class=\"lineno\">  159</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00160\"></a><span class=\"lineno\">  160</span>&#160;    <span class=\"keyword\">def </span>iteratorCount(self):</div>\n\
<div class=\"line\"><a name=\"l00161\"></a><span class=\"lineno\">  161</span>&#160;        <span class=\"comment\">## Return the number of vertices in the iteration.</span></div>\n\
<div class=\"line\"><a name=\"l00162\"></a><span class=\"lineno\">  162</span>&#160;        <span class=\"comment\">## This is used by deformers such as smooth skinning</span></div>\n\
<div class=\"line\"><a name=\"l00163\"></a><span class=\"lineno\">  163</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00164\"></a><span class=\"lineno\">  164</span>&#160;        <span class=\"keywordflow\">if</span> self.geometry:</div>\n\
<div class=\"line\"><a name=\"l00165\"></a><span class=\"lineno\">  165</span>&#160;            <span class=\"keywordflow\">return</span> len(self.geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l00166\"></a><span class=\"lineno\">  166</span>&#160;        <span class=\"keywordflow\">return</span> 0</div>\n\
<div class=\"line\"><a name=\"l00167\"></a><span class=\"lineno\">  167</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00168\"></a><span class=\"lineno\">  168</span>&#160;    <span class=\"keyword\">def </span>hasPoints(self):</div>\n\
<div class=\"line\"><a name=\"l00169\"></a><span class=\"lineno\">  169</span>&#160;        <span class=\"comment\">## Returns true since the shape data has points.</span></div>\n\
<div class=\"line\"><a name=\"l00170\"></a><span class=\"lineno\">  170</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00171\"></a><span class=\"lineno\">  171</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00172\"></a><span class=\"lineno\">  172</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00173\"></a><span class=\"lineno\">  173</span>&#160;<span class=\"keyword\">class </span>apiMeshData(om.MPxGeometryData):</div>\n\
<div class=\"line\"><a name=\"l00174\"></a><span class=\"lineno\">  174</span>&#160;    typeName = <span class=\"stringliteral\">&quot;apiMeshData&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00175\"></a><span class=\"lineno\">  175</span>&#160;    id = om.MTypeId(0x80778)</div>\n\
<div class=\"line\"><a name=\"l00176\"></a><span class=\"lineno\">  176</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00177\"></a><span class=\"lineno\">  177</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l00178\"></a><span class=\"lineno\">  178</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l00179\"></a><span class=\"lineno\">  179</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshData()</div>\n\
<div class=\"line\"><a name=\"l00180\"></a><span class=\"lineno\">  180</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00181\"></a><span class=\"lineno\">  181</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l00182\"></a><span class=\"lineno\">  182</span>&#160;        om.MPxGeometryData.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l00183\"></a><span class=\"lineno\">  183</span>&#160;        self.fGeometry = apiMeshGeom()</div>\n\
<div class=\"line\"><a name=\"l00184\"></a><span class=\"lineno\">  184</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00185\"></a><span class=\"lineno\">  185</span>&#160;    <span class=\"keyword\">def </span>__del__(self):</div>\n\
<div class=\"line\"><a name=\"l00186\"></a><span class=\"lineno\">  186</span>&#160;        self.fGeometry = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00187\"></a><span class=\"lineno\">  187</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00188\"></a><span class=\"lineno\">  188</span>&#160;    <span class=\"keyword\">def </span>readASCII(self, argList, idx):</div>\n\
<div class=\"line\"><a name=\"l00189\"></a><span class=\"lineno\">  189</span>&#160;        idx = self.readVerticesASCII(argList, idx)</div>\n\
<div class=\"line\"><a name=\"l00190\"></a><span class=\"lineno\">  190</span>&#160;        idx = self.readNormalsASCII(argList, idx)</div>\n\
<div class=\"line\"><a name=\"l00191\"></a><span class=\"lineno\">  191</span>&#160;        idx = self.readFacesASCII(argList, idx)</div>\n\
<div class=\"line\"><a name=\"l00192\"></a><span class=\"lineno\">  192</span>&#160;        idx = self.readUVASCII(argList, idx)</div>\n\
<div class=\"line\"><a name=\"l00193\"></a><span class=\"lineno\">  193</span>&#160;        <span class=\"keywordflow\">return</span> idx</div>\n\
<div class=\"line\"><a name=\"l00194\"></a><span class=\"lineno\">  194</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00195\"></a><span class=\"lineno\">  195</span>&#160;    <span class=\"keyword\">def </span>readBinary(self, inputData, length):</div>\n\
<div class=\"line\"><a name=\"l00196\"></a><span class=\"lineno\">  196</span>&#160;        <span class=\"comment\">## not implemented</span></div>\n\
<div class=\"line\"><a name=\"l00197\"></a><span class=\"lineno\">  197</span>&#160;        <span class=\"keywordflow\">return</span> 0</div>\n\
<div class=\"line\"><a name=\"l00198\"></a><span class=\"lineno\">  198</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00199\"></a><span class=\"lineno\">  199</span>&#160;    <span class=\"keyword\">def </span>writeASCII(self):</div>\n\
<div class=\"line\"><a name=\"l00200\"></a><span class=\"lineno\">  200</span>&#160;        data  = self.writeVerticesASCII()</div>\n\
<div class=\"line\"><a name=\"l00201\"></a><span class=\"lineno\">  201</span>&#160;        data += self.writeNormalsASCII()</div>\n\
<div class=\"line\"><a name=\"l00202\"></a><span class=\"lineno\">  202</span>&#160;        data += self.writeFacesASCII()</div>\n\
<div class=\"line\"><a name=\"l00203\"></a><span class=\"lineno\">  203</span>&#160;        data += self.writeUVASCII()</div>\n\
<div class=\"line\"><a name=\"l00204\"></a><span class=\"lineno\">  204</span>&#160;        <span class=\"keywordflow\">return</span> data</div>\n\
<div class=\"line\"><a name=\"l00205\"></a><span class=\"lineno\">  205</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00206\"></a><span class=\"lineno\">  206</span>&#160;    <span class=\"keyword\">def </span>writeBinary(self):</div>\n\
<div class=\"line\"><a name=\"l00207\"></a><span class=\"lineno\">  207</span>&#160;        <span class=\"comment\">## not implemented</span></div>\n\
<div class=\"line\"><a name=\"l00208\"></a><span class=\"lineno\">  208</span>&#160;        <span class=\"keywordflow\">return</span> bytearray()</div>\n\
<div class=\"line\"><a name=\"l00209\"></a><span class=\"lineno\">  209</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00210\"></a><span class=\"lineno\">  210</span>&#160;    <span class=\"keyword\">def </span>copy(self, src):</div>\n\
<div class=\"line\"><a name=\"l00211\"></a><span class=\"lineno\">  211</span>&#160;        self.fGeometry.copy(src.fGeometry)</div>\n\
<div class=\"line\"><a name=\"l00212\"></a><span class=\"lineno\">  212</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00213\"></a><span class=\"lineno\">  213</span>&#160;    <span class=\"keyword\">def </span>typeId(self):</div>\n\
<div class=\"line\"><a name=\"l00214\"></a><span class=\"lineno\">  214</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshData.id</div>\n\
<div class=\"line\"><a name=\"l00215\"></a><span class=\"lineno\">  215</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00216\"></a><span class=\"lineno\">  216</span>&#160;    <span class=\"keyword\">def </span>name(self):</div>\n\
<div class=\"line\"><a name=\"l00217\"></a><span class=\"lineno\">  217</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshData.typeName</div>\n\
<div class=\"line\"><a name=\"l00218\"></a><span class=\"lineno\">  218</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00219\"></a><span class=\"lineno\">  219</span>&#160;    <span class=\"comment\">##################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00220\"></a><span class=\"lineno\">  220</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00221\"></a><span class=\"lineno\">  221</span>&#160;    <span class=\"comment\">## Overrides from MPxGeometryData</span></div>\n\
<div class=\"line\"><a name=\"l00222\"></a><span class=\"lineno\">  222</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00223\"></a><span class=\"lineno\">  223</span>&#160;    <span class=\"comment\">##################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00224\"></a><span class=\"lineno\">  224</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00225\"></a><span class=\"lineno\">  225</span>&#160;    <span class=\"keyword\">def </span>iterator(self, componentList, component, useComponents, world=None):</div>\n\
<div class=\"line\"><a name=\"l00226\"></a><span class=\"lineno\">  226</span>&#160;        <span class=\"keywordflow\">if</span> useComponents:</div>\n\
<div class=\"line\"><a name=\"l00227\"></a><span class=\"lineno\">  227</span>&#160;            <span class=\"keywordflow\">return</span> apiMeshGeomIterator(self.fGeometry, componentList)</div>\n\
<div class=\"line\"><a name=\"l00228\"></a><span class=\"lineno\">  228</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00229\"></a><span class=\"lineno\">  229</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshGeomIterator(self.fGeometry, component)</div>\n\
<div class=\"line\"><a name=\"l00230\"></a><span class=\"lineno\">  230</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l00231\"></a><span class=\"lineno\">  231</span>&#160;    <span class=\"comment\">##################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00232\"></a><span class=\"lineno\">  232</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00233\"></a><span class=\"lineno\">  233</span>&#160;    <span class=\"comment\">## Helper methods</span></div>\n\
<div class=\"line\"><a name=\"l00234\"></a><span class=\"lineno\">  234</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00235\"></a><span class=\"lineno\">  235</span>&#160;    <span class=\"comment\">##################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00236\"></a><span class=\"lineno\">  236</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00237\"></a><span class=\"lineno\">  237</span>&#160;    <span class=\"keyword\">def </span>readVerticesASCII(self, argList, idx):</div>\n\
<div class=\"line\"><a name=\"l00238\"></a><span class=\"lineno\">  238</span>&#160;        geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00239\"></a><span class=\"lineno\">  239</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00240\"></a><span class=\"lineno\">  240</span>&#160;            geomStr = argList.asString(idx)</div>\n\
<div class=\"line\"><a name=\"l00241\"></a><span class=\"lineno\">  241</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00242\"></a><span class=\"lineno\">  242</span>&#160;            geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00243\"></a><span class=\"lineno\">  243</span>&#160;            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00244\"></a><span class=\"lineno\">  244</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00245\"></a><span class=\"lineno\">  245</span>&#160;        <span class=\"keywordflow\">if</span> geomStr == kVertexKeyword:</div>\n\
<div class=\"line\"><a name=\"l00246\"></a><span class=\"lineno\">  246</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00247\"></a><span class=\"lineno\">  247</span>&#160;            vertexCount = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00248\"></a><span class=\"lineno\">  248</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00249\"></a><span class=\"lineno\">  249</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(vertexCount):</div>\n\
<div class=\"line\"><a name=\"l00250\"></a><span class=\"lineno\">  250</span>&#160;                vertex = argList.asPoint(idx)</div>\n\
<div class=\"line\"><a name=\"l00251\"></a><span class=\"lineno\">  251</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00252\"></a><span class=\"lineno\">  252</span>&#160;                self.fGeometry.vertices.append(vertex)</div>\n\
<div class=\"line\"><a name=\"l00253\"></a><span class=\"lineno\">  253</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00254\"></a><span class=\"lineno\">  254</span>&#160;        <span class=\"keywordflow\">return</span> idx</div>\n\
<div class=\"line\"><a name=\"l00255\"></a><span class=\"lineno\">  255</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00256\"></a><span class=\"lineno\">  256</span>&#160;    <span class=\"keyword\">def </span>readNormalsASCII(self, argList, idx):</div>\n\
<div class=\"line\"><a name=\"l00257\"></a><span class=\"lineno\">  257</span>&#160;        geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00258\"></a><span class=\"lineno\">  258</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00259\"></a><span class=\"lineno\">  259</span>&#160;            geomStr = argList.asString(idx)</div>\n\
<div class=\"line\"><a name=\"l00260\"></a><span class=\"lineno\">  260</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00261\"></a><span class=\"lineno\">  261</span>&#160;            geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00262\"></a><span class=\"lineno\">  262</span>&#160;            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00263\"></a><span class=\"lineno\">  263</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00264\"></a><span class=\"lineno\">  264</span>&#160;        <span class=\"keywordflow\">if</span> geomStr == kNormalKeyword:</div>\n\
<div class=\"line\"><a name=\"l00265\"></a><span class=\"lineno\">  265</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00266\"></a><span class=\"lineno\">  266</span>&#160;            normalCount = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00267\"></a><span class=\"lineno\">  267</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00268\"></a><span class=\"lineno\">  268</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(normalCount):</div>\n\
<div class=\"line\"><a name=\"l00269\"></a><span class=\"lineno\">  269</span>&#160;                normal = argList.asVector(idx)</div>\n\
<div class=\"line\"><a name=\"l00270\"></a><span class=\"lineno\">  270</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00271\"></a><span class=\"lineno\">  271</span>&#160;                self.fGeometry.normals.append(normal)</div>\n\
<div class=\"line\"><a name=\"l00272\"></a><span class=\"lineno\">  272</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00273\"></a><span class=\"lineno\">  273</span>&#160;        <span class=\"keywordflow\">return</span> idx</div>\n\
<div class=\"line\"><a name=\"l00274\"></a><span class=\"lineno\">  274</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00275\"></a><span class=\"lineno\">  275</span>&#160;    <span class=\"keyword\">def </span>readFacesASCII(self, argList, idx):</div>\n\
<div class=\"line\"><a name=\"l00276\"></a><span class=\"lineno\">  276</span>&#160;        geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00277\"></a><span class=\"lineno\">  277</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00278\"></a><span class=\"lineno\">  278</span>&#160;            geomStr = argList.asString(idx)</div>\n\
<div class=\"line\"><a name=\"l00279\"></a><span class=\"lineno\">  279</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00280\"></a><span class=\"lineno\">  280</span>&#160;            geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00281\"></a><span class=\"lineno\">  281</span>&#160;            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00282\"></a><span class=\"lineno\">  282</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00283\"></a><span class=\"lineno\">  283</span>&#160;        <span class=\"keywordflow\">while</span> geomStr == kFaceKeyword:</div>\n\
<div class=\"line\"><a name=\"l00284\"></a><span class=\"lineno\">  284</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00285\"></a><span class=\"lineno\">  285</span>&#160;            faceCount = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00286\"></a><span class=\"lineno\">  286</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00287\"></a><span class=\"lineno\">  287</span>&#160;            self.fGeometry.face_counts.append(faceCount)</div>\n\
<div class=\"line\"><a name=\"l00288\"></a><span class=\"lineno\">  288</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(faceCount):</div>\n\
<div class=\"line\"><a name=\"l00289\"></a><span class=\"lineno\">  289</span>&#160;                vid = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00290\"></a><span class=\"lineno\">  290</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00291\"></a><span class=\"lineno\">  291</span>&#160;                self.fGeometry.face_connects.append(vid)</div>\n\
<div class=\"line\"><a name=\"l00292\"></a><span class=\"lineno\">  292</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00293\"></a><span class=\"lineno\">  293</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00294\"></a><span class=\"lineno\">  294</span>&#160;                geomStr = argList.asString(idx)</div>\n\
<div class=\"line\"><a name=\"l00295\"></a><span class=\"lineno\">  295</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00296\"></a><span class=\"lineno\">  296</span>&#160;                geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00297\"></a><span class=\"lineno\">  297</span>&#160;                <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00298\"></a><span class=\"lineno\">  298</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00299\"></a><span class=\"lineno\">  299</span>&#160;        self.fGeometry.faceCount = len(self.fGeometry.face_counts)</div>\n\
<div class=\"line\"><a name=\"l00300\"></a><span class=\"lineno\">  300</span>&#160;        <span class=\"keywordflow\">return</span> idx</div>\n\
<div class=\"line\"><a name=\"l00301\"></a><span class=\"lineno\">  301</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00302\"></a><span class=\"lineno\">  302</span>&#160;    <span class=\"keyword\">def </span>readUVASCII(self, argList, idx):</div>\n\
<div class=\"line\"><a name=\"l00303\"></a><span class=\"lineno\">  303</span>&#160;        self.fGeometry.uvcoords.reset()</div>\n\
<div class=\"line\"><a name=\"l00304\"></a><span class=\"lineno\">  304</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00305\"></a><span class=\"lineno\">  305</span>&#160;        geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00306\"></a><span class=\"lineno\">  306</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l00307\"></a><span class=\"lineno\">  307</span>&#160;            geomStr = argList.asString(idx)</div>\n\
<div class=\"line\"><a name=\"l00308\"></a><span class=\"lineno\">  308</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l00309\"></a><span class=\"lineno\">  309</span>&#160;            geomStr = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00310\"></a><span class=\"lineno\">  310</span>&#160;            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l00311\"></a><span class=\"lineno\">  311</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00312\"></a><span class=\"lineno\">  312</span>&#160;        <span class=\"keywordflow\">if</span> geomStr == kUVKeyword:</div>\n\
<div class=\"line\"><a name=\"l00313\"></a><span class=\"lineno\">  313</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00314\"></a><span class=\"lineno\">  314</span>&#160;            uvCount = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00315\"></a><span class=\"lineno\">  315</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00316\"></a><span class=\"lineno\">  316</span>&#160;            faceVertexListCount = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00317\"></a><span class=\"lineno\">  317</span>&#160;            idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00318\"></a><span class=\"lineno\">  318</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(uvCount):</div>\n\
<div class=\"line\"><a name=\"l00319\"></a><span class=\"lineno\">  319</span>&#160;                u = argList.asDouble(idx)</div>\n\
<div class=\"line\"><a name=\"l00320\"></a><span class=\"lineno\">  320</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00321\"></a><span class=\"lineno\">  321</span>&#160;                v = argList.asDouble(idx)</div>\n\
<div class=\"line\"><a name=\"l00322\"></a><span class=\"lineno\">  322</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00323\"></a><span class=\"lineno\">  323</span>&#160;                self.fGeometry.uvcoords.append_uv(u, v)</div>\n\
<div class=\"line\"><a name=\"l00324\"></a><span class=\"lineno\">  324</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00325\"></a><span class=\"lineno\">  325</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(faceVertexListCount):</div>\n\
<div class=\"line\"><a name=\"l00326\"></a><span class=\"lineno\">  326</span>&#160;                fvi = argList.asInt(idx)</div>\n\
<div class=\"line\"><a name=\"l00327\"></a><span class=\"lineno\">  327</span>&#160;                idx = argList.lastArgUsed()+1</div>\n\
<div class=\"line\"><a name=\"l00328\"></a><span class=\"lineno\">  328</span>&#160;                self.fGeometry.uvcoords.faceVertexIndex.append( fvi )</div>\n\
<div class=\"line\"><a name=\"l00329\"></a><span class=\"lineno\">  329</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00330\"></a><span class=\"lineno\">  330</span>&#160;        <span class=\"keywordflow\">return</span> idx</div>\n\
<div class=\"line\"><a name=\"l00331\"></a><span class=\"lineno\">  331</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00332\"></a><span class=\"lineno\">  332</span>&#160;    <span class=\"keyword\">def </span>writeVerticesASCII(self):</div>\n\
<div class=\"line\"><a name=\"l00333\"></a><span class=\"lineno\">  333</span>&#160;        vertexCount = len(self.fGeometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l00334\"></a><span class=\"lineno\">  334</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00335\"></a><span class=\"lineno\">  335</span>&#160;        data  = <span class=\"stringliteral\">&quot;\\n&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00336\"></a><span class=\"lineno\">  336</span>&#160;        data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00337\"></a><span class=\"lineno\">  337</span>&#160;        data += kDblQteChar + kVertexKeyword + kDblQteChar + kSpaceChar + str(vertexCount)</div>\n\
<div class=\"line\"><a name=\"l00338\"></a><span class=\"lineno\">  338</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00339\"></a><span class=\"lineno\">  339</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(vertexCount):</div>\n\
<div class=\"line\"><a name=\"l00340\"></a><span class=\"lineno\">  340</span>&#160;            vertex = self.fGeometry.vertices[i]</div>\n\
<div class=\"line\"><a name=\"l00341\"></a><span class=\"lineno\">  341</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00342\"></a><span class=\"lineno\">  342</span>&#160;            data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00343\"></a><span class=\"lineno\">  343</span>&#160;            data += str(vertex[0]) + kSpaceChar + str(vertex[1]) + kSpaceChar + str(vertex[2])</div>\n\
<div class=\"line\"><a name=\"l00344\"></a><span class=\"lineno\">  344</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00345\"></a><span class=\"lineno\">  345</span>&#160;        <span class=\"keywordflow\">return</span> data</div>\n\
<div class=\"line\"><a name=\"l00346\"></a><span class=\"lineno\">  346</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00347\"></a><span class=\"lineno\">  347</span>&#160;    <span class=\"keyword\">def </span>writeNormalsASCII(self):</div>\n\
<div class=\"line\"><a name=\"l00348\"></a><span class=\"lineno\">  348</span>&#160;        normalCount = len(self.fGeometry.normals)</div>\n\
<div class=\"line\"><a name=\"l00349\"></a><span class=\"lineno\">  349</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00350\"></a><span class=\"lineno\">  350</span>&#160;        data  = <span class=\"stringliteral\">&quot;\\n&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00351\"></a><span class=\"lineno\">  351</span>&#160;        data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00352\"></a><span class=\"lineno\">  352</span>&#160;        data += kDblQteChar + kNormalKeyword + kDblQteChar + kSpaceChar + str(normalCount)</div>\n\
<div class=\"line\"><a name=\"l00353\"></a><span class=\"lineno\">  353</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00354\"></a><span class=\"lineno\">  354</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(normalCount):</div>\n\
<div class=\"line\"><a name=\"l00355\"></a><span class=\"lineno\">  355</span>&#160;            normal = self.fGeometry.normals[i]</div>\n\
<div class=\"line\"><a name=\"l00356\"></a><span class=\"lineno\">  356</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00357\"></a><span class=\"lineno\">  357</span>&#160;            data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00358\"></a><span class=\"lineno\">  358</span>&#160;            data += str(normal[0]) + kSpaceChar + str(normal[1]) + kSpaceChar + str(normal[2])</div>\n\
<div class=\"line\"><a name=\"l00359\"></a><span class=\"lineno\">  359</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00360\"></a><span class=\"lineno\">  360</span>&#160;        <span class=\"keywordflow\">return</span> data</div>\n\
<div class=\"line\"><a name=\"l00361\"></a><span class=\"lineno\">  361</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00362\"></a><span class=\"lineno\">  362</span>&#160;    <span class=\"keyword\">def </span>writeFacesASCII(self):</div>\n\
<div class=\"line\"><a name=\"l00363\"></a><span class=\"lineno\">  363</span>&#160;        numFaces = len(self.fGeometry.face_counts)</div>\n\
<div class=\"line\"><a name=\"l00364\"></a><span class=\"lineno\">  364</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00365\"></a><span class=\"lineno\">  365</span>&#160;        data = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00366\"></a><span class=\"lineno\">  366</span>&#160;        vid = 0</div>\n\
<div class=\"line\"><a name=\"l00367\"></a><span class=\"lineno\">  367</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00368\"></a><span class=\"lineno\">  368</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(numFaces):</div>\n\
<div class=\"line\"><a name=\"l00369\"></a><span class=\"lineno\">  369</span>&#160;            faceVertexCount = self.fGeometry.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l00370\"></a><span class=\"lineno\">  370</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00371\"></a><span class=\"lineno\">  371</span>&#160;            data += <span class=\"stringliteral\">&quot;\\n&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00372\"></a><span class=\"lineno\">  372</span>&#160;            data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00373\"></a><span class=\"lineno\">  373</span>&#160;            data += kDblQteChar + kFaceKeyword + kDblQteChar + kSpaceChar + str(faceVertexCount)</div>\n\
<div class=\"line\"><a name=\"l00374\"></a><span class=\"lineno\">  374</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00375\"></a><span class=\"lineno\">  375</span>&#160;            data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00376\"></a><span class=\"lineno\">  376</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00377\"></a><span class=\"lineno\">  377</span>&#160;            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(faceVertexCount):</div>\n\
<div class=\"line\"><a name=\"l00378\"></a><span class=\"lineno\">  378</span>&#160;                value = self.fGeometry.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l00379\"></a><span class=\"lineno\">  379</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00380\"></a><span class=\"lineno\">  380</span>&#160;                data += str(value) + kSpaceChar</div>\n\
<div class=\"line\"><a name=\"l00381\"></a><span class=\"lineno\">  381</span>&#160;                vid += 1</div>\n\
<div class=\"line\"><a name=\"l00382\"></a><span class=\"lineno\">  382</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00383\"></a><span class=\"lineno\">  383</span>&#160;        <span class=\"keywordflow\">return</span> data</div>\n\
<div class=\"line\"><a name=\"l00384\"></a><span class=\"lineno\">  384</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00385\"></a><span class=\"lineno\">  385</span>&#160;    <span class=\"keyword\">def </span>writeUVASCII(self):</div>\n\
<div class=\"line\"><a name=\"l00386\"></a><span class=\"lineno\">  386</span>&#160;        uvCount = self.fGeometry.uvcoords.uvcount()</div>\n\
<div class=\"line\"><a name=\"l00387\"></a><span class=\"lineno\">  387</span>&#160;        faceVertexCount = len(self.fGeometry.uvcoords.faceVertexIndex)</div>\n\
<div class=\"line\"><a name=\"l00388\"></a><span class=\"lineno\">  388</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00389\"></a><span class=\"lineno\">  389</span>&#160;        data = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00390\"></a><span class=\"lineno\">  390</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00391\"></a><span class=\"lineno\">  391</span>&#160;        <span class=\"keywordflow\">if</span> uvCount &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l00392\"></a><span class=\"lineno\">  392</span>&#160;            data  = <span class=\"stringliteral\">&quot;\\n&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00393\"></a><span class=\"lineno\">  393</span>&#160;            data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00394\"></a><span class=\"lineno\">  394</span>&#160;            data += kDblQteChar + kUVKeyword + kDblQteChar + kSpaceChar + str(uvCount) + kSpaceChar + str(faceVertexCount)</div>\n\
<div class=\"line\"><a name=\"l00395\"></a><span class=\"lineno\">  395</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00396\"></a><span class=\"lineno\">  396</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(uvCount):</div>\n\
<div class=\"line\"><a name=\"l00397\"></a><span class=\"lineno\">  397</span>&#160;                uv = self.fGeometry.uvcoords.getUV(i)</div>\n\
<div class=\"line\"><a name=\"l00398\"></a><span class=\"lineno\">  398</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00399\"></a><span class=\"lineno\">  399</span>&#160;                data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00400\"></a><span class=\"lineno\">  400</span>&#160;                data += str(uv[0]) + kSpaceChar + str(uv[1]) + kSpaceChar</div>\n\
<div class=\"line\"><a name=\"l00401\"></a><span class=\"lineno\">  401</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00402\"></a><span class=\"lineno\">  402</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(faceVertexCount):</div>\n\
<div class=\"line\"><a name=\"l00403\"></a><span class=\"lineno\">  403</span>&#160;                value = self.fGeometry.uvcoords.faceVertexIndex[i]</div>\n\
<div class=\"line\"><a name=\"l00404\"></a><span class=\"lineno\">  404</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00405\"></a><span class=\"lineno\">  405</span>&#160;                data += kWrapString</div>\n\
<div class=\"line\"><a name=\"l00406\"></a><span class=\"lineno\">  406</span>&#160;                data += str(value) + kSpaceChar</div>\n\
<div class=\"line\"><a name=\"l00407\"></a><span class=\"lineno\">  407</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00408\"></a><span class=\"lineno\">  408</span>&#160;        <span class=\"keywordflow\">return</span> data</div>\n\
<div class=\"line\"><a name=\"l00409\"></a><span class=\"lineno\">  409</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00410\"></a><span class=\"lineno\">  410</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00411\"></a><span class=\"lineno\">  411</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00412\"></a><span class=\"lineno\">  412</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00413\"></a><span class=\"lineno\">  413</span>&#160;<span class=\"comment\">## apiMeshShape</span></div>\n\
<div class=\"line\"><a name=\"l00414\"></a><span class=\"lineno\">  414</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00415\"></a><span class=\"lineno\">  415</span>&#160;<span class=\"comment\">## Implements a new type of shape node in maya called apiMesh.</span></div>\n\
<div class=\"line\"><a name=\"l00416\"></a><span class=\"lineno\">  416</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00417\"></a><span class=\"lineno\">  417</span>&#160;<span class=\"comment\">## INPUTS</span></div>\n\
<div class=\"line\"><a name=\"l00418\"></a><span class=\"lineno\">  418</span>&#160;<span class=\"comment\">##     inputSurface    - input apiMeshData</span></div>\n\
<div class=\"line\"><a name=\"l00419\"></a><span class=\"lineno\">  419</span>&#160;<span class=\"comment\">##     outputSurface   - output apiMeshData</span></div>\n\
<div class=\"line\"><a name=\"l00420\"></a><span class=\"lineno\">  420</span>&#160;<span class=\"comment\">##     worldSurface    - array of world space apiMeshData, each element</span></div>\n\
<div class=\"line\"><a name=\"l00421\"></a><span class=\"lineno\">  421</span>&#160;<span class=\"comment\">##                       represents an istance of the shape</span></div>\n\
<div class=\"line\"><a name=\"l00422\"></a><span class=\"lineno\">  422</span>&#160;<span class=\"comment\">## OUTPUTS</span></div>\n\
<div class=\"line\"><a name=\"l00423\"></a><span class=\"lineno\">  423</span>&#160;<span class=\"comment\">##     mControlPoints  - inherited control vertices for the mesh. These values</span></div>\n\
<div class=\"line\"><a name=\"l00424\"></a><span class=\"lineno\">  424</span>&#160;<span class=\"comment\">##                       are tweaks (offsets) that will be applied to the</span></div>\n\
<div class=\"line\"><a name=\"l00425\"></a><span class=\"lineno\">  425</span>&#160;<span class=\"comment\">##                       vertices of the input shape.</span></div>\n\
<div class=\"line\"><a name=\"l00426\"></a><span class=\"lineno\">  426</span>&#160;<span class=\"comment\">##     bboxCorner1     - bounding box upper left corner</span></div>\n\
<div class=\"line\"><a name=\"l00427\"></a><span class=\"lineno\">  427</span>&#160;<span class=\"comment\">##     bboxCorner2     - bounding box lower right corner</span></div>\n\
<div class=\"line\"><a name=\"l00428\"></a><span class=\"lineno\">  428</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00429\"></a><span class=\"lineno\">  429</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l00430\"></a><span class=\"lineno\">  430</span>&#160;<span class=\"keyword\">class </span>apiMesh(om.MPxSurfaceShape):</div>\n\
<div class=\"line\"><a name=\"l00431\"></a><span class=\"lineno\">  431</span>&#160;    sNodeName = <span class=\"stringliteral\">&quot;apiMesh_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00432\"></a><span class=\"lineno\">  432</span>&#160;    sDrawRegistrantId = <span class=\"stringliteral\">&quot;apiMeshPlugin_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00433\"></a><span class=\"lineno\">  433</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00434\"></a><span class=\"lineno\">  434</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l00435\"></a><span class=\"lineno\">  435</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00436\"></a><span class=\"lineno\">  436</span>&#160;    <span class=\"comment\">## Attributes</span></div>\n\
<div class=\"line\"><a name=\"l00437\"></a><span class=\"lineno\">  437</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00438\"></a><span class=\"lineno\">  438</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l00439\"></a><span class=\"lineno\">  439</span>&#160;    inputSurface = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00440\"></a><span class=\"lineno\">  440</span>&#160;    outputSurface = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00441\"></a><span class=\"lineno\">  441</span>&#160;    worldSurface = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00442\"></a><span class=\"lineno\">  442</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00443\"></a><span class=\"lineno\">  443</span>&#160;    useWeightedTransformUsingFunction = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00444\"></a><span class=\"lineno\">  444</span>&#160;    useWeightedTweakUsingFunction = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00445\"></a><span class=\"lineno\">  445</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00446\"></a><span class=\"lineno\">  446</span>&#160;    <span class=\"comment\">## used to support tweaking of points, the inputSurface attribute data is</span></div>\n\
<div class=\"line\"><a name=\"l00447\"></a><span class=\"lineno\">  447</span>&#160;    <span class=\"comment\">## transferred into the cached surface when it is dirty. The control points</span></div>\n\
<div class=\"line\"><a name=\"l00448\"></a><span class=\"lineno\">  448</span>&#160;    <span class=\"comment\">## tweaks are added into it there.</span></div>\n\
<div class=\"line\"><a name=\"l00449\"></a><span class=\"lineno\">  449</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00450\"></a><span class=\"lineno\">  450</span>&#160;    cachedSurface = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00451\"></a><span class=\"lineno\">  451</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00452\"></a><span class=\"lineno\">  452</span>&#160;    bboxCorner1 = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00453\"></a><span class=\"lineno\">  453</span>&#160;    bboxCorner2 = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00454\"></a><span class=\"lineno\">  454</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00455\"></a><span class=\"lineno\">  455</span>&#160;    enableNumericDisplay = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00456\"></a><span class=\"lineno\">  456</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00457\"></a><span class=\"lineno\">  457</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l00458\"></a><span class=\"lineno\">  458</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l00459\"></a><span class=\"lineno\">  459</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh()</div>\n\
<div class=\"line\"><a name=\"l00460\"></a><span class=\"lineno\">  460</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00461\"></a><span class=\"lineno\">  461</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l00462\"></a><span class=\"lineno\">  462</span>&#160;    <span class=\"keyword\">def </span>initialize():</div>\n\
<div class=\"line\"><a name=\"l00463\"></a><span class=\"lineno\">  463</span>&#160;        typedAttr = om.MFnTypedAttribute()</div>\n\
<div class=\"line\"><a name=\"l00464\"></a><span class=\"lineno\">  464</span>&#160;        numericAttr = om.MFnNumericAttribute()</div>\n\
<div class=\"line\"><a name=\"l00465\"></a><span class=\"lineno\">  465</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00466\"></a><span class=\"lineno\">  466</span>&#160;        <span class=\"comment\">## ----------------------- INPUTS --------------------------</span></div>\n\
<div class=\"line\"><a name=\"l00467\"></a><span class=\"lineno\">  467</span>&#160;        apiMesh.inputSurface = typedAttr.create( <span class=\"stringliteral\">&quot;inputSurface&quot;</span>, <span class=\"stringliteral\">&quot;is&quot;</span>, apiMeshData.id, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l00468\"></a><span class=\"lineno\">  468</span>&#160;        typedAttr.storable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00469\"></a><span class=\"lineno\">  469</span>&#160;        om.MPxNode.addAttribute( apiMesh.inputSurface )</div>\n\
<div class=\"line\"><a name=\"l00470\"></a><span class=\"lineno\">  470</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00471\"></a><span class=\"lineno\">  471</span>&#160;        apiMesh.useWeightedTransformUsingFunction = numericAttr.create( <span class=\"stringliteral\">&quot;useWeightedTransformUsingFunction&quot;</span>, <span class=\"stringliteral\">&quot;utru&quot;</span>, om.MFnNumericData.kBoolean, <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l00472\"></a><span class=\"lineno\">  472</span>&#160;        numericAttr.keyable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00473\"></a><span class=\"lineno\">  473</span>&#160;        om.MPxNode.addAttribute( apiMesh.useWeightedTransformUsingFunction )</div>\n\
<div class=\"line\"><a name=\"l00474\"></a><span class=\"lineno\">  474</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00475\"></a><span class=\"lineno\">  475</span>&#160;        apiMesh.useWeightedTweakUsingFunction = numericAttr.create( <span class=\"stringliteral\">&quot;useWeightedTweakUsingFunction&quot;</span>, <span class=\"stringliteral\">&quot;utwu&quot;</span>, om.MFnNumericData.kBoolean, <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l00476\"></a><span class=\"lineno\">  476</span>&#160;        numericAttr.keyable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00477\"></a><span class=\"lineno\">  477</span>&#160;        om.MPxNode.addAttribute( apiMesh.useWeightedTweakUsingFunction )</div>\n\
<div class=\"line\"><a name=\"l00478\"></a><span class=\"lineno\">  478</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00479\"></a><span class=\"lineno\">  479</span>&#160;        enableNumericDisplay = numericAttr.create( <span class=\"stringliteral\">&quot;enableNumericDisplay&quot;</span>, <span class=\"stringliteral\">&quot;end&quot;</span>, om.MFnNumericData.kBoolean, <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l00480\"></a><span class=\"lineno\">  480</span>&#160;        numericAttr.keyable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00481\"></a><span class=\"lineno\">  481</span>&#160;        om.MPxNode.addAttribute( enableNumericDisplay )</div>\n\
<div class=\"line\"><a name=\"l00482\"></a><span class=\"lineno\">  482</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00483\"></a><span class=\"lineno\">  483</span>&#160;        <span class=\"comment\">## ----------------------- OUTPUTS -------------------------</span></div>\n\
<div class=\"line\"><a name=\"l00484\"></a><span class=\"lineno\">  484</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00485\"></a><span class=\"lineno\">  485</span>&#160;        <span class=\"comment\">## bbox attributes</span></div>\n\
<div class=\"line\"><a name=\"l00486\"></a><span class=\"lineno\">  486</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00487\"></a><span class=\"lineno\">  487</span>&#160;        apiMesh.bboxCorner1 = numericAttr.create( <span class=\"stringliteral\">&quot;bboxCorner1&quot;</span>, <span class=\"stringliteral\">&quot;bb1&quot;</span>, om.MFnNumericData.k3Double, 0 )</div>\n\
<div class=\"line\"><a name=\"l00488\"></a><span class=\"lineno\">  488</span>&#160;        numericAttr.array = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00489\"></a><span class=\"lineno\">  489</span>&#160;        numericAttr.usesArrayDataBuilder = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00490\"></a><span class=\"lineno\">  490</span>&#160;        numericAttr.hidden = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00491\"></a><span class=\"lineno\">  491</span>&#160;        numericAttr.keyable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00492\"></a><span class=\"lineno\">  492</span>&#160;        om.MPxNode.addAttribute( apiMesh.bboxCorner1 )</div>\n\
<div class=\"line\"><a name=\"l00493\"></a><span class=\"lineno\">  493</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00494\"></a><span class=\"lineno\">  494</span>&#160;        apiMesh.bboxCorner2 = numericAttr.create( <span class=\"stringliteral\">&quot;bboxCorner2&quot;</span>, <span class=\"stringliteral\">&quot;bb2&quot;</span>, om.MFnNumericData.k3Double, 0 )</div>\n\
<div class=\"line\"><a name=\"l00495\"></a><span class=\"lineno\">  495</span>&#160;        numericAttr.array = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00496\"></a><span class=\"lineno\">  496</span>&#160;        numericAttr.usesArrayDataBuilder = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00497\"></a><span class=\"lineno\">  497</span>&#160;        numericAttr.hidden = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00498\"></a><span class=\"lineno\">  498</span>&#160;        numericAttr.keyable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00499\"></a><span class=\"lineno\">  499</span>&#160;        om.MPxNode.addAttribute( apiMesh.bboxCorner2 )</div>\n\
<div class=\"line\"><a name=\"l00500\"></a><span class=\"lineno\">  500</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00501\"></a><span class=\"lineno\">  501</span>&#160;        <span class=\"comment\">## local/world output surface attributes</span></div>\n\
<div class=\"line\"><a name=\"l00502\"></a><span class=\"lineno\">  502</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00503\"></a><span class=\"lineno\">  503</span>&#160;        apiMesh.outputSurface = typedAttr.create( <span class=\"stringliteral\">&quot;outputSurface&quot;</span>, <span class=\"stringliteral\">&quot;os&quot;</span>, apiMeshData.id, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l00504\"></a><span class=\"lineno\">  504</span>&#160;        typedAttr.writable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00505\"></a><span class=\"lineno\">  505</span>&#160;        om.MPxNode.addAttribute( apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00506\"></a><span class=\"lineno\">  506</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00507\"></a><span class=\"lineno\">  507</span>&#160;        apiMesh.worldSurface = typedAttr.create( <span class=\"stringliteral\">&quot;worldSurface&quot;</span>, <span class=\"stringliteral\">&quot;ws&quot;</span>, apiMeshData.id, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l00508\"></a><span class=\"lineno\">  508</span>&#160;        typedAttr.cached = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00509\"></a><span class=\"lineno\">  509</span>&#160;        typedAttr.writable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00510\"></a><span class=\"lineno\">  510</span>&#160;        typedAttr.array = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00511\"></a><span class=\"lineno\">  511</span>&#160;        typedAttr.usesArrayDataBuilder = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00512\"></a><span class=\"lineno\">  512</span>&#160;        typedAttr.disconnectBehavior = om.MFnAttribute.kDelete</div>\n\
<div class=\"line\"><a name=\"l00513\"></a><span class=\"lineno\">  513</span>&#160;        typedAttr.worldSpace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00514\"></a><span class=\"lineno\">  514</span>&#160;        om.MPxNode.addAttribute( apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00515\"></a><span class=\"lineno\">  515</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00516\"></a><span class=\"lineno\">  516</span>&#160;        <span class=\"comment\">## Cached surface used for file IO</span></div>\n\
<div class=\"line\"><a name=\"l00517\"></a><span class=\"lineno\">  517</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00518\"></a><span class=\"lineno\">  518</span>&#160;        apiMesh.cachedSurface = typedAttr.create( <span class=\"stringliteral\">&quot;cachedSurface&quot;</span>, <span class=\"stringliteral\">&quot;cs&quot;</span>, apiMeshData.id, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l00519\"></a><span class=\"lineno\">  519</span>&#160;        typedAttr.readable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00520\"></a><span class=\"lineno\">  520</span>&#160;        typedAttr.writable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00521\"></a><span class=\"lineno\">  521</span>&#160;        typedAttr.storable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00522\"></a><span class=\"lineno\">  522</span>&#160;        om.MPxNode.addAttribute( apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l00523\"></a><span class=\"lineno\">  523</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00524\"></a><span class=\"lineno\">  524</span>&#160;        <span class=\"comment\">## ---------- Specify what inputs affect the outputs ----------</span></div>\n\
<div class=\"line\"><a name=\"l00525\"></a><span class=\"lineno\">  525</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00526\"></a><span class=\"lineno\">  526</span>&#160;        om.MPxNode.attributeAffects( apiMesh.inputSurface, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00527\"></a><span class=\"lineno\">  527</span>&#160;        om.MPxNode.attributeAffects( apiMesh.inputSurface, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00528\"></a><span class=\"lineno\">  528</span>&#160;        om.MPxNode.attributeAffects( apiMesh.outputSurface, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00529\"></a><span class=\"lineno\">  529</span>&#160;        om.MPxNode.attributeAffects( apiMesh.inputSurface, apiMesh.bboxCorner1 )</div>\n\
<div class=\"line\"><a name=\"l00530\"></a><span class=\"lineno\">  530</span>&#160;        om.MPxNode.attributeAffects( apiMesh.inputSurface, apiMesh.bboxCorner2 )</div>\n\
<div class=\"line\"><a name=\"l00531\"></a><span class=\"lineno\">  531</span>&#160;        om.MPxNode.attributeAffects( apiMesh.cachedSurface, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00532\"></a><span class=\"lineno\">  532</span>&#160;        om.MPxNode.attributeAffects( apiMesh.cachedSurface, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00533\"></a><span class=\"lineno\">  533</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00534\"></a><span class=\"lineno\">  534</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlPoints, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00535\"></a><span class=\"lineno\">  535</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueX, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00536\"></a><span class=\"lineno\">  536</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueY, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00537\"></a><span class=\"lineno\">  537</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueZ, apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l00538\"></a><span class=\"lineno\">  538</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlPoints, apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l00539\"></a><span class=\"lineno\">  539</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueX, apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l00540\"></a><span class=\"lineno\">  540</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueY, apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l00541\"></a><span class=\"lineno\">  541</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueZ, apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l00542\"></a><span class=\"lineno\">  542</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlPoints, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00543\"></a><span class=\"lineno\">  543</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueX, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00544\"></a><span class=\"lineno\">  544</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueY, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00545\"></a><span class=\"lineno\">  545</span>&#160;        om.MPxNode.attributeAffects( om.MPxSurfaceShape.mControlValueZ, apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l00546\"></a><span class=\"lineno\">  546</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00547\"></a><span class=\"lineno\">  547</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l00548\"></a><span class=\"lineno\">  548</span>&#160;        om.MPxSurfaceShape.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l00549\"></a><span class=\"lineno\">  549</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00550\"></a><span class=\"lineno\">  550</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l00551\"></a><span class=\"lineno\">  551</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00552\"></a><span class=\"lineno\">  552</span>&#160;    <span class=\"comment\">## Overrides</span></div>\n\
<div class=\"line\"><a name=\"l00553\"></a><span class=\"lineno\">  553</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00554\"></a><span class=\"lineno\">  554</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l00555\"></a><span class=\"lineno\">  555</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00556\"></a><span class=\"lineno\">  556</span>&#160;    <span class=\"comment\">## From MPxNode</span></div>\n\
<div class=\"line\"><a name=\"l00557\"></a><span class=\"lineno\">  557</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00558\"></a><span class=\"lineno\">  558</span>&#160;    <span class=\"keyword\">def </span>postConstructor(self):</div>\n\
<div class=\"line\"><a name=\"l00559\"></a><span class=\"lineno\">  559</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00560\"></a><span class=\"lineno\">  560</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00561\"></a><span class=\"lineno\">  561</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00562\"></a><span class=\"lineno\">  562</span>&#160;        <span class=\"comment\">##    When instances of this node are created internally, the MObject associated</span></div>\n\
<div class=\"line\"><a name=\"l00563\"></a><span class=\"lineno\">  563</span>&#160;        <span class=\"comment\">##    with the instance is not created until after the constructor of this class</span></div>\n\
<div class=\"line\"><a name=\"l00564\"></a><span class=\"lineno\">  564</span>&#160;        <span class=\"comment\">##    is called. This means that no member functions of MPxSurfaceShape can</span></div>\n\
<div class=\"line\"><a name=\"l00565\"></a><span class=\"lineno\">  565</span>&#160;        <span class=\"comment\">##    be called in the constructor.</span></div>\n\
<div class=\"line\"><a name=\"l00566\"></a><span class=\"lineno\">  566</span>&#160;        <span class=\"comment\">##    The postConstructor solves this problem. Maya will call this function</span></div>\n\
<div class=\"line\"><a name=\"l00567\"></a><span class=\"lineno\">  567</span>&#160;        <span class=\"comment\">##    after the internal object has been created.</span></div>\n\
<div class=\"line\"><a name=\"l00568\"></a><span class=\"lineno\">  568</span>&#160;        <span class=\"comment\">##    As a general rule do all of your initialization in the postConstructor.</span></div>\n\
<div class=\"line\"><a name=\"l00569\"></a><span class=\"lineno\">  569</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00570\"></a><span class=\"lineno\">  570</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00571\"></a><span class=\"lineno\">  571</span>&#160;        <span class=\"comment\">## This call allows the shape to have shading groups assigned</span></div>\n\
<div class=\"line\"><a name=\"l00572\"></a><span class=\"lineno\">  572</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00573\"></a><span class=\"lineno\">  573</span>&#160;        self.isRenderable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00574\"></a><span class=\"lineno\">  574</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00575\"></a><span class=\"lineno\">  575</span>&#160;        <span class=\"comment\">## Is there input history to this node</span></div>\n\
<div class=\"line\"><a name=\"l00576\"></a><span class=\"lineno\">  576</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00577\"></a><span class=\"lineno\">  577</span>&#160;        self.fHasHistoryOnCreate = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00578\"></a><span class=\"lineno\">  578</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00579\"></a><span class=\"lineno\">  579</span>&#160;        <span class=\"comment\">## Is the shape dirty? Used by VP2.0 sub-scene evaluator</span></div>\n\
<div class=\"line\"><a name=\"l00580\"></a><span class=\"lineno\">  580</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00581\"></a><span class=\"lineno\">  581</span>&#160;        self.fShapeDirty = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00582\"></a><span class=\"lineno\">  582</span>&#160;        self.fMaterialDirty = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00583\"></a><span class=\"lineno\">  583</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00584\"></a><span class=\"lineno\">  584</span>&#160;    <span class=\"keyword\">def </span>compute(self, plug, datablock):</div>\n\
<div class=\"line\"><a name=\"l00585\"></a><span class=\"lineno\">  585</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00586\"></a><span class=\"lineno\">  586</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00587\"></a><span class=\"lineno\">  587</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00588\"></a><span class=\"lineno\">  588</span>&#160;        <span class=\"comment\">##    When input attributes are dirty this method will be called to</span></div>\n\
<div class=\"line\"><a name=\"l00589\"></a><span class=\"lineno\">  589</span>&#160;        <span class=\"comment\">##    recompute the output attributes.</span></div>\n\
<div class=\"line\"><a name=\"l00590\"></a><span class=\"lineno\">  590</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00591\"></a><span class=\"lineno\">  591</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00592\"></a><span class=\"lineno\">  592</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00593\"></a><span class=\"lineno\">  593</span>&#160;        <span class=\"comment\">##    plug      - the attribute that triggered the compute</span></div>\n\
<div class=\"line\"><a name=\"l00594\"></a><span class=\"lineno\">  594</span>&#160;        <span class=\"comment\">##    datablock - the nodes data</span></div>\n\
<div class=\"line\"><a name=\"l00595\"></a><span class=\"lineno\">  595</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00596\"></a><span class=\"lineno\">  596</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00597\"></a><span class=\"lineno\">  597</span>&#160;        <span class=\"keywordflow\">if</span> plug == apiMesh.outputSurface:</div>\n\
<div class=\"line\"><a name=\"l00598\"></a><span class=\"lineno\">  598</span>&#160;            <span class=\"keywordflow\">return</span> self.computeOutputSurface( plug, datablock )</div>\n\
<div class=\"line\"><a name=\"l00599\"></a><span class=\"lineno\">  599</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00600\"></a><span class=\"lineno\">  600</span>&#160;        <span class=\"keywordflow\">elif</span> plug == apiMesh.cachedSurface:</div>\n\
<div class=\"line\"><a name=\"l00601\"></a><span class=\"lineno\">  601</span>&#160;            <span class=\"keywordflow\">return</span> self.computeOutputSurface( plug, datablock )</div>\n\
<div class=\"line\"><a name=\"l00602\"></a><span class=\"lineno\">  602</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00603\"></a><span class=\"lineno\">  603</span>&#160;        <span class=\"keywordflow\">elif</span> plug == apiMesh.worldSurface:</div>\n\
<div class=\"line\"><a name=\"l00604\"></a><span class=\"lineno\">  604</span>&#160;            <span class=\"keywordflow\">return</span> self.computeWorldSurface( plug, datablock )</div>\n\
<div class=\"line\"><a name=\"l00605\"></a><span class=\"lineno\">  605</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00606\"></a><span class=\"lineno\">  606</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00607\"></a><span class=\"lineno\">  607</span>&#160;            <span class=\"comment\"># Let the Maya parent class compute the plug</span></div>\n\
<div class=\"line\"><a name=\"l00608\"></a><span class=\"lineno\">  608</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l00609\"></a><span class=\"lineno\">  609</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00610\"></a><span class=\"lineno\">  610</span>&#160;    <span class=\"keyword\">def </span>preEvaluation(self, context, evaluationNode):</div>\n\
<div class=\"line\"><a name=\"l00611\"></a><span class=\"lineno\">  611</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00612\"></a><span class=\"lineno\">  612</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00613\"></a><span class=\"lineno\">  613</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00614\"></a><span class=\"lineno\">  614</span>&#160;        <span class=\"comment\">##    Pre evaluate will mark the shape as dirty</span></div>\n\
<div class=\"line\"><a name=\"l00615\"></a><span class=\"lineno\">  615</span>&#160;        <span class=\"comment\">##    PreEvaluate will be called before each evaluation of this node </span></div>\n\
<div class=\"line\"><a name=\"l00616\"></a><span class=\"lineno\">  616</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00617\"></a><span class=\"lineno\">  617</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00618\"></a><span class=\"lineno\">  618</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00619\"></a><span class=\"lineno\">  619</span>&#160;        <span class=\"comment\">##    context        - Evaluation context in which the compute happen</span></div>\n\
<div class=\"line\"><a name=\"l00620\"></a><span class=\"lineno\">  620</span>&#160;        <span class=\"comment\">##    evaluationNode - contains information about the dirtyness of plugs</span></div>\n\
<div class=\"line\"><a name=\"l00621\"></a><span class=\"lineno\">  621</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00622\"></a><span class=\"lineno\">  622</span>&#160;        <span class=\"keywordflow\">if</span> context.isNormal():</div>\n\
<div class=\"line\"><a name=\"l00623\"></a><span class=\"lineno\">  623</span>&#160;            <span class=\"keywordflow\">if</span> evaluationNode.dirtyPlugExists(apiMesh.inputSurface) <span class=\"keywordflow\">or</span> evaluationNode.dirtyPlugExists(apiMesh.mControlPoints):</div>\n\
<div class=\"line\"><a name=\"l00624\"></a><span class=\"lineno\">  624</span>&#160;                self.setShapeDirty()</div>\n\
<div class=\"line\"><a name=\"l00625\"></a><span class=\"lineno\">  625</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00626\"></a><span class=\"lineno\">  626</span>&#160;    <span class=\"keyword\">def </span>postEvaluation(self, context, evaluationNode, evalType):</div>\n\
<div class=\"line\"><a name=\"l00627\"></a><span class=\"lineno\">  627</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00628\"></a><span class=\"lineno\">  628</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00629\"></a><span class=\"lineno\">  629</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00630\"></a><span class=\"lineno\">  630</span>&#160;        <span class=\"comment\">##    Post evaluate will signal viewport dirty so that renderer can pick it up</span></div>\n\
<div class=\"line\"><a name=\"l00631\"></a><span class=\"lineno\">  631</span>&#160;        <span class=\"comment\">##    PostEvaluate will be called before each evaluation of this node </span></div>\n\
<div class=\"line\"><a name=\"l00632\"></a><span class=\"lineno\">  632</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00633\"></a><span class=\"lineno\">  633</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00634\"></a><span class=\"lineno\">  634</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00635\"></a><span class=\"lineno\">  635</span>&#160;        <span class=\"comment\">##    context        - Evaluation context in which the compute happen</span></div>\n\
<div class=\"line\"><a name=\"l00636\"></a><span class=\"lineno\">  636</span>&#160;        <span class=\"comment\">##    evaluationNode - contains information about the dirtyness of plugs</span></div>\n\
<div class=\"line\"><a name=\"l00637\"></a><span class=\"lineno\">  637</span>&#160;        <span class=\"comment\">##    evalType       - type of evaluation that was performed</span></div>\n\
<div class=\"line\"><a name=\"l00638\"></a><span class=\"lineno\">  638</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00639\"></a><span class=\"lineno\">  639</span>&#160;        <span class=\"keywordflow\">if</span> context.isNormal():</div>\n\
<div class=\"line\"><a name=\"l00640\"></a><span class=\"lineno\">  640</span>&#160;            <span class=\"keywordflow\">if</span> evaluationNode.dirtyPlugExists(apiMesh.inputSurface) <span class=\"keywordflow\">or</span> evaluationNode.dirtyPlugExists(apiMesh.mControlPoints):</div>\n\
<div class=\"line\"><a name=\"l00641\"></a><span class=\"lineno\">  641</span>&#160;                self.notifyViewport()</div>\n\
<div class=\"line\"><a name=\"l00642\"></a><span class=\"lineno\">  642</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00643\"></a><span class=\"lineno\">  643</span>&#160;    <span class=\"keyword\">def </span>setDependentsDirty(self, plug, plugArray):</div>\n\
<div class=\"line\"><a name=\"l00644\"></a><span class=\"lineno\">  644</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00645\"></a><span class=\"lineno\">  645</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00646\"></a><span class=\"lineno\">  646</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00647\"></a><span class=\"lineno\">  647</span>&#160;        <span class=\"comment\">##  Horribly abuse the purpose of this method to notify the Viewport 2.0</span></div>\n\
<div class=\"line\"><a name=\"l00648\"></a><span class=\"lineno\">  648</span>&#160;        <span class=\"comment\">##  renderer that something about this shape has changed and that it should</span></div>\n\
<div class=\"line\"><a name=\"l00649\"></a><span class=\"lineno\">  649</span>&#160;        <span class=\"comment\">##  be retranslated.</span></div>\n\
<div class=\"line\"><a name=\"l00650\"></a><span class=\"lineno\">  650</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00651\"></a><span class=\"lineno\">  651</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00652\"></a><span class=\"lineno\">  652</span>&#160;        <span class=\"comment\">## if the dirty attribute is the output mesh then we need to signal the</span></div>\n\
<div class=\"line\"><a name=\"l00653\"></a><span class=\"lineno\">  653</span>&#160;        <span class=\"comment\">## the renderer that it needs to update the object</span></div>\n\
<div class=\"line\"><a name=\"l00654\"></a><span class=\"lineno\">  654</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00655\"></a><span class=\"lineno\">  655</span>&#160;        <span class=\"keywordflow\">if</span> plug == apiMesh.inputSurface <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueX <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueY <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00656\"></a><span class=\"lineno\">  656</span>&#160;            self.signalDirtyToViewport()</div>\n\
<div class=\"line\"><a name=\"l00657\"></a><span class=\"lineno\">  657</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00658\"></a><span class=\"lineno\">  658</span>&#160;    <span class=\"keyword\">def </span>getInternalValue(self, plug, handle):</div>\n\
<div class=\"line\"><a name=\"l00659\"></a><span class=\"lineno\">  659</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00660\"></a><span class=\"lineno\">  660</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00661\"></a><span class=\"lineno\">  661</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00662\"></a><span class=\"lineno\">  662</span>&#160;        <span class=\"comment\">##    Handle internal attributes.</span></div>\n\
<div class=\"line\"><a name=\"l00663\"></a><span class=\"lineno\">  663</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00664\"></a><span class=\"lineno\">  664</span>&#160;        <span class=\"comment\">##    Attributes that require special storage, bounds checking,</span></div>\n\
<div class=\"line\"><a name=\"l00665\"></a><span class=\"lineno\">  665</span>&#160;        <span class=\"comment\">##    or other non-standard behavior can be marked as &quot;Internal&quot; by</span></div>\n\
<div class=\"line\"><a name=\"l00666\"></a><span class=\"lineno\">  666</span>&#160;        <span class=\"comment\">##    using the &quot;MFnAttribute.setInternal&quot; method.</span></div>\n\
<div class=\"line\"><a name=\"l00667\"></a><span class=\"lineno\">  667</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00668\"></a><span class=\"lineno\">  668</span>&#160;        <span class=\"comment\">##    The get/setInternalValue methods will get called for internal</span></div>\n\
<div class=\"line\"><a name=\"l00669\"></a><span class=\"lineno\">  669</span>&#160;        <span class=\"comment\">##    attributes whenever the attribute values are stored or retrieved</span></div>\n\
<div class=\"line\"><a name=\"l00670\"></a><span class=\"lineno\">  670</span>&#160;        <span class=\"comment\">##    using getAttr/setAttr or MPlug getValue/setValue.</span></div>\n\
<div class=\"line\"><a name=\"l00671\"></a><span class=\"lineno\">  671</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00672\"></a><span class=\"lineno\">  672</span>&#160;        <span class=\"comment\">##    The inherited attribute mControlPoints is internal and we want</span></div>\n\
<div class=\"line\"><a name=\"l00673\"></a><span class=\"lineno\">  673</span>&#160;        <span class=\"comment\">##    its values to get stored only if there is input history. Otherwise</span></div>\n\
<div class=\"line\"><a name=\"l00674\"></a><span class=\"lineno\">  674</span>&#160;        <span class=\"comment\">##    any changes to the vertices are stored in the cachedMesh and outputMesh</span></div>\n\
<div class=\"line\"><a name=\"l00675\"></a><span class=\"lineno\">  675</span>&#160;        <span class=\"comment\">##    directly.</span></div>\n\
<div class=\"line\"><a name=\"l00676\"></a><span class=\"lineno\">  676</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00677\"></a><span class=\"lineno\">  677</span>&#160;        <span class=\"comment\">##    If values are retrieved then we want the controlPoints value</span></div>\n\
<div class=\"line\"><a name=\"l00678\"></a><span class=\"lineno\">  678</span>&#160;        <span class=\"comment\">##    returned if there is history, this will be the offset or tweak.</span></div>\n\
<div class=\"line\"><a name=\"l00679\"></a><span class=\"lineno\">  679</span>&#160;        <span class=\"comment\">##    In the case of no history, the vertex position of the cached mesh</span></div>\n\
<div class=\"line\"><a name=\"l00680\"></a><span class=\"lineno\">  680</span>&#160;        <span class=\"comment\">##    is returned.</span></div>\n\
<div class=\"line\"><a name=\"l00681\"></a><span class=\"lineno\">  681</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00682\"></a><span class=\"lineno\">  682</span>&#160;        isOk = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00683\"></a><span class=\"lineno\">  683</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00684\"></a><span class=\"lineno\">  684</span>&#160;        <span class=\"keywordflow\">if</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueX <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueY <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00685\"></a><span class=\"lineno\">  685</span>&#160;            <span class=\"comment\">## If there is input history then the control point value is</span></div>\n\
<div class=\"line\"><a name=\"l00686\"></a><span class=\"lineno\">  686</span>&#160;            <span class=\"comment\">## directly returned. This is the tweak or offset that</span></div>\n\
<div class=\"line\"><a name=\"l00687\"></a><span class=\"lineno\">  687</span>&#160;            <span class=\"comment\">## was applied to the vertex.</span></div>\n\
<div class=\"line\"><a name=\"l00688\"></a><span class=\"lineno\">  688</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00689\"></a><span class=\"lineno\">  689</span>&#160;            <span class=\"comment\">## If there is no input history then return the actual vertex</span></div>\n\
<div class=\"line\"><a name=\"l00690\"></a><span class=\"lineno\">  690</span>&#160;            <span class=\"comment\">## position and ignore the controlPoints attribute.</span></div>\n\
<div class=\"line\"><a name=\"l00691\"></a><span class=\"lineno\">  691</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00692\"></a><span class=\"lineno\">  692</span>&#160;            <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l00693\"></a><span class=\"lineno\">  693</span>&#160;                <span class=\"keywordflow\">return</span> om.MPxNode.getInternalValue(self, plug, handle)</div>\n\
<div class=\"line\"><a name=\"l00694\"></a><span class=\"lineno\">  694</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00695\"></a><span class=\"lineno\">  695</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00696\"></a><span class=\"lineno\">  696</span>&#160;                <span class=\"keywordflow\">if</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> plug.isArray():</div>\n\
<div class=\"line\"><a name=\"l00697\"></a><span class=\"lineno\">  697</span>&#160;                    index = plug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00698\"></a><span class=\"lineno\">  698</span>&#160;                    pnt = self.getPointValue(index)</div>\n\
<div class=\"line\"><a name=\"l00699\"></a><span class=\"lineno\">  699</span>&#160;                    handle.set3Double( pnt[0], pnt[1], pnt[2] )</div>\n\
<div class=\"line\"><a name=\"l00700\"></a><span class=\"lineno\">  700</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00701\"></a><span class=\"lineno\">  701</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueX:</div>\n\
<div class=\"line\"><a name=\"l00702\"></a><span class=\"lineno\">  702</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00703\"></a><span class=\"lineno\">  703</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00704\"></a><span class=\"lineno\">  704</span>&#160;                    val = self.getChannelValue( index, 0 )</div>\n\
<div class=\"line\"><a name=\"l00705\"></a><span class=\"lineno\">  705</span>&#160;                    handle.setDouble( val )</div>\n\
<div class=\"line\"><a name=\"l00706\"></a><span class=\"lineno\">  706</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00707\"></a><span class=\"lineno\">  707</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueY:</div>\n\
<div class=\"line\"><a name=\"l00708\"></a><span class=\"lineno\">  708</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00709\"></a><span class=\"lineno\">  709</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00710\"></a><span class=\"lineno\">  710</span>&#160;                    val = self.getChannelValue( index, 1 )</div>\n\
<div class=\"line\"><a name=\"l00711\"></a><span class=\"lineno\">  711</span>&#160;                    handle.setDouble( val )</div>\n\
<div class=\"line\"><a name=\"l00712\"></a><span class=\"lineno\">  712</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00713\"></a><span class=\"lineno\">  713</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00714\"></a><span class=\"lineno\">  714</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00715\"></a><span class=\"lineno\">  715</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00716\"></a><span class=\"lineno\">  716</span>&#160;                    val = self.getChannelValue( index, 2 )</div>\n\
<div class=\"line\"><a name=\"l00717\"></a><span class=\"lineno\">  717</span>&#160;                    handle.setDouble( val )</div>\n\
<div class=\"line\"><a name=\"l00718\"></a><span class=\"lineno\">  718</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00719\"></a><span class=\"lineno\">  719</span>&#160;        <span class=\"comment\">## This inherited attribute is used to specify whether or</span></div>\n\
<div class=\"line\"><a name=\"l00720\"></a><span class=\"lineno\">  720</span>&#160;        <span class=\"comment\">## not this shape has history. During a file read, the shape</span></div>\n\
<div class=\"line\"><a name=\"l00721\"></a><span class=\"lineno\">  721</span>&#160;        <span class=\"comment\">## is created before any input history can get connected.</span></div>\n\
<div class=\"line\"><a name=\"l00722\"></a><span class=\"lineno\">  722</span>&#160;        <span class=\"comment\">## This attribute, also called &quot;tweaks&quot;, provides a way to</span></div>\n\
<div class=\"line\"><a name=\"l00723\"></a><span class=\"lineno\">  723</span>&#160;        <span class=\"comment\">## for the shape to determine if there is input history</span></div>\n\
<div class=\"line\"><a name=\"l00724\"></a><span class=\"lineno\">  724</span>&#160;        <span class=\"comment\">## during file reads.</span></div>\n\
<div class=\"line\"><a name=\"l00725\"></a><span class=\"lineno\">  725</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00726\"></a><span class=\"lineno\">  726</span>&#160;        <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mHasHistoryOnCreate:</div>\n\
<div class=\"line\"><a name=\"l00727\"></a><span class=\"lineno\">  727</span>&#160;            handle.setBool( self.fHasHistoryOnCreate )</div>\n\
<div class=\"line\"><a name=\"l00728\"></a><span class=\"lineno\">  728</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00729\"></a><span class=\"lineno\">  729</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00730\"></a><span class=\"lineno\">  730</span>&#160;            isOk = om.MPxSurfaceShape.getInternalValue(self, plug, handle)</div>\n\
<div class=\"line\"><a name=\"l00731\"></a><span class=\"lineno\">  731</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00732\"></a><span class=\"lineno\">  732</span>&#160;        <span class=\"keywordflow\">return</span> isOk</div>\n\
<div class=\"line\"><a name=\"l00733\"></a><span class=\"lineno\">  733</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00734\"></a><span class=\"lineno\">  734</span>&#160;    <span class=\"keyword\">def </span>setInternalValue(self, plug, handle):</div>\n\
<div class=\"line\"><a name=\"l00735\"></a><span class=\"lineno\">  735</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00736\"></a><span class=\"lineno\">  736</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00737\"></a><span class=\"lineno\">  737</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00738\"></a><span class=\"lineno\">  738</span>&#160;        <span class=\"comment\">##    Handle internal attributes.</span></div>\n\
<div class=\"line\"><a name=\"l00739\"></a><span class=\"lineno\">  739</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00740\"></a><span class=\"lineno\">  740</span>&#160;        <span class=\"comment\">##    Attributes that require special storage, bounds checking,</span></div>\n\
<div class=\"line\"><a name=\"l00741\"></a><span class=\"lineno\">  741</span>&#160;        <span class=\"comment\">##    or other non-standard behavior can be marked as &quot;Internal&quot; by</span></div>\n\
<div class=\"line\"><a name=\"l00742\"></a><span class=\"lineno\">  742</span>&#160;        <span class=\"comment\">##    using the &quot;MFnAttribute.setInternal&quot; method.</span></div>\n\
<div class=\"line\"><a name=\"l00743\"></a><span class=\"lineno\">  743</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00744\"></a><span class=\"lineno\">  744</span>&#160;        <span class=\"comment\">##    The get/setInternalValue methods will get called for internal</span></div>\n\
<div class=\"line\"><a name=\"l00745\"></a><span class=\"lineno\">  745</span>&#160;        <span class=\"comment\">##    attributes whenever the attribute values are stored or retrieved</span></div>\n\
<div class=\"line\"><a name=\"l00746\"></a><span class=\"lineno\">  746</span>&#160;        <span class=\"comment\">##    using getAttr/setAttr or MPlug getValue/setValue.</span></div>\n\
<div class=\"line\"><a name=\"l00747\"></a><span class=\"lineno\">  747</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00748\"></a><span class=\"lineno\">  748</span>&#160;        <span class=\"comment\">##    The inherited attribute mControlPoints is internal and we want</span></div>\n\
<div class=\"line\"><a name=\"l00749\"></a><span class=\"lineno\">  749</span>&#160;        <span class=\"comment\">##    its values to get stored only if there is input history. Otherwise</span></div>\n\
<div class=\"line\"><a name=\"l00750\"></a><span class=\"lineno\">  750</span>&#160;        <span class=\"comment\">##    any changes to the vertices are stored in the cachedMesh and outputMesh</span></div>\n\
<div class=\"line\"><a name=\"l00751\"></a><span class=\"lineno\">  751</span>&#160;        <span class=\"comment\">##    directly.</span></div>\n\
<div class=\"line\"><a name=\"l00752\"></a><span class=\"lineno\">  752</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00753\"></a><span class=\"lineno\">  753</span>&#160;        <span class=\"comment\">##    If values are retrieved then we want the controlPoints value</span></div>\n\
<div class=\"line\"><a name=\"l00754\"></a><span class=\"lineno\">  754</span>&#160;        <span class=\"comment\">##    returned if there is history, this will be the offset or tweak.</span></div>\n\
<div class=\"line\"><a name=\"l00755\"></a><span class=\"lineno\">  755</span>&#160;        <span class=\"comment\">##    In the case of no history, the vertex position of the cached mesh</span></div>\n\
<div class=\"line\"><a name=\"l00756\"></a><span class=\"lineno\">  756</span>&#160;        <span class=\"comment\">##    is returned.</span></div>\n\
<div class=\"line\"><a name=\"l00757\"></a><span class=\"lineno\">  757</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00758\"></a><span class=\"lineno\">  758</span>&#160;        isOk = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00759\"></a><span class=\"lineno\">  759</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00760\"></a><span class=\"lineno\">  760</span>&#160;        <span class=\"keywordflow\">if</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueX <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueY <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00761\"></a><span class=\"lineno\">  761</span>&#160;            <span class=\"comment\">## If there is input history then set the control points value</span></div>\n\
<div class=\"line\"><a name=\"l00762\"></a><span class=\"lineno\">  762</span>&#160;            <span class=\"comment\">## using the normal mechanism. In this case we are setting</span></div>\n\
<div class=\"line\"><a name=\"l00763\"></a><span class=\"lineno\">  763</span>&#160;            <span class=\"comment\">## the tweak or offset that will get applied to the input</span></div>\n\
<div class=\"line\"><a name=\"l00764\"></a><span class=\"lineno\">  764</span>&#160;            <span class=\"comment\">## history.</span></div>\n\
<div class=\"line\"><a name=\"l00765\"></a><span class=\"lineno\">  765</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00766\"></a><span class=\"lineno\">  766</span>&#160;            <span class=\"comment\">## If there is no input history then ignore the controlPoints</span></div>\n\
<div class=\"line\"><a name=\"l00767\"></a><span class=\"lineno\">  767</span>&#160;            <span class=\"comment\">## attribute and set the vertex position directly in the</span></div>\n\
<div class=\"line\"><a name=\"l00768\"></a><span class=\"lineno\">  768</span>&#160;            <span class=\"comment\">## cachedMesh.</span></div>\n\
<div class=\"line\"><a name=\"l00769\"></a><span class=\"lineno\">  769</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00770\"></a><span class=\"lineno\">  770</span>&#160;            <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l00771\"></a><span class=\"lineno\">  771</span>&#160;                self.verticesUpdated()</div>\n\
<div class=\"line\"><a name=\"l00772\"></a><span class=\"lineno\">  772</span>&#160;                <span class=\"keywordflow\">return</span> om.MPxNode.setInternalValue(self, plug, handle)</div>\n\
<div class=\"line\"><a name=\"l00773\"></a><span class=\"lineno\">  773</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00774\"></a><span class=\"lineno\">  774</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00775\"></a><span class=\"lineno\">  775</span>&#160;                <span class=\"keywordflow\">if</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> plug.isArray():</div>\n\
<div class=\"line\"><a name=\"l00776\"></a><span class=\"lineno\">  776</span>&#160;                    index = plug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00777\"></a><span class=\"lineno\">  777</span>&#160;                    self.setPointValue( index, handle.asDouble3() )</div>\n\
<div class=\"line\"><a name=\"l00778\"></a><span class=\"lineno\">  778</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00779\"></a><span class=\"lineno\">  779</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueX:</div>\n\
<div class=\"line\"><a name=\"l00780\"></a><span class=\"lineno\">  780</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00781\"></a><span class=\"lineno\">  781</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00782\"></a><span class=\"lineno\">  782</span>&#160;                    self.setChannelValue( index, 0, handle.asDouble() )</div>\n\
<div class=\"line\"><a name=\"l00783\"></a><span class=\"lineno\">  783</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00784\"></a><span class=\"lineno\">  784</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueY:</div>\n\
<div class=\"line\"><a name=\"l00785\"></a><span class=\"lineno\">  785</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00786\"></a><span class=\"lineno\">  786</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00787\"></a><span class=\"lineno\">  787</span>&#160;                    self.setChannelValue( index, 1, handle.asDouble() )</div>\n\
<div class=\"line\"><a name=\"l00788\"></a><span class=\"lineno\">  788</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00789\"></a><span class=\"lineno\">  789</span>&#160;                <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00790\"></a><span class=\"lineno\">  790</span>&#160;                    parentPlug = plug.parent()</div>\n\
<div class=\"line\"><a name=\"l00791\"></a><span class=\"lineno\">  791</span>&#160;                    index = parentPlug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l00792\"></a><span class=\"lineno\">  792</span>&#160;                    self.setChannelValue( index, 2, handle.asDouble() )</div>\n\
<div class=\"line\"><a name=\"l00793\"></a><span class=\"lineno\">  793</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00794\"></a><span class=\"lineno\">  794</span>&#160;        <span class=\"comment\">## This inherited attribute is used to specify whether or</span></div>\n\
<div class=\"line\"><a name=\"l00795\"></a><span class=\"lineno\">  795</span>&#160;        <span class=\"comment\">## not this shape has history. During a file read, the shape</span></div>\n\
<div class=\"line\"><a name=\"l00796\"></a><span class=\"lineno\">  796</span>&#160;        <span class=\"comment\">## is created before any input history can get connected.</span></div>\n\
<div class=\"line\"><a name=\"l00797\"></a><span class=\"lineno\">  797</span>&#160;        <span class=\"comment\">## This attribute, also called &quot;tweaks&quot;, provides a way to</span></div>\n\
<div class=\"line\"><a name=\"l00798\"></a><span class=\"lineno\">  798</span>&#160;        <span class=\"comment\">## for the shape to determine if there is input history</span></div>\n\
<div class=\"line\"><a name=\"l00799\"></a><span class=\"lineno\">  799</span>&#160;        <span class=\"comment\">## during file reads.</span></div>\n\
<div class=\"line\"><a name=\"l00800\"></a><span class=\"lineno\">  800</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00801\"></a><span class=\"lineno\">  801</span>&#160;        <span class=\"keywordflow\">elif</span> plug == om.MPxSurfaceShape.mHasHistoryOnCreate:</div>\n\
<div class=\"line\"><a name=\"l00802\"></a><span class=\"lineno\">  802</span>&#160;            self.fHasHistoryOnCreate = handle.asBool()</div>\n\
<div class=\"line\"><a name=\"l00803\"></a><span class=\"lineno\">  803</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00804\"></a><span class=\"lineno\">  804</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00805\"></a><span class=\"lineno\">  805</span>&#160;            isOk = om.MPxSurfaceShape.setInternalValue(self, plug, handle)</div>\n\
<div class=\"line\"><a name=\"l00806\"></a><span class=\"lineno\">  806</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00807\"></a><span class=\"lineno\">  807</span>&#160;        <span class=\"keywordflow\">return</span> isOk</div>\n\
<div class=\"line\"><a name=\"l00808\"></a><span class=\"lineno\">  808</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00809\"></a><span class=\"lineno\">  809</span>&#160;    <span class=\"keyword\">def </span>connectionMade(self, plug, otherPlug, asSrc):</div>\n\
<div class=\"line\"><a name=\"l00810\"></a><span class=\"lineno\">  810</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00811\"></a><span class=\"lineno\">  811</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00812\"></a><span class=\"lineno\">  812</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00813\"></a><span class=\"lineno\">  813</span>&#160;        <span class=\"comment\">##    Whenever a connection is made to this node, this method</span></div>\n\
<div class=\"line\"><a name=\"l00814\"></a><span class=\"lineno\">  814</span>&#160;        <span class=\"comment\">##    will get called.</span></div>\n\
<div class=\"line\"><a name=\"l00815\"></a><span class=\"lineno\">  815</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00816\"></a><span class=\"lineno\">  816</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00817\"></a><span class=\"lineno\">  817</span>&#160;        <span class=\"keywordflow\">if</span> plug == apiMesh.inputSurface:</div>\n\
<div class=\"line\"><a name=\"l00818\"></a><span class=\"lineno\">  818</span>&#160;            thisObj = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l00819\"></a><span class=\"lineno\">  819</span>&#160;            historyPlug = om.MPlug( thisObj, om.MPxSurfaceShape.mHasHistoryOnCreate )</div>\n\
<div class=\"line\"><a name=\"l00820\"></a><span class=\"lineno\">  820</span>&#160;            historyPlug.setBool( <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l00821\"></a><span class=\"lineno\">  821</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00822\"></a><span class=\"lineno\">  822</span>&#160;            thisObj = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l00823\"></a><span class=\"lineno\">  823</span>&#160;            dgNode = om.MFnDependencyNode( thisObj )</div>\n\
<div class=\"line\"><a name=\"l00824\"></a><span class=\"lineno\">  824</span>&#160;            instObjGroups = dgNode.findPlug(<span class=\"stringliteral\">&quot;instObjGroups&quot;</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00825\"></a><span class=\"lineno\">  825</span>&#160;            <span class=\"keywordflow\">if</span> plug == instObjGroups:</div>\n\
<div class=\"line\"><a name=\"l00826\"></a><span class=\"lineno\">  826</span>&#160;                self.setMaterialDirty(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00827\"></a><span class=\"lineno\">  827</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00828\"></a><span class=\"lineno\">  828</span>&#160;        <span class=\"keywordflow\">return</span> om.MPxNode.connectionMade(self, plug, otherPlug, asSrc )</div>\n\
<div class=\"line\"><a name=\"l00829\"></a><span class=\"lineno\">  829</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00830\"></a><span class=\"lineno\">  830</span>&#160;    <span class=\"keyword\">def </span>connectionBroken(self, plug, otherPlug, asSrc):</div>\n\
<div class=\"line\"><a name=\"l00831\"></a><span class=\"lineno\">  831</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00832\"></a><span class=\"lineno\">  832</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00833\"></a><span class=\"lineno\">  833</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00834\"></a><span class=\"lineno\">  834</span>&#160;        <span class=\"comment\">##    Whenever a connection to this node is broken, this method</span></div>\n\
<div class=\"line\"><a name=\"l00835\"></a><span class=\"lineno\">  835</span>&#160;        <span class=\"comment\">##    will get called.</span></div>\n\
<div class=\"line\"><a name=\"l00836\"></a><span class=\"lineno\">  836</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00837\"></a><span class=\"lineno\">  837</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00838\"></a><span class=\"lineno\">  838</span>&#160;        <span class=\"keywordflow\">if</span> plug == apiMesh.inputSurface:</div>\n\
<div class=\"line\"><a name=\"l00839\"></a><span class=\"lineno\">  839</span>&#160;            thisObj = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l00840\"></a><span class=\"lineno\">  840</span>&#160;            historyPlug = om.MPlug( thisObj, om.MPxSurfaceShape.mHasHistoryOnCreate )</div>\n\
<div class=\"line\"><a name=\"l00841\"></a><span class=\"lineno\">  841</span>&#160;            historyPlug.setBool( <span class=\"keyword\">False</span> )</div>\n\
<div class=\"line\"><a name=\"l00842\"></a><span class=\"lineno\">  842</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00843\"></a><span class=\"lineno\">  843</span>&#160;            thisObj = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l00844\"></a><span class=\"lineno\">  844</span>&#160;            dgNode = om.MFnDependencyNode( thisObj )</div>\n\
<div class=\"line\"><a name=\"l00845\"></a><span class=\"lineno\">  845</span>&#160;            instObjGroups = dgNode.findPlug(<span class=\"stringliteral\">&quot;instObjGroups&quot;</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00846\"></a><span class=\"lineno\">  846</span>&#160;            <span class=\"keywordflow\">if</span> plug == instObjGroups:</div>\n\
<div class=\"line\"><a name=\"l00847\"></a><span class=\"lineno\">  847</span>&#160;                self.setMaterialDirty(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l00848\"></a><span class=\"lineno\">  848</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00849\"></a><span class=\"lineno\">  849</span>&#160;        <span class=\"keywordflow\">return</span> om.MPxNode.connectionBroken(self, plug, otherPlug, asSrc )</div>\n\
<div class=\"line\"><a name=\"l00850\"></a><span class=\"lineno\">  850</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00851\"></a><span class=\"lineno\">  851</span>&#160;    <span class=\"keyword\">def </span>shouldSave(self, plug):</div>\n\
<div class=\"line\"><a name=\"l00852\"></a><span class=\"lineno\">  852</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00853\"></a><span class=\"lineno\">  853</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00854\"></a><span class=\"lineno\">  854</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00855\"></a><span class=\"lineno\">  855</span>&#160;        <span class=\"comment\">##    During file save this method is called to determine which</span></div>\n\
<div class=\"line\"><a name=\"l00856\"></a><span class=\"lineno\">  856</span>&#160;        <span class=\"comment\">##    attributes of this node should get written. The default behavior</span></div>\n\
<div class=\"line\"><a name=\"l00857\"></a><span class=\"lineno\">  857</span>&#160;        <span class=\"comment\">##    is to only save attributes whose values differ from the default.</span></div>\n\
<div class=\"line\"><a name=\"l00858\"></a><span class=\"lineno\">  858</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00859\"></a><span class=\"lineno\">  859</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00860\"></a><span class=\"lineno\">  860</span>&#160;        result = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l00861\"></a><span class=\"lineno\">  861</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00862\"></a><span class=\"lineno\">  862</span>&#160;        <span class=\"keywordflow\">if</span> plug == om.MPxSurfaceShape.mControlPoints <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueX <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueY <span class=\"keywordflow\">or</span> plug == om.MPxSurfaceShape.mControlValueZ:</div>\n\
<div class=\"line\"><a name=\"l00863\"></a><span class=\"lineno\">  863</span>&#160;            <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l00864\"></a><span class=\"lineno\">  864</span>&#160;                <span class=\"comment\">## Calling this will only write tweaks if they are</span></div>\n\
<div class=\"line\"><a name=\"l00865\"></a><span class=\"lineno\">  865</span>&#160;                <span class=\"comment\">## different than the default value.</span></div>\n\
<div class=\"line\"><a name=\"l00866\"></a><span class=\"lineno\">  866</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00867\"></a><span class=\"lineno\">  867</span>&#160;                result = om.MPxNode.shouldSave(self, plug)</div>\n\
<div class=\"line\"><a name=\"l00868\"></a><span class=\"lineno\">  868</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00869\"></a><span class=\"lineno\">  869</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00870\"></a><span class=\"lineno\">  870</span>&#160;                result = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00871\"></a><span class=\"lineno\">  871</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00872\"></a><span class=\"lineno\">  872</span>&#160;        <span class=\"keywordflow\">elif</span> plug == apiMesh.cachedSurface:</div>\n\
<div class=\"line\"><a name=\"l00873\"></a><span class=\"lineno\">  873</span>&#160;            <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l00874\"></a><span class=\"lineno\">  874</span>&#160;                result = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l00875\"></a><span class=\"lineno\">  875</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00876\"></a><span class=\"lineno\">  876</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00877\"></a><span class=\"lineno\">  877</span>&#160;                data = plug.asMObject()</div>\n\
<div class=\"line\"><a name=\"l00878\"></a><span class=\"lineno\">  878</span>&#160;                result = <span class=\"keywordflow\">not</span> data.isNull()</div>\n\
<div class=\"line\"><a name=\"l00879\"></a><span class=\"lineno\">  879</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00880\"></a><span class=\"lineno\">  880</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00881\"></a><span class=\"lineno\">  881</span>&#160;            result = om.MPxNode.shouldSave(self, plug)</div>\n\
<div class=\"line\"><a name=\"l00882\"></a><span class=\"lineno\">  882</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00883\"></a><span class=\"lineno\">  883</span>&#160;        <span class=\"keywordflow\">return</span> result</div>\n\
<div class=\"line\"><a name=\"l00884\"></a><span class=\"lineno\">  884</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00885\"></a><span class=\"lineno\">  885</span>&#160;    <span class=\"comment\">## Attribute to component (components)</span></div>\n\
<div class=\"line\"><a name=\"l00886\"></a><span class=\"lineno\">  886</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00887\"></a><span class=\"lineno\">  887</span>&#160;    <span class=\"keyword\">def </span>componentToPlugs(self, component, list):</div>\n\
<div class=\"line\"><a name=\"l00888\"></a><span class=\"lineno\">  888</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00889\"></a><span class=\"lineno\">  889</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l00890\"></a><span class=\"lineno\">  890</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00891\"></a><span class=\"lineno\">  891</span>&#160;        <span class=\"comment\">##    Converts the given component values into a selection list of plugs.</span></div>\n\
<div class=\"line\"><a name=\"l00892\"></a><span class=\"lineno\">  892</span>&#160;        <span class=\"comment\">##    This method is used to map components to attributes.</span></div>\n\
<div class=\"line\"><a name=\"l00893\"></a><span class=\"lineno\">  893</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00894\"></a><span class=\"lineno\">  894</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00895\"></a><span class=\"lineno\">  895</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00896\"></a><span class=\"lineno\">  896</span>&#160;        <span class=\"comment\">##    component - the component to be translated to a plug/attribute</span></div>\n\
<div class=\"line\"><a name=\"l00897\"></a><span class=\"lineno\">  897</span>&#160;        <span class=\"comment\">##    list      - a list of plugs representing the passed in component</span></div>\n\
<div class=\"line\"><a name=\"l00898\"></a><span class=\"lineno\">  898</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00899\"></a><span class=\"lineno\">  899</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00900\"></a><span class=\"lineno\">  900</span>&#160;        <span class=\"keywordflow\">if</span> component.hasFn(om.MFn.kSingleIndexedComponent):</div>\n\
<div class=\"line\"><a name=\"l00901\"></a><span class=\"lineno\">  901</span>&#160;            fnVtxComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(component) )</div>\n\
<div class=\"line\"><a name=\"l00902\"></a><span class=\"lineno\">  902</span>&#160;            thisNode = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l00903\"></a><span class=\"lineno\">  903</span>&#160;            plug = om.MPlug( thisNode, om.MPxSurfaceShape.mControlPoints )</div>\n\
<div class=\"line\"><a name=\"l00904\"></a><span class=\"lineno\">  904</span>&#160;            <span class=\"comment\">## If this node is connected to a tweak node, reset the</span></div>\n\
<div class=\"line\"><a name=\"l00905\"></a><span class=\"lineno\">  905</span>&#160;            <span class=\"comment\">## plug to point at the tweak node.</span></div>\n\
<div class=\"line\"><a name=\"l00906\"></a><span class=\"lineno\">  906</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00907\"></a><span class=\"lineno\">  907</span>&#160;            self.convertToTweakNodePlug(plug)</div>\n\
<div class=\"line\"><a name=\"l00908\"></a><span class=\"lineno\">  908</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00909\"></a><span class=\"lineno\">  909</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(fnVtxComp.elementCount):</div>\n\
<div class=\"line\"><a name=\"l00910\"></a><span class=\"lineno\">  910</span>&#160;                plug.selectAncestorLogicalIndex(fnVtxComp.element(i), plug.attribute())</div>\n\
<div class=\"line\"><a name=\"l00911\"></a><span class=\"lineno\">  911</span>&#160;                list.add(plug)</div>\n\
<div class=\"line\"><a name=\"l00912\"></a><span class=\"lineno\">  912</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00913\"></a><span class=\"lineno\">  913</span>&#160;    <span class=\"keyword\">def </span>matchComponent(self, item, spec, list):</div>\n\
<div class=\"line\"><a name=\"l00914\"></a><span class=\"lineno\">  914</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00915\"></a><span class=\"lineno\">  915</span>&#160;        <span class=\"comment\">## Description:</span></div>\n\
<div class=\"line\"><a name=\"l00916\"></a><span class=\"lineno\">  916</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00917\"></a><span class=\"lineno\">  917</span>&#160;        <span class=\"comment\">##    Component/attribute matching method.</span></div>\n\
<div class=\"line\"><a name=\"l00918\"></a><span class=\"lineno\">  918</span>&#160;        <span class=\"comment\">##    This method validates component names and indices which are</span></div>\n\
<div class=\"line\"><a name=\"l00919\"></a><span class=\"lineno\">  919</span>&#160;        <span class=\"comment\">##    specified as a string and adds the corresponding component</span></div>\n\
<div class=\"line\"><a name=\"l00920\"></a><span class=\"lineno\">  920</span>&#160;        <span class=\"comment\">##    to the passed in selection list.</span></div>\n\
<div class=\"line\"><a name=\"l00921\"></a><span class=\"lineno\">  921</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00922\"></a><span class=\"lineno\">  922</span>&#160;        <span class=\"comment\">##    For instance, select commands such as &quot;select shape1.vtx[0:7]&quot;</span></div>\n\
<div class=\"line\"><a name=\"l00923\"></a><span class=\"lineno\">  923</span>&#160;        <span class=\"comment\">##    or &quot;select shape1.f[2]&quot; are validated with this method and the</span></div>\n\
<div class=\"line\"><a name=\"l00924\"></a><span class=\"lineno\">  924</span>&#160;        <span class=\"comment\">##    corresponding component is added to the selection list.</span></div>\n\
<div class=\"line\"><a name=\"l00925\"></a><span class=\"lineno\">  925</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00926\"></a><span class=\"lineno\">  926</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00927\"></a><span class=\"lineno\">  927</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00928\"></a><span class=\"lineno\">  928</span>&#160;        <span class=\"comment\">##    item - DAG selection item for the object being matched</span></div>\n\
<div class=\"line\"><a name=\"l00929\"></a><span class=\"lineno\">  929</span>&#160;        <span class=\"comment\">##    spec - attribute specification object</span></div>\n\
<div class=\"line\"><a name=\"l00930\"></a><span class=\"lineno\">  930</span>&#160;        <span class=\"comment\">##    list - list to add components to</span></div>\n\
<div class=\"line\"><a name=\"l00931\"></a><span class=\"lineno\">  931</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00932\"></a><span class=\"lineno\">  932</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l00933\"></a><span class=\"lineno\">  933</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00934\"></a><span class=\"lineno\">  934</span>&#160;        <span class=\"comment\">##    the result of the match</span></div>\n\
<div class=\"line\"><a name=\"l00935\"></a><span class=\"lineno\">  935</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00936\"></a><span class=\"lineno\">  936</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00937\"></a><span class=\"lineno\">  937</span>&#160;        result = om.MPxSurfaceShape.kMatchOk</div>\n\
<div class=\"line\"><a name=\"l00938\"></a><span class=\"lineno\">  938</span>&#160;        attrSpec = spec[0]</div>\n\
<div class=\"line\"><a name=\"l00939\"></a><span class=\"lineno\">  939</span>&#160;        dim = attrSpec.dimensions</div>\n\
<div class=\"line\"><a name=\"l00940\"></a><span class=\"lineno\">  940</span>&#160;        name = attrSpec.name</div>\n\
<div class=\"line\"><a name=\"l00941\"></a><span class=\"lineno\">  941</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00942\"></a><span class=\"lineno\">  942</span>&#160;        <span class=\"comment\">## Look for attributes specifications of the form :</span></div>\n\
<div class=\"line\"><a name=\"l00943\"></a><span class=\"lineno\">  943</span>&#160;        <span class=\"comment\">##     vtx[ index ]</span></div>\n\
<div class=\"line\"><a name=\"l00944\"></a><span class=\"lineno\">  944</span>&#160;        <span class=\"comment\">##     vtx[ lower:upper ]</span></div>\n\
<div class=\"line\"><a name=\"l00945\"></a><span class=\"lineno\">  945</span>&#160;        <span class=\"comment\">##     f[ index ]</span></div>\n\
<div class=\"line\"><a name=\"l00946\"></a><span class=\"lineno\">  946</span>&#160;        <span class=\"comment\">##     f[ lower:upper ]</span></div>\n\
<div class=\"line\"><a name=\"l00947\"></a><span class=\"lineno\">  947</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00948\"></a><span class=\"lineno\">  948</span>&#160;        <span class=\"keywordflow\">if</span> ( (1 == len(spec))<span class=\"keywordflow\">and</span> (dim &gt; 0) <span class=\"keywordflow\">and</span> ((name == <span class=\"stringliteral\">&quot;vtx&quot;</span>) <span class=\"keywordflow\">or</span> (name == <span class=\"stringliteral\">&quot;f&quot;</span>)) ):</div>\n\
<div class=\"line\"><a name=\"l00949\"></a><span class=\"lineno\">  949</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l00950\"></a><span class=\"lineno\">  950</span>&#160;            attrIndex = attrSpec[0]</div>\n\
<div class=\"line\"><a name=\"l00951\"></a><span class=\"lineno\">  951</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l00952\"></a><span class=\"lineno\">  952</span>&#160;            <span class=\"keywordflow\">if</span> (name == <span class=\"stringliteral\">&quot;f&quot;</span>):</div>\n\
<div class=\"line\"><a name=\"l00953\"></a><span class=\"lineno\">  953</span>&#160;                numComp  = self.meshGeom().faceCount</div>\n\
<div class=\"line\"><a name=\"l00954\"></a><span class=\"lineno\">  954</span>&#160;                typeComp = om.MFn.kMeshPolygonComponent</div>\n\
<div class=\"line\"><a name=\"l00955\"></a><span class=\"lineno\">  955</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00956\"></a><span class=\"lineno\">  956</span>&#160;                numComp  = len(self.meshGeom().vertices)</div>\n\
<div class=\"line\"><a name=\"l00957\"></a><span class=\"lineno\">  957</span>&#160;                typeComp = om.MFn.kMeshVertComponent</div>\n\
<div class=\"line\"><a name=\"l00958\"></a><span class=\"lineno\">  958</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l00959\"></a><span class=\"lineno\">  959</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l00960\"></a><span class=\"lineno\">  960</span>&#160;            upper = 0</div>\n\
<div class=\"line\"><a name=\"l00961\"></a><span class=\"lineno\">  961</span>&#160;            lower = 0</div>\n\
<div class=\"line\"><a name=\"l00962\"></a><span class=\"lineno\">  962</span>&#160;            <span class=\"keywordflow\">if</span> attrIndex.hasLowerBound():</div>\n\
<div class=\"line\"><a name=\"l00963\"></a><span class=\"lineno\">  963</span>&#160;                lower = attrIndex.getLower()</div>\n\
<div class=\"line\"><a name=\"l00964\"></a><span class=\"lineno\">  964</span>&#160;            <span class=\"keywordflow\">if</span> attrIndex.hasUpperBound():</div>\n\
<div class=\"line\"><a name=\"l00965\"></a><span class=\"lineno\">  965</span>&#160;                upper = attrIndex.getUpper()</div>\n\
<div class=\"line\"><a name=\"l00966\"></a><span class=\"lineno\">  966</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00967\"></a><span class=\"lineno\">  967</span>&#160;            <span class=\"comment\">## Check the attribute index xrange is valid</span></div>\n\
<div class=\"line\"><a name=\"l00968\"></a><span class=\"lineno\">  968</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00969\"></a><span class=\"lineno\">  969</span>&#160;            <span class=\"keywordflow\">if</span> lower &gt; upper <span class=\"keywordflow\">or</span> upper &gt;= numComp:</div>\n\
<div class=\"line\"><a name=\"l00970\"></a><span class=\"lineno\">  970</span>&#160;                result = om.MPxSurfaceShape.kMatchInvalidAttributeRange</div>\n\
<div class=\"line\"><a name=\"l00971\"></a><span class=\"lineno\">  971</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00972\"></a><span class=\"lineno\">  972</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00973\"></a><span class=\"lineno\">  973</span>&#160;                path = item.getDagPath(0)</div>\n\
<div class=\"line\"><a name=\"l00974\"></a><span class=\"lineno\">  974</span>&#160;                fnComp = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l00975\"></a><span class=\"lineno\">  975</span>&#160;                objComp = fnComp.create( typeComp )</div>\n\
<div class=\"line\"><a name=\"l00976\"></a><span class=\"lineno\">  976</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00977\"></a><span class=\"lineno\">  977</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(lower, upper+1):</div>\n\
<div class=\"line\"><a name=\"l00978\"></a><span class=\"lineno\">  978</span>&#160;                    fnComp.addElement( i )</div>\n\
<div class=\"line\"><a name=\"l00979\"></a><span class=\"lineno\">  979</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l00980\"></a><span class=\"lineno\">  980</span>&#160;                list.add( (path, objComp), <span class=\"keyword\">False</span> )</div>\n\
<div class=\"line\"><a name=\"l00981\"></a><span class=\"lineno\">  981</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00982\"></a><span class=\"lineno\">  982</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l00983\"></a><span class=\"lineno\">  983</span>&#160;            <span class=\"comment\">## Pass this to the parent class</span></div>\n\
<div class=\"line\"><a name=\"l00984\"></a><span class=\"lineno\">  984</span>&#160;            result = om.MPxSurfaceShape.matchComponent(self, item, spec, list )</div>\n\
<div class=\"line\"><a name=\"l00985\"></a><span class=\"lineno\">  985</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00986\"></a><span class=\"lineno\">  986</span>&#160;        <span class=\"keywordflow\">return</span> result</div>\n\
<div class=\"line\"><a name=\"l00987\"></a><span class=\"lineno\">  987</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l00988\"></a><span class=\"lineno\">  988</span>&#160;    <span class=\"keyword\">def </span>match(self, mask, componentList):</div>\n\
<div class=\"line\"><a name=\"l00989\"></a><span class=\"lineno\">  989</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00990\"></a><span class=\"lineno\">  990</span>&#160;        <span class=\"comment\">## Description:</span></div>\n\
<div class=\"line\"><a name=\"l00991\"></a><span class=\"lineno\">  991</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00992\"></a><span class=\"lineno\">  992</span>&#160;        <span class=\"comment\">##      Check for matches between selection type / component list, and</span></div>\n\
<div class=\"line\"><a name=\"l00993\"></a><span class=\"lineno\">  993</span>&#160;        <span class=\"comment\">##      the type of this shape / or it&#39;s components</span></div>\n\
<div class=\"line\"><a name=\"l00994\"></a><span class=\"lineno\">  994</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00995\"></a><span class=\"lineno\">  995</span>&#160;        <span class=\"comment\">##      This is used by sets and deformers to make sure that the selected</span></div>\n\
<div class=\"line\"><a name=\"l00996\"></a><span class=\"lineno\">  996</span>&#160;        <span class=\"comment\">##      components fall into the &quot;vertex only&quot; category.</span></div>\n\
<div class=\"line\"><a name=\"l00997\"></a><span class=\"lineno\">  997</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l00998\"></a><span class=\"lineno\">  998</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l00999\"></a><span class=\"lineno\">  999</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01000\"></a><span class=\"lineno\"> 1000</span>&#160;        <span class=\"comment\">##      mask          - selection type mask</span></div>\n\
<div class=\"line\"><a name=\"l01001\"></a><span class=\"lineno\"> 1001</span>&#160;        <span class=\"comment\">##      componentList - possible component list</span></div>\n\
<div class=\"line\"><a name=\"l01002\"></a><span class=\"lineno\"> 1002</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01003\"></a><span class=\"lineno\"> 1003</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01004\"></a><span class=\"lineno\"> 1004</span>&#160;        <span class=\"comment\">##      True if matched any</span></div>\n\
<div class=\"line\"><a name=\"l01005\"></a><span class=\"lineno\"> 1005</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01006\"></a><span class=\"lineno\"> 1006</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01007\"></a><span class=\"lineno\"> 1007</span>&#160;        result = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01008\"></a><span class=\"lineno\"> 1008</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01009\"></a><span class=\"lineno\"> 1009</span>&#160;        <span class=\"keywordflow\">if</span> len(componentList) == 0:</div>\n\
<div class=\"line\"><a name=\"l01010\"></a><span class=\"lineno\"> 1010</span>&#160;            result = mask.intersects( om.MSelectionMask.kSelectMeshes )</div>\n\
<div class=\"line\"><a name=\"l01011\"></a><span class=\"lineno\"> 1011</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01012\"></a><span class=\"lineno\"> 1012</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01013\"></a><span class=\"lineno\"> 1013</span>&#160;            <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01014\"></a><span class=\"lineno\"> 1014</span>&#160;                <span class=\"keywordflow\">if</span> comp.apiType() == om.MFn.kMeshVertComponent <span class=\"keywordflow\">and</span> mask.intersects(om.MSelectionMask.kSelectMeshVerts):</div>\n\
<div class=\"line\"><a name=\"l01015\"></a><span class=\"lineno\"> 1015</span>&#160;                    result = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01016\"></a><span class=\"lineno\"> 1016</span>&#160;                    <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01017\"></a><span class=\"lineno\"> 1017</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01018\"></a><span class=\"lineno\"> 1018</span>&#160;        <span class=\"keywordflow\">return</span> result</div>\n\
<div class=\"line\"><a name=\"l01019\"></a><span class=\"lineno\"> 1019</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01020\"></a><span class=\"lineno\"> 1020</span>&#160;    <span class=\"comment\">## Support deformers (components)</span></div>\n\
<div class=\"line\"><a name=\"l01021\"></a><span class=\"lineno\"> 1021</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01022\"></a><span class=\"lineno\"> 1022</span>&#160;    <span class=\"keyword\">def </span>createFullVertexGroup(self):</div>\n\
<div class=\"line\"><a name=\"l01023\"></a><span class=\"lineno\"> 1023</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01024\"></a><span class=\"lineno\"> 1024</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01025\"></a><span class=\"lineno\"> 1025</span>&#160;        <span class=\"comment\">##     This method is used by maya when it needs to create a component</span></div>\n\
<div class=\"line\"><a name=\"l01026\"></a><span class=\"lineno\"> 1026</span>&#160;        <span class=\"comment\">##     containing every vertex (or control point) in the shape.</span></div>\n\
<div class=\"line\"><a name=\"l01027\"></a><span class=\"lineno\"> 1027</span>&#160;        <span class=\"comment\">##     This will get called if you apply some deformer to the whole</span></div>\n\
<div class=\"line\"><a name=\"l01028\"></a><span class=\"lineno\"> 1028</span>&#160;        <span class=\"comment\">##     shape, i.e. select the shape in object mode and add a deformer to it.</span></div>\n\
<div class=\"line\"><a name=\"l01029\"></a><span class=\"lineno\"> 1029</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01030\"></a><span class=\"lineno\"> 1030</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01031\"></a><span class=\"lineno\"> 1031</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01032\"></a><span class=\"lineno\"> 1032</span>&#160;        <span class=\"comment\">##    A &quot;complete&quot; component representing all vertices in the shape.</span></div>\n\
<div class=\"line\"><a name=\"l01033\"></a><span class=\"lineno\"> 1033</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01034\"></a><span class=\"lineno\"> 1034</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01035\"></a><span class=\"lineno\"> 1035</span>&#160;        <span class=\"comment\">## Create a vertex component</span></div>\n\
<div class=\"line\"><a name=\"l01036\"></a><span class=\"lineno\"> 1036</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01037\"></a><span class=\"lineno\"> 1037</span>&#160;        fnComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l01038\"></a><span class=\"lineno\"> 1038</span>&#160;        fullComponent = fnComponent.create( om.MFn.kMeshVertComponent )</div>\n\
<div class=\"line\"><a name=\"l01039\"></a><span class=\"lineno\"> 1039</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01040\"></a><span class=\"lineno\"> 1040</span>&#160;        <span class=\"comment\">## Set the component to be complete, i.e. the elements in</span></div>\n\
<div class=\"line\"><a name=\"l01041\"></a><span class=\"lineno\"> 1041</span>&#160;        <span class=\"comment\">## the component will be [0:numVertices-1]</span></div>\n\
<div class=\"line\"><a name=\"l01042\"></a><span class=\"lineno\"> 1042</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01043\"></a><span class=\"lineno\"> 1043</span>&#160;        numVertices = len(self.meshGeom().vertices)</div>\n\
<div class=\"line\"><a name=\"l01044\"></a><span class=\"lineno\"> 1044</span>&#160;        fnComponent.setCompleteData( numVertices )</div>\n\
<div class=\"line\"><a name=\"l01045\"></a><span class=\"lineno\"> 1045</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01046\"></a><span class=\"lineno\"> 1046</span>&#160;        <span class=\"keywordflow\">return</span> fullComponent</div>\n\
<div class=\"line\"><a name=\"l01047\"></a><span class=\"lineno\"> 1047</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01048\"></a><span class=\"lineno\"> 1048</span>&#160;    <span class=\"keyword\">def </span>getShapeSelectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l01049\"></a><span class=\"lineno\"> 1049</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01050\"></a><span class=\"lineno\"> 1050</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01051\"></a><span class=\"lineno\"> 1051</span>&#160;        <span class=\"comment\">##     This method is overriden to support interactive object selection in Viewport 2.0</span></div>\n\
<div class=\"line\"><a name=\"l01052\"></a><span class=\"lineno\"> 1052</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01053\"></a><span class=\"lineno\"> 1053</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01054\"></a><span class=\"lineno\"> 1054</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01055\"></a><span class=\"lineno\"> 1055</span>&#160;        <span class=\"comment\">##    The selection mask of the shape</span></div>\n\
<div class=\"line\"><a name=\"l01056\"></a><span class=\"lineno\"> 1056</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01057\"></a><span class=\"lineno\"> 1057</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01058\"></a><span class=\"lineno\"> 1058</span>&#160;        selType = om.MSelectionMask.kSelectMeshes</div>\n\
<div class=\"line\"><a name=\"l01059\"></a><span class=\"lineno\"> 1059</span>&#160;        <span class=\"keywordflow\">return</span> om.MSelectionMask( selType )</div>\n\
<div class=\"line\"><a name=\"l01060\"></a><span class=\"lineno\"> 1060</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01061\"></a><span class=\"lineno\"> 1061</span>&#160;    <span class=\"keyword\">def </span>getComponentSelectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l01062\"></a><span class=\"lineno\"> 1062</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01063\"></a><span class=\"lineno\"> 1063</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01064\"></a><span class=\"lineno\"> 1064</span>&#160;        <span class=\"comment\">##     This method is overriden to support interactive component selection in Viewport 2.0</span></div>\n\
<div class=\"line\"><a name=\"l01065\"></a><span class=\"lineno\"> 1065</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01066\"></a><span class=\"lineno\"> 1066</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01067\"></a><span class=\"lineno\"> 1067</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01068\"></a><span class=\"lineno\"> 1068</span>&#160;        <span class=\"comment\">##    The mask of the selectable components of the shape</span></div>\n\
<div class=\"line\"><a name=\"l01069\"></a><span class=\"lineno\"> 1069</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01070\"></a><span class=\"lineno\"> 1070</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01071\"></a><span class=\"lineno\"> 1071</span>&#160;        selMask = om.MSelectionMask(om.MSelectionMask.kSelectMeshVerts)</div>\n\
<div class=\"line\"><a name=\"l01072\"></a><span class=\"lineno\"> 1072</span>&#160;        selMask.addMask(om.MSelectionMask.kSelectMeshEdges)</div>\n\
<div class=\"line\"><a name=\"l01073\"></a><span class=\"lineno\"> 1073</span>&#160;        selMask.addMask(om.MSelectionMask.kSelectMeshFaces)</div>\n\
<div class=\"line\"><a name=\"l01074\"></a><span class=\"lineno\"> 1074</span>&#160;        <span class=\"keywordflow\">return</span> selMask</div>\n\
<div class=\"line\"><a name=\"l01075\"></a><span class=\"lineno\"> 1075</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01076\"></a><span class=\"lineno\"> 1076</span>&#160;    <span class=\"keyword\">def </span>localShapeInAttr(self):</div>\n\
<div class=\"line\"><a name=\"l01077\"></a><span class=\"lineno\"> 1077</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01078\"></a><span class=\"lineno\"> 1078</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01079\"></a><span class=\"lineno\"> 1079</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01080\"></a><span class=\"lineno\"> 1080</span>&#160;        <span class=\"comment\">##    Returns the input attribute of the shape. This is used by</span></div>\n\
<div class=\"line\"><a name=\"l01081\"></a><span class=\"lineno\"> 1081</span>&#160;        <span class=\"comment\">##    maya to establish input connections for deformers etc.</span></div>\n\
<div class=\"line\"><a name=\"l01082\"></a><span class=\"lineno\"> 1082</span>&#160;        <span class=\"comment\">##    This attribute must be data of type kGeometryData.</span></div>\n\
<div class=\"line\"><a name=\"l01083\"></a><span class=\"lineno\"> 1083</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01084\"></a><span class=\"lineno\"> 1084</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01085\"></a><span class=\"lineno\"> 1085</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01086\"></a><span class=\"lineno\"> 1086</span>&#160;        <span class=\"comment\">##    input attribute for the shape</span></div>\n\
<div class=\"line\"><a name=\"l01087\"></a><span class=\"lineno\"> 1087</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01088\"></a><span class=\"lineno\"> 1088</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01089\"></a><span class=\"lineno\"> 1089</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh.inputSurface</div>\n\
<div class=\"line\"><a name=\"l01090\"></a><span class=\"lineno\"> 1090</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01091\"></a><span class=\"lineno\"> 1091</span>&#160;    <span class=\"keyword\">def </span>localShapeOutAttr(self):</div>\n\
<div class=\"line\"><a name=\"l01092\"></a><span class=\"lineno\"> 1092</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01093\"></a><span class=\"lineno\"> 1093</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01094\"></a><span class=\"lineno\"> 1094</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01095\"></a><span class=\"lineno\"> 1095</span>&#160;        <span class=\"comment\">##    Returns the output attribute of the shape. This is used by</span></div>\n\
<div class=\"line\"><a name=\"l01096\"></a><span class=\"lineno\"> 1096</span>&#160;        <span class=\"comment\">##    maya to establish out connections for deformers etc.</span></div>\n\
<div class=\"line\"><a name=\"l01097\"></a><span class=\"lineno\"> 1097</span>&#160;        <span class=\"comment\">##    This attribute must be data of type kGeometryData.</span></div>\n\
<div class=\"line\"><a name=\"l01098\"></a><span class=\"lineno\"> 1098</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01099\"></a><span class=\"lineno\"> 1099</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01100\"></a><span class=\"lineno\"> 1100</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01101\"></a><span class=\"lineno\"> 1101</span>&#160;        <span class=\"comment\">##    output attribute for the shape</span></div>\n\
<div class=\"line\"><a name=\"l01102\"></a><span class=\"lineno\"> 1102</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01103\"></a><span class=\"lineno\"> 1103</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01104\"></a><span class=\"lineno\"> 1104</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01105\"></a><span class=\"lineno\"> 1105</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh.outputSurface</div>\n\
<div class=\"line\"><a name=\"l01106\"></a><span class=\"lineno\"> 1106</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01107\"></a><span class=\"lineno\"> 1107</span>&#160;    <span class=\"keyword\">def </span>worldShapeOutAttr(self):</div>\n\
<div class=\"line\"><a name=\"l01108\"></a><span class=\"lineno\"> 1108</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01109\"></a><span class=\"lineno\"> 1109</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01110\"></a><span class=\"lineno\"> 1110</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01111\"></a><span class=\"lineno\"> 1111</span>&#160;        <span class=\"comment\">##    Returns the output attribute of the shape. This is used by</span></div>\n\
<div class=\"line\"><a name=\"l01112\"></a><span class=\"lineno\"> 1112</span>&#160;        <span class=\"comment\">##    maya to establish out connections for deformers etc.</span></div>\n\
<div class=\"line\"><a name=\"l01113\"></a><span class=\"lineno\"> 1113</span>&#160;        <span class=\"comment\">##    This attribute must be data of type kGeometryData.</span></div>\n\
<div class=\"line\"><a name=\"l01114\"></a><span class=\"lineno\"> 1114</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01115\"></a><span class=\"lineno\"> 1115</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01116\"></a><span class=\"lineno\"> 1116</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01117\"></a><span class=\"lineno\"> 1117</span>&#160;        <span class=\"comment\">##    output attribute for the shape</span></div>\n\
<div class=\"line\"><a name=\"l01118\"></a><span class=\"lineno\"> 1118</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01119\"></a><span class=\"lineno\"> 1119</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01120\"></a><span class=\"lineno\"> 1120</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01121\"></a><span class=\"lineno\"> 1121</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh.outputSurface</div>\n\
<div class=\"line\"><a name=\"l01122\"></a><span class=\"lineno\"> 1122</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01123\"></a><span class=\"lineno\"> 1123</span>&#160;    <span class=\"keyword\">def </span>cachedShapeAttr(self):</div>\n\
<div class=\"line\"><a name=\"l01124\"></a><span class=\"lineno\"> 1124</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01125\"></a><span class=\"lineno\"> 1125</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01126\"></a><span class=\"lineno\"> 1126</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01127\"></a><span class=\"lineno\"> 1127</span>&#160;        <span class=\"comment\">##    Returns the cached shape attribute of the shape.</span></div>\n\
<div class=\"line\"><a name=\"l01128\"></a><span class=\"lineno\"> 1128</span>&#160;        <span class=\"comment\">##    This attribute must be data of type kGeometryData.</span></div>\n\
<div class=\"line\"><a name=\"l01129\"></a><span class=\"lineno\"> 1129</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01130\"></a><span class=\"lineno\"> 1130</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01131\"></a><span class=\"lineno\"> 1131</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01132\"></a><span class=\"lineno\"> 1132</span>&#160;        <span class=\"comment\">##    cached shape attribute</span></div>\n\
<div class=\"line\"><a name=\"l01133\"></a><span class=\"lineno\"> 1133</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01134\"></a><span class=\"lineno\"> 1134</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01135\"></a><span class=\"lineno\"> 1135</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh.cachedSurface</div>\n\
<div class=\"line\"><a name=\"l01136\"></a><span class=\"lineno\"> 1136</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01137\"></a><span class=\"lineno\"> 1137</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01138\"></a><span class=\"lineno\"> 1138</span>&#160;    <span class=\"keyword\">def </span>geometryData(self):</div>\n\
<div class=\"line\"><a name=\"l01139\"></a><span class=\"lineno\"> 1139</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01140\"></a><span class=\"lineno\"> 1140</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01141\"></a><span class=\"lineno\"> 1141</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01142\"></a><span class=\"lineno\"> 1142</span>&#160;        <span class=\"comment\">##    Returns the data object for the surface. This gets</span></div>\n\
<div class=\"line\"><a name=\"l01143\"></a><span class=\"lineno\"> 1143</span>&#160;        <span class=\"comment\">##    called internally for grouping (set) information.</span></div>\n\
<div class=\"line\"><a name=\"l01144\"></a><span class=\"lineno\"> 1144</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01145\"></a><span class=\"lineno\"> 1145</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01146\"></a><span class=\"lineno\"> 1146</span>&#160;        datablock = self.forceCache()</div>\n\
<div class=\"line\"><a name=\"l01147\"></a><span class=\"lineno\"> 1147</span>&#160;        handle = datablock.inputValue( apiMesh.inputSurface )</div>\n\
<div class=\"line\"><a name=\"l01148\"></a><span class=\"lineno\"> 1148</span>&#160;        <span class=\"keywordflow\">return</span> handle.data()</div>\n\
<div class=\"line\"><a name=\"l01149\"></a><span class=\"lineno\"> 1149</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01150\"></a><span class=\"lineno\"> 1150</span>&#160;    <span class=\"keyword\">def </span>closestPoint(self, toThisPoint, theClosestPoint, tolerance):</div>\n\
<div class=\"line\"><a name=\"l01151\"></a><span class=\"lineno\"> 1151</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01152\"></a><span class=\"lineno\"> 1152</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01153\"></a><span class=\"lineno\"> 1153</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01154\"></a><span class=\"lineno\"> 1154</span>&#160;        <span class=\"comment\">##      Returns the closest point to the given point in space.</span></div>\n\
<div class=\"line\"><a name=\"l01155\"></a><span class=\"lineno\"> 1155</span>&#160;        <span class=\"comment\">##      Used for rigid bind of skin.  Currently returns wrong results;</span></div>\n\
<div class=\"line\"><a name=\"l01156\"></a><span class=\"lineno\"> 1156</span>&#160;        <span class=\"comment\">##      override it by implementing a closest point calculation.</span></div>\n\
<div class=\"line\"><a name=\"l01157\"></a><span class=\"lineno\"> 1157</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01158\"></a><span class=\"lineno\"> 1158</span>&#160;        <span class=\"comment\">## Iterate through the geometry to find the closest point within</span></div>\n\
<div class=\"line\"><a name=\"l01159\"></a><span class=\"lineno\"> 1159</span>&#160;        <span class=\"comment\">## the given tolerance.</span></div>\n\
<div class=\"line\"><a name=\"l01160\"></a><span class=\"lineno\"> 1160</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01161\"></a><span class=\"lineno\"> 1161</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01162\"></a><span class=\"lineno\"> 1162</span>&#160;        numVertices = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l01163\"></a><span class=\"lineno\"> 1163</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(numVertices):</div>\n\
<div class=\"line\"><a name=\"l01164\"></a><span class=\"lineno\"> 1164</span>&#160;            tryThisOne = geometry.vertices[i]</div>\n\
<div class=\"line\"><a name=\"l01165\"></a><span class=\"lineno\"> 1165</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01166\"></a><span class=\"lineno\"> 1166</span>&#160;        <span class=\"comment\">## Set the output point to the result (hardcode for debug just now)</span></div>\n\
<div class=\"line\"><a name=\"l01167\"></a><span class=\"lineno\"> 1167</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01168\"></a><span class=\"lineno\"> 1168</span>&#160;        theClosestPoint = geometry.vertices[0]</div>\n\
<div class=\"line\"><a name=\"l01169\"></a><span class=\"lineno\"> 1169</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01170\"></a><span class=\"lineno\"> 1170</span>&#160;    <span class=\"comment\">## Support the translate/rotate/scale tool (components)</span></div>\n\
<div class=\"line\"><a name=\"l01171\"></a><span class=\"lineno\"> 1171</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01172\"></a><span class=\"lineno\"> 1172</span>&#160;    <span class=\"keyword\">def </span>transformUsing(self, mat, componentList, cachingMode=om.MPxSurfaceShape.kNoPointCaching, pointCache=None):</div>\n\
<div class=\"line\"><a name=\"l01173\"></a><span class=\"lineno\"> 1173</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01174\"></a><span class=\"lineno\"> 1174</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01175\"></a><span class=\"lineno\"> 1175</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01176\"></a><span class=\"lineno\"> 1176</span>&#160;        <span class=\"comment\">##    Transforms the given components. This method is used by</span></div>\n\
<div class=\"line\"><a name=\"l01177\"></a><span class=\"lineno\"> 1177</span>&#160;        <span class=\"comment\">##    the move, rotate, and scale tools in component mode.</span></div>\n\
<div class=\"line\"><a name=\"l01178\"></a><span class=\"lineno\"> 1178</span>&#160;        <span class=\"comment\">##    The bounding box has to be updated here, so do the normals and</span></div>\n\
<div class=\"line\"><a name=\"l01179\"></a><span class=\"lineno\"> 1179</span>&#160;        <span class=\"comment\">##    any other attributes that depend on vertex positions.</span></div>\n\
<div class=\"line\"><a name=\"l01180\"></a><span class=\"lineno\"> 1180</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01181\"></a><span class=\"lineno\"> 1181</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01182\"></a><span class=\"lineno\"> 1182</span>&#160;        <span class=\"comment\">##    mat           - matrix to tranform the components by</span></div>\n\
<div class=\"line\"><a name=\"l01183\"></a><span class=\"lineno\"> 1183</span>&#160;        <span class=\"comment\">##    componentList - list of components to be transformed,</span></div>\n\
<div class=\"line\"><a name=\"l01184\"></a><span class=\"lineno\"> 1184</span>&#160;        <span class=\"comment\">##                    or an empty list to indicate the whole surface</span></div>\n\
<div class=\"line\"><a name=\"l01185\"></a><span class=\"lineno\"> 1185</span>&#160;        <span class=\"comment\">##    cachingMode   - how to use the supplied pointCache (kSavePoints, kRestorePoints)</span></div>\n\
<div class=\"line\"><a name=\"l01186\"></a><span class=\"lineno\"> 1186</span>&#160;        <span class=\"comment\">##    pointCache    - if non-None, save or restore points from this list base</span></div>\n\
<div class=\"line\"><a name=\"l01187\"></a><span class=\"lineno\"> 1187</span>&#160;        <span class=\"comment\">##                    on the cachingMode</span></div>\n\
<div class=\"line\"><a name=\"l01188\"></a><span class=\"lineno\"> 1188</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01189\"></a><span class=\"lineno\"> 1189</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01190\"></a><span class=\"lineno\"> 1190</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01191\"></a><span class=\"lineno\"> 1191</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01192\"></a><span class=\"lineno\"> 1192</span>&#160;        <span class=\"comment\">## Create cachingMode boolean values for clearer reading of conditional code below</span></div>\n\
<div class=\"line\"><a name=\"l01193\"></a><span class=\"lineno\"> 1193</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01194\"></a><span class=\"lineno\"> 1194</span>&#160;        savePoints    = (cachingMode == om.MPxSurfaceShape.kSavePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01195\"></a><span class=\"lineno\"> 1195</span>&#160;        restorePoints = (cachingMode == om.MPxSurfaceShape.kRestorePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01196\"></a><span class=\"lineno\"> 1196</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01197\"></a><span class=\"lineno\"> 1197</span>&#160;        cacheIndex = 0</div>\n\
<div class=\"line\"><a name=\"l01198\"></a><span class=\"lineno\"> 1198</span>&#160;        cacheLen = 0</div>\n\
<div class=\"line\"><a name=\"l01199\"></a><span class=\"lineno\"> 1199</span>&#160;        <span class=\"keywordflow\">if</span> pointCache:</div>\n\
<div class=\"line\"><a name=\"l01200\"></a><span class=\"lineno\"> 1200</span>&#160;            cacheLen = len(pointCache)</div>\n\
<div class=\"line\"><a name=\"l01201\"></a><span class=\"lineno\"> 1201</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01202\"></a><span class=\"lineno\"> 1202</span>&#160;        <span class=\"keywordflow\">if</span> restorePoints:</div>\n\
<div class=\"line\"><a name=\"l01203\"></a><span class=\"lineno\"> 1203</span>&#160;            <span class=\"comment\">## restore the points based on the data provided in the pointCache attribute</span></div>\n\
<div class=\"line\"><a name=\"l01204\"></a><span class=\"lineno\"> 1204</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01205\"></a><span class=\"lineno\"> 1205</span>&#160;            <span class=\"keywordflow\">if</span> len(componentList) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l01206\"></a><span class=\"lineno\"> 1206</span>&#160;                <span class=\"comment\">## traverse the component list</span></div>\n\
<div class=\"line\"><a name=\"l01207\"></a><span class=\"lineno\"> 1207</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01208\"></a><span class=\"lineno\"> 1208</span>&#160;                <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01209\"></a><span class=\"lineno\"> 1209</span>&#160;                    fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01210\"></a><span class=\"lineno\"> 1210</span>&#160;                    elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01211\"></a><span class=\"lineno\"> 1211</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01212\"></a><span class=\"lineno\"> 1212</span>&#160;                    <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01213\"></a><span class=\"lineno\"> 1213</span>&#160;                        elemIndex = fnComp.element(idx)</div>\n\
<div class=\"line\"><a name=\"l01214\"></a><span class=\"lineno\"> 1214</span>&#160;                        geometry.vertices[elemIndex] = pointCache[cacheIndex]</div>\n\
<div class=\"line\"><a name=\"l01215\"></a><span class=\"lineno\"> 1215</span>&#160;                        cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01216\"></a><span class=\"lineno\"> 1216</span>&#160;                        <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01217\"></a><span class=\"lineno\"> 1217</span>&#160;                            <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01218\"></a><span class=\"lineno\"> 1218</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01219\"></a><span class=\"lineno\"> 1219</span>&#160;                    <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01220\"></a><span class=\"lineno\"> 1220</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01221\"></a><span class=\"lineno\"> 1221</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01222\"></a><span class=\"lineno\"> 1222</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01223\"></a><span class=\"lineno\"> 1223</span>&#160;                <span class=\"comment\">## if the component list is of zero-length, it indicates that we</span></div>\n\
<div class=\"line\"><a name=\"l01224\"></a><span class=\"lineno\"> 1224</span>&#160;                <span class=\"comment\">## should transform the entire surface</span></div>\n\
<div class=\"line\"><a name=\"l01225\"></a><span class=\"lineno\"> 1225</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01226\"></a><span class=\"lineno\"> 1226</span>&#160;                vertLen = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l01227\"></a><span class=\"lineno\"> 1227</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(vertLen):</div>\n\
<div class=\"line\"><a name=\"l01228\"></a><span class=\"lineno\"> 1228</span>&#160;                    geometry.vertices[idx] = pointCache[cacheIndex]</div>\n\
<div class=\"line\"><a name=\"l01229\"></a><span class=\"lineno\"> 1229</span>&#160;                    cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01230\"></a><span class=\"lineno\"> 1230</span>&#160;                    <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01231\"></a><span class=\"lineno\"> 1231</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01232\"></a><span class=\"lineno\"> 1232</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01233\"></a><span class=\"lineno\"> 1233</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01234\"></a><span class=\"lineno\"> 1234</span>&#160;            <span class=\"comment\">## Transform the surface vertices with the matrix.</span></div>\n\
<div class=\"line\"><a name=\"l01235\"></a><span class=\"lineno\"> 1235</span>&#160;            <span class=\"comment\">## If savePoints is True, save the points to the pointCache.</span></div>\n\
<div class=\"line\"><a name=\"l01236\"></a><span class=\"lineno\"> 1236</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01237\"></a><span class=\"lineno\"> 1237</span>&#160;            <span class=\"keywordflow\">if</span> len(componentList) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l01238\"></a><span class=\"lineno\"> 1238</span>&#160;                <span class=\"comment\">## Traverse the componentList</span></div>\n\
<div class=\"line\"><a name=\"l01239\"></a><span class=\"lineno\"> 1239</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01240\"></a><span class=\"lineno\"> 1240</span>&#160;                setSizeIncrement = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01241\"></a><span class=\"lineno\"> 1241</span>&#160;                <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01242\"></a><span class=\"lineno\"> 1242</span>&#160;                    fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01243\"></a><span class=\"lineno\"> 1243</span>&#160;                    elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01244\"></a><span class=\"lineno\"> 1244</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01245\"></a><span class=\"lineno\"> 1245</span>&#160;                    <span class=\"keywordflow\">if</span> savePoints <span class=\"keywordflow\">and</span> setSizeIncrement:</div>\n\
<div class=\"line\"><a name=\"l01246\"></a><span class=\"lineno\"> 1246</span>&#160;                        pointCache.sizeIncrement = elemCount</div>\n\
<div class=\"line\"><a name=\"l01247\"></a><span class=\"lineno\"> 1247</span>&#160;                        setSizeIncrement = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01248\"></a><span class=\"lineno\"> 1248</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01249\"></a><span class=\"lineno\"> 1249</span>&#160;                    <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elemCount):</div>\n\
<div class=\"line\"><a name=\"l01250\"></a><span class=\"lineno\"> 1250</span>&#160;                        elemIndex = fnComp.element(idx)</div>\n\
<div class=\"line\"><a name=\"l01251\"></a><span class=\"lineno\"> 1251</span>&#160;                        <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01252\"></a><span class=\"lineno\"> 1252</span>&#160;                            pointCache.append(geometry.vertices[elemIndex])</div>\n\
<div class=\"line\"><a name=\"l01253\"></a><span class=\"lineno\"> 1253</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01254\"></a><span class=\"lineno\"> 1254</span>&#160;                        geometry.vertices[elemIndex] *= mat</div>\n\
<div class=\"line\"><a name=\"l01255\"></a><span class=\"lineno\"> 1255</span>&#160;                        geometry.normals[idx] = geometry.normals[idx].transformAsNormal( mat )</div>\n\
<div class=\"line\"><a name=\"l01256\"></a><span class=\"lineno\"> 1256</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01257\"></a><span class=\"lineno\"> 1257</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01258\"></a><span class=\"lineno\"> 1258</span>&#160;                <span class=\"comment\">## If the component list is of zero-length, it indicates that we</span></div>\n\
<div class=\"line\"><a name=\"l01259\"></a><span class=\"lineno\"> 1259</span>&#160;                <span class=\"comment\">## should transform the entire surface</span></div>\n\
<div class=\"line\"><a name=\"l01260\"></a><span class=\"lineno\"> 1260</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01261\"></a><span class=\"lineno\"> 1261</span>&#160;                vertLen = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l01262\"></a><span class=\"lineno\"> 1262</span>&#160;                <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01263\"></a><span class=\"lineno\"> 1263</span>&#160;                    pointCache.sizeIncrement = vertLen</div>\n\
<div class=\"line\"><a name=\"l01264\"></a><span class=\"lineno\"> 1264</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01265\"></a><span class=\"lineno\"> 1265</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(vertLen):</div>\n\
<div class=\"line\"><a name=\"l01266\"></a><span class=\"lineno\"> 1266</span>&#160;                    <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01267\"></a><span class=\"lineno\"> 1267</span>&#160;                        pointCache.append(geometry.vertices[idx])</div>\n\
<div class=\"line\"><a name=\"l01268\"></a><span class=\"lineno\"> 1268</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01269\"></a><span class=\"lineno\"> 1269</span>&#160;                    geometry.vertices[idx] *= mat</div>\n\
<div class=\"line\"><a name=\"l01270\"></a><span class=\"lineno\"> 1270</span>&#160;                    geometry.normals[idx] = geometry.normals[idx].transformAsNormal( mat )</div>\n\
<div class=\"line\"><a name=\"l01271\"></a><span class=\"lineno\"> 1271</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01272\"></a><span class=\"lineno\"> 1272</span>&#160;        <span class=\"comment\">## Update the surface</span></div>\n\
<div class=\"line\"><a name=\"l01273\"></a><span class=\"lineno\"> 1273</span>&#160;        self.updateCachedSurface( geometry, componentList )</div>\n\
<div class=\"line\"><a name=\"l01274\"></a><span class=\"lineno\"> 1274</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01275\"></a><span class=\"lineno\"> 1275</span>&#160;    <span class=\"keyword\">def </span>tweakUsing(self, mat, componentList, cachingMode, pointCache, handle):</div>\n\
<div class=\"line\"><a name=\"l01276\"></a><span class=\"lineno\"> 1276</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01277\"></a><span class=\"lineno\"> 1277</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01278\"></a><span class=\"lineno\"> 1278</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01279\"></a><span class=\"lineno\"> 1279</span>&#160;        <span class=\"comment\">##    Transforms the given components. This method is used by</span></div>\n\
<div class=\"line\"><a name=\"l01280\"></a><span class=\"lineno\"> 1280</span>&#160;        <span class=\"comment\">##    the move, rotate, and scale tools in component mode when the</span></div>\n\
<div class=\"line\"><a name=\"l01281\"></a><span class=\"lineno\"> 1281</span>&#160;        <span class=\"comment\">##    tweaks for the shape are stored on a separate tweak node.</span></div>\n\
<div class=\"line\"><a name=\"l01282\"></a><span class=\"lineno\"> 1282</span>&#160;        <span class=\"comment\">##    The bounding box has to be updated here, so do the normals and</span></div>\n\
<div class=\"line\"><a name=\"l01283\"></a><span class=\"lineno\"> 1283</span>&#160;        <span class=\"comment\">##    any other attributes that depend on vertex positions.</span></div>\n\
<div class=\"line\"><a name=\"l01284\"></a><span class=\"lineno\"> 1284</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01285\"></a><span class=\"lineno\"> 1285</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01286\"></a><span class=\"lineno\"> 1286</span>&#160;        <span class=\"comment\">##    mat           - matrix to tranform the components by</span></div>\n\
<div class=\"line\"><a name=\"l01287\"></a><span class=\"lineno\"> 1287</span>&#160;        <span class=\"comment\">##    componentList - list of components to be transformed,</span></div>\n\
<div class=\"line\"><a name=\"l01288\"></a><span class=\"lineno\"> 1288</span>&#160;        <span class=\"comment\">##                    or an empty list to indicate the whole surface</span></div>\n\
<div class=\"line\"><a name=\"l01289\"></a><span class=\"lineno\"> 1289</span>&#160;        <span class=\"comment\">##    cachingMode   - how to use the supplied pointCache (kSavePoints, kRestorePoints, kUpdatePoints)</span></div>\n\
<div class=\"line\"><a name=\"l01290\"></a><span class=\"lineno\"> 1290</span>&#160;        <span class=\"comment\">##    pointCache    - if non-null, save or restore points from this list base</span></div>\n\
<div class=\"line\"><a name=\"l01291\"></a><span class=\"lineno\"> 1291</span>&#160;        <span class=\"comment\">##                    on the cachingMode</span></div>\n\
<div class=\"line\"><a name=\"l01292\"></a><span class=\"lineno\"> 1292</span>&#160;        <span class=\"comment\">##    handle        - handle to the attribute on the tweak node where the</span></div>\n\
<div class=\"line\"><a name=\"l01293\"></a><span class=\"lineno\"> 1293</span>&#160;        <span class=\"comment\">##                    tweaks should be stored</span></div>\n\
<div class=\"line\"><a name=\"l01294\"></a><span class=\"lineno\"> 1294</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01295\"></a><span class=\"lineno\"> 1295</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01296\"></a><span class=\"lineno\"> 1296</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01297\"></a><span class=\"lineno\"> 1297</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01298\"></a><span class=\"lineno\"> 1298</span>&#160;        <span class=\"comment\">## Create cachingMode boolean values for clearer reading of conditional code below</span></div>\n\
<div class=\"line\"><a name=\"l01299\"></a><span class=\"lineno\"> 1299</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01300\"></a><span class=\"lineno\"> 1300</span>&#160;        savePoints    = (cachingMode == om.MPxSurfaceShape.kSavePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01301\"></a><span class=\"lineno\"> 1301</span>&#160;        updatePoints  = (cachingMode == om.MPxSurfaceShape.kUpdatePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01302\"></a><span class=\"lineno\"> 1302</span>&#160;        restorePoints = (cachingMode == om.MPxSurfaceShape.kRestorePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01303\"></a><span class=\"lineno\"> 1303</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01304\"></a><span class=\"lineno\"> 1304</span>&#160;        builder = handle.builder()</div>\n\
<div class=\"line\"><a name=\"l01305\"></a><span class=\"lineno\"> 1305</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01306\"></a><span class=\"lineno\"> 1306</span>&#160;        cacheIndex = 0</div>\n\
<div class=\"line\"><a name=\"l01307\"></a><span class=\"lineno\"> 1307</span>&#160;        cacheLen = 0</div>\n\
<div class=\"line\"><a name=\"l01308\"></a><span class=\"lineno\"> 1308</span>&#160;        <span class=\"keywordflow\">if</span> pointCache:</div>\n\
<div class=\"line\"><a name=\"l01309\"></a><span class=\"lineno\"> 1309</span>&#160;            cacheLen = len(pointCache)</div>\n\
<div class=\"line\"><a name=\"l01310\"></a><span class=\"lineno\"> 1310</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01311\"></a><span class=\"lineno\"> 1311</span>&#160;        <span class=\"keywordflow\">if</span> restorePoints:</div>\n\
<div class=\"line\"><a name=\"l01312\"></a><span class=\"lineno\"> 1312</span>&#160;            <span class=\"comment\">## restore points from the pointCache</span></div>\n\
<div class=\"line\"><a name=\"l01313\"></a><span class=\"lineno\"> 1313</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01314\"></a><span class=\"lineno\"> 1314</span>&#160;            <span class=\"keywordflow\">if</span> len(componentList) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l01315\"></a><span class=\"lineno\"> 1315</span>&#160;                <span class=\"comment\">## traverse the component list</span></div>\n\
<div class=\"line\"><a name=\"l01316\"></a><span class=\"lineno\"> 1316</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01317\"></a><span class=\"lineno\"> 1317</span>&#160;                <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01318\"></a><span class=\"lineno\"> 1318</span>&#160;                    fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01319\"></a><span class=\"lineno\"> 1319</span>&#160;                    elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01320\"></a><span class=\"lineno\"> 1320</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01321\"></a><span class=\"lineno\"> 1321</span>&#160;                    <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01322\"></a><span class=\"lineno\"> 1322</span>&#160;                        elemIndex = fnComp.element(idx)</div>\n\
<div class=\"line\"><a name=\"l01323\"></a><span class=\"lineno\"> 1323</span>&#160;                        cachePt = pointCache[cacheIndex]</div>\n\
<div class=\"line\"><a name=\"l01324\"></a><span class=\"lineno\"> 1324</span>&#160;                        elem = builder.addElement( elemIndex )</div>\n\
<div class=\"line\"><a name=\"l01325\"></a><span class=\"lineno\"> 1325</span>&#160;                        elem.set3Double(cachePt.x, cachePt.y, cachePt.z)</div>\n\
<div class=\"line\"><a name=\"l01326\"></a><span class=\"lineno\"> 1326</span>&#160;                        cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01327\"></a><span class=\"lineno\"> 1327</span>&#160;                        <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01328\"></a><span class=\"lineno\"> 1328</span>&#160;                            <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01329\"></a><span class=\"lineno\"> 1329</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01330\"></a><span class=\"lineno\"> 1330</span>&#160;                    <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01331\"></a><span class=\"lineno\"> 1331</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01332\"></a><span class=\"lineno\"> 1332</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01333\"></a><span class=\"lineno\"> 1333</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01334\"></a><span class=\"lineno\"> 1334</span>&#160;                <span class=\"comment\">## if the component list is of zero-length, it indicates that we</span></div>\n\
<div class=\"line\"><a name=\"l01335\"></a><span class=\"lineno\"> 1335</span>&#160;                <span class=\"comment\">## should transform the entire surface</span></div>\n\
<div class=\"line\"><a name=\"l01336\"></a><span class=\"lineno\"> 1336</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01337\"></a><span class=\"lineno\"> 1337</span>&#160;                vertLen = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l01338\"></a><span class=\"lineno\"> 1338</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(vertLen):</div>\n\
<div class=\"line\"><a name=\"l01339\"></a><span class=\"lineno\"> 1339</span>&#160;                    cachePt = pointCache[cacheIndex]</div>\n\
<div class=\"line\"><a name=\"l01340\"></a><span class=\"lineno\"> 1340</span>&#160;                    elem = builder.addElement( idx )</div>\n\
<div class=\"line\"><a name=\"l01341\"></a><span class=\"lineno\"> 1341</span>&#160;                    elem.set3Double(cachePt.x, cachePt.y, cachePt.z)</div>\n\
<div class=\"line\"><a name=\"l01342\"></a><span class=\"lineno\"> 1342</span>&#160;                    cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01343\"></a><span class=\"lineno\"> 1343</span>&#160;                    <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01344\"></a><span class=\"lineno\"> 1344</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01345\"></a><span class=\"lineno\"> 1345</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01346\"></a><span class=\"lineno\"> 1346</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01347\"></a><span class=\"lineno\"> 1347</span>&#160;            <span class=\"comment\">## Tweak the points. If savePoints is True, also save the tweaks in the</span></div>\n\
<div class=\"line\"><a name=\"l01348\"></a><span class=\"lineno\"> 1348</span>&#160;            <span class=\"comment\">## pointCache. If updatePoints is True, add the new tweaks to the existing</span></div>\n\
<div class=\"line\"><a name=\"l01349\"></a><span class=\"lineno\"> 1349</span>&#160;            <span class=\"comment\">## data in the pointCache.</span></div>\n\
<div class=\"line\"><a name=\"l01350\"></a><span class=\"lineno\"> 1350</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01351\"></a><span class=\"lineno\"> 1351</span>&#160;            <span class=\"keywordflow\">if</span> len(componentList) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l01352\"></a><span class=\"lineno\"> 1352</span>&#160;                setSizeIncrement = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01353\"></a><span class=\"lineno\"> 1353</span>&#160;                <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01354\"></a><span class=\"lineno\"> 1354</span>&#160;                    fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01355\"></a><span class=\"lineno\"> 1355</span>&#160;                    elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01356\"></a><span class=\"lineno\"> 1356</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01357\"></a><span class=\"lineno\"> 1357</span>&#160;                    <span class=\"keywordflow\">if</span> savePoints <span class=\"keywordflow\">and</span> setSizeIncrement:</div>\n\
<div class=\"line\"><a name=\"l01358\"></a><span class=\"lineno\"> 1358</span>&#160;                        pointCache.sizeIncrement = elemCount</div>\n\
<div class=\"line\"><a name=\"l01359\"></a><span class=\"lineno\"> 1359</span>&#160;                        setSizeIncrement = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01360\"></a><span class=\"lineno\"> 1360</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01361\"></a><span class=\"lineno\"> 1361</span>&#160;                    <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01362\"></a><span class=\"lineno\"> 1362</span>&#160;                        elemIndex = fnComp.element(idx)</div>\n\
<div class=\"line\"><a name=\"l01363\"></a><span class=\"lineno\"> 1363</span>&#160;                        currPt = newPt = geometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l01364\"></a><span class=\"lineno\"> 1364</span>&#160;                        newPt *= mat</div>\n\
<div class=\"line\"><a name=\"l01365\"></a><span class=\"lineno\"> 1365</span>&#160;                        delta = newPt - currPt</div>\n\
<div class=\"line\"><a name=\"l01366\"></a><span class=\"lineno\"> 1366</span>&#160;                        elem = builder.addElement( elemIndex )</div>\n\
<div class=\"line\"><a name=\"l01367\"></a><span class=\"lineno\"> 1367</span>&#160;                        elem.set3Double(delta.x, delta.y, delta.z)</div>\n\
<div class=\"line\"><a name=\"l01368\"></a><span class=\"lineno\"> 1368</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01369\"></a><span class=\"lineno\"> 1369</span>&#160;                        <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01370\"></a><span class=\"lineno\"> 1370</span>&#160;                            <span class=\"comment\">## store the points in the pointCache for undo</span></div>\n\
<div class=\"line\"><a name=\"l01371\"></a><span class=\"lineno\"> 1371</span>&#160;                            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01372\"></a><span class=\"lineno\"> 1372</span>&#160;                            pointCache.append(delta*(-1.0))</div>\n\
<div class=\"line\"><a name=\"l01373\"></a><span class=\"lineno\"> 1373</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01374\"></a><span class=\"lineno\"> 1374</span>&#160;                        <span class=\"keywordflow\">elif</span> updatePoints <span class=\"keywordflow\">and</span> cacheIndex &lt; cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01375\"></a><span class=\"lineno\"> 1375</span>&#160;                            pointCache[cacheIndex] = pointCache[cacheIndex] - delta</div>\n\
<div class=\"line\"><a name=\"l01376\"></a><span class=\"lineno\"> 1376</span>&#160;                            cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01377\"></a><span class=\"lineno\"> 1377</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01378\"></a><span class=\"lineno\"> 1378</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01379\"></a><span class=\"lineno\"> 1379</span>&#160;                <span class=\"comment\">## if the component list is of zero-length, it indicates that we</span></div>\n\
<div class=\"line\"><a name=\"l01380\"></a><span class=\"lineno\"> 1380</span>&#160;                <span class=\"comment\">## should transform the entire surface</span></div>\n\
<div class=\"line\"><a name=\"l01381\"></a><span class=\"lineno\"> 1381</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01382\"></a><span class=\"lineno\"> 1382</span>&#160;                vertLen = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l01383\"></a><span class=\"lineno\"> 1383</span>&#160;                <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01384\"></a><span class=\"lineno\"> 1384</span>&#160;                    pointCache.sizeIncrement = vertLen</div>\n\
<div class=\"line\"><a name=\"l01385\"></a><span class=\"lineno\"> 1385</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01386\"></a><span class=\"lineno\"> 1386</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(vertLen):</div>\n\
<div class=\"line\"><a name=\"l01387\"></a><span class=\"lineno\"> 1387</span>&#160;                    currPt = newPt = geometry.vertices[idx]</div>\n\
<div class=\"line\"><a name=\"l01388\"></a><span class=\"lineno\"> 1388</span>&#160;                    newPt *= mat</div>\n\
<div class=\"line\"><a name=\"l01389\"></a><span class=\"lineno\"> 1389</span>&#160;                    delta = newPt - currPt</div>\n\
<div class=\"line\"><a name=\"l01390\"></a><span class=\"lineno\"> 1390</span>&#160;                    elem = builder.addElement( idx )</div>\n\
<div class=\"line\"><a name=\"l01391\"></a><span class=\"lineno\"> 1391</span>&#160;                    elem.set3Double(delta.x, delta.y, delta.z)</div>\n\
<div class=\"line\"><a name=\"l01392\"></a><span class=\"lineno\"> 1392</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01393\"></a><span class=\"lineno\"> 1393</span>&#160;                    <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01394\"></a><span class=\"lineno\"> 1394</span>&#160;                        <span class=\"comment\">## store the points in the pointCache for undo</span></div>\n\
<div class=\"line\"><a name=\"l01395\"></a><span class=\"lineno\"> 1395</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01396\"></a><span class=\"lineno\"> 1396</span>&#160;                        pointCache.append(delta*(-1.0))</div>\n\
<div class=\"line\"><a name=\"l01397\"></a><span class=\"lineno\"> 1397</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01398\"></a><span class=\"lineno\"> 1398</span>&#160;                    <span class=\"keywordflow\">elif</span> updatePoints <span class=\"keywordflow\">and</span> idx &lt; cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01399\"></a><span class=\"lineno\"> 1399</span>&#160;                        pointCache[cacheIndex] = pointCache[cacheIndex] - delta</div>\n\
<div class=\"line\"><a name=\"l01400\"></a><span class=\"lineno\"> 1400</span>&#160;                        cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01401\"></a><span class=\"lineno\"> 1401</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01402\"></a><span class=\"lineno\"> 1402</span>&#160;        <span class=\"comment\">## Set the builder into the handle.</span></div>\n\
<div class=\"line\"><a name=\"l01403\"></a><span class=\"lineno\"> 1403</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01404\"></a><span class=\"lineno\"> 1404</span>&#160;        handle.set(builder)</div>\n\
<div class=\"line\"><a name=\"l01405\"></a><span class=\"lineno\"> 1405</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01406\"></a><span class=\"lineno\"> 1406</span>&#160;        <span class=\"comment\">## Tell maya the bounding box for this object has changed</span></div>\n\
<div class=\"line\"><a name=\"l01407\"></a><span class=\"lineno\"> 1407</span>&#160;        <span class=\"comment\">## and thus &quot;boundingBox()&quot; needs to be called.</span></div>\n\
<div class=\"line\"><a name=\"l01408\"></a><span class=\"lineno\"> 1408</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01409\"></a><span class=\"lineno\"> 1409</span>&#160;        self.childChanged( om.MPxSurfaceShape.kBoundingBoxChanged )</div>\n\
<div class=\"line\"><a name=\"l01410\"></a><span class=\"lineno\"> 1410</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01411\"></a><span class=\"lineno\"> 1411</span>&#160;        <span class=\"comment\">## Signal to the viewport that it needs to update the object</span></div>\n\
<div class=\"line\"><a name=\"l01412\"></a><span class=\"lineno\"> 1412</span>&#160;        self.signalDirtyToViewport()</div>\n\
<div class=\"line\"><a name=\"l01413\"></a><span class=\"lineno\"> 1413</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01414\"></a><span class=\"lineno\"> 1414</span>&#160;    <span class=\"comment\">## Support the soft-select translate/rotate/scale tool (components)</span></div>\n\
<div class=\"line\"><a name=\"l01415\"></a><span class=\"lineno\"> 1415</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01416\"></a><span class=\"lineno\"> 1416</span>&#160;    <span class=\"keyword\">def </span>weightedTransformUsing(self, xform, space, componentList, cachingMode, pointCache, freezePlane):</div>\n\
<div class=\"line\"><a name=\"l01417\"></a><span class=\"lineno\"> 1417</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01418\"></a><span class=\"lineno\"> 1418</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01419\"></a><span class=\"lineno\"> 1419</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01420\"></a><span class=\"lineno\"> 1420</span>&#160;        <span class=\"comment\">##    Transforms the given soft-selected components interpolated using the specified weights.</span></div>\n\
<div class=\"line\"><a name=\"l01421\"></a><span class=\"lineno\"> 1421</span>&#160;        <span class=\"comment\">##    This method is used by the move, rotate, and scale tools in component mode.</span></div>\n\
<div class=\"line\"><a name=\"l01422\"></a><span class=\"lineno\"> 1422</span>&#160;        <span class=\"comment\">##    The bounding box has to be updated here, so do the normals and</span></div>\n\
<div class=\"line\"><a name=\"l01423\"></a><span class=\"lineno\"> 1423</span>&#160;        <span class=\"comment\">##    any other attributes that depend on vertex positions.</span></div>\n\
<div class=\"line\"><a name=\"l01424\"></a><span class=\"lineno\"> 1424</span>&#160;        <span class=\"comment\">##    It is similar to the transformUsing() virtual function.</span></div>\n\
<div class=\"line\"><a name=\"l01425\"></a><span class=\"lineno\"> 1425</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01426\"></a><span class=\"lineno\"> 1426</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01427\"></a><span class=\"lineno\"> 1427</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01428\"></a><span class=\"lineno\"> 1428</span>&#160;        <span class=\"comment\">##    xform           the matrix representing the transformation that is to be applied to the components</span></div>\n\
<div class=\"line\"><a name=\"l01429\"></a><span class=\"lineno\"> 1429</span>&#160;        <span class=\"comment\">##    space           the matrix representing the transformation space to perform the interpolated transformation.</span></div>\n\
<div class=\"line\"><a name=\"l01430\"></a><span class=\"lineno\"> 1430</span>&#160;        <span class=\"comment\">##                    A value of None indicates it should be ignored.</span></div>\n\
<div class=\"line\"><a name=\"l01431\"></a><span class=\"lineno\"> 1431</span>&#160;        <span class=\"comment\">##    componentList   a list of components to be transformed and their weights.  This list will not be empty.</span></div>\n\
<div class=\"line\"><a name=\"l01432\"></a><span class=\"lineno\"> 1432</span>&#160;        <span class=\"comment\">##    cachingMode     whether the points should be added/updated in the pointCache, or restored from</span></div>\n\
<div class=\"line\"><a name=\"l01433\"></a><span class=\"lineno\"> 1433</span>&#160;        <span class=\"comment\">##                    the pointCache, or transform using the original values in the pointCache.</span></div>\n\
<div class=\"line\"><a name=\"l01434\"></a><span class=\"lineno\"> 1434</span>&#160;        <span class=\"comment\">##    pointCache      used to store for undo and restore points during undo</span></div>\n\
<div class=\"line\"><a name=\"l01435\"></a><span class=\"lineno\"> 1435</span>&#160;        <span class=\"comment\">##    freezePlane     used for symmetric transformation of components.  A value of None indicates</span></div>\n\
<div class=\"line\"><a name=\"l01436\"></a><span class=\"lineno\"> 1436</span>&#160;        <span class=\"comment\">##                    it is not used and there is no symmetric transformation.</span></div>\n\
<div class=\"line\"><a name=\"l01437\"></a><span class=\"lineno\"> 1437</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01438\"></a><span class=\"lineno\"> 1438</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01439\"></a><span class=\"lineno\"> 1439</span>&#160;        <span class=\"comment\">## For example purposes only, use the default MPxSurfaceShape.weightedTransformUsing() if the</span></div>\n\
<div class=\"line\"><a name=\"l01440\"></a><span class=\"lineno\"> 1440</span>&#160;        <span class=\"comment\">## useWeightedTransformUsingFunction is False</span></div>\n\
<div class=\"line\"><a name=\"l01441\"></a><span class=\"lineno\"> 1441</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01442\"></a><span class=\"lineno\"> 1442</span>&#160;        plg_useWeightedTransformUsingFunction = om.MPlug( self.thisMObject(), apiMesh.useWeightedTransformUsingFunction )</div>\n\
<div class=\"line\"><a name=\"l01443\"></a><span class=\"lineno\"> 1443</span>&#160;        val_useWeightedTransformUsingFunction = plg_useWeightedTransformUsingFunction.asBool()</div>\n\
<div class=\"line\"><a name=\"l01444\"></a><span class=\"lineno\"> 1444</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> val_useWeightedTransformUsingFunction:</div>\n\
<div class=\"line\"><a name=\"l01445\"></a><span class=\"lineno\"> 1445</span>&#160;            om.MPxSurfaceShape.weightedTransformUsing(self, xform, space, componentList, cachingMode, pointCache, freezePlane)</div>\n\
<div class=\"line\"><a name=\"l01446\"></a><span class=\"lineno\"> 1446</span>&#160;            self.signalDirtyToViewport()</div>\n\
<div class=\"line\"><a name=\"l01447\"></a><span class=\"lineno\"> 1447</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l01448\"></a><span class=\"lineno\"> 1448</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01449\"></a><span class=\"lineno\"> 1449</span>&#160;        <span class=\"comment\">## Create cachingMode boolean values for clearer reading of conditional code below</span></div>\n\
<div class=\"line\"><a name=\"l01450\"></a><span class=\"lineno\"> 1450</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01451\"></a><span class=\"lineno\"> 1451</span>&#160;        savePoints          = (cachingMode == om.MPxSurfaceShape.kSavePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01452\"></a><span class=\"lineno\"> 1452</span>&#160;        updatePoints        = (cachingMode == om.MPxSurfaceShape.kUpdatePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01453\"></a><span class=\"lineno\"> 1453</span>&#160;        restorePoints       = (cachingMode == om.MPxSurfaceShape.kRestorePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01454\"></a><span class=\"lineno\"> 1454</span>&#160;        transformOrigPoints = (cachingMode == om.MPxSurfaceShape.kTransformOriginalPoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01455\"></a><span class=\"lineno\"> 1455</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01456\"></a><span class=\"lineno\"> 1456</span>&#160;        <span class=\"comment\">## Pre-calculate parameters</span></div>\n\
<div class=\"line\"><a name=\"l01457\"></a><span class=\"lineno\"> 1457</span>&#160;        spaceInv = om.MMatrix()</div>\n\
<div class=\"line\"><a name=\"l01458\"></a><span class=\"lineno\"> 1458</span>&#160;        <span class=\"keywordflow\">if</span> space:</div>\n\
<div class=\"line\"><a name=\"l01459\"></a><span class=\"lineno\"> 1459</span>&#160;            spaceInv = space.inverse()</div>\n\
<div class=\"line\"><a name=\"l01460\"></a><span class=\"lineno\"> 1460</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01461\"></a><span class=\"lineno\"> 1461</span>&#160;        <span class=\"comment\">## Traverse the componentList and modify the control points</span></div>\n\
<div class=\"line\"><a name=\"l01462\"></a><span class=\"lineno\"> 1462</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01463\"></a><span class=\"lineno\"> 1463</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01464\"></a><span class=\"lineno\"> 1464</span>&#160;        almostZero = 1.0e-5 <span class=\"comment\">## Hardcoded tolerance</span></div>\n\
<div class=\"line\"><a name=\"l01465\"></a><span class=\"lineno\"> 1465</span>&#160;        pointCacheIndex = 0</div>\n\
<div class=\"line\"><a name=\"l01466\"></a><span class=\"lineno\"> 1466</span>&#160;        setSizeIncrement = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01467\"></a><span class=\"lineno\"> 1467</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01468\"></a><span class=\"lineno\"> 1468</span>&#160;        <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01469\"></a><span class=\"lineno\"> 1469</span>&#160;            fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01470\"></a><span class=\"lineno\"> 1470</span>&#160;            elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01471\"></a><span class=\"lineno\"> 1471</span>&#160;            hasWeights = fnComp.hasWeights</div>\n\
<div class=\"line\"><a name=\"l01472\"></a><span class=\"lineno\"> 1472</span>&#160;            hasSeam = (freezePlane <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01473\"></a><span class=\"lineno\"> 1473</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01474\"></a><span class=\"lineno\"> 1474</span>&#160;            <span class=\"keywordflow\">if</span> savePoints <span class=\"keywordflow\">and</span> setSizeIncrement:</div>\n\
<div class=\"line\"><a name=\"l01475\"></a><span class=\"lineno\"> 1475</span>&#160;                pointCache.sizeIncrement = elemCount</div>\n\
<div class=\"line\"><a name=\"l01476\"></a><span class=\"lineno\"> 1476</span>&#160;                setSizeIncrement = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01477\"></a><span class=\"lineno\"> 1477</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01478\"></a><span class=\"lineno\"> 1478</span>&#160;            <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01479\"></a><span class=\"lineno\"> 1479</span>&#160;                elemIndex = fnComp.element( idx )</div>\n\
<div class=\"line\"><a name=\"l01480\"></a><span class=\"lineno\"> 1480</span>&#160;                perc = 1.0</div>\n\
<div class=\"line\"><a name=\"l01481\"></a><span class=\"lineno\"> 1481</span>&#160;                <span class=\"keywordflow\">if</span> hasWeights:</div>\n\
<div class=\"line\"><a name=\"l01482\"></a><span class=\"lineno\"> 1482</span>&#160;                    perc = fnComp.weight(idx).influence()   <span class=\"comment\">## get the weight for the component</span></div>\n\
<div class=\"line\"><a name=\"l01483\"></a><span class=\"lineno\"> 1483</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01484\"></a><span class=\"lineno\"> 1484</span>&#160;                <span class=\"comment\">## Only act upon points (store in pointCache, transform, etc) that have a non-zero weight</span></div>\n\
<div class=\"line\"><a name=\"l01485\"></a><span class=\"lineno\"> 1485</span>&#160;                <span class=\"keywordflow\">if</span> perc &gt; almostZero:   <span class=\"comment\">## if the point has enough weight to be transformed</span></div>\n\
<div class=\"line\"><a name=\"l01486\"></a><span class=\"lineno\"> 1486</span>&#160;                    <span class=\"keywordflow\">if</span> restorePoints:</div>\n\
<div class=\"line\"><a name=\"l01487\"></a><span class=\"lineno\"> 1487</span>&#160;                        <span class=\"comment\">## restore the original point from the point cache</span></div>\n\
<div class=\"line\"><a name=\"l01488\"></a><span class=\"lineno\"> 1488</span>&#160;                        geometry.vertices[elemIndex] = om.MVector( pointCache[pointCacheIndex] )</div>\n\
<div class=\"line\"><a name=\"l01489\"></a><span class=\"lineno\"> 1489</span>&#160;                        pointCacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01490\"></a><span class=\"lineno\"> 1490</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01491\"></a><span class=\"lineno\"> 1491</span>&#160;                    <span class=\"keywordflow\">else</span>:   <span class=\"comment\">## perform point transformation</span></div>\n\
<div class=\"line\"><a name=\"l01492\"></a><span class=\"lineno\"> 1492</span>&#160;                        <span class=\"comment\">## Update the pointCache with the original value</span></div>\n\
<div class=\"line\"><a name=\"l01493\"></a><span class=\"lineno\"> 1493</span>&#160;                        <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01494\"></a><span class=\"lineno\"> 1494</span>&#160;                            pointCache.append( geometry.vertices[elemIndex] )</div>\n\
<div class=\"line\"><a name=\"l01495\"></a><span class=\"lineno\"> 1495</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01496\"></a><span class=\"lineno\"> 1496</span>&#160;                        <span class=\"keywordflow\">elif</span> transformOrigPoints:   <span class=\"comment\">## start by reverting points back to their original values stored in the pointCache for the transformation</span></div>\n\
<div class=\"line\"><a name=\"l01497\"></a><span class=\"lineno\"> 1497</span>&#160;                            geometry.vertices[elemIndex] = om.MVector( pointCache[pointCacheIndex] )</div>\n\
<div class=\"line\"><a name=\"l01498\"></a><span class=\"lineno\"> 1498</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01499\"></a><span class=\"lineno\"> 1499</span>&#160;                        <span class=\"keywordflow\">elif</span> updatePoints:  <span class=\"comment\">## update the pointCache with the current values</span></div>\n\
<div class=\"line\"><a name=\"l01500\"></a><span class=\"lineno\"> 1500</span>&#160;                            pointCache[pointCacheIndex] = geometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l01501\"></a><span class=\"lineno\"> 1501</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01502\"></a><span class=\"lineno\"> 1502</span>&#160;                        <span class=\"comment\">## Compute interpolated transformation matrix</span></div>\n\
<div class=\"line\"><a name=\"l01503\"></a><span class=\"lineno\"> 1503</span>&#160;                        mat = om.MMatrix()</div>\n\
<div class=\"line\"><a name=\"l01504\"></a><span class=\"lineno\"> 1504</span>&#160;                        <span class=\"keywordflow\">if</span> perc == 1.0:</div>\n\
<div class=\"line\"><a name=\"l01505\"></a><span class=\"lineno\"> 1505</span>&#160;                            mat = xform.asMatrix()</div>\n\
<div class=\"line\"><a name=\"l01506\"></a><span class=\"lineno\"> 1506</span>&#160;                        <span class=\"keywordflow\">elif</span> space:</div>\n\
<div class=\"line\"><a name=\"l01507\"></a><span class=\"lineno\"> 1507</span>&#160;                            mat = space * xform.asMatrix(perc) * spaceInv</div>\n\
<div class=\"line\"><a name=\"l01508\"></a><span class=\"lineno\"> 1508</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01509\"></a><span class=\"lineno\"> 1509</span>&#160;                            mat = xform.asMatrix(perc)</div>\n\
<div class=\"line\"><a name=\"l01510\"></a><span class=\"lineno\"> 1510</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01511\"></a><span class=\"lineno\"> 1511</span>&#160;                        <span class=\"comment\">## transform to new position</span></div>\n\
<div class=\"line\"><a name=\"l01512\"></a><span class=\"lineno\"> 1512</span>&#160;                        currPt = newPt = geometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l01513\"></a><span class=\"lineno\"> 1513</span>&#160;                        newPt *= mat</div>\n\
<div class=\"line\"><a name=\"l01514\"></a><span class=\"lineno\"> 1514</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01515\"></a><span class=\"lineno\"> 1515</span>&#160;                        <span class=\"comment\">## handle symmetry and reflection</span></div>\n\
<div class=\"line\"><a name=\"l01516\"></a><span class=\"lineno\"> 1516</span>&#160;                        <span class=\"keywordflow\">if</span> hasSeam <span class=\"keywordflow\">and</span> fnComp.weight(idx).seam() &gt; 0.0:</div>\n\
<div class=\"line\"><a name=\"l01517\"></a><span class=\"lineno\"> 1517</span>&#160;                            newPt += freezePlane.normal() * (fnComp.weight(idx).seam() * (freezePlane.directedDistance(currPt) - freezePlane.directedDistance(newPt)))</div>\n\
<div class=\"line\"><a name=\"l01518\"></a><span class=\"lineno\"> 1518</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01519\"></a><span class=\"lineno\"> 1519</span>&#160;                        <span class=\"comment\">## Update the geometry with the new point</span></div>\n\
<div class=\"line\"><a name=\"l01520\"></a><span class=\"lineno\"> 1520</span>&#160;                        geometry.vertices[elemIndex] = newPt</div>\n\
<div class=\"line\"><a name=\"l01521\"></a><span class=\"lineno\"> 1521</span>&#160;                        pointCacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01522\"></a><span class=\"lineno\"> 1522</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01523\"></a><span class=\"lineno\"> 1523</span>&#160;        <span class=\"comment\">## Update the surface</span></div>\n\
<div class=\"line\"><a name=\"l01524\"></a><span class=\"lineno\"> 1524</span>&#160;        self.updateCachedSurface( geometry, componentList )</div>\n\
<div class=\"line\"><a name=\"l01525\"></a><span class=\"lineno\"> 1525</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01526\"></a><span class=\"lineno\"> 1526</span>&#160;    <span class=\"keyword\">def </span>weightedTweakUsing(self, xform, space, componentList, cachingMode, pointCache, freezePlane, handle):</div>\n\
<div class=\"line\"><a name=\"l01527\"></a><span class=\"lineno\"> 1527</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01528\"></a><span class=\"lineno\"> 1528</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01529\"></a><span class=\"lineno\"> 1529</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01530\"></a><span class=\"lineno\"> 1530</span>&#160;        <span class=\"comment\">##    Transforms the given soft-selected components interpolated using the specified weights.</span></div>\n\
<div class=\"line\"><a name=\"l01531\"></a><span class=\"lineno\"> 1531</span>&#160;        <span class=\"comment\">##    This method is used by the move, rotate, and scale tools in component mode when the</span></div>\n\
<div class=\"line\"><a name=\"l01532\"></a><span class=\"lineno\"> 1532</span>&#160;        <span class=\"comment\">##    tweaks for the shape are stored on a separate tweak node.</span></div>\n\
<div class=\"line\"><a name=\"l01533\"></a><span class=\"lineno\"> 1533</span>&#160;        <span class=\"comment\">##    The bounding box has to be updated here, so do the normals and</span></div>\n\
<div class=\"line\"><a name=\"l01534\"></a><span class=\"lineno\"> 1534</span>&#160;        <span class=\"comment\">##    any other attributes that depend on vertex positions.</span></div>\n\
<div class=\"line\"><a name=\"l01535\"></a><span class=\"lineno\"> 1535</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01536\"></a><span class=\"lineno\"> 1536</span>&#160;        <span class=\"comment\">##    It is similar to the tweakUsing() virtual function and is based on apiMesh.tweakUsing().</span></div>\n\
<div class=\"line\"><a name=\"l01537\"></a><span class=\"lineno\"> 1537</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01538\"></a><span class=\"lineno\"> 1538</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01539\"></a><span class=\"lineno\"> 1539</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01540\"></a><span class=\"lineno\"> 1540</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01541\"></a><span class=\"lineno\"> 1541</span>&#160;        <span class=\"comment\">##    xform           the matrix representing the transformation that is to be applied to the components</span></div>\n\
<div class=\"line\"><a name=\"l01542\"></a><span class=\"lineno\"> 1542</span>&#160;        <span class=\"comment\">##    space           the matrix representing the transformation space to perform the interpolated transformation.</span></div>\n\
<div class=\"line\"><a name=\"l01543\"></a><span class=\"lineno\"> 1543</span>&#160;        <span class=\"comment\">##                    A value of None indicates it should be ignored.</span></div>\n\
<div class=\"line\"><a name=\"l01544\"></a><span class=\"lineno\"> 1544</span>&#160;        <span class=\"comment\">##    componentList   a list of components to be transformed and their weights.  This list will not be empty.</span></div>\n\
<div class=\"line\"><a name=\"l01545\"></a><span class=\"lineno\"> 1545</span>&#160;        <span class=\"comment\">##    cachingMode     whether the points should be added/updated in the pointCache, or restored from</span></div>\n\
<div class=\"line\"><a name=\"l01546\"></a><span class=\"lineno\"> 1546</span>&#160;        <span class=\"comment\">##                    the pointCache, or transform using use the original values in the pointCache.</span></div>\n\
<div class=\"line\"><a name=\"l01547\"></a><span class=\"lineno\"> 1547</span>&#160;        <span class=\"comment\">##    pointCache      used to store for undo and restore points during undo</span></div>\n\
<div class=\"line\"><a name=\"l01548\"></a><span class=\"lineno\"> 1548</span>&#160;        <span class=\"comment\">##    freezePlane     used for symmetric transformation of components.  A value of None indicates</span></div>\n\
<div class=\"line\"><a name=\"l01549\"></a><span class=\"lineno\"> 1549</span>&#160;        <span class=\"comment\">##                    it is not used and there is no symmetric transformation.</span></div>\n\
<div class=\"line\"><a name=\"l01550\"></a><span class=\"lineno\"> 1550</span>&#160;        <span class=\"comment\">##    handle          handle to the attribute on the tweak node where the</span></div>\n\
<div class=\"line\"><a name=\"l01551\"></a><span class=\"lineno\"> 1551</span>&#160;        <span class=\"comment\">##                    tweaks should be stored</span></div>\n\
<div class=\"line\"><a name=\"l01552\"></a><span class=\"lineno\"> 1552</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01553\"></a><span class=\"lineno\"> 1553</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l01554\"></a><span class=\"lineno\"> 1554</span>&#160;        <span class=\"comment\">## For example purposes only, use the default MPxSurfaceShape.weightedTweakUsing() if the</span></div>\n\
<div class=\"line\"><a name=\"l01555\"></a><span class=\"lineno\"> 1555</span>&#160;        <span class=\"comment\">## useWeightedTweakUsingFunction is False</span></div>\n\
<div class=\"line\"><a name=\"l01556\"></a><span class=\"lineno\"> 1556</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01557\"></a><span class=\"lineno\"> 1557</span>&#160;        plg_useWeightedTweakUsingFunction = om.MPlug( self.thisMObject(), apiMesh.useWeightedTweakUsingFunction )</div>\n\
<div class=\"line\"><a name=\"l01558\"></a><span class=\"lineno\"> 1558</span>&#160;        val_useWeightedTweakUsingFunction = plg_useWeightedTweakUsingFunction.asBool()</div>\n\
<div class=\"line\"><a name=\"l01559\"></a><span class=\"lineno\"> 1559</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> val_useWeightedTweakUsingFunction:</div>\n\
<div class=\"line\"><a name=\"l01560\"></a><span class=\"lineno\"> 1560</span>&#160;            om.MPxSurfaceShape.weightedTweakUsing(self, xform, space, componentList, cachingMode, pointCache, freezePlane, handle)</div>\n\
<div class=\"line\"><a name=\"l01561\"></a><span class=\"lineno\"> 1561</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l01562\"></a><span class=\"lineno\"> 1562</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01563\"></a><span class=\"lineno\"> 1563</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01564\"></a><span class=\"lineno\"> 1564</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01565\"></a><span class=\"lineno\"> 1565</span>&#160;        <span class=\"comment\">## Create cachingMode boolean values for clearer reading of conditional code below</span></div>\n\
<div class=\"line\"><a name=\"l01566\"></a><span class=\"lineno\"> 1566</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01567\"></a><span class=\"lineno\"> 1567</span>&#160;        savePoints          = (cachingMode == om.MPxSurfaceShape.kSavePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01568\"></a><span class=\"lineno\"> 1568</span>&#160;        updatePoints        = (cachingMode == om.MPxSurfaceShape.kUpdatePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01569\"></a><span class=\"lineno\"> 1569</span>&#160;        restorePoints       = (cachingMode == om.MPxSurfaceShape.kRestorePoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01570\"></a><span class=\"lineno\"> 1570</span>&#160;        transformOrigPoints = (cachingMode == om.MPxSurfaceShape.kTransformOriginalPoints <span class=\"keywordflow\">and</span> pointCache <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l01571\"></a><span class=\"lineno\"> 1571</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01572\"></a><span class=\"lineno\"> 1572</span>&#160;        builder = handle.builder()</div>\n\
<div class=\"line\"><a name=\"l01573\"></a><span class=\"lineno\"> 1573</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01574\"></a><span class=\"lineno\"> 1574</span>&#160;        cacheIndex = 0</div>\n\
<div class=\"line\"><a name=\"l01575\"></a><span class=\"lineno\"> 1575</span>&#160;        cacheLen = 0</div>\n\
<div class=\"line\"><a name=\"l01576\"></a><span class=\"lineno\"> 1576</span>&#160;        <span class=\"keywordflow\">if</span> pointCache:</div>\n\
<div class=\"line\"><a name=\"l01577\"></a><span class=\"lineno\"> 1577</span>&#160;            cacheLen = len(pointCache)</div>\n\
<div class=\"line\"><a name=\"l01578\"></a><span class=\"lineno\"> 1578</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01579\"></a><span class=\"lineno\"> 1579</span>&#160;        <span class=\"keywordflow\">if</span> restorePoints:</div>\n\
<div class=\"line\"><a name=\"l01580\"></a><span class=\"lineno\"> 1580</span>&#160;            <span class=\"comment\">## restore points from the pointCache</span></div>\n\
<div class=\"line\"><a name=\"l01581\"></a><span class=\"lineno\"> 1581</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01582\"></a><span class=\"lineno\"> 1582</span>&#160;            <span class=\"comment\">## traverse the component list</span></div>\n\
<div class=\"line\"><a name=\"l01583\"></a><span class=\"lineno\"> 1583</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01584\"></a><span class=\"lineno\"> 1584</span>&#160;            <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01585\"></a><span class=\"lineno\"> 1585</span>&#160;                fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01586\"></a><span class=\"lineno\"> 1586</span>&#160;                elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01587\"></a><span class=\"lineno\"> 1587</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01588\"></a><span class=\"lineno\"> 1588</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01589\"></a><span class=\"lineno\"> 1589</span>&#160;                    elemIndex = fnComp.element( idx )</div>\n\
<div class=\"line\"><a name=\"l01590\"></a><span class=\"lineno\"> 1590</span>&#160;                    cachePt = pointCache[cacheIndex]</div>\n\
<div class=\"line\"><a name=\"l01591\"></a><span class=\"lineno\"> 1591</span>&#160;                    elem = builder.addElement( elemIndex )</div>\n\
<div class=\"line\"><a name=\"l01592\"></a><span class=\"lineno\"> 1592</span>&#160;                    elem.set3Double(cachePt.x, cachePt.y, cachePt.z)</div>\n\
<div class=\"line\"><a name=\"l01593\"></a><span class=\"lineno\"> 1593</span>&#160;                    cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01594\"></a><span class=\"lineno\"> 1594</span>&#160;                    <span class=\"keywordflow\">if</span> cacheIndex &gt;= cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01595\"></a><span class=\"lineno\"> 1595</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l01596\"></a><span class=\"lineno\"> 1596</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01597\"></a><span class=\"lineno\"> 1597</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01598\"></a><span class=\"lineno\"> 1598</span>&#160;            <span class=\"comment\">## Tweak the points. If savePoints is True, also save the tweaks in the</span></div>\n\
<div class=\"line\"><a name=\"l01599\"></a><span class=\"lineno\"> 1599</span>&#160;            <span class=\"comment\">## pointCache. If updatePoints is True, add the new tweaks to the existing</span></div>\n\
<div class=\"line\"><a name=\"l01600\"></a><span class=\"lineno\"> 1600</span>&#160;            <span class=\"comment\">## data in the pointCache.</span></div>\n\
<div class=\"line\"><a name=\"l01601\"></a><span class=\"lineno\"> 1601</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01602\"></a><span class=\"lineno\"> 1602</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01603\"></a><span class=\"lineno\"> 1603</span>&#160;            <span class=\"comment\">## Specify a few parameters (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01604\"></a><span class=\"lineno\"> 1604</span>&#160;            almostZero = 1.0e-5 <span class=\"comment\">## Hardcoded tolerance</span></div>\n\
<div class=\"line\"><a name=\"l01605\"></a><span class=\"lineno\"> 1605</span>&#160;            setSizeIncrement = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01606\"></a><span class=\"lineno\"> 1606</span>&#160;            spaceInv = om.MMatrix()</div>\n\
<div class=\"line\"><a name=\"l01607\"></a><span class=\"lineno\"> 1607</span>&#160;            <span class=\"keywordflow\">if</span> space:</div>\n\
<div class=\"line\"><a name=\"l01608\"></a><span class=\"lineno\"> 1608</span>&#160;                spaceInv = space.inverse()</div>\n\
<div class=\"line\"><a name=\"l01609\"></a><span class=\"lineno\"> 1609</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01610\"></a><span class=\"lineno\"> 1610</span>&#160;            <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l01611\"></a><span class=\"lineno\"> 1611</span>&#160;                fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l01612\"></a><span class=\"lineno\"> 1612</span>&#160;                elemCount = fnComp.elementCount</div>\n\
<div class=\"line\"><a name=\"l01613\"></a><span class=\"lineno\"> 1613</span>&#160;                hasWeights = fnComp.hasWeights <span class=\"comment\">## (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01614\"></a><span class=\"lineno\"> 1614</span>&#160;                hasSeam = (freezePlane <span class=\"keywordflow\">is</span> <span class=\"keywordflow\">not</span> <span class=\"keywordtype\">None</span>)  <span class=\"comment\">## (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01615\"></a><span class=\"lineno\"> 1615</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01616\"></a><span class=\"lineno\"> 1616</span>&#160;                <span class=\"keywordflow\">if</span> savePoints <span class=\"keywordflow\">and</span> setSizeIncrement:</div>\n\
<div class=\"line\"><a name=\"l01617\"></a><span class=\"lineno\"> 1617</span>&#160;                    pointCache.sizeIncrement = elemCount</div>\n\
<div class=\"line\"><a name=\"l01618\"></a><span class=\"lineno\"> 1618</span>&#160;                    setSizeIncrement = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01619\"></a><span class=\"lineno\"> 1619</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01620\"></a><span class=\"lineno\"> 1620</span>&#160;                <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> range(elementCount):</div>\n\
<div class=\"line\"><a name=\"l01621\"></a><span class=\"lineno\"> 1621</span>&#160;                    elemIndex = fnComp.element( idx )</div>\n\
<div class=\"line\"><a name=\"l01622\"></a><span class=\"lineno\"> 1622</span>&#160;                    perc = 1.0</div>\n\
<div class=\"line\"><a name=\"l01623\"></a><span class=\"lineno\"> 1623</span>&#160;                    <span class=\"keywordflow\">if</span> hasWeights:</div>\n\
<div class=\"line\"><a name=\"l01624\"></a><span class=\"lineno\"> 1624</span>&#160;                        perc = fnComp.weight(idx).influence()   <span class=\"comment\">## get the weight for the component</span></div>\n\
<div class=\"line\"><a name=\"l01625\"></a><span class=\"lineno\"> 1625</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01626\"></a><span class=\"lineno\"> 1626</span>&#160;                    <span class=\"comment\">## Only act upon points (store in pointCache, transform, etc) that have a non-zero weight</span></div>\n\
<div class=\"line\"><a name=\"l01627\"></a><span class=\"lineno\"> 1627</span>&#160;                    <span class=\"keywordflow\">if</span> perc &gt; almostZero:   <span class=\"comment\">## if the point has enough weight to be transformed (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01628\"></a><span class=\"lineno\"> 1628</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01629\"></a><span class=\"lineno\"> 1629</span>&#160;                        <span class=\"comment\">## Compute interpolated transformation matrix (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01630\"></a><span class=\"lineno\"> 1630</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01631\"></a><span class=\"lineno\"> 1631</span>&#160;                        mat = om.MMatrix()</div>\n\
<div class=\"line\"><a name=\"l01632\"></a><span class=\"lineno\"> 1632</span>&#160;                        <span class=\"keywordflow\">if</span> perc == 1.0:</div>\n\
<div class=\"line\"><a name=\"l01633\"></a><span class=\"lineno\"> 1633</span>&#160;                            mat = xform.asMatrix()</div>\n\
<div class=\"line\"><a name=\"l01634\"></a><span class=\"lineno\"> 1634</span>&#160;                        <span class=\"keywordflow\">elif</span> space:</div>\n\
<div class=\"line\"><a name=\"l01635\"></a><span class=\"lineno\"> 1635</span>&#160;                            mat = space * xform.asMatrix(perc) * spaceInv</div>\n\
<div class=\"line\"><a name=\"l01636\"></a><span class=\"lineno\"> 1636</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01637\"></a><span class=\"lineno\"> 1637</span>&#160;                            mat = xform.asMatrix(perc)</div>\n\
<div class=\"line\"><a name=\"l01638\"></a><span class=\"lineno\"> 1638</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01639\"></a><span class=\"lineno\"> 1639</span>&#160;                        <span class=\"comment\">## Start by reverting points back to their original values stored in</span></div>\n\
<div class=\"line\"><a name=\"l01640\"></a><span class=\"lineno\"> 1640</span>&#160;                        <span class=\"comment\">## the pointCache for the transformation</span></div>\n\
<div class=\"line\"><a name=\"l01641\"></a><span class=\"lineno\"> 1641</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01642\"></a><span class=\"lineno\"> 1642</span>&#160;                        <span class=\"keywordflow\">if</span> transformOrigPoints:</div>\n\
<div class=\"line\"><a name=\"l01643\"></a><span class=\"lineno\"> 1643</span>&#160;                            geometry.vertices[elemIndex] = om.MVector( pointCache[cacheIndex] )</div>\n\
<div class=\"line\"><a name=\"l01644\"></a><span class=\"lineno\"> 1644</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01645\"></a><span class=\"lineno\"> 1645</span>&#160;                        <span class=\"comment\">## Perform transformation of the point</span></div>\n\
<div class=\"line\"><a name=\"l01646\"></a><span class=\"lineno\"> 1646</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01647\"></a><span class=\"lineno\"> 1647</span>&#160;                        currPt = newPt = geometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l01648\"></a><span class=\"lineno\"> 1648</span>&#160;                        newPt *= mat</div>\n\
<div class=\"line\"><a name=\"l01649\"></a><span class=\"lineno\"> 1649</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01650\"></a><span class=\"lineno\"> 1650</span>&#160;                        <span class=\"comment\">## Handle symmetry and reflection (for weighted transformation)</span></div>\n\
<div class=\"line\"><a name=\"l01651\"></a><span class=\"lineno\"> 1651</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01652\"></a><span class=\"lineno\"> 1652</span>&#160;                        <span class=\"keywordflow\">if</span> hasSeam <span class=\"keywordflow\">and</span> fnComp.weight(idx).seam() &gt; 0.0:</div>\n\
<div class=\"line\"><a name=\"l01653\"></a><span class=\"lineno\"> 1653</span>&#160;                            newPt += freezePlane.normal() * (fnComp.weight(idx).seam() * (freezePlane.directedDistance(currPt) - freezePlane.directedDistance(newPt)))</div>\n\
<div class=\"line\"><a name=\"l01654\"></a><span class=\"lineno\"> 1654</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01655\"></a><span class=\"lineno\"> 1655</span>&#160;                        <span class=\"comment\">## Calculate deltas and final positions</span></div>\n\
<div class=\"line\"><a name=\"l01656\"></a><span class=\"lineno\"> 1656</span>&#160;                        delta = newPt - currPt</div>\n\
<div class=\"line\"><a name=\"l01657\"></a><span class=\"lineno\"> 1657</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01658\"></a><span class=\"lineno\"> 1658</span>&#160;                        elem = builder.addElement( elemIndex )</div>\n\
<div class=\"line\"><a name=\"l01659\"></a><span class=\"lineno\"> 1659</span>&#160;                        elem.set3Double(delta.x, delta.y, delta.z)</div>\n\
<div class=\"line\"><a name=\"l01660\"></a><span class=\"lineno\"> 1660</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01661\"></a><span class=\"lineno\"> 1661</span>&#160;                        <span class=\"keywordflow\">if</span> savePoints:</div>\n\
<div class=\"line\"><a name=\"l01662\"></a><span class=\"lineno\"> 1662</span>&#160;                            <span class=\"comment\">## store the points in the pointCache for undo</span></div>\n\
<div class=\"line\"><a name=\"l01663\"></a><span class=\"lineno\"> 1663</span>&#160;                            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01664\"></a><span class=\"lineno\"> 1664</span>&#160;                            pointCache.append(delta*(-1.0))</div>\n\
<div class=\"line\"><a name=\"l01665\"></a><span class=\"lineno\"> 1665</span>&#160;                        <span class=\"keywordflow\">elif</span> updatePoints <span class=\"keywordflow\">and</span> cacheIndex &lt; cacheLen:</div>\n\
<div class=\"line\"><a name=\"l01666\"></a><span class=\"lineno\"> 1666</span>&#160;                            pointCache[cacheIndex] = pointCache[cacheIndex] - delta</div>\n\
<div class=\"line\"><a name=\"l01667\"></a><span class=\"lineno\"> 1667</span>&#160;                            cacheIndex += 1</div>\n\
<div class=\"line\"><a name=\"l01668\"></a><span class=\"lineno\"> 1668</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01669\"></a><span class=\"lineno\"> 1669</span>&#160;        <span class=\"comment\">## Set the builder into the handle.</span></div>\n\
<div class=\"line\"><a name=\"l01670\"></a><span class=\"lineno\"> 1670</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01671\"></a><span class=\"lineno\"> 1671</span>&#160;        handle.set(builder)</div>\n\
<div class=\"line\"><a name=\"l01672\"></a><span class=\"lineno\"> 1672</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01673\"></a><span class=\"lineno\"> 1673</span>&#160;        <span class=\"comment\">## Tell maya the bounding box for this object has changed</span></div>\n\
<div class=\"line\"><a name=\"l01674\"></a><span class=\"lineno\"> 1674</span>&#160;        <span class=\"comment\">## and thus &quot;boundingBox()&quot; needs to be called.</span></div>\n\
<div class=\"line\"><a name=\"l01675\"></a><span class=\"lineno\"> 1675</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01676\"></a><span class=\"lineno\"> 1676</span>&#160;        self.childChanged( om.MPxSurfaceShape.kBoundingBoxChanged )</div>\n\
<div class=\"line\"><a name=\"l01677\"></a><span class=\"lineno\"> 1677</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01678\"></a><span class=\"lineno\"> 1678</span>&#160;    <span class=\"comment\">## Support the move tools normal/u/v mode (components)</span></div>\n\
<div class=\"line\"><a name=\"l01679\"></a><span class=\"lineno\"> 1679</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01680\"></a><span class=\"lineno\"> 1680</span>&#160;    <span class=\"keyword\">def </span>vertexOffsetDirection(self, component, direction, mode, normalize):</div>\n\
<div class=\"line\"><a name=\"l01681\"></a><span class=\"lineno\"> 1681</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01682\"></a><span class=\"lineno\"> 1682</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01683\"></a><span class=\"lineno\"> 1683</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01684\"></a><span class=\"lineno\"> 1684</span>&#160;        <span class=\"comment\">##    Returns offsets for the given components to be used my the</span></div>\n\
<div class=\"line\"><a name=\"l01685\"></a><span class=\"lineno\"> 1685</span>&#160;        <span class=\"comment\">##    move tool in normal/u/v mode.</span></div>\n\
<div class=\"line\"><a name=\"l01686\"></a><span class=\"lineno\"> 1686</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01687\"></a><span class=\"lineno\"> 1687</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01688\"></a><span class=\"lineno\"> 1688</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01689\"></a><span class=\"lineno\"> 1689</span>&#160;        <span class=\"comment\">##    component - components to calculate offsets for</span></div>\n\
<div class=\"line\"><a name=\"l01690\"></a><span class=\"lineno\"> 1690</span>&#160;        <span class=\"comment\">##    direction - array of offsets to be filled</span></div>\n\
<div class=\"line\"><a name=\"l01691\"></a><span class=\"lineno\"> 1691</span>&#160;        <span class=\"comment\">##    mode      - the type of offset to be calculated</span></div>\n\
<div class=\"line\"><a name=\"l01692\"></a><span class=\"lineno\"> 1692</span>&#160;        <span class=\"comment\">##    normalize - specifies whether the offsets should be normalized</span></div>\n\
<div class=\"line\"><a name=\"l01693\"></a><span class=\"lineno\"> 1693</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01694\"></a><span class=\"lineno\"> 1694</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01695\"></a><span class=\"lineno\"> 1695</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01696\"></a><span class=\"lineno\"> 1696</span>&#160;        <span class=\"comment\">##    True if the offsets could be calculated, False otherwise</span></div>\n\
<div class=\"line\"><a name=\"l01697\"></a><span class=\"lineno\"> 1697</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01698\"></a><span class=\"lineno\"> 1698</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01699\"></a><span class=\"lineno\"> 1699</span>&#160;        fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(component) )</div>\n\
<div class=\"line\"><a name=\"l01700\"></a><span class=\"lineno\"> 1700</span>&#160;        <span class=\"keywordflow\">if</span> component.apiType() != om.MFn.kMeshVertComponent:</div>\n\
<div class=\"line\"><a name=\"l01701\"></a><span class=\"lineno\"> 1701</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01702\"></a><span class=\"lineno\"> 1702</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01703\"></a><span class=\"lineno\"> 1703</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l01704\"></a><span class=\"lineno\"> 1704</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> geometry:</div>\n\
<div class=\"line\"><a name=\"l01705\"></a><span class=\"lineno\"> 1705</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01706\"></a><span class=\"lineno\"> 1706</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01707\"></a><span class=\"lineno\"> 1707</span>&#160;        <span class=\"comment\">## For each vertex add the appropriate offset</span></div>\n\
<div class=\"line\"><a name=\"l01708\"></a><span class=\"lineno\"> 1708</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01709\"></a><span class=\"lineno\"> 1709</span>&#160;        <span class=\"keywordflow\">for</span> idx <span class=\"keywordflow\">in</span> fnComp:</div>\n\
<div class=\"line\"><a name=\"l01710\"></a><span class=\"lineno\"> 1710</span>&#160;            normal = geometry.normals[ idx ]</div>\n\
<div class=\"line\"><a name=\"l01711\"></a><span class=\"lineno\"> 1711</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01712\"></a><span class=\"lineno\"> 1712</span>&#160;            <span class=\"keywordflow\">if</span> mode == om.MPxSurfaceShape.kNormal:</div>\n\
<div class=\"line\"><a name=\"l01713\"></a><span class=\"lineno\"> 1713</span>&#160;                <span class=\"keywordflow\">if</span> normalize:</div>\n\
<div class=\"line\"><a name=\"l01714\"></a><span class=\"lineno\"> 1714</span>&#160;                    normal.normalize()</div>\n\
<div class=\"line\"><a name=\"l01715\"></a><span class=\"lineno\"> 1715</span>&#160;                direction.append( normal )</div>\n\
<div class=\"line\"><a name=\"l01716\"></a><span class=\"lineno\"> 1716</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01717\"></a><span class=\"lineno\"> 1717</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01718\"></a><span class=\"lineno\"> 1718</span>&#160;                <span class=\"comment\">## Construct an orthonormal basis from the normal</span></div>\n\
<div class=\"line\"><a name=\"l01719\"></a><span class=\"lineno\"> 1719</span>&#160;                <span class=\"comment\">## uAxis, and vAxis are the new vectors.</span></div>\n\
<div class=\"line\"><a name=\"l01720\"></a><span class=\"lineno\"> 1720</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01721\"></a><span class=\"lineno\"> 1721</span>&#160;                normal.normalize()</div>\n\
<div class=\"line\"><a name=\"l01722\"></a><span class=\"lineno\"> 1722</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01723\"></a><span class=\"lineno\"> 1723</span>&#160;                i = 0</div>\n\
<div class=\"line\"><a name=\"l01724\"></a><span class=\"lineno\"> 1724</span>&#160;                a = math.abs(normal[0])</div>\n\
<div class=\"line\"><a name=\"l01725\"></a><span class=\"lineno\"> 1725</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01726\"></a><span class=\"lineno\"> 1726</span>&#160;                <span class=\"keywordflow\">if</span> a &lt; math.abs(normal[1]):</div>\n\
<div class=\"line\"><a name=\"l01727\"></a><span class=\"lineno\"> 1727</span>&#160;                    i = 1</div>\n\
<div class=\"line\"><a name=\"l01728\"></a><span class=\"lineno\"> 1728</span>&#160;                    a = fabs(normal[1])</div>\n\
<div class=\"line\"><a name=\"l01729\"></a><span class=\"lineno\"> 1729</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01730\"></a><span class=\"lineno\"> 1730</span>&#160;                <span class=\"keywordflow\">if</span> a &lt; math.abs(normal[2]):</div>\n\
<div class=\"line\"><a name=\"l01731\"></a><span class=\"lineno\"> 1731</span>&#160;                    i = 2</div>\n\
<div class=\"line\"><a name=\"l01732\"></a><span class=\"lineno\"> 1732</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01733\"></a><span class=\"lineno\"> 1733</span>&#160;                j = (i+1)%3</div>\n\
<div class=\"line\"><a name=\"l01734\"></a><span class=\"lineno\"> 1734</span>&#160;                k = (j+1)%3</div>\n\
<div class=\"line\"><a name=\"l01735\"></a><span class=\"lineno\"> 1735</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01736\"></a><span class=\"lineno\"> 1736</span>&#160;                a = math.sqrt(normal[i]*normal[i] + normal[j]*normal[j])</div>\n\
<div class=\"line\"><a name=\"l01737\"></a><span class=\"lineno\"> 1737</span>&#160;                uAxis[i] = -normal[j]/a</div>\n\
<div class=\"line\"><a name=\"l01738\"></a><span class=\"lineno\"> 1738</span>&#160;                uAxis[j] =  normal[i]/a</div>\n\
<div class=\"line\"><a name=\"l01739\"></a><span class=\"lineno\"> 1739</span>&#160;                uAxis[k] = 0.0</div>\n\
<div class=\"line\"><a name=\"l01740\"></a><span class=\"lineno\"> 1740</span>&#160;                vAxis = normal^uAxis</div>\n\
<div class=\"line\"><a name=\"l01741\"></a><span class=\"lineno\"> 1741</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01742\"></a><span class=\"lineno\"> 1742</span>&#160;                <span class=\"keywordflow\">if</span> mode == om.MPxSurfaceShape.kUTangent <span class=\"keywordflow\">or</span> mode == om.MPxSurfaceShape.kUVNTriad:</div>\n\
<div class=\"line\"><a name=\"l01743\"></a><span class=\"lineno\"> 1743</span>&#160;                    <span class=\"keywordflow\">if</span> normalize:</div>\n\
<div class=\"line\"><a name=\"l01744\"></a><span class=\"lineno\"> 1744</span>&#160;                        uAxis.normalize()</div>\n\
<div class=\"line\"><a name=\"l01745\"></a><span class=\"lineno\"> 1745</span>&#160;                    direction.append( uAxis )</div>\n\
<div class=\"line\"><a name=\"l01746\"></a><span class=\"lineno\"> 1746</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01747\"></a><span class=\"lineno\"> 1747</span>&#160;                <span class=\"keywordflow\">if</span> mode == om.MPxSurfaceShape.kVTangent <span class=\"keywordflow\">or</span> mode == om.MPxSurfaceShape.kUVNTriad:</div>\n\
<div class=\"line\"><a name=\"l01748\"></a><span class=\"lineno\"> 1748</span>&#160;                    <span class=\"keywordflow\">if</span> normalize:</div>\n\
<div class=\"line\"><a name=\"l01749\"></a><span class=\"lineno\"> 1749</span>&#160;                        vAxis.normalize()</div>\n\
<div class=\"line\"><a name=\"l01750\"></a><span class=\"lineno\"> 1750</span>&#160;                    direction.append( vAxis )</div>\n\
<div class=\"line\"><a name=\"l01751\"></a><span class=\"lineno\"> 1751</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01752\"></a><span class=\"lineno\"> 1752</span>&#160;                <span class=\"keywordflow\">if</span> mode == om.MPxSurfaceShape.kUVNTriad:</div>\n\
<div class=\"line\"><a name=\"l01753\"></a><span class=\"lineno\"> 1753</span>&#160;                    <span class=\"keywordflow\">if</span> normalize:</div>\n\
<div class=\"line\"><a name=\"l01754\"></a><span class=\"lineno\"> 1754</span>&#160;                        normal.normalize()</div>\n\
<div class=\"line\"><a name=\"l01755\"></a><span class=\"lineno\"> 1755</span>&#160;                    direction.append( normal )</div>\n\
<div class=\"line\"><a name=\"l01756\"></a><span class=\"lineno\"> 1756</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01757\"></a><span class=\"lineno\"> 1757</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01758\"></a><span class=\"lineno\"> 1758</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01759\"></a><span class=\"lineno\"> 1759</span>&#160;    <span class=\"comment\">## Bounding box methods</span></div>\n\
<div class=\"line\"><a name=\"l01760\"></a><span class=\"lineno\"> 1760</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01761\"></a><span class=\"lineno\"> 1761</span>&#160;    <span class=\"keyword\">def </span>isBounded(self):</div>\n\
<div class=\"line\"><a name=\"l01762\"></a><span class=\"lineno\"> 1762</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01763\"></a><span class=\"lineno\"> 1763</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01764\"></a><span class=\"lineno\"> 1764</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01765\"></a><span class=\"lineno\"> 1765</span>&#160;        <span class=\"comment\">##    Specifies that this object has a boundingBox.</span></div>\n\
<div class=\"line\"><a name=\"l01766\"></a><span class=\"lineno\"> 1766</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01767\"></a><span class=\"lineno\"> 1767</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01768\"></a><span class=\"lineno\"> 1768</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01769\"></a><span class=\"lineno\"> 1769</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01770\"></a><span class=\"lineno\"> 1770</span>&#160;    <span class=\"keyword\">def </span>boundingBox(self):</div>\n\
<div class=\"line\"><a name=\"l01771\"></a><span class=\"lineno\"> 1771</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01772\"></a><span class=\"lineno\"> 1772</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01773\"></a><span class=\"lineno\"> 1773</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01774\"></a><span class=\"lineno\"> 1774</span>&#160;        <span class=\"comment\">##    Returns the bounding box for this object.</span></div>\n\
<div class=\"line\"><a name=\"l01775\"></a><span class=\"lineno\"> 1775</span>&#160;        <span class=\"comment\">##    It is a good idea not to recompute here as this funcion is called often.</span></div>\n\
<div class=\"line\"><a name=\"l01776\"></a><span class=\"lineno\"> 1776</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01777\"></a><span class=\"lineno\"> 1777</span>&#160;        <span class=\"keywordflow\">if</span> self.fShapeDirty:</div>\n\
<div class=\"line\"><a name=\"l01778\"></a><span class=\"lineno\"> 1778</span>&#160;            <span class=\"comment\"># Update:</span></div>\n\
<div class=\"line\"><a name=\"l01779\"></a><span class=\"lineno\"> 1779</span>&#160;            self.meshObject()</div>\n\
<div class=\"line\"><a name=\"l01780\"></a><span class=\"lineno\"> 1780</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01781\"></a><span class=\"lineno\"> 1781</span>&#160;        thisNode = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l01782\"></a><span class=\"lineno\"> 1782</span>&#160;        c1Plug = om.MPlug( thisNode, apiMesh.bboxCorner1 )</div>\n\
<div class=\"line\"><a name=\"l01783\"></a><span class=\"lineno\"> 1783</span>&#160;        c2Plug = om.MPlug( thisNode, apiMesh.bboxCorner2 )</div>\n\
<div class=\"line\"><a name=\"l01784\"></a><span class=\"lineno\"> 1784</span>&#160;        corner1Object = c1Plug.asMObject()</div>\n\
<div class=\"line\"><a name=\"l01785\"></a><span class=\"lineno\"> 1785</span>&#160;        corner2Object = c2Plug.asMObject()</div>\n\
<div class=\"line\"><a name=\"l01786\"></a><span class=\"lineno\"> 1786</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01787\"></a><span class=\"lineno\"> 1787</span>&#160;        fnData = om.MFnNumericData()</div>\n\
<div class=\"line\"><a name=\"l01788\"></a><span class=\"lineno\"> 1788</span>&#160;        fnData.setObject( corner1Object )</div>\n\
<div class=\"line\"><a name=\"l01789\"></a><span class=\"lineno\"> 1789</span>&#160;        corner1 = fnData.getData()</div>\n\
<div class=\"line\"><a name=\"l01790\"></a><span class=\"lineno\"> 1790</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01791\"></a><span class=\"lineno\"> 1791</span>&#160;        fnData.setObject( corner2Object )</div>\n\
<div class=\"line\"><a name=\"l01792\"></a><span class=\"lineno\"> 1792</span>&#160;        corner2 = fnData.getData()</div>\n\
<div class=\"line\"><a name=\"l01793\"></a><span class=\"lineno\"> 1793</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01794\"></a><span class=\"lineno\"> 1794</span>&#160;        corner1Point = om.MPoint( corner1[0], corner1[1], corner1[2] )</div>\n\
<div class=\"line\"><a name=\"l01795\"></a><span class=\"lineno\"> 1795</span>&#160;        corner2Point = om.MPoint( corner2[0], corner2[1], corner2[2] )</div>\n\
<div class=\"line\"><a name=\"l01796\"></a><span class=\"lineno\"> 1796</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01797\"></a><span class=\"lineno\"> 1797</span>&#160;        <span class=\"keywordflow\">return</span> om.MBoundingBox( corner1Point, corner2Point )</div>\n\
<div class=\"line\"><a name=\"l01798\"></a><span class=\"lineno\"> 1798</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01799\"></a><span class=\"lineno\"> 1799</span>&#160;    <span class=\"comment\">## Associates a user defined iterator with the shape (components)</span></div>\n\
<div class=\"line\"><a name=\"l01800\"></a><span class=\"lineno\"> 1800</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01801\"></a><span class=\"lineno\"> 1801</span>&#160;    <span class=\"keyword\">def </span>geometryIteratorSetup(self, componentList, components, forReadOnly=False):</div>\n\
<div class=\"line\"><a name=\"l01802\"></a><span class=\"lineno\"> 1802</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01803\"></a><span class=\"lineno\"> 1803</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01804\"></a><span class=\"lineno\"> 1804</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01805\"></a><span class=\"lineno\"> 1805</span>&#160;        <span class=\"comment\">##    Creates a geometry iterator compatible with his shape.</span></div>\n\
<div class=\"line\"><a name=\"l01806\"></a><span class=\"lineno\"> 1806</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01807\"></a><span class=\"lineno\"> 1807</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01808\"></a><span class=\"lineno\"> 1808</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01809\"></a><span class=\"lineno\"> 1809</span>&#160;        <span class=\"comment\">##    componentList - list of components to be iterated</span></div>\n\
<div class=\"line\"><a name=\"l01810\"></a><span class=\"lineno\"> 1810</span>&#160;        <span class=\"comment\">##    components    - component to be iterator</span></div>\n\
<div class=\"line\"><a name=\"l01811\"></a><span class=\"lineno\"> 1811</span>&#160;        <span class=\"comment\">##    forReadOnly   -</span></div>\n\
<div class=\"line\"><a name=\"l01812\"></a><span class=\"lineno\"> 1812</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01813\"></a><span class=\"lineno\"> 1813</span>&#160;        <span class=\"comment\">## Returns</span></div>\n\
<div class=\"line\"><a name=\"l01814\"></a><span class=\"lineno\"> 1814</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01815\"></a><span class=\"lineno\"> 1815</span>&#160;        <span class=\"comment\">##    An iterator for the components</span></div>\n\
<div class=\"line\"><a name=\"l01816\"></a><span class=\"lineno\"> 1816</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01817\"></a><span class=\"lineno\"> 1817</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01818\"></a><span class=\"lineno\"> 1818</span>&#160;        <span class=\"keywordflow\">if</span> components.isNull():</div>\n\
<div class=\"line\"><a name=\"l01819\"></a><span class=\"lineno\"> 1819</span>&#160;            vtxComponents = om.MObjectArray([self.convertToVertexComponent(c) <span class=\"keywordflow\">for</span> c <span class=\"keywordflow\">in</span> componentList])</div>\n\
<div class=\"line\"><a name=\"l01820\"></a><span class=\"lineno\"> 1820</span>&#160;            <span class=\"keywordflow\">return</span> apiMeshGeomIterator( self.meshGeom(), vtxComponents )</div>\n\
<div class=\"line\"><a name=\"l01821\"></a><span class=\"lineno\"> 1821</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01822\"></a><span class=\"lineno\"> 1822</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshGeomIterator( self.meshGeom(), self.convertToVertexComponent(components) )</div>\n\
<div class=\"line\"><a name=\"l01823\"></a><span class=\"lineno\"> 1823</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01824\"></a><span class=\"lineno\"> 1824</span>&#160;    <span class=\"keyword\">def </span>acceptsGeometryIterator(self, arg0, arg1=None, arg2=None):</div>\n\
<div class=\"line\"><a name=\"l01825\"></a><span class=\"lineno\"> 1825</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01826\"></a><span class=\"lineno\"> 1826</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01827\"></a><span class=\"lineno\"> 1827</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01828\"></a><span class=\"lineno\"> 1828</span>&#160;        <span class=\"comment\">##    Specifies that this shape can provide an iterator for getting/setting</span></div>\n\
<div class=\"line\"><a name=\"l01829\"></a><span class=\"lineno\"> 1829</span>&#160;        <span class=\"comment\">##    control point values.</span></div>\n\
<div class=\"line\"><a name=\"l01830\"></a><span class=\"lineno\"> 1830</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01831\"></a><span class=\"lineno\"> 1831</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l01832\"></a><span class=\"lineno\"> 1832</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01833\"></a><span class=\"lineno\"> 1833</span>&#160;        <span class=\"comment\">##    writable   - maya asks for an iterator that can set points if this is True</span></div>\n\
<div class=\"line\"><a name=\"l01834\"></a><span class=\"lineno\"> 1834</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01835\"></a><span class=\"lineno\"> 1835</span>&#160;        <span class=\"comment\">## OR</span></div>\n\
<div class=\"line\"><a name=\"l01836\"></a><span class=\"lineno\"> 1836</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01837\"></a><span class=\"lineno\"> 1837</span>&#160;        <span class=\"comment\">##    component   - the component</span></div>\n\
<div class=\"line\"><a name=\"l01838\"></a><span class=\"lineno\"> 1838</span>&#160;        <span class=\"comment\">##    writable    - maya asks for an iterator that can set points if this is True</span></div>\n\
<div class=\"line\"><a name=\"l01839\"></a><span class=\"lineno\"> 1839</span>&#160;        <span class=\"comment\">##    forReadOnly - maya asking for an iterator for querying only</span></div>\n\
<div class=\"line\"><a name=\"l01840\"></a><span class=\"lineno\"> 1840</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01841\"></a><span class=\"lineno\"> 1841</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01842\"></a><span class=\"lineno\"> 1842</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l01843\"></a><span class=\"lineno\"> 1843</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01844\"></a><span class=\"lineno\"> 1844</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l01845\"></a><span class=\"lineno\"> 1845</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01846\"></a><span class=\"lineno\"> 1846</span>&#160;    <span class=\"comment\">## Helper methods</span></div>\n\
<div class=\"line\"><a name=\"l01847\"></a><span class=\"lineno\"> 1847</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01848\"></a><span class=\"lineno\"> 1848</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l01849\"></a><span class=\"lineno\"> 1849</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01850\"></a><span class=\"lineno\"> 1850</span>&#160;    <span class=\"keyword\">def </span>hasHistory(self):</div>\n\
<div class=\"line\"><a name=\"l01851\"></a><span class=\"lineno\"> 1851</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01852\"></a><span class=\"lineno\"> 1852</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01853\"></a><span class=\"lineno\"> 1853</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01854\"></a><span class=\"lineno\"> 1854</span>&#160;        <span class=\"comment\">##    Returns True if the shape has input history, False otherwise.</span></div>\n\
<div class=\"line\"><a name=\"l01855\"></a><span class=\"lineno\"> 1855</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01856\"></a><span class=\"lineno\"> 1856</span>&#160;        <span class=\"keywordflow\">return</span> self.fHasHistoryOnCreate</div>\n\
<div class=\"line\"><a name=\"l01857\"></a><span class=\"lineno\"> 1857</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01858\"></a><span class=\"lineno\"> 1858</span>&#160;    <span class=\"keyword\">def </span>shapeDirty(self):</div>\n\
<div class=\"line\"><a name=\"l01859\"></a><span class=\"lineno\"> 1859</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01860\"></a><span class=\"lineno\"> 1860</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01861\"></a><span class=\"lineno\"> 1861</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01862\"></a><span class=\"lineno\"> 1862</span>&#160;        <span class=\"comment\">##    Returns True if the input surface of the shape has been dirtied since</span></div>\n\
<div class=\"line\"><a name=\"l01863\"></a><span class=\"lineno\"> 1863</span>&#160;        <span class=\"comment\">##    the last reset of the flag</span></div>\n\
<div class=\"line\"><a name=\"l01864\"></a><span class=\"lineno\"> 1864</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01865\"></a><span class=\"lineno\"> 1865</span>&#160;        <span class=\"keywordflow\">return</span> self.fShapeDirty</div>\n\
<div class=\"line\"><a name=\"l01866\"></a><span class=\"lineno\"> 1866</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01867\"></a><span class=\"lineno\"> 1867</span>&#160;    <span class=\"keyword\">def </span>resetShapeDirty(self):</div>\n\
<div class=\"line\"><a name=\"l01868\"></a><span class=\"lineno\"> 1868</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01869\"></a><span class=\"lineno\"> 1869</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01870\"></a><span class=\"lineno\"> 1870</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01871\"></a><span class=\"lineno\"> 1871</span>&#160;        <span class=\"comment\">##    Reset the shape dirty state of the node</span></div>\n\
<div class=\"line\"><a name=\"l01872\"></a><span class=\"lineno\"> 1872</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01873\"></a><span class=\"lineno\"> 1873</span>&#160;        self.fShapeDirty = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l01874\"></a><span class=\"lineno\"> 1874</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01875\"></a><span class=\"lineno\"> 1875</span>&#160;    <span class=\"keyword\">def </span>materialDirty(self):</div>\n\
<div class=\"line\"><a name=\"l01876\"></a><span class=\"lineno\"> 1876</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01877\"></a><span class=\"lineno\"> 1877</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01878\"></a><span class=\"lineno\"> 1878</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01879\"></a><span class=\"lineno\"> 1879</span>&#160;        <span class=\"comment\">##    Returns true if the shading group of the shape has been changed since</span></div>\n\
<div class=\"line\"><a name=\"l01880\"></a><span class=\"lineno\"> 1880</span>&#160;        <span class=\"comment\">##    the last reset of the flag</span></div>\n\
<div class=\"line\"><a name=\"l01881\"></a><span class=\"lineno\"> 1881</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01882\"></a><span class=\"lineno\"> 1882</span>&#160;        <span class=\"keywordflow\">return</span> self.fMaterialDirty</div>\n\
<div class=\"line\"><a name=\"l01883\"></a><span class=\"lineno\"> 1883</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01884\"></a><span class=\"lineno\"> 1884</span>&#160;    <span class=\"keyword\">def </span>setMaterialDirty(self, dirty):</div>\n\
<div class=\"line\"><a name=\"l01885\"></a><span class=\"lineno\"> 1885</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01886\"></a><span class=\"lineno\"> 1886</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01887\"></a><span class=\"lineno\"> 1887</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01888\"></a><span class=\"lineno\"> 1888</span>&#160;        <span class=\"comment\">##    Reset the material dirty state of the node</span></div>\n\
<div class=\"line\"><a name=\"l01889\"></a><span class=\"lineno\"> 1889</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01890\"></a><span class=\"lineno\"> 1890</span>&#160;        self.fMaterialDirty = dirty</div>\n\
<div class=\"line\"><a name=\"l01891\"></a><span class=\"lineno\"> 1891</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01892\"></a><span class=\"lineno\"> 1892</span>&#160;    <span class=\"keyword\">def </span>computeInputSurface(self, plug, datablock):</div>\n\
<div class=\"line\"><a name=\"l01893\"></a><span class=\"lineno\"> 1893</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01894\"></a><span class=\"lineno\"> 1894</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01895\"></a><span class=\"lineno\"> 1895</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01896\"></a><span class=\"lineno\"> 1896</span>&#160;        <span class=\"comment\">##    If there is input history, evaluate the input attribute</span></div>\n\
<div class=\"line\"><a name=\"l01897\"></a><span class=\"lineno\"> 1897</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01898\"></a><span class=\"lineno\"> 1898</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01899\"></a><span class=\"lineno\"> 1899</span>&#160;        <span class=\"comment\">## Get the input surface if there is history</span></div>\n\
<div class=\"line\"><a name=\"l01900\"></a><span class=\"lineno\"> 1900</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01901\"></a><span class=\"lineno\"> 1901</span>&#160;        <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l01902\"></a><span class=\"lineno\"> 1902</span>&#160;            inputHandle = datablock.inputValue( apiMesh.inputSurface )</div>\n\
<div class=\"line\"><a name=\"l01903\"></a><span class=\"lineno\"> 1903</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01904\"></a><span class=\"lineno\"> 1904</span>&#160;            surf = inputHandle.asPluginData()</div>\n\
<div class=\"line\"><a name=\"l01905\"></a><span class=\"lineno\"> 1905</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(surf, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l01906\"></a><span class=\"lineno\"> 1906</span>&#160;                <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeInputSurface : invalid inputSurface data found&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01907\"></a><span class=\"lineno\"> 1907</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01908\"></a><span class=\"lineno\"> 1908</span>&#160;            <span class=\"comment\">## Create the cachedSurface and copy the input surface into it</span></div>\n\
<div class=\"line\"><a name=\"l01909\"></a><span class=\"lineno\"> 1909</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01910\"></a><span class=\"lineno\"> 1910</span>&#160;            fnDataCreator = om.MFnPluginData()</div>\n\
<div class=\"line\"><a name=\"l01911\"></a><span class=\"lineno\"> 1911</span>&#160;            fnDataCreator.create( apiMeshData.id )</div>\n\
<div class=\"line\"><a name=\"l01912\"></a><span class=\"lineno\"> 1912</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01913\"></a><span class=\"lineno\"> 1913</span>&#160;            newCachedData = fnDataCreator.data()</div>\n\
<div class=\"line\"><a name=\"l01914\"></a><span class=\"lineno\"> 1914</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(newCachedData, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l01915\"></a><span class=\"lineno\"> 1915</span>&#160;                <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeInputSurface : invalid proxy cached apiMeshData object&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01916\"></a><span class=\"lineno\"> 1916</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01917\"></a><span class=\"lineno\"> 1917</span>&#160;            newCachedData.fGeometry.copy(surf.fGeometry)</div>\n\
<div class=\"line\"><a name=\"l01918\"></a><span class=\"lineno\"> 1918</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01919\"></a><span class=\"lineno\"> 1919</span>&#160;            cachedHandle = datablock.outputValue( apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l01920\"></a><span class=\"lineno\"> 1920</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(cachedHandle, om.MDataHandle):</div>\n\
<div class=\"line\"><a name=\"l01921\"></a><span class=\"lineno\"> 1921</span>&#160;                <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeInputSurface : invalid cachedSurface&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01922\"></a><span class=\"lineno\"> 1922</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01923\"></a><span class=\"lineno\"> 1923</span>&#160;            cachedHandle.setMPxData( newCachedData )</div>\n\
<div class=\"line\"><a name=\"l01924\"></a><span class=\"lineno\"> 1924</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01925\"></a><span class=\"lineno\"> 1925</span>&#160;    <span class=\"keyword\">def </span>computeOutputSurface(self, plug, datablock):</div>\n\
<div class=\"line\"><a name=\"l01926\"></a><span class=\"lineno\"> 1926</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01927\"></a><span class=\"lineno\"> 1927</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01928\"></a><span class=\"lineno\"> 1928</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01929\"></a><span class=\"lineno\"> 1929</span>&#160;        <span class=\"comment\">##    Compute the outputSurface attribute.</span></div>\n\
<div class=\"line\"><a name=\"l01930\"></a><span class=\"lineno\"> 1930</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01931\"></a><span class=\"lineno\"> 1931</span>&#160;        <span class=\"comment\">##    If there is no history, use cachedSurface as the</span></div>\n\
<div class=\"line\"><a name=\"l01932\"></a><span class=\"lineno\"> 1932</span>&#160;        <span class=\"comment\">##    input surface. All tweaks will get written directly</span></div>\n\
<div class=\"line\"><a name=\"l01933\"></a><span class=\"lineno\"> 1933</span>&#160;        <span class=\"comment\">##    to it. Output is just a copy of the cached surface</span></div>\n\
<div class=\"line\"><a name=\"l01934\"></a><span class=\"lineno\"> 1934</span>&#160;        <span class=\"comment\">##    that can be connected etc.</span></div>\n\
<div class=\"line\"><a name=\"l01935\"></a><span class=\"lineno\"> 1935</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01936\"></a><span class=\"lineno\"> 1936</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01937\"></a><span class=\"lineno\"> 1937</span>&#160;        <span class=\"comment\">## Check for an input surface. The input surface, if it</span></div>\n\
<div class=\"line\"><a name=\"l01938\"></a><span class=\"lineno\"> 1938</span>&#160;        <span class=\"comment\">## exists, is copied to the cached surface.</span></div>\n\
<div class=\"line\"><a name=\"l01939\"></a><span class=\"lineno\"> 1939</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01940\"></a><span class=\"lineno\"> 1940</span>&#160;        self.computeInputSurface( plug, datablock )</div>\n\
<div class=\"line\"><a name=\"l01941\"></a><span class=\"lineno\"> 1941</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01942\"></a><span class=\"lineno\"> 1942</span>&#160;        <span class=\"comment\">## Get a handle to the cached data</span></div>\n\
<div class=\"line\"><a name=\"l01943\"></a><span class=\"lineno\"> 1943</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01944\"></a><span class=\"lineno\"> 1944</span>&#160;        cachedHandle = datablock.outputValue( apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l01945\"></a><span class=\"lineno\"> 1945</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(cachedHandle, om.MDataHandle):</div>\n\
<div class=\"line\"><a name=\"l01946\"></a><span class=\"lineno\"> 1946</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeOutputSurface : invalid cachedSurface&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01947\"></a><span class=\"lineno\"> 1947</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01948\"></a><span class=\"lineno\"> 1948</span>&#160;        cached = cachedHandle.asPluginData()</div>\n\
<div class=\"line\"><a name=\"l01949\"></a><span class=\"lineno\"> 1949</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(cached, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l01950\"></a><span class=\"lineno\"> 1950</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeOutputSurface : invalid cachedSurface data found&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01951\"></a><span class=\"lineno\"> 1951</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01952\"></a><span class=\"lineno\"> 1952</span>&#160;        datablock.setClean( plug )</div>\n\
<div class=\"line\"><a name=\"l01953\"></a><span class=\"lineno\"> 1953</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01954\"></a><span class=\"lineno\"> 1954</span>&#160;        <span class=\"comment\">## Apply any vertex offsets.</span></div>\n\
<div class=\"line\"><a name=\"l01955\"></a><span class=\"lineno\"> 1955</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01956\"></a><span class=\"lineno\"> 1956</span>&#160;        <span class=\"keywordflow\">if</span> self.hasHistory():</div>\n\
<div class=\"line\"><a name=\"l01957\"></a><span class=\"lineno\"> 1957</span>&#160;            self.applyTweaks( datablock, cached.fGeometry )</div>\n\
<div class=\"line\"><a name=\"l01958\"></a><span class=\"lineno\"> 1958</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01959\"></a><span class=\"lineno\"> 1959</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l01960\"></a><span class=\"lineno\"> 1960</span>&#160;            cpHandle = datablock.inputArrayValue( om.MPxSurfaceShape.mControlPoints )</div>\n\
<div class=\"line\"><a name=\"l01961\"></a><span class=\"lineno\"> 1961</span>&#160;            cpHandle.setAllClean()</div>\n\
<div class=\"line\"><a name=\"l01962\"></a><span class=\"lineno\"> 1962</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01963\"></a><span class=\"lineno\"> 1963</span>&#160;        <span class=\"comment\">## Create some output data</span></div>\n\
<div class=\"line\"><a name=\"l01964\"></a><span class=\"lineno\"> 1964</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01965\"></a><span class=\"lineno\"> 1965</span>&#160;        fnDataCreator = om.MFnPluginData()</div>\n\
<div class=\"line\"><a name=\"l01966\"></a><span class=\"lineno\"> 1966</span>&#160;        fnDataCreator.create( apiMeshData.id )</div>\n\
<div class=\"line\"><a name=\"l01967\"></a><span class=\"lineno\"> 1967</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01968\"></a><span class=\"lineno\"> 1968</span>&#160;        newData = fnDataCreator.data()</div>\n\
<div class=\"line\"><a name=\"l01969\"></a><span class=\"lineno\"> 1969</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(newData, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l01970\"></a><span class=\"lineno\"> 1970</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeOutputSurface : invalid proxy cached apiMeshData object&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l01971\"></a><span class=\"lineno\"> 1971</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01972\"></a><span class=\"lineno\"> 1972</span>&#160;        <span class=\"comment\">## Copy the data</span></div>\n\
<div class=\"line\"><a name=\"l01973\"></a><span class=\"lineno\"> 1973</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01974\"></a><span class=\"lineno\"> 1974</span>&#160;        newData.fGeometry.copy(cached.fGeometry)</div>\n\
<div class=\"line\"><a name=\"l01975\"></a><span class=\"lineno\"> 1975</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01976\"></a><span class=\"lineno\"> 1976</span>&#160;        <span class=\"comment\">## Assign the new data to the outputSurface handle</span></div>\n\
<div class=\"line\"><a name=\"l01977\"></a><span class=\"lineno\"> 1977</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01978\"></a><span class=\"lineno\"> 1978</span>&#160;        outHandle = datablock.outputValue( apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l01979\"></a><span class=\"lineno\"> 1979</span>&#160;        outHandle.setMPxData( newData )</div>\n\
<div class=\"line\"><a name=\"l01980\"></a><span class=\"lineno\"> 1980</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01981\"></a><span class=\"lineno\"> 1981</span>&#160;        <span class=\"comment\">## Update the bounding box attributes</span></div>\n\
<div class=\"line\"><a name=\"l01982\"></a><span class=\"lineno\"> 1982</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01983\"></a><span class=\"lineno\"> 1983</span>&#160;        self.computeBoundingBox( datablock )</div>\n\
<div class=\"line\"><a name=\"l01984\"></a><span class=\"lineno\"> 1984</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01985\"></a><span class=\"lineno\"> 1985</span>&#160;        <span class=\"comment\"># The plug was computed successfully</span></div>\n\
<div class=\"line\"><a name=\"l01986\"></a><span class=\"lineno\"> 1986</span>&#160;        <span class=\"keywordflow\">return</span> self</div>\n\
<div class=\"line\"><a name=\"l01987\"></a><span class=\"lineno\"> 1987</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01988\"></a><span class=\"lineno\"> 1988</span>&#160;    <span class=\"keyword\">def </span>computeWorldSurface(self, plug, datablock):</div>\n\
<div class=\"line\"><a name=\"l01989\"></a><span class=\"lineno\"> 1989</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01990\"></a><span class=\"lineno\"> 1990</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l01991\"></a><span class=\"lineno\"> 1991</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01992\"></a><span class=\"lineno\"> 1992</span>&#160;        <span class=\"comment\">##    Compute the worldSurface attribute.</span></div>\n\
<div class=\"line\"><a name=\"l01993\"></a><span class=\"lineno\"> 1993</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l01994\"></a><span class=\"lineno\"> 1994</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l01995\"></a><span class=\"lineno\"> 1995</span>&#160;        self.computeOutputSurface( plug, datablock )</div>\n\
<div class=\"line\"><a name=\"l01996\"></a><span class=\"lineno\"> 1996</span>&#160;        inHandle = datablock.outputValue( apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l01997\"></a><span class=\"lineno\"> 1997</span>&#160;        outSurf = inHandle.asPluginData()</div>\n\
<div class=\"line\"><a name=\"l01998\"></a><span class=\"lineno\"> 1998</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(outSurf, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l01999\"></a><span class=\"lineno\"> 1999</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeWorldSurface : invalid outSurf&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l02000\"></a><span class=\"lineno\"> 2000</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02001\"></a><span class=\"lineno\"> 2001</span>&#160;        <span class=\"comment\">## Create some output data</span></div>\n\
<div class=\"line\"><a name=\"l02002\"></a><span class=\"lineno\"> 2002</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02003\"></a><span class=\"lineno\"> 2003</span>&#160;        fnDataCreator = om.MFnPluginData()</div>\n\
<div class=\"line\"><a name=\"l02004\"></a><span class=\"lineno\"> 2004</span>&#160;        fnDataCreator.create( apiMeshData.id )</div>\n\
<div class=\"line\"><a name=\"l02005\"></a><span class=\"lineno\"> 2005</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02006\"></a><span class=\"lineno\"> 2006</span>&#160;        newData = fnDataCreator.data()</div>\n\
<div class=\"line\"><a name=\"l02007\"></a><span class=\"lineno\"> 2007</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(newData, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l02008\"></a><span class=\"lineno\"> 2008</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;computeWorldSurface : invalid proxy cached apiMeshData object&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l02009\"></a><span class=\"lineno\"> 2009</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02010\"></a><span class=\"lineno\"> 2010</span>&#160;        <span class=\"comment\">## Get worldMatrix from MPxSurfaceShape and set it to MPxGeometryData</span></div>\n\
<div class=\"line\"><a name=\"l02011\"></a><span class=\"lineno\"> 2011</span>&#160;        worldMat = self.getWorldMatrix(datablock, 0)</div>\n\
<div class=\"line\"><a name=\"l02012\"></a><span class=\"lineno\"> 2012</span>&#160;        newData.matrix = worldMat</div>\n\
<div class=\"line\"><a name=\"l02013\"></a><span class=\"lineno\"> 2013</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02014\"></a><span class=\"lineno\"> 2014</span>&#160;        <span class=\"comment\">## Copy the data</span></div>\n\
<div class=\"line\"><a name=\"l02015\"></a><span class=\"lineno\"> 2015</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02016\"></a><span class=\"lineno\"> 2016</span>&#160;        newData.fGeometry.copy( outSurf.fGeometry )</div>\n\
<div class=\"line\"><a name=\"l02017\"></a><span class=\"lineno\"> 2017</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02018\"></a><span class=\"lineno\"> 2018</span>&#160;        <span class=\"comment\">## Assign the new data to the outputSurface handle</span></div>\n\
<div class=\"line\"><a name=\"l02019\"></a><span class=\"lineno\"> 2019</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02020\"></a><span class=\"lineno\"> 2020</span>&#160;        arrayIndex = plug.logicalIndex()</div>\n\
<div class=\"line\"><a name=\"l02021\"></a><span class=\"lineno\"> 2021</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02022\"></a><span class=\"lineno\"> 2022</span>&#160;        worldHandle = datablock.outputArrayValue( apiMesh.worldSurface )</div>\n\
<div class=\"line\"><a name=\"l02023\"></a><span class=\"lineno\"> 2023</span>&#160;        builder = worldHandle.builder()</div>\n\
<div class=\"line\"><a name=\"l02024\"></a><span class=\"lineno\"> 2024</span>&#160;        outHandle = builder.addElement( arrayIndex )</div>\n\
<div class=\"line\"><a name=\"l02025\"></a><span class=\"lineno\"> 2025</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02026\"></a><span class=\"lineno\"> 2026</span>&#160;        outHandle.setMPxData( newData )</div>\n\
<div class=\"line\"><a name=\"l02027\"></a><span class=\"lineno\"> 2027</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02028\"></a><span class=\"lineno\"> 2028</span>&#160;        <span class=\"comment\"># The plug was computed successfully</span></div>\n\
<div class=\"line\"><a name=\"l02029\"></a><span class=\"lineno\"> 2029</span>&#160;        <span class=\"keywordflow\">return</span> self</div>\n\
<div class=\"line\"><a name=\"l02030\"></a><span class=\"lineno\"> 2030</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02031\"></a><span class=\"lineno\"> 2031</span>&#160;    <span class=\"keyword\">def </span>computeBoundingBox(self, datablock):</div>\n\
<div class=\"line\"><a name=\"l02032\"></a><span class=\"lineno\"> 2032</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02033\"></a><span class=\"lineno\"> 2033</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02034\"></a><span class=\"lineno\"> 2034</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02035\"></a><span class=\"lineno\"> 2035</span>&#160;        <span class=\"comment\">##    Use the larges/smallest vertex positions to set the corners</span></div>\n\
<div class=\"line\"><a name=\"l02036\"></a><span class=\"lineno\"> 2036</span>&#160;        <span class=\"comment\">##    of the bounding box.</span></div>\n\
<div class=\"line\"><a name=\"l02037\"></a><span class=\"lineno\"> 2037</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02038\"></a><span class=\"lineno\"> 2038</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02039\"></a><span class=\"lineno\"> 2039</span>&#160;        <span class=\"comment\">## Update bounding box</span></div>\n\
<div class=\"line\"><a name=\"l02040\"></a><span class=\"lineno\"> 2040</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02041\"></a><span class=\"lineno\"> 2041</span>&#160;        lowerHandle = datablock.outputValue( apiMesh.bboxCorner1 )</div>\n\
<div class=\"line\"><a name=\"l02042\"></a><span class=\"lineno\"> 2042</span>&#160;        upperHandle = datablock.outputValue( apiMesh.bboxCorner2 )</div>\n\
<div class=\"line\"><a name=\"l02043\"></a><span class=\"lineno\"> 2043</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02044\"></a><span class=\"lineno\"> 2044</span>&#160;        geometry = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l02045\"></a><span class=\"lineno\"> 2045</span>&#160;        cnt = len(geometry.vertices)</div>\n\
<div class=\"line\"><a name=\"l02046\"></a><span class=\"lineno\"> 2046</span>&#160;        <span class=\"keywordflow\">if</span> cnt == 0:</div>\n\
<div class=\"line\"><a name=\"l02047\"></a><span class=\"lineno\"> 2047</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l02048\"></a><span class=\"lineno\"> 2048</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02049\"></a><span class=\"lineno\"> 2049</span>&#160;        <span class=\"comment\">## This clears any old bbox values</span></div>\n\
<div class=\"line\"><a name=\"l02050\"></a><span class=\"lineno\"> 2050</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02051\"></a><span class=\"lineno\"> 2051</span>&#160;        tmppnt = geometry.vertices[0]</div>\n\
<div class=\"line\"><a name=\"l02052\"></a><span class=\"lineno\"> 2052</span>&#160;        lower = [ tmppnt[0], tmppnt[1], tmppnt[2] ]</div>\n\
<div class=\"line\"><a name=\"l02053\"></a><span class=\"lineno\"> 2053</span>&#160;        upper = [ tmppnt[0], tmppnt[1], tmppnt[2] ]</div>\n\
<div class=\"line\"><a name=\"l02054\"></a><span class=\"lineno\"> 2054</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02055\"></a><span class=\"lineno\"> 2055</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(cnt):</div>\n\
<div class=\"line\"><a name=\"l02056\"></a><span class=\"lineno\"> 2056</span>&#160;            pnt = geometry.vertices[i]</div>\n\
<div class=\"line\"><a name=\"l02057\"></a><span class=\"lineno\"> 2057</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02058\"></a><span class=\"lineno\"> 2058</span>&#160;            <span class=\"keywordflow\">if</span> pnt[0] &lt; lower[0]:   lower[0] = pnt[0]</div>\n\
<div class=\"line\"><a name=\"l02059\"></a><span class=\"lineno\"> 2059</span>&#160;            <span class=\"keywordflow\">if</span> pnt[1] &lt; lower[1]:   lower[1] = pnt[1]</div>\n\
<div class=\"line\"><a name=\"l02060\"></a><span class=\"lineno\"> 2060</span>&#160;            <span class=\"keywordflow\">if</span> pnt[2] &lt; lower[2]:   lower[2] = pnt[2]</div>\n\
<div class=\"line\"><a name=\"l02061\"></a><span class=\"lineno\"> 2061</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02062\"></a><span class=\"lineno\"> 2062</span>&#160;            <span class=\"keywordflow\">if</span> pnt[0] &gt; upper[0]:   upper[0] = pnt[0]</div>\n\
<div class=\"line\"><a name=\"l02063\"></a><span class=\"lineno\"> 2063</span>&#160;            <span class=\"keywordflow\">if</span> pnt[1] &gt; upper[1]:   upper[1] = pnt[1]</div>\n\
<div class=\"line\"><a name=\"l02064\"></a><span class=\"lineno\"> 2064</span>&#160;            <span class=\"keywordflow\">if</span> pnt[2] &gt; upper[2]:   upper[2] = pnt[2]</div>\n\
<div class=\"line\"><a name=\"l02065\"></a><span class=\"lineno\"> 2065</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02066\"></a><span class=\"lineno\"> 2066</span>&#160;        lowerHandle.set3Double(lower[0], lower[1], lower[2])</div>\n\
<div class=\"line\"><a name=\"l02067\"></a><span class=\"lineno\"> 2067</span>&#160;        upperHandle.set3Double(upper[0], upper[1], upper[2])</div>\n\
<div class=\"line\"><a name=\"l02068\"></a><span class=\"lineno\"> 2068</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02069\"></a><span class=\"lineno\"> 2069</span>&#160;        lowerHandle.setClean()</div>\n\
<div class=\"line\"><a name=\"l02070\"></a><span class=\"lineno\"> 2070</span>&#160;        upperHandle.setClean()</div>\n\
<div class=\"line\"><a name=\"l02071\"></a><span class=\"lineno\"> 2071</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02072\"></a><span class=\"lineno\"> 2072</span>&#160;        <span class=\"comment\">## Signal that the bounding box has changed.</span></div>\n\
<div class=\"line\"><a name=\"l02073\"></a><span class=\"lineno\"> 2073</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02074\"></a><span class=\"lineno\"> 2074</span>&#160;        self.childChanged( om.MPxSurfaceShape.kBoundingBoxChanged )</div>\n\
<div class=\"line\"><a name=\"l02075\"></a><span class=\"lineno\"> 2075</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02076\"></a><span class=\"lineno\"> 2076</span>&#160;    <span class=\"keyword\">def </span>convertToVertexComponent(self, components):</div>\n\
<div class=\"line\"><a name=\"l02077\"></a><span class=\"lineno\"> 2077</span>&#160;        <span class=\"stringliteral\">&quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l02078\"></a><span class=\"lineno\"> 2078</span>&#160;<span class=\"stringliteral\">            Converts edge and face components into vertex components. This</span></div>\n\
<div class=\"line\"><a name=\"l02079\"></a><span class=\"lineno\"> 2079</span>&#160;<span class=\"stringliteral\">            allows applying transform offsets to the vertex when edge or faces</span></div>\n\
<div class=\"line\"><a name=\"l02080\"></a><span class=\"lineno\"> 2080</span>&#160;<span class=\"stringliteral\">            are selected.</span></div>\n\
<div class=\"line\"><a name=\"l02081\"></a><span class=\"lineno\"> 2081</span>&#160;<span class=\"stringliteral\">        &quot;&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l02082\"></a><span class=\"lineno\"> 2082</span>&#160;        retVal = components</div>\n\
<div class=\"line\"><a name=\"l02083\"></a><span class=\"lineno\"> 2083</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02084\"></a><span class=\"lineno\"> 2084</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l02085\"></a><span class=\"lineno\"> 2085</span>&#160;            srcComponent = om.MFnSingleIndexedComponent(components)</div>\n\
<div class=\"line\"><a name=\"l02086\"></a><span class=\"lineno\"> 2086</span>&#160;            srcComponentType = srcComponent.componentType</div>\n\
<div class=\"line\"><a name=\"l02087\"></a><span class=\"lineno\"> 2087</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l02088\"></a><span class=\"lineno\"> 2088</span>&#160;            <span class=\"keywordflow\">return</span> components</div>\n\
<div class=\"line\"><a name=\"l02089\"></a><span class=\"lineno\"> 2089</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02090\"></a><span class=\"lineno\"> 2090</span>&#160;        <span class=\"keywordflow\">if</span> srcComponentType != om.MFn.kMeshVertComponent:</div>\n\
<div class=\"line\"><a name=\"l02091\"></a><span class=\"lineno\"> 2091</span>&#160;            srcIndices = set(srcComponent.getElements())</div>\n\
<div class=\"line\"><a name=\"l02092\"></a><span class=\"lineno\"> 2092</span>&#160;            retVal = srcComponent.create(om.MFn.kMeshVertComponent)</div>\n\
<div class=\"line\"><a name=\"l02093\"></a><span class=\"lineno\"> 2093</span>&#160;            vtxComponent = om.MFnSingleIndexedComponent(retVal)</div>\n\
<div class=\"line\"><a name=\"l02094\"></a><span class=\"lineno\"> 2094</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l02095\"></a><span class=\"lineno\"> 2095</span>&#160;            geomPtr = self.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l02096\"></a><span class=\"lineno\"> 2096</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l02097\"></a><span class=\"lineno\"> 2097</span>&#160;            base = 0</div>\n\
<div class=\"line\"><a name=\"l02098\"></a><span class=\"lineno\"> 2098</span>&#160;            edgeId = 0</div>\n\
<div class=\"line\"><a name=\"l02099\"></a><span class=\"lineno\"> 2099</span>&#160;            <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(0, geomPtr.faceCount):</div>\n\
<div class=\"line\"><a name=\"l02100\"></a><span class=\"lineno\"> 2100</span>&#160;                <span class=\"comment\"># ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l02101\"></a><span class=\"lineno\"> 2101</span>&#160;                numVerts = geomPtr.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l02102\"></a><span class=\"lineno\"> 2102</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l02103\"></a><span class=\"lineno\"> 2103</span>&#160;                    <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(0, numVerts):</div>\n\
<div class=\"line\"><a name=\"l02104\"></a><span class=\"lineno\"> 2104</span>&#160;                        <span class=\"keywordflow\">if</span> srcComponentType == om.MFn.kMeshEdgeComponent:</div>\n\
<div class=\"line\"><a name=\"l02105\"></a><span class=\"lineno\"> 2105</span>&#160;                            <span class=\"keywordflow\">if</span> edgeId <span class=\"keywordflow\">in</span> srcIndices:</div>\n\
<div class=\"line\"><a name=\"l02106\"></a><span class=\"lineno\"> 2106</span>&#160;                                vindex1 = base + (v % numVerts)</div>\n\
<div class=\"line\"><a name=\"l02107\"></a><span class=\"lineno\"> 2107</span>&#160;                                vindex2 = base + ((v+1) % numVerts)</div>\n\
<div class=\"line\"><a name=\"l02108\"></a><span class=\"lineno\"> 2108</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02109\"></a><span class=\"lineno\"> 2109</span>&#160;                                vertexId1 = geomPtr.face_connects[vindex1]</div>\n\
<div class=\"line\"><a name=\"l02110\"></a><span class=\"lineno\"> 2110</span>&#160;                                vertexId2 = geomPtr.face_connects[vindex2]</div>\n\
<div class=\"line\"><a name=\"l02111\"></a><span class=\"lineno\"> 2111</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02112\"></a><span class=\"lineno\"> 2112</span>&#160;                                vtxComponent.addElement(vertexId1)</div>\n\
<div class=\"line\"><a name=\"l02113\"></a><span class=\"lineno\"> 2113</span>&#160;                                vtxComponent.addElement(vertexId2)</div>\n\
<div class=\"line\"><a name=\"l02114\"></a><span class=\"lineno\"> 2114</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02115\"></a><span class=\"lineno\"> 2115</span>&#160;                            edgeId += 1</div>\n\
<div class=\"line\"><a name=\"l02116\"></a><span class=\"lineno\"> 2116</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l02117\"></a><span class=\"lineno\"> 2117</span>&#160;                            <span class=\"comment\"># Face component:</span></div>\n\
<div class=\"line\"><a name=\"l02118\"></a><span class=\"lineno\"> 2118</span>&#160;                            <span class=\"keywordflow\">if</span> faceIdx <span class=\"keywordflow\">in</span> srcIndices:</div>\n\
<div class=\"line\"><a name=\"l02119\"></a><span class=\"lineno\"> 2119</span>&#160;                                vindex = base + (v % numVerts)</div>\n\
<div class=\"line\"><a name=\"l02120\"></a><span class=\"lineno\"> 2120</span>&#160;                                vertexId = geomPtr.face_connects[vindex]</div>\n\
<div class=\"line\"><a name=\"l02121\"></a><span class=\"lineno\"> 2121</span>&#160;                                vtxComponent.addElement(vertexId)</div>\n\
<div class=\"line\"><a name=\"l02122\"></a><span class=\"lineno\"> 2122</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02123\"></a><span class=\"lineno\"> 2123</span>&#160;                    base += numVerts</div>\n\
<div class=\"line\"><a name=\"l02124\"></a><span class=\"lineno\"> 2124</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02125\"></a><span class=\"lineno\"> 2125</span>&#160;        <span class=\"keywordflow\">return</span> retVal</div>\n\
<div class=\"line\"><a name=\"l02126\"></a><span class=\"lineno\"> 2126</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02127\"></a><span class=\"lineno\"> 2127</span>&#160;    <span class=\"keyword\">def </span>applyTweaks(self, datablock, geometry):</div>\n\
<div class=\"line\"><a name=\"l02128\"></a><span class=\"lineno\"> 2128</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02129\"></a><span class=\"lineno\"> 2129</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02130\"></a><span class=\"lineno\"> 2130</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02131\"></a><span class=\"lineno\"> 2131</span>&#160;        <span class=\"comment\">##    If the shape has history, apply any tweaks (offsets) made</span></div>\n\
<div class=\"line\"><a name=\"l02132\"></a><span class=\"lineno\"> 2132</span>&#160;        <span class=\"comment\">##    to the control points.</span></div>\n\
<div class=\"line\"><a name=\"l02133\"></a><span class=\"lineno\"> 2133</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02134\"></a><span class=\"lineno\"> 2134</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02135\"></a><span class=\"lineno\"> 2135</span>&#160;        cpHandle = datablock.inputArrayValue( om.MPxSurfaceShape.mControlPoints )</div>\n\
<div class=\"line\"><a name=\"l02136\"></a><span class=\"lineno\"> 2136</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02137\"></a><span class=\"lineno\"> 2137</span>&#160;        <span class=\"comment\">## Loop through the component list and transform each vertex.</span></div>\n\
<div class=\"line\"><a name=\"l02138\"></a><span class=\"lineno\"> 2138</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02139\"></a><span class=\"lineno\"> 2139</span>&#160;        <span class=\"keywordflow\">while</span> <span class=\"keywordflow\">not</span> cpHandle.isDone():</div>\n\
<div class=\"line\"><a name=\"l02140\"></a><span class=\"lineno\"> 2140</span>&#160;            elemIndex = cpHandle.elementLogicalIndex()</div>\n\
<div class=\"line\"><a name=\"l02141\"></a><span class=\"lineno\"> 2141</span>&#160;            pntHandle = cpHandle.outputValue()</div>\n\
<div class=\"line\"><a name=\"l02142\"></a><span class=\"lineno\"> 2142</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02143\"></a><span class=\"lineno\"> 2143</span>&#160;            offset = pntHandle.asDouble3()</div>\n\
<div class=\"line\"><a name=\"l02144\"></a><span class=\"lineno\"> 2144</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02145\"></a><span class=\"lineno\"> 2145</span>&#160;            <span class=\"comment\">## Apply the tweaks to the output surface</span></div>\n\
<div class=\"line\"><a name=\"l02146\"></a><span class=\"lineno\"> 2146</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02147\"></a><span class=\"lineno\"> 2147</span>&#160;            geometry.vertices[elemIndex] += om.MPoint(offset[0],offset[1],offset[2])</div>\n\
<div class=\"line\"><a name=\"l02148\"></a><span class=\"lineno\"> 2148</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02149\"></a><span class=\"lineno\"> 2149</span>&#160;            next(cpHandle)</div>\n\
<div class=\"line\"><a name=\"l02150\"></a><span class=\"lineno\"> 2150</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02151\"></a><span class=\"lineno\"> 2151</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02152\"></a><span class=\"lineno\"> 2152</span>&#160;    <span class=\"keyword\">def </span>updateCachedSurface(self, geometry, componentList):</div>\n\
<div class=\"line\"><a name=\"l02153\"></a><span class=\"lineno\"> 2153</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02154\"></a><span class=\"lineno\"> 2154</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02155\"></a><span class=\"lineno\"> 2155</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02156\"></a><span class=\"lineno\"> 2156</span>&#160;        <span class=\"comment\">##    Update the cached surface attribute, handle the tweak history as appropriate,</span></div>\n\
<div class=\"line\"><a name=\"l02157\"></a><span class=\"lineno\"> 2157</span>&#160;        <span class=\"comment\">##    and trigger a bounding box change calculation.</span></div>\n\
<div class=\"line\"><a name=\"l02158\"></a><span class=\"lineno\"> 2158</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02159\"></a><span class=\"lineno\"> 2159</span>&#160;        <span class=\"comment\">## Arguments</span></div>\n\
<div class=\"line\"><a name=\"l02160\"></a><span class=\"lineno\"> 2160</span>&#160;        <span class=\"comment\">##    geometry       - the modified geometry to apply to the cached surface attribute</span></div>\n\
<div class=\"line\"><a name=\"l02161\"></a><span class=\"lineno\"> 2161</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02162\"></a><span class=\"lineno\"> 2162</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02163\"></a><span class=\"lineno\"> 2163</span>&#160;        <span class=\"comment\">## Retrieve the value of the cached surface attribute.</span></div>\n\
<div class=\"line\"><a name=\"l02164\"></a><span class=\"lineno\"> 2164</span>&#160;        <span class=\"comment\">## We will set the new geometry data into the cached surface attribute</span></div>\n\
<div class=\"line\"><a name=\"l02165\"></a><span class=\"lineno\"> 2165</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02166\"></a><span class=\"lineno\"> 2166</span>&#160;        <span class=\"comment\">## Access the datablock directly. This code has to be efficient</span></div>\n\
<div class=\"line\"><a name=\"l02167\"></a><span class=\"lineno\"> 2167</span>&#160;        <span class=\"comment\">## and so we bypass the compute mechanism completely.</span></div>\n\
<div class=\"line\"><a name=\"l02168\"></a><span class=\"lineno\"> 2168</span>&#160;        <span class=\"comment\">## NOTE: In general we should always go though compute for getting</span></div>\n\
<div class=\"line\"><a name=\"l02169\"></a><span class=\"lineno\"> 2169</span>&#160;        <span class=\"comment\">## and setting attributes.</span></div>\n\
<div class=\"line\"><a name=\"l02170\"></a><span class=\"lineno\"> 2170</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02171\"></a><span class=\"lineno\"> 2171</span>&#160;        datablock = self.forceCache()</div>\n\
<div class=\"line\"><a name=\"l02172\"></a><span class=\"lineno\"> 2172</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02173\"></a><span class=\"lineno\"> 2173</span>&#160;        cachedHandle = datablock.outputValue( apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l02174\"></a><span class=\"lineno\"> 2174</span>&#160;        cached = cachedHandle.asPluginData()</div>\n\
<div class=\"line\"><a name=\"l02175\"></a><span class=\"lineno\"> 2175</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02176\"></a><span class=\"lineno\"> 2176</span>&#160;        dHandle = datablock.outputValue( om.MPxSurfaceShape.mControlPoints )</div>\n\
<div class=\"line\"><a name=\"l02177\"></a><span class=\"lineno\"> 2177</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02178\"></a><span class=\"lineno\"> 2178</span>&#160;        <span class=\"comment\">## If there is history then calculate the tweaks necessary for</span></div>\n\
<div class=\"line\"><a name=\"l02179\"></a><span class=\"lineno\"> 2179</span>&#160;        <span class=\"comment\">## setting the final positions of the vertices.</span></div>\n\
<div class=\"line\"><a name=\"l02180\"></a><span class=\"lineno\"> 2180</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02181\"></a><span class=\"lineno\"> 2181</span>&#160;        <span class=\"keywordflow\">if</span> self.hasHistory() <span class=\"keywordflow\">and</span> cached:</div>\n\
<div class=\"line\"><a name=\"l02182\"></a><span class=\"lineno\"> 2182</span>&#160;            <span class=\"comment\">## Since the shape has history, we need to store the tweaks (deltas)</span></div>\n\
<div class=\"line\"><a name=\"l02183\"></a><span class=\"lineno\"> 2183</span>&#160;            <span class=\"comment\">## between the input shape and the tweaked shape in the control points</span></div>\n\
<div class=\"line\"><a name=\"l02184\"></a><span class=\"lineno\"> 2184</span>&#160;            <span class=\"comment\">## attribute.</span></div>\n\
<div class=\"line\"><a name=\"l02185\"></a><span class=\"lineno\"> 2185</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02186\"></a><span class=\"lineno\"> 2186</span>&#160;            self.buildControlPoints( datablock, len(geometry.vertices) )</div>\n\
<div class=\"line\"><a name=\"l02187\"></a><span class=\"lineno\"> 2187</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02188\"></a><span class=\"lineno\"> 2188</span>&#160;            cpHandle = om.MArrayDataHandle( dHandle )</div>\n\
<div class=\"line\"><a name=\"l02189\"></a><span class=\"lineno\"> 2189</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02190\"></a><span class=\"lineno\"> 2190</span>&#160;            <span class=\"comment\">## Loop through the component list and transform each vertex.</span></div>\n\
<div class=\"line\"><a name=\"l02191\"></a><span class=\"lineno\"> 2191</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02192\"></a><span class=\"lineno\"> 2192</span>&#160;            <span class=\"keywordflow\">for</span> comp <span class=\"keywordflow\">in</span> componentList:</div>\n\
<div class=\"line\"><a name=\"l02193\"></a><span class=\"lineno\"> 2193</span>&#160;                fnComp = om.MFnSingleIndexedComponent( self.convertToVertexComponent(comp) )</div>\n\
<div class=\"line\"><a name=\"l02194\"></a><span class=\"lineno\"> 2194</span>&#160;                <span class=\"keywordflow\">for</span> elemIndex <span class=\"keywordflow\">in</span> fnComp.getElements():</div>\n\
<div class=\"line\"><a name=\"l02195\"></a><span class=\"lineno\"> 2195</span>&#160;                    cpHandle.jumpToLogicalElement( elemIndex )</div>\n\
<div class=\"line\"><a name=\"l02196\"></a><span class=\"lineno\"> 2196</span>&#160;                    pntHandle = cpHandle.outputValue()</div>\n\
<div class=\"line\"><a name=\"l02197\"></a><span class=\"lineno\"> 2197</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02198\"></a><span class=\"lineno\"> 2198</span>&#160;                    pnt = pntHandle.asDouble3()</div>\n\
<div class=\"line\"><a name=\"l02199\"></a><span class=\"lineno\"> 2199</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02200\"></a><span class=\"lineno\"> 2200</span>&#160;                    oldPnt = cached.fGeometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l02201\"></a><span class=\"lineno\"> 2201</span>&#160;                    newPnt = geometry.vertices[elemIndex]</div>\n\
<div class=\"line\"><a name=\"l02202\"></a><span class=\"lineno\"> 2202</span>&#160;                    offset = newPnt - oldPnt</div>\n\
<div class=\"line\"><a name=\"l02203\"></a><span class=\"lineno\"> 2203</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02204\"></a><span class=\"lineno\"> 2204</span>&#160;                    pnt[0] += offset[0]</div>\n\
<div class=\"line\"><a name=\"l02205\"></a><span class=\"lineno\"> 2205</span>&#160;                    pnt[1] += offset[1]</div>\n\
<div class=\"line\"><a name=\"l02206\"></a><span class=\"lineno\"> 2206</span>&#160;                    pnt[2] += offset[2]</div>\n\
<div class=\"line\"><a name=\"l02207\"></a><span class=\"lineno\"> 2207</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02208\"></a><span class=\"lineno\"> 2208</span>&#160;                    pntHandle.set3Double(pnt[0], pnt[1], pnt[2])</div>\n\
<div class=\"line\"><a name=\"l02209\"></a><span class=\"lineno\"> 2209</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02210\"></a><span class=\"lineno\"> 2210</span>&#160;        <span class=\"comment\">## Copy outputSurface to cachedSurface</span></div>\n\
<div class=\"line\"><a name=\"l02211\"></a><span class=\"lineno\"> 2211</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02212\"></a><span class=\"lineno\"> 2212</span>&#160;        <span class=\"keywordflow\">if</span> cached:</div>\n\
<div class=\"line\"><a name=\"l02213\"></a><span class=\"lineno\"> 2213</span>&#160;            cached.fGeometry.copy(geometry)</div>\n\
<div class=\"line\"><a name=\"l02214\"></a><span class=\"lineno\"> 2214</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02215\"></a><span class=\"lineno\"> 2215</span>&#160;        pCPs = om.MPlug( self.thisMObject(), om.MPxSurfaceShape.mControlPoints)</div>\n\
<div class=\"line\"><a name=\"l02216\"></a><span class=\"lineno\"> 2216</span>&#160;        pCPs.setMDataHandle(dHandle)</div>\n\
<div class=\"line\"><a name=\"l02217\"></a><span class=\"lineno\"> 2217</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02218\"></a><span class=\"lineno\"> 2218</span>&#160;        <span class=\"comment\">## Moving vertices will likely change the bounding box.</span></div>\n\
<div class=\"line\"><a name=\"l02219\"></a><span class=\"lineno\"> 2219</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02220\"></a><span class=\"lineno\"> 2220</span>&#160;        self.computeBoundingBox( datablock )</div>\n\
<div class=\"line\"><a name=\"l02221\"></a><span class=\"lineno\"> 2221</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02222\"></a><span class=\"lineno\"> 2222</span>&#160;        <span class=\"comment\">## Tell maya the bounding box for this object has changed</span></div>\n\
<div class=\"line\"><a name=\"l02223\"></a><span class=\"lineno\"> 2223</span>&#160;        <span class=\"comment\">## and thus &quot;boundingBox()&quot; needs to be called.</span></div>\n\
<div class=\"line\"><a name=\"l02224\"></a><span class=\"lineno\"> 2224</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02225\"></a><span class=\"lineno\"> 2225</span>&#160;        self.childChanged( om.MPxSurfaceShape.kBoundingBoxChanged )</div>\n\
<div class=\"line\"><a name=\"l02226\"></a><span class=\"lineno\"> 2226</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02227\"></a><span class=\"lineno\"> 2227</span>&#160;        <span class=\"comment\">## Signal to the viewport that it needs to update the object</span></div>\n\
<div class=\"line\"><a name=\"l02228\"></a><span class=\"lineno\"> 2228</span>&#160;        self.signalDirtyToViewport()</div>\n\
<div class=\"line\"><a name=\"l02229\"></a><span class=\"lineno\"> 2229</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02230\"></a><span class=\"lineno\"> 2230</span>&#160;    <span class=\"keyword\">def </span>getPointValue(self, pntInd):</div>\n\
<div class=\"line\"><a name=\"l02231\"></a><span class=\"lineno\"> 2231</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02232\"></a><span class=\"lineno\"> 2232</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02233\"></a><span class=\"lineno\"> 2233</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02234\"></a><span class=\"lineno\"> 2234</span>&#160;        <span class=\"comment\">##    Helper function to return the value of a given vertex</span></div>\n\
<div class=\"line\"><a name=\"l02235\"></a><span class=\"lineno\"> 2235</span>&#160;        <span class=\"comment\">##    from the cachedMesh.</span></div>\n\
<div class=\"line\"><a name=\"l02236\"></a><span class=\"lineno\"> 2236</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02237\"></a><span class=\"lineno\"> 2237</span>&#160;        geometry = self.cachedGeom()</div>\n\
<div class=\"line\"><a name=\"l02238\"></a><span class=\"lineno\"> 2238</span>&#160;        <span class=\"keywordflow\">if</span> geometry:</div>\n\
<div class=\"line\"><a name=\"l02239\"></a><span class=\"lineno\"> 2239</span>&#160;            <span class=\"keywordflow\">return</span> geometry.vertices[ pntInd ]</div>\n\
<div class=\"line\"><a name=\"l02240\"></a><span class=\"lineno\"> 2240</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02241\"></a><span class=\"lineno\"> 2241</span>&#160;        <span class=\"keywordflow\">return</span> om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l02242\"></a><span class=\"lineno\"> 2242</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02243\"></a><span class=\"lineno\"> 2243</span>&#160;    <span class=\"keyword\">def </span>getChannelValue(self, pntInd, vlInd):</div>\n\
<div class=\"line\"><a name=\"l02244\"></a><span class=\"lineno\"> 2244</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02245\"></a><span class=\"lineno\"> 2245</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02246\"></a><span class=\"lineno\"> 2246</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02247\"></a><span class=\"lineno\"> 2247</span>&#160;        <span class=\"comment\">##    Helper function to return the value of a given vertex</span></div>\n\
<div class=\"line\"><a name=\"l02248\"></a><span class=\"lineno\"> 2248</span>&#160;        <span class=\"comment\">##    from the cachedMesh.</span></div>\n\
<div class=\"line\"><a name=\"l02249\"></a><span class=\"lineno\"> 2249</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02250\"></a><span class=\"lineno\"> 2250</span>&#160;        geometry = self.cachedGeom()</div>\n\
<div class=\"line\"><a name=\"l02251\"></a><span class=\"lineno\"> 2251</span>&#160;        <span class=\"keywordflow\">if</span> geometry:</div>\n\
<div class=\"line\"><a name=\"l02252\"></a><span class=\"lineno\"> 2252</span>&#160;            <span class=\"keywordflow\">return</span> geometry.vertices[ pntInd ][ vlInd ]</div>\n\
<div class=\"line\"><a name=\"l02253\"></a><span class=\"lineno\"> 2253</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02254\"></a><span class=\"lineno\"> 2254</span>&#160;        <span class=\"keywordflow\">return</span> 0</div>\n\
<div class=\"line\"><a name=\"l02255\"></a><span class=\"lineno\"> 2255</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02256\"></a><span class=\"lineno\"> 2256</span>&#160;    <span class=\"keyword\">def </span>setPointValue(self, pntInd, val):</div>\n\
<div class=\"line\"><a name=\"l02257\"></a><span class=\"lineno\"> 2257</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02258\"></a><span class=\"lineno\"> 2258</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02259\"></a><span class=\"lineno\"> 2259</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02260\"></a><span class=\"lineno\"> 2260</span>&#160;        <span class=\"comment\">##    Helper function to set the value of a given vertex</span></div>\n\
<div class=\"line\"><a name=\"l02261\"></a><span class=\"lineno\"> 2261</span>&#160;        <span class=\"comment\">##    in the cachedMesh.</span></div>\n\
<div class=\"line\"><a name=\"l02262\"></a><span class=\"lineno\"> 2262</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02263\"></a><span class=\"lineno\"> 2263</span>&#160;        geometry = self.cachedGeom()</div>\n\
<div class=\"line\"><a name=\"l02264\"></a><span class=\"lineno\"> 2264</span>&#160;        <span class=\"keywordflow\">if</span> geometry:</div>\n\
<div class=\"line\"><a name=\"l02265\"></a><span class=\"lineno\"> 2265</span>&#160;            geometry.vertices[ pntInd ] = om.MPoint(val)</div>\n\
<div class=\"line\"><a name=\"l02266\"></a><span class=\"lineno\"> 2266</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02267\"></a><span class=\"lineno\"> 2267</span>&#160;        self.verticesUpdated()</div>\n\
<div class=\"line\"><a name=\"l02268\"></a><span class=\"lineno\"> 2268</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02269\"></a><span class=\"lineno\"> 2269</span>&#160;    <span class=\"keyword\">def </span>setChannelValue(self, pntInd, vlInd, val):</div>\n\
<div class=\"line\"><a name=\"l02270\"></a><span class=\"lineno\"> 2270</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02271\"></a><span class=\"lineno\"> 2271</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02272\"></a><span class=\"lineno\"> 2272</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02273\"></a><span class=\"lineno\"> 2273</span>&#160;        <span class=\"comment\">##    Helper function to set the value of a given vertex</span></div>\n\
<div class=\"line\"><a name=\"l02274\"></a><span class=\"lineno\"> 2274</span>&#160;        <span class=\"comment\">##    in the cachedMesh.</span></div>\n\
<div class=\"line\"><a name=\"l02275\"></a><span class=\"lineno\"> 2275</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02276\"></a><span class=\"lineno\"> 2276</span>&#160;        geometry = self.cachedGeom()</div>\n\
<div class=\"line\"><a name=\"l02277\"></a><span class=\"lineno\"> 2277</span>&#160;        <span class=\"keywordflow\">if</span> geometry:</div>\n\
<div class=\"line\"><a name=\"l02278\"></a><span class=\"lineno\"> 2278</span>&#160;            geometry.vertices[ pntInd ][ vlInd ] = val</div>\n\
<div class=\"line\"><a name=\"l02279\"></a><span class=\"lineno\"> 2279</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02280\"></a><span class=\"lineno\"> 2280</span>&#160;        self.verticesUpdated()</div>\n\
<div class=\"line\"><a name=\"l02281\"></a><span class=\"lineno\"> 2281</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02282\"></a><span class=\"lineno\"> 2282</span>&#160;    <span class=\"keyword\">def </span>meshObject(self):</div>\n\
<div class=\"line\"><a name=\"l02283\"></a><span class=\"lineno\"> 2283</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02284\"></a><span class=\"lineno\"> 2284</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02285\"></a><span class=\"lineno\"> 2285</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02286\"></a><span class=\"lineno\"> 2286</span>&#160;        <span class=\"comment\">##    Get a reference to the mesh data (outputSurface)</span></div>\n\
<div class=\"line\"><a name=\"l02287\"></a><span class=\"lineno\"> 2287</span>&#160;        <span class=\"comment\">##    from the datablock. If dirty then an evaluation is</span></div>\n\
<div class=\"line\"><a name=\"l02288\"></a><span class=\"lineno\"> 2288</span>&#160;        <span class=\"comment\">##    triggered.</span></div>\n\
<div class=\"line\"><a name=\"l02289\"></a><span class=\"lineno\"> 2289</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02290\"></a><span class=\"lineno\"> 2290</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02291\"></a><span class=\"lineno\"> 2291</span>&#160;        <span class=\"comment\">## Get the datablock for this node</span></div>\n\
<div class=\"line\"><a name=\"l02292\"></a><span class=\"lineno\"> 2292</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02293\"></a><span class=\"lineno\"> 2293</span>&#160;        datablock = self.forceCache()</div>\n\
<div class=\"line\"><a name=\"l02294\"></a><span class=\"lineno\"> 2294</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02295\"></a><span class=\"lineno\"> 2295</span>&#160;        <span class=\"comment\">## Calling inputValue will force a recompute if the</span></div>\n\
<div class=\"line\"><a name=\"l02296\"></a><span class=\"lineno\"> 2296</span>&#160;        <span class=\"comment\">## connection is dirty. This means the most up-to-date</span></div>\n\
<div class=\"line\"><a name=\"l02297\"></a><span class=\"lineno\"> 2297</span>&#160;        <span class=\"comment\">## mesh data will be returned by this method.</span></div>\n\
<div class=\"line\"><a name=\"l02298\"></a><span class=\"lineno\"> 2298</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02299\"></a><span class=\"lineno\"> 2299</span>&#160;        handle = datablock.inputValue( apiMesh.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02300\"></a><span class=\"lineno\"> 2300</span>&#160;        <span class=\"keywordflow\">return</span> handle.data()</div>\n\
<div class=\"line\"><a name=\"l02301\"></a><span class=\"lineno\"> 2301</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02302\"></a><span class=\"lineno\"> 2302</span>&#160;    <span class=\"keyword\">def </span>meshGeom(self):</div>\n\
<div class=\"line\"><a name=\"l02303\"></a><span class=\"lineno\"> 2303</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02304\"></a><span class=\"lineno\"> 2304</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02305\"></a><span class=\"lineno\"> 2305</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02306\"></a><span class=\"lineno\"> 2306</span>&#160;        <span class=\"comment\">##    Returns the apiMeshGeom of the outputSurface.</span></div>\n\
<div class=\"line\"><a name=\"l02307\"></a><span class=\"lineno\"> 2307</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02308\"></a><span class=\"lineno\"> 2308</span>&#160;        meshObj = self.meshObject()</div>\n\
<div class=\"line\"><a name=\"l02309\"></a><span class=\"lineno\"> 2309</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02310\"></a><span class=\"lineno\"> 2310</span>&#160;        fnData = om.MFnPluginData( meshObj )</div>\n\
<div class=\"line\"><a name=\"l02311\"></a><span class=\"lineno\"> 2311</span>&#160;        data = fnData.data()</div>\n\
<div class=\"line\"><a name=\"l02312\"></a><span class=\"lineno\"> 2312</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(data, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l02313\"></a><span class=\"lineno\"> 2313</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;meshGeom : failed to get apiMeshData&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l02314\"></a><span class=\"lineno\"> 2314</span>&#160;        <span class=\"keywordflow\">return</span> data.fGeometry</div>\n\
<div class=\"line\"><a name=\"l02315\"></a><span class=\"lineno\"> 2315</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02316\"></a><span class=\"lineno\"> 2316</span>&#160;    <span class=\"keyword\">def </span>cachedObject(self):</div>\n\
<div class=\"line\"><a name=\"l02317\"></a><span class=\"lineno\"> 2317</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02318\"></a><span class=\"lineno\"> 2318</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02319\"></a><span class=\"lineno\"> 2319</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02320\"></a><span class=\"lineno\"> 2320</span>&#160;        <span class=\"comment\">##    Get a reference to the mesh data (cachedSurface)</span></div>\n\
<div class=\"line\"><a name=\"l02321\"></a><span class=\"lineno\"> 2321</span>&#160;        <span class=\"comment\">##    from the datablock. No evaluation is triggered.</span></div>\n\
<div class=\"line\"><a name=\"l02322\"></a><span class=\"lineno\"> 2322</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02323\"></a><span class=\"lineno\"> 2323</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02324\"></a><span class=\"lineno\"> 2324</span>&#160;        <span class=\"comment\">## Get the datablock for this node</span></div>\n\
<div class=\"line\"><a name=\"l02325\"></a><span class=\"lineno\"> 2325</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02326\"></a><span class=\"lineno\"> 2326</span>&#160;        datablock = self.forceCache()</div>\n\
<div class=\"line\"><a name=\"l02327\"></a><span class=\"lineno\"> 2327</span>&#160;        handle = datablock.outputValue( apiMesh.cachedSurface )</div>\n\
<div class=\"line\"><a name=\"l02328\"></a><span class=\"lineno\"> 2328</span>&#160;        <span class=\"keywordflow\">return</span> handle.data()</div>\n\
<div class=\"line\"><a name=\"l02329\"></a><span class=\"lineno\"> 2329</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02330\"></a><span class=\"lineno\"> 2330</span>&#160;    <span class=\"keyword\">def </span>cachedGeom(self):</div>\n\
<div class=\"line\"><a name=\"l02331\"></a><span class=\"lineno\"> 2331</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02332\"></a><span class=\"lineno\"> 2332</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02333\"></a><span class=\"lineno\"> 2333</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02334\"></a><span class=\"lineno\"> 2334</span>&#160;        <span class=\"comment\">##    Returns the apiMeshGeom of the cachedSurface.</span></div>\n\
<div class=\"line\"><a name=\"l02335\"></a><span class=\"lineno\"> 2335</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02336\"></a><span class=\"lineno\"> 2336</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02337\"></a><span class=\"lineno\"> 2337</span>&#160;        fnData = om.MFnPluginData( self.cachedObject() )</div>\n\
<div class=\"line\"><a name=\"l02338\"></a><span class=\"lineno\"> 2338</span>&#160;        data = fnData.data()</div>\n\
<div class=\"line\"><a name=\"l02339\"></a><span class=\"lineno\"> 2339</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(data, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l02340\"></a><span class=\"lineno\"> 2340</span>&#160;            <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;cachedGeom : failed to get apiMeshData&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l02341\"></a><span class=\"lineno\"> 2341</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02342\"></a><span class=\"lineno\"> 2342</span>&#160;        <span class=\"keywordflow\">return</span> data.fGeometry</div>\n\
<div class=\"line\"><a name=\"l02343\"></a><span class=\"lineno\"> 2343</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02344\"></a><span class=\"lineno\"> 2344</span>&#160;    <span class=\"keyword\">def </span>buildControlPoints(self, datablock, count):</div>\n\
<div class=\"line\"><a name=\"l02345\"></a><span class=\"lineno\"> 2345</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02346\"></a><span class=\"lineno\"> 2346</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02347\"></a><span class=\"lineno\"> 2347</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02348\"></a><span class=\"lineno\"> 2348</span>&#160;        <span class=\"comment\">##    Check the controlPoints array. If there is input history</span></div>\n\
<div class=\"line\"><a name=\"l02349\"></a><span class=\"lineno\"> 2349</span>&#160;        <span class=\"comment\">##    then we will use this array to store tweaks (vertex movements).</span></div>\n\
<div class=\"line\"><a name=\"l02350\"></a><span class=\"lineno\"> 2350</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02351\"></a><span class=\"lineno\"> 2351</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02352\"></a><span class=\"lineno\"> 2352</span>&#160;        cpH = datablock.outputArrayValue( om.MPxSurfaceShape.mControlPoints )</div>\n\
<div class=\"line\"><a name=\"l02353\"></a><span class=\"lineno\"> 2353</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02354\"></a><span class=\"lineno\"> 2354</span>&#160;        oldBuilder = cpH.builder()</div>\n\
<div class=\"line\"><a name=\"l02355\"></a><span class=\"lineno\"> 2355</span>&#160;        <span class=\"keywordflow\">if</span> count != len(oldBuilder):</div>\n\
<div class=\"line\"><a name=\"l02356\"></a><span class=\"lineno\"> 2356</span>&#160;            <span class=\"comment\">## Make and set the new builder based on the</span></div>\n\
<div class=\"line\"><a name=\"l02357\"></a><span class=\"lineno\"> 2357</span>&#160;            <span class=\"comment\">## info from the old builder.</span></div>\n\
<div class=\"line\"><a name=\"l02358\"></a><span class=\"lineno\"> 2358</span>&#160;            builder = om.MArrayDataBuilder( oldBuilder )</div>\n\
<div class=\"line\"><a name=\"l02359\"></a><span class=\"lineno\"> 2359</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02360\"></a><span class=\"lineno\"> 2360</span>&#160;            <span class=\"keywordflow\">for</span> vtx <span class=\"keywordflow\">in</span> range(count):</div>\n\
<div class=\"line\"><a name=\"l02361\"></a><span class=\"lineno\"> 2361</span>&#160;                builder.addElement( vtx )</div>\n\
<div class=\"line\"><a name=\"l02362\"></a><span class=\"lineno\"> 2362</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02363\"></a><span class=\"lineno\"> 2363</span>&#160;            cpH.set( builder )</div>\n\
<div class=\"line\"><a name=\"l02364\"></a><span class=\"lineno\"> 2364</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02365\"></a><span class=\"lineno\"> 2365</span>&#160;        cpH.setAllClean()</div>\n\
<div class=\"line\"><a name=\"l02366\"></a><span class=\"lineno\"> 2366</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02367\"></a><span class=\"lineno\"> 2367</span>&#160;    <span class=\"keyword\">def </span>verticesUpdated(self):</div>\n\
<div class=\"line\"><a name=\"l02368\"></a><span class=\"lineno\"> 2368</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02369\"></a><span class=\"lineno\"> 2369</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02370\"></a><span class=\"lineno\"> 2370</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02371\"></a><span class=\"lineno\"> 2371</span>&#160;        <span class=\"comment\">##    Helper function to tell maya that this shape&#39;s</span></div>\n\
<div class=\"line\"><a name=\"l02372\"></a><span class=\"lineno\"> 2372</span>&#160;        <span class=\"comment\">##    vertices have updated and that the bbox needs</span></div>\n\
<div class=\"line\"><a name=\"l02373\"></a><span class=\"lineno\"> 2373</span>&#160;        <span class=\"comment\">##    to be recalculated and the shape redrawn.</span></div>\n\
<div class=\"line\"><a name=\"l02374\"></a><span class=\"lineno\"> 2374</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02375\"></a><span class=\"lineno\"> 2375</span>&#160;        self.childChanged( om.MPxSurfaceShape.kBoundingBoxChanged )</div>\n\
<div class=\"line\"><a name=\"l02376\"></a><span class=\"lineno\"> 2376</span>&#160;        self.childChanged( om.MPxSurfaceShape.kObjectChanged )</div>\n\
<div class=\"line\"><a name=\"l02377\"></a><span class=\"lineno\"> 2377</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02378\"></a><span class=\"lineno\"> 2378</span>&#160;    <span class=\"keyword\">def </span>setShapeDirty(self):</div>\n\
<div class=\"line\"><a name=\"l02379\"></a><span class=\"lineno\"> 2379</span>&#160;        self.fShapeDirty = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02380\"></a><span class=\"lineno\"> 2380</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02381\"></a><span class=\"lineno\"> 2381</span>&#160;    <span class=\"keyword\">def </span>notifyViewport(self):</div>\n\
<div class=\"line\"><a name=\"l02382\"></a><span class=\"lineno\"> 2382</span>&#160;        omr.MRenderer.setGeometryDrawDirty(self.thisMObject())</div>\n\
<div class=\"line\"><a name=\"l02383\"></a><span class=\"lineno\"> 2383</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02384\"></a><span class=\"lineno\"> 2384</span>&#160;    <span class=\"keyword\">def </span>signalDirtyToViewport(self):</div>\n\
<div class=\"line\"><a name=\"l02385\"></a><span class=\"lineno\"> 2385</span>&#160;        self.setShapeDirty()</div>\n\
<div class=\"line\"><a name=\"l02386\"></a><span class=\"lineno\"> 2386</span>&#160;        self.notifyViewport()</div>\n\
<div class=\"line\"><a name=\"l02387\"></a><span class=\"lineno\"> 2387</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02388\"></a><span class=\"lineno\"> 2388</span>&#160;<span class=\"keyword\">class </span>apiMeshGeometryShape(apiMesh):</div>\n\
<div class=\"line\"><a name=\"l02389\"></a><span class=\"lineno\"> 2389</span>&#160;    sDrawDbClassification = <span class=\"stringliteral\">&quot;drawdb/geometry/apiMesh_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l02390\"></a><span class=\"lineno\"> 2390</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02391\"></a><span class=\"lineno\"> 2391</span>&#160;    id = om.MTypeId(0x8009B)</div>\n\
<div class=\"line\"><a name=\"l02392\"></a><span class=\"lineno\"> 2392</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02393\"></a><span class=\"lineno\"> 2393</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l02394\"></a><span class=\"lineno\"> 2394</span>&#160;        super(apiMeshGeometryShape, self).__init__()</div>\n\
<div class=\"line\"><a name=\"l02395\"></a><span class=\"lineno\"> 2395</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02396\"></a><span class=\"lineno\"> 2396</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02397\"></a><span class=\"lineno\"> 2397</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l02398\"></a><span class=\"lineno\"> 2398</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshGeometryShape()</div>\n\
<div class=\"line\"><a name=\"l02399\"></a><span class=\"lineno\"> 2399</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02400\"></a><span class=\"lineno\"> 2400</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02401\"></a><span class=\"lineno\"> 2401</span>&#160;    <span class=\"keyword\">def </span>initialize():</div>\n\
<div class=\"line\"><a name=\"l02402\"></a><span class=\"lineno\"> 2402</span>&#160;        <span class=\"keywordflow\">return</span> apiMesh.initialize()</div>\n\
<div class=\"line\"><a name=\"l02403\"></a><span class=\"lineno\"> 2403</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02404\"></a><span class=\"lineno\"> 2404</span>&#160;<span class=\"keyword\">class </span>apiMeshSubsceneShape(apiMesh):</div>\n\
<div class=\"line\"><a name=\"l02405\"></a><span class=\"lineno\"> 2405</span>&#160;    sDrawDbClassification = <span class=\"stringliteral\">&quot;drawdb/subscene/apiMesh_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l02406\"></a><span class=\"lineno\"> 2406</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02407\"></a><span class=\"lineno\"> 2407</span>&#160;    id = om.MTypeId(0x8009C)</div>\n\
<div class=\"line\"><a name=\"l02408\"></a><span class=\"lineno\"> 2408</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02409\"></a><span class=\"lineno\"> 2409</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l02410\"></a><span class=\"lineno\"> 2410</span>&#160;        super(apiMeshSubsceneShape, self).__init__()</div>\n\
<div class=\"line\"><a name=\"l02411\"></a><span class=\"lineno\"> 2411</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02412\"></a><span class=\"lineno\"> 2412</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02413\"></a><span class=\"lineno\"> 2413</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l02414\"></a><span class=\"lineno\"> 2414</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshSubsceneShape()</div>\n\
<div class=\"line\"><a name=\"l02415\"></a><span class=\"lineno\"> 2415</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l02416\"></a><span class=\"lineno\"> 2416</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02417\"></a><span class=\"lineno\"> 2417</span>&#160;    <span class=\"keyword\">def </span>initialize():</div>\n\
<div class=\"line\"><a name=\"l02418\"></a><span class=\"lineno\"> 2418</span>&#160;        om.MPxNode.inheritAttributesFrom(apiMesh.sNodeName)</div>\n\
<div class=\"line\"><a name=\"l02419\"></a><span class=\"lineno\"> 2419</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02420\"></a><span class=\"lineno\"> 2420</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02421\"></a><span class=\"lineno\"> 2421</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02422\"></a><span class=\"lineno\"> 2422</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02423\"></a><span class=\"lineno\"> 2423</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02424\"></a><span class=\"lineno\"> 2424</span>&#160;<span class=\"comment\">## apiMeshShapeUI</span></div>\n\
<div class=\"line\"><a name=\"l02425\"></a><span class=\"lineno\"> 2425</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02426\"></a><span class=\"lineno\"> 2426</span>&#160;<span class=\"comment\">## Encapsulates the UI portion of a user defined shape. All of the</span></div>\n\
<div class=\"line\"><a name=\"l02427\"></a><span class=\"lineno\"> 2427</span>&#160;<span class=\"comment\">## drawing and selection code goes here.</span></div>\n\
<div class=\"line\"><a name=\"l02428\"></a><span class=\"lineno\"> 2428</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02429\"></a><span class=\"lineno\"> 2429</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02430\"></a><span class=\"lineno\"> 2430</span>&#160;<span class=\"keyword\">class </span>apiMeshUI(omui.MPxSurfaceShapeUI):</div>\n\
<div class=\"line\"><a name=\"l02431\"></a><span class=\"lineno\"> 2431</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02432\"></a><span class=\"lineno\"> 2432</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02433\"></a><span class=\"lineno\"> 2433</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l02434\"></a><span class=\"lineno\"> 2434</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshUI()</div>\n\
<div class=\"line\"><a name=\"l02435\"></a><span class=\"lineno\"> 2435</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02436\"></a><span class=\"lineno\"> 2436</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l02437\"></a><span class=\"lineno\"> 2437</span>&#160;        omui.MPxSurfaceShapeUI.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l02438\"></a><span class=\"lineno\"> 2438</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02439\"></a><span class=\"lineno\"> 2439</span>&#160;    <span class=\"comment\">#####################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02440\"></a><span class=\"lineno\"> 2440</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02441\"></a><span class=\"lineno\"> 2441</span>&#160;    <span class=\"comment\">## Overrides</span></div>\n\
<div class=\"line\"><a name=\"l02442\"></a><span class=\"lineno\"> 2442</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02443\"></a><span class=\"lineno\"> 2443</span>&#160;    <span class=\"comment\">#####################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02444\"></a><span class=\"lineno\"> 2444</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02445\"></a><span class=\"lineno\"> 2445</span>&#160;    <span class=\"comment\">## Main draw routine for UV editor. This is called by maya when the </span></div>\n\
<div class=\"line\"><a name=\"l02446\"></a><span class=\"lineno\"> 2446</span>&#160;    <span class=\"comment\">## shape is selected and the UV texture window is visible. </span></div>\n\
<div class=\"line\"><a name=\"l02447\"></a><span class=\"lineno\"> 2447</span>&#160;    <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l02448\"></a><span class=\"lineno\"> 2448</span>&#160;    <span class=\"keyword\">def </span>drawUV(self, view, info):</div>\n\
<div class=\"line\"><a name=\"l02449\"></a><span class=\"lineno\"> 2449</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l02450\"></a><span class=\"lineno\"> 2450</span>&#160;        <span class=\"comment\">## Description: </span></div>\n\
<div class=\"line\"><a name=\"l02451\"></a><span class=\"lineno\"> 2451</span>&#160;        <span class=\"comment\">##   Main entry point for UV drawing. This method is called by the UV </span></div>\n\
<div class=\"line\"><a name=\"l02452\"></a><span class=\"lineno\"> 2452</span>&#160;        <span class=\"comment\">##   texture editor when the shape is &#39;active&#39;. </span></div>\n\
<div class=\"line\"><a name=\"l02453\"></a><span class=\"lineno\"> 2453</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l02454\"></a><span class=\"lineno\"> 2454</span>&#160;        <span class=\"comment\">## Input: </span></div>\n\
<div class=\"line\"><a name=\"l02455\"></a><span class=\"lineno\"> 2455</span>&#160;        <span class=\"comment\">##   A 3dView. </span></div>\n\
<div class=\"line\"><a name=\"l02456\"></a><span class=\"lineno\"> 2456</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02457\"></a><span class=\"lineno\"> 2457</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02458\"></a><span class=\"lineno\"> 2458</span>&#160;        meshNode = self.surfaceShape()</div>\n\
<div class=\"line\"><a name=\"l02459\"></a><span class=\"lineno\"> 2459</span>&#160;        geom = meshNode.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l02460\"></a><span class=\"lineno\"> 2460</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02461\"></a><span class=\"lineno\"> 2461</span>&#160;        <span class=\"keywordflow\">if</span> geom.uvcoords.uvcount() &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l02462\"></a><span class=\"lineno\"> 2462</span>&#160;            view.setDrawColor( om.MColor( (1.0, 0.0, 0.0) ) )</div>\n\
<div class=\"line\"><a name=\"l02463\"></a><span class=\"lineno\"> 2463</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02464\"></a><span class=\"lineno\"> 2464</span>&#160;            <span class=\"keywordflow\">if</span> info.drawingFunction == omui.MTextureEditorDrawInfo.kDrawWireframe: </div>\n\
<div class=\"line\"><a name=\"l02465\"></a><span class=\"lineno\"> 2465</span>&#160;                self.drawUVWireframe( geom, view, info )</div>\n\
<div class=\"line\"><a name=\"l02466\"></a><span class=\"lineno\"> 2466</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02467\"></a><span class=\"lineno\"> 2467</span>&#160;            <span class=\"keywordflow\">elif</span> info.drawingFunction == omui.MTextureEditorDrawInfo.kDrawEverything <span class=\"keywordflow\">or</span> info.drawingFunction == omui.MTextureEditorDrawInfo.kDrawUVForSelect:</div>\n\
<div class=\"line\"><a name=\"l02468\"></a><span class=\"lineno\"> 2468</span>&#160;                self.drawUVWireframe( geom, view, info ) </div>\n\
<div class=\"line\"><a name=\"l02469\"></a><span class=\"lineno\"> 2469</span>&#160;                self.drawUVMapCoordNum( geom, view, info, <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l02470\"></a><span class=\"lineno\"> 2470</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02471\"></a><span class=\"lineno\"> 2471</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l02472\"></a><span class=\"lineno\"> 2472</span>&#160;                self.drawUVWireframe( geom, view, info )</div>\n\
<div class=\"line\"><a name=\"l02473\"></a><span class=\"lineno\"> 2473</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02474\"></a><span class=\"lineno\"> 2474</span>&#160;    <span class=\"keyword\">def </span>canDrawUV(self):</div>\n\
<div class=\"line\"><a name=\"l02475\"></a><span class=\"lineno\"> 2475</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02476\"></a><span class=\"lineno\"> 2476</span>&#160;        <span class=\"comment\">## Description: </span></div>\n\
<div class=\"line\"><a name=\"l02477\"></a><span class=\"lineno\"> 2477</span>&#160;        <span class=\"comment\">##  Tells Maya that this surface shape supports uv drawing. </span></div>\n\
<div class=\"line\"><a name=\"l02478\"></a><span class=\"lineno\"> 2478</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02479\"></a><span class=\"lineno\"> 2479</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02480\"></a><span class=\"lineno\"> 2480</span>&#160;        meshNode = self.surfaceShape()</div>\n\
<div class=\"line\"><a name=\"l02481\"></a><span class=\"lineno\"> 2481</span>&#160;        geom = meshNode.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l02482\"></a><span class=\"lineno\"> 2482</span>&#160;        <span class=\"keywordflow\">return</span> (geom.uvcoords.uvcount() &gt; 0)</div>\n\
<div class=\"line\"><a name=\"l02483\"></a><span class=\"lineno\"> 2483</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02484\"></a><span class=\"lineno\"> 2484</span>&#160;    <span class=\"comment\">## Main selection routine</span></div>\n\
<div class=\"line\"><a name=\"l02485\"></a><span class=\"lineno\"> 2485</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02486\"></a><span class=\"lineno\"> 2486</span>&#160;    <span class=\"keyword\">def </span>select(self, selectInfo, selectionList, worldSpaceSelectPts):</div>\n\
<div class=\"line\"><a name=\"l02487\"></a><span class=\"lineno\"> 2487</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02488\"></a><span class=\"lineno\"> 2488</span>&#160;        <span class=\"comment\">## Description:</span></div>\n\
<div class=\"line\"><a name=\"l02489\"></a><span class=\"lineno\"> 2489</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02490\"></a><span class=\"lineno\"> 2490</span>&#160;        <span class=\"comment\">##     Main selection routine</span></div>\n\
<div class=\"line\"><a name=\"l02491\"></a><span class=\"lineno\"> 2491</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02492\"></a><span class=\"lineno\"> 2492</span>&#160;        <span class=\"comment\">## Arguments:</span></div>\n\
<div class=\"line\"><a name=\"l02493\"></a><span class=\"lineno\"> 2493</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02494\"></a><span class=\"lineno\"> 2494</span>&#160;        <span class=\"comment\">##     selectInfo           - the selection state information</span></div>\n\
<div class=\"line\"><a name=\"l02495\"></a><span class=\"lineno\"> 2495</span>&#160;        <span class=\"comment\">##     selectionList        - the list of selected items to add to</span></div>\n\
<div class=\"line\"><a name=\"l02496\"></a><span class=\"lineno\"> 2496</span>&#160;        <span class=\"comment\">##     worldSpaceSelectPts  -</span></div>\n\
<div class=\"line\"><a name=\"l02497\"></a><span class=\"lineno\"> 2497</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02498\"></a><span class=\"lineno\"> 2498</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02499\"></a><span class=\"lineno\"> 2499</span>&#160;        selected = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02500\"></a><span class=\"lineno\"> 2500</span>&#160;        componentSelected = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02501\"></a><span class=\"lineno\"> 2501</span>&#160;        hilited = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02502\"></a><span class=\"lineno\"> 2502</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02503\"></a><span class=\"lineno\"> 2503</span>&#160;        hilited = (selectInfo.displayStatus() == omui.M3dView.kHilite)</div>\n\
<div class=\"line\"><a name=\"l02504\"></a><span class=\"lineno\"> 2504</span>&#160;        <span class=\"keywordflow\">if</span> hilited:</div>\n\
<div class=\"line\"><a name=\"l02505\"></a><span class=\"lineno\"> 2505</span>&#160;            componentSelected = self.selectVertices( selectInfo, selectionList, worldSpaceSelectPts )</div>\n\
<div class=\"line\"><a name=\"l02506\"></a><span class=\"lineno\"> 2506</span>&#160;            selected = selected <span class=\"keywordflow\">or</span> componentSelected</div>\n\
<div class=\"line\"><a name=\"l02507\"></a><span class=\"lineno\"> 2507</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02508\"></a><span class=\"lineno\"> 2508</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> selected:</div>\n\
<div class=\"line\"><a name=\"l02509\"></a><span class=\"lineno\"> 2509</span>&#160;            meshNode = self.surfaceShape()</div>\n\
<div class=\"line\"><a name=\"l02510\"></a><span class=\"lineno\"> 2510</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02511\"></a><span class=\"lineno\"> 2511</span>&#160;            <span class=\"comment\">## NOTE: If the geometry has an intersect routine it should</span></div>\n\
<div class=\"line\"><a name=\"l02512\"></a><span class=\"lineno\"> 2512</span>&#160;            <span class=\"comment\">## be called here with the selection ray to determine if the</span></div>\n\
<div class=\"line\"><a name=\"l02513\"></a><span class=\"lineno\"> 2513</span>&#160;            <span class=\"comment\">## the object was selected.</span></div>\n\
<div class=\"line\"><a name=\"l02514\"></a><span class=\"lineno\"> 2514</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02515\"></a><span class=\"lineno\"> 2515</span>&#160;            selected = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02516\"></a><span class=\"lineno\"> 2516</span>&#160;            priorityMask = om.MSelectionMask( om.MSelectionMask.kSelectNurbsSurfaces )</div>\n\
<div class=\"line\"><a name=\"l02517\"></a><span class=\"lineno\"> 2517</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02518\"></a><span class=\"lineno\"> 2518</span>&#160;            item = om.MSelectionList()</div>\n\
<div class=\"line\"><a name=\"l02519\"></a><span class=\"lineno\"> 2519</span>&#160;            item.add( selectInfo.selectPath() )</div>\n\
<div class=\"line\"><a name=\"l02520\"></a><span class=\"lineno\"> 2520</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02521\"></a><span class=\"lineno\"> 2521</span>&#160;            xformedPt = om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l02522\"></a><span class=\"lineno\"> 2522</span>&#160;            <span class=\"keywordflow\">if</span> selectInfo.singleSelection():</div>\n\
<div class=\"line\"><a name=\"l02523\"></a><span class=\"lineno\"> 2523</span>&#160;                center = meshNode.boundingBox().center</div>\n\
<div class=\"line\"><a name=\"l02524\"></a><span class=\"lineno\"> 2524</span>&#160;                xformedPt = center</div>\n\
<div class=\"line\"><a name=\"l02525\"></a><span class=\"lineno\"> 2525</span>&#160;                xformedPt *= selectInfo.selectPath().inclusiveMatrix()</div>\n\
<div class=\"line\"><a name=\"l02526\"></a><span class=\"lineno\"> 2526</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02527\"></a><span class=\"lineno\"> 2527</span>&#160;            selectInfo.addSelection( item, xformedPt, selectionList, worldSpaceSelectPts, priorityMask, <span class=\"keyword\">False</span> )</div>\n\
<div class=\"line\"><a name=\"l02528\"></a><span class=\"lineno\"> 2528</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02529\"></a><span class=\"lineno\"> 2529</span>&#160;        <span class=\"keywordflow\">return</span> selected</div>\n\
<div class=\"line\"><a name=\"l02530\"></a><span class=\"lineno\"> 2530</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02531\"></a><span class=\"lineno\"> 2531</span>&#160;    <span class=\"comment\">#####################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02532\"></a><span class=\"lineno\"> 2532</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02533\"></a><span class=\"lineno\"> 2533</span>&#160;    <span class=\"comment\">## Helper routines</span></div>\n\
<div class=\"line\"><a name=\"l02534\"></a><span class=\"lineno\"> 2534</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02535\"></a><span class=\"lineno\"> 2535</span>&#160;    <span class=\"comment\">#####################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02536\"></a><span class=\"lineno\"> 2536</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02537\"></a><span class=\"lineno\"> 2537</span>&#160;    <span class=\"keyword\">def </span>selectVertices(self, selectInfo, selectionList, worldSpaceSelectPts):</div>\n\
<div class=\"line\"><a name=\"l02538\"></a><span class=\"lineno\"> 2538</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02539\"></a><span class=\"lineno\"> 2539</span>&#160;        <span class=\"comment\">## Description:</span></div>\n\
<div class=\"line\"><a name=\"l02540\"></a><span class=\"lineno\"> 2540</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02541\"></a><span class=\"lineno\"> 2541</span>&#160;        <span class=\"comment\">##     Vertex selection.</span></div>\n\
<div class=\"line\"><a name=\"l02542\"></a><span class=\"lineno\"> 2542</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02543\"></a><span class=\"lineno\"> 2543</span>&#160;        <span class=\"comment\">## Arguments:</span></div>\n\
<div class=\"line\"><a name=\"l02544\"></a><span class=\"lineno\"> 2544</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02545\"></a><span class=\"lineno\"> 2545</span>&#160;        <span class=\"comment\">##     selectInfo           - the selection state information</span></div>\n\
<div class=\"line\"><a name=\"l02546\"></a><span class=\"lineno\"> 2546</span>&#160;        <span class=\"comment\">##     selectionList        - the list of selected items to add to</span></div>\n\
<div class=\"line\"><a name=\"l02547\"></a><span class=\"lineno\"> 2547</span>&#160;        <span class=\"comment\">##     worldSpaceSelectPts  -</span></div>\n\
<div class=\"line\"><a name=\"l02548\"></a><span class=\"lineno\"> 2548</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02549\"></a><span class=\"lineno\"> 2549</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02550\"></a><span class=\"lineno\"> 2550</span>&#160;        selected = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02551\"></a><span class=\"lineno\"> 2551</span>&#160;        view = selectInfo.view()</div>\n\
<div class=\"line\"><a name=\"l02552\"></a><span class=\"lineno\"> 2552</span>&#160;        path = selectInfo.multiPath()</div>\n\
<div class=\"line\"><a name=\"l02553\"></a><span class=\"lineno\"> 2553</span>&#160;        singleSelection = selectInfo.singleSelection()</div>\n\
<div class=\"line\"><a name=\"l02554\"></a><span class=\"lineno\"> 2554</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02555\"></a><span class=\"lineno\"> 2555</span>&#160;        <span class=\"comment\">## Create a component that will store the selected vertices</span></div>\n\
<div class=\"line\"><a name=\"l02556\"></a><span class=\"lineno\"> 2556</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02557\"></a><span class=\"lineno\"> 2557</span>&#160;        fnComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l02558\"></a><span class=\"lineno\"> 2558</span>&#160;        surfaceComponent = fnComponent.create( om.MFn.kMeshVertComponent )</div>\n\
<div class=\"line\"><a name=\"l02559\"></a><span class=\"lineno\"> 2559</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02560\"></a><span class=\"lineno\"> 2560</span>&#160;        <span class=\"comment\">## if the user did a single mouse click and we find &gt; 1 selection</span></div>\n\
<div class=\"line\"><a name=\"l02561\"></a><span class=\"lineno\"> 2561</span>&#160;        <span class=\"comment\">## we will use the alignmentMatrix to find out which is the closest</span></div>\n\
<div class=\"line\"><a name=\"l02562\"></a><span class=\"lineno\"> 2562</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02563\"></a><span class=\"lineno\"> 2563</span>&#160;        alignmentMatrix = om.MMatrix()</div>\n\
<div class=\"line\"><a name=\"l02564\"></a><span class=\"lineno\"> 2564</span>&#160;        <span class=\"keywordflow\">if</span> singleSelection:</div>\n\
<div class=\"line\"><a name=\"l02565\"></a><span class=\"lineno\"> 2565</span>&#160;            alignmentMatrix = selectInfo.getAlignmentMatrix()</div>\n\
<div class=\"line\"><a name=\"l02566\"></a><span class=\"lineno\"> 2566</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02567\"></a><span class=\"lineno\"> 2567</span>&#160;        singlePoint = om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l02568\"></a><span class=\"lineno\"> 2568</span>&#160;        selectionPoint = om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l02569\"></a><span class=\"lineno\"> 2569</span>&#160;        closestPointVertexIndex = -1</div>\n\
<div class=\"line\"><a name=\"l02570\"></a><span class=\"lineno\"> 2570</span>&#160;        previousZ = 0</div>\n\
<div class=\"line\"><a name=\"l02571\"></a><span class=\"lineno\"> 2571</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02572\"></a><span class=\"lineno\"> 2572</span>&#160;        <span class=\"comment\">## Get the geometry information</span></div>\n\
<div class=\"line\"><a name=\"l02573\"></a><span class=\"lineno\"> 2573</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02574\"></a><span class=\"lineno\"> 2574</span>&#160;        meshNode = self.surfaceShape()</div>\n\
<div class=\"line\"><a name=\"l02575\"></a><span class=\"lineno\"> 2575</span>&#160;        geom = meshNode.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l02576\"></a><span class=\"lineno\"> 2576</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02577\"></a><span class=\"lineno\"> 2577</span>&#160;        <span class=\"comment\">## Loop through all vertices of the mesh and</span></div>\n\
<div class=\"line\"><a name=\"l02578\"></a><span class=\"lineno\"> 2578</span>&#160;        <span class=\"comment\">## see if they lie withing the selection area</span></div>\n\
<div class=\"line\"><a name=\"l02579\"></a><span class=\"lineno\"> 2579</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02580\"></a><span class=\"lineno\"> 2580</span>&#160;        <span class=\"keywordflow\">for</span> currentPoint <span class=\"keywordflow\">in</span> geom.vertices:</div>\n\
<div class=\"line\"><a name=\"l02581\"></a><span class=\"lineno\"> 2581</span>&#160;            <span class=\"comment\">## Sets OpenGL&#39;s render mode to select and stores</span></div>\n\
<div class=\"line\"><a name=\"l02582\"></a><span class=\"lineno\"> 2582</span>&#160;            <span class=\"comment\">## selected items in a pick buffer</span></div>\n\
<div class=\"line\"><a name=\"l02583\"></a><span class=\"lineno\"> 2583</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02584\"></a><span class=\"lineno\"> 2584</span>&#160;            view.beginSelect()</div>\n\
<div class=\"line\"><a name=\"l02585\"></a><span class=\"lineno\"> 2585</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02586\"></a><span class=\"lineno\"> 2586</span>&#160;            glBegin( GL_POINTS )</div>\n\
<div class=\"line\"><a name=\"l02587\"></a><span class=\"lineno\"> 2587</span>&#160;            glVertex3f( currentPoint[0], currentPoint[1], currentPoint[2] )</div>\n\
<div class=\"line\"><a name=\"l02588\"></a><span class=\"lineno\"> 2588</span>&#160;            glEnd()</div>\n\
<div class=\"line\"><a name=\"l02589\"></a><span class=\"lineno\"> 2589</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02590\"></a><span class=\"lineno\"> 2590</span>&#160;            <span class=\"keywordflow\">if</span> view.endSelect() &gt; 0: <span class=\"comment\">## Hit count &gt; 0</span></div>\n\
<div class=\"line\"><a name=\"l02591\"></a><span class=\"lineno\"> 2591</span>&#160;                selected = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02592\"></a><span class=\"lineno\"> 2592</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02593\"></a><span class=\"lineno\"> 2593</span>&#160;                <span class=\"keywordflow\">if</span> singleSelection:</div>\n\
<div class=\"line\"><a name=\"l02594\"></a><span class=\"lineno\"> 2594</span>&#160;                    xformedPoint = currentPoint</div>\n\
<div class=\"line\"><a name=\"l02595\"></a><span class=\"lineno\"> 2595</span>&#160;                    xformedPoint.homogenize()</div>\n\
<div class=\"line\"><a name=\"l02596\"></a><span class=\"lineno\"> 2596</span>&#160;                    xformedPoint *= alignmentMatrix</div>\n\
<div class=\"line\"><a name=\"l02597\"></a><span class=\"lineno\"> 2597</span>&#160;                    z = xformedPoint.z</div>\n\
<div class=\"line\"><a name=\"l02598\"></a><span class=\"lineno\"> 2598</span>&#160;                    <span class=\"keywordflow\">if</span> closestPointVertexIndex &lt; 0 <span class=\"keywordflow\">or</span> z &gt; previousZ:</div>\n\
<div class=\"line\"><a name=\"l02599\"></a><span class=\"lineno\"> 2599</span>&#160;                        closestPointVertexIndex = vertexIndex</div>\n\
<div class=\"line\"><a name=\"l02600\"></a><span class=\"lineno\"> 2600</span>&#160;                        singlePoint = currentPoint</div>\n\
<div class=\"line\"><a name=\"l02601\"></a><span class=\"lineno\"> 2601</span>&#160;                        previousZ = z</div>\n\
<div class=\"line\"><a name=\"l02602\"></a><span class=\"lineno\"> 2602</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02603\"></a><span class=\"lineno\"> 2603</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l02604\"></a><span class=\"lineno\"> 2604</span>&#160;                    <span class=\"comment\">## multiple selection, store all elements</span></div>\n\
<div class=\"line\"><a name=\"l02605\"></a><span class=\"lineno\"> 2605</span>&#160;                    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02606\"></a><span class=\"lineno\"> 2606</span>&#160;                    fnComponent.addElement( vertexIndex )</div>\n\
<div class=\"line\"><a name=\"l02607\"></a><span class=\"lineno\"> 2607</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02608\"></a><span class=\"lineno\"> 2608</span>&#160;        <span class=\"comment\">## If single selection, insert the closest point into the array</span></div>\n\
<div class=\"line\"><a name=\"l02609\"></a><span class=\"lineno\"> 2609</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02610\"></a><span class=\"lineno\"> 2610</span>&#160;        <span class=\"keywordflow\">if</span> selected <span class=\"keywordflow\">and</span> singleSelection:</div>\n\
<div class=\"line\"><a name=\"l02611\"></a><span class=\"lineno\"> 2611</span>&#160;            fnComponent.addElement(closestPointVertexIndex)</div>\n\
<div class=\"line\"><a name=\"l02612\"></a><span class=\"lineno\"> 2612</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02613\"></a><span class=\"lineno\"> 2613</span>&#160;            <span class=\"comment\">## need to get world space position for this vertex</span></div>\n\
<div class=\"line\"><a name=\"l02614\"></a><span class=\"lineno\"> 2614</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02615\"></a><span class=\"lineno\"> 2615</span>&#160;            selectionPoint = singlePoint</div>\n\
<div class=\"line\"><a name=\"l02616\"></a><span class=\"lineno\"> 2616</span>&#160;            selectionPoint *= path.inclusiveMatrix()</div>\n\
<div class=\"line\"><a name=\"l02617\"></a><span class=\"lineno\"> 2617</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02618\"></a><span class=\"lineno\"> 2618</span>&#160;        <span class=\"comment\">## Add the selected component to the selection list</span></div>\n\
<div class=\"line\"><a name=\"l02619\"></a><span class=\"lineno\"> 2619</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02620\"></a><span class=\"lineno\"> 2620</span>&#160;        <span class=\"keywordflow\">if</span> selected:</div>\n\
<div class=\"line\"><a name=\"l02621\"></a><span class=\"lineno\"> 2621</span>&#160;            selectionItem = om.MSelectionList()</div>\n\
<div class=\"line\"><a name=\"l02622\"></a><span class=\"lineno\"> 2622</span>&#160;            selectionItem.add( path, surfaceComponent )</div>\n\
<div class=\"line\"><a name=\"l02623\"></a><span class=\"lineno\"> 2623</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02624\"></a><span class=\"lineno\"> 2624</span>&#160;            mask = om.MSelectionMask( om.MSelectionMask.kSelectComponentsMask )</div>\n\
<div class=\"line\"><a name=\"l02625\"></a><span class=\"lineno\"> 2625</span>&#160;            selectInfo.addSelection( selectionItem, selectionPoint, selectionList, worldSpaceSelectPts, mask, <span class=\"keyword\">True</span> )</div>\n\
<div class=\"line\"><a name=\"l02626\"></a><span class=\"lineno\"> 2626</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02627\"></a><span class=\"lineno\"> 2627</span>&#160;        <span class=\"keywordflow\">return</span> selected</div>\n\
<div class=\"line\"><a name=\"l02628\"></a><span class=\"lineno\"> 2628</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02629\"></a><span class=\"lineno\"> 2629</span>&#160;    <span class=\"keyword\">def </span>drawUVWireframe(self, geom, view, info):</div>\n\
<div class=\"line\"><a name=\"l02630\"></a><span class=\"lineno\"> 2630</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02631\"></a><span class=\"lineno\"> 2631</span>&#160;        <span class=\"comment\">## Description: </span></div>\n\
<div class=\"line\"><a name=\"l02632\"></a><span class=\"lineno\"> 2632</span>&#160;        <span class=\"comment\">##  Draws the UV layout in wireframe mode. </span></div>\n\
<div class=\"line\"><a name=\"l02633\"></a><span class=\"lineno\"> 2633</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l02634\"></a><span class=\"lineno\"> 2634</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02635\"></a><span class=\"lineno\"> 2635</span>&#160;        view.beginGL()</div>\n\
<div class=\"line\"><a name=\"l02636\"></a><span class=\"lineno\"> 2636</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02637\"></a><span class=\"lineno\"> 2637</span>&#160;        <span class=\"comment\">## Draw the polygons</span></div>\n\
<div class=\"line\"><a name=\"l02638\"></a><span class=\"lineno\"> 2638</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02639\"></a><span class=\"lineno\"> 2639</span>&#160;        vid = 0</div>\n\
<div class=\"line\"><a name=\"l02640\"></a><span class=\"lineno\"> 2640</span>&#160;        vid_start = vid</div>\n\
<div class=\"line\"><a name=\"l02641\"></a><span class=\"lineno\"> 2641</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(geom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l02642\"></a><span class=\"lineno\"> 2642</span>&#160;            glBegin( GL_LINES )</div>\n\
<div class=\"line\"><a name=\"l02643\"></a><span class=\"lineno\"> 2643</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02644\"></a><span class=\"lineno\"> 2644</span>&#160;            vid_start = vid </div>\n\
<div class=\"line\"><a name=\"l02645\"></a><span class=\"lineno\"> 2645</span>&#160;            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(geom.face_counts[i]-1):</div>\n\
<div class=\"line\"><a name=\"l02646\"></a><span class=\"lineno\"> 2646</span>&#160;                uvId1 = geom.uvcoords.uvId(vid)</div>\n\
<div class=\"line\"><a name=\"l02647\"></a><span class=\"lineno\"> 2647</span>&#160;                uvId2 = geom.uvcoords.uvId(vid+1)</div>\n\
<div class=\"line\"><a name=\"l02648\"></a><span class=\"lineno\"> 2648</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02649\"></a><span class=\"lineno\"> 2649</span>&#160;                uv1 = geom.uvcoords.getUV(uvId1)</div>\n\
<div class=\"line\"><a name=\"l02650\"></a><span class=\"lineno\"> 2650</span>&#160;                uv2 = geom.uvcoords.getUV(uvId2)</div>\n\
<div class=\"line\"><a name=\"l02651\"></a><span class=\"lineno\"> 2651</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02652\"></a><span class=\"lineno\"> 2652</span>&#160;                glVertex3f( uv1[0], uv1[1], 0.0 ) </div>\n\
<div class=\"line\"><a name=\"l02653\"></a><span class=\"lineno\"> 2653</span>&#160;                glVertex3f( uv2[0], uv2[1], 0.0 ) </div>\n\
<div class=\"line\"><a name=\"l02654\"></a><span class=\"lineno\"> 2654</span>&#160;                vid += 1</div>\n\
<div class=\"line\"><a name=\"l02655\"></a><span class=\"lineno\"> 2655</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l02656\"></a><span class=\"lineno\"> 2656</span>&#160;            uvId1 = geom.uvcoords.uvId(vid)</div>\n\
<div class=\"line\"><a name=\"l02657\"></a><span class=\"lineno\"> 2657</span>&#160;            uvId2 = geom.uvcoords.uvId(vid_start)</div>\n\
<div class=\"line\"><a name=\"l02658\"></a><span class=\"lineno\"> 2658</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02659\"></a><span class=\"lineno\"> 2659</span>&#160;            uv1 = geom.uvcoords.getUV(uvId1)</div>\n\
<div class=\"line\"><a name=\"l02660\"></a><span class=\"lineno\"> 2660</span>&#160;            uv2 = geom.uvcoords.getUV(uvId2)</div>\n\
<div class=\"line\"><a name=\"l02661\"></a><span class=\"lineno\"> 2661</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02662\"></a><span class=\"lineno\"> 2662</span>&#160;            glVertex3f( uv1[0], uv1[1], 0.0 ) </div>\n\
<div class=\"line\"><a name=\"l02663\"></a><span class=\"lineno\"> 2663</span>&#160;            glVertex3f( uv2[0], uv2[1], 0.0 ) </div>\n\
<div class=\"line\"><a name=\"l02664\"></a><span class=\"lineno\"> 2664</span>&#160;            vid += 1</div>\n\
<div class=\"line\"><a name=\"l02665\"></a><span class=\"lineno\"> 2665</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02666\"></a><span class=\"lineno\"> 2666</span>&#160;            glEnd()</div>\n\
<div class=\"line\"><a name=\"l02667\"></a><span class=\"lineno\"> 2667</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02668\"></a><span class=\"lineno\"> 2668</span>&#160;        view.endGL()</div>\n\
<div class=\"line\"><a name=\"l02669\"></a><span class=\"lineno\"> 2669</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02670\"></a><span class=\"lineno\"> 2670</span>&#160;    <span class=\"keyword\">def </span>drawUVMapCoord(self, view, uvId, uv, drawNumbers):</div>\n\
<div class=\"line\"><a name=\"l02671\"></a><span class=\"lineno\"> 2671</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02672\"></a><span class=\"lineno\"> 2672</span>&#160;        <span class=\"comment\">## Description: </span></div>\n\
<div class=\"line\"><a name=\"l02673\"></a><span class=\"lineno\"> 2673</span>&#160;        <span class=\"comment\">##  Draw the specified uv value into the port view. If drawNumbers is True </span></div>\n\
<div class=\"line\"><a name=\"l02674\"></a><span class=\"lineno\"> 2674</span>&#160;        <span class=\"comment\">##  It will also draw the UV id for the the UV.  </span></div>\n\
<div class=\"line\"><a name=\"l02675\"></a><span class=\"lineno\"> 2675</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02676\"></a><span class=\"lineno\"> 2676</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02677\"></a><span class=\"lineno\"> 2677</span>&#160;        <span class=\"keywordflow\">if</span> drawNumbers:</div>\n\
<div class=\"line\"><a name=\"l02678\"></a><span class=\"lineno\"> 2678</span>&#160;            view.drawText( str(uvId), om.MPoint( uv[0], uv[1], 0 ), omui.M3dView.kCenter )</div>\n\
<div class=\"line\"><a name=\"l02679\"></a><span class=\"lineno\"> 2679</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02680\"></a><span class=\"lineno\"> 2680</span>&#160;        glVertex3f( uv[0], uv[1], 0.0 )</div>\n\
<div class=\"line\"><a name=\"l02681\"></a><span class=\"lineno\"> 2681</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02682\"></a><span class=\"lineno\"> 2682</span>&#160;    <span class=\"keyword\">def </span>drawUVMapCoordNum(self, geom, view, info, drawNumbers):</div>\n\
<div class=\"line\"><a name=\"l02683\"></a><span class=\"lineno\"> 2683</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02684\"></a><span class=\"lineno\"> 2684</span>&#160;        <span class=\"comment\">## Description: </span></div>\n\
<div class=\"line\"><a name=\"l02685\"></a><span class=\"lineno\"> 2685</span>&#160;        <span class=\"comment\">##  Draw the UV points for all uvs on this surface shape. </span></div>\n\
<div class=\"line\"><a name=\"l02686\"></a><span class=\"lineno\"> 2686</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02687\"></a><span class=\"lineno\"> 2687</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02688\"></a><span class=\"lineno\"> 2688</span>&#160;        view.beginGL() </div>\n\
<div class=\"line\"><a name=\"l02689\"></a><span class=\"lineno\"> 2689</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02690\"></a><span class=\"lineno\"> 2690</span>&#160;        ptSize = glGetFloatv( GL_POINT_SIZE )</div>\n\
<div class=\"line\"><a name=\"l02691\"></a><span class=\"lineno\"> 2691</span>&#160;        glPointSize( 4.0 )</div>\n\
<div class=\"line\"><a name=\"l02692\"></a><span class=\"lineno\"> 2692</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02693\"></a><span class=\"lineno\"> 2693</span>&#160;        <span class=\"keywordflow\">for</span> uvId <span class=\"keywordflow\">in</span> range(geom.uvcoords.uvcount()):</div>\n\
<div class=\"line\"><a name=\"l02694\"></a><span class=\"lineno\"> 2694</span>&#160;            uv = geom.uvcoords.getUV( uvId )</div>\n\
<div class=\"line\"><a name=\"l02695\"></a><span class=\"lineno\"> 2695</span>&#160;            self.drawUVMapCoord( view, uvId, uv, drawNumbers )</div>\n\
<div class=\"line\"><a name=\"l02696\"></a><span class=\"lineno\"> 2696</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02697\"></a><span class=\"lineno\"> 2697</span>&#160;        glPointSize( ptSize )</div>\n\
<div class=\"line\"><a name=\"l02698\"></a><span class=\"lineno\"> 2698</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02699\"></a><span class=\"lineno\"> 2699</span>&#160;        view.endGL() </div>\n\
<div class=\"line\"><a name=\"l02700\"></a><span class=\"lineno\"> 2700</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02701\"></a><span class=\"lineno\"> 2701</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02702\"></a><span class=\"lineno\"> 2702</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02703\"></a><span class=\"lineno\"> 2703</span>&#160;<span class=\"comment\">## apiMeshCreator</span></div>\n\
<div class=\"line\"><a name=\"l02704\"></a><span class=\"lineno\"> 2704</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02705\"></a><span class=\"lineno\"> 2705</span>&#160;<span class=\"comment\">## A DG node that takes a maya mesh as input and outputs apiMeshData.</span></div>\n\
<div class=\"line\"><a name=\"l02706\"></a><span class=\"lineno\"> 2706</span>&#160;<span class=\"comment\">## If there is no input then the node creates a cube or sphere</span></div>\n\
<div class=\"line\"><a name=\"l02707\"></a><span class=\"lineno\"> 2707</span>&#160;<span class=\"comment\">## depending on what the shapeType attribute is set to.</span></div>\n\
<div class=\"line\"><a name=\"l02708\"></a><span class=\"lineno\"> 2708</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02709\"></a><span class=\"lineno\"> 2709</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l02710\"></a><span class=\"lineno\"> 2710</span>&#160;<span class=\"keyword\">class </span>apiMeshCreator(om.MPxNode):</div>\n\
<div class=\"line\"><a name=\"l02711\"></a><span class=\"lineno\"> 2711</span>&#160;    id = om.MTypeId(0x8008A)</div>\n\
<div class=\"line\"><a name=\"l02712\"></a><span class=\"lineno\"> 2712</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02713\"></a><span class=\"lineno\"> 2713</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02714\"></a><span class=\"lineno\"> 2714</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02715\"></a><span class=\"lineno\"> 2715</span>&#160;    <span class=\"comment\">## Attributes</span></div>\n\
<div class=\"line\"><a name=\"l02716\"></a><span class=\"lineno\"> 2716</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02717\"></a><span class=\"lineno\"> 2717</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02718\"></a><span class=\"lineno\"> 2718</span>&#160;    size = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l02719\"></a><span class=\"lineno\"> 2719</span>&#160;    shapeType = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l02720\"></a><span class=\"lineno\"> 2720</span>&#160;    inputMesh = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l02721\"></a><span class=\"lineno\"> 2721</span>&#160;    outputSurface = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l02722\"></a><span class=\"lineno\"> 2722</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02723\"></a><span class=\"lineno\"> 2723</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02724\"></a><span class=\"lineno\"> 2724</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l02725\"></a><span class=\"lineno\"> 2725</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshCreator()</div>\n\
<div class=\"line\"><a name=\"l02726\"></a><span class=\"lineno\"> 2726</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02727\"></a><span class=\"lineno\"> 2727</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l02728\"></a><span class=\"lineno\"> 2728</span>&#160;    <span class=\"keyword\">def </span>initialize():</div>\n\
<div class=\"line\"><a name=\"l02729\"></a><span class=\"lineno\"> 2729</span>&#160;        typedAttr = om.MFnTypedAttribute()</div>\n\
<div class=\"line\"><a name=\"l02730\"></a><span class=\"lineno\"> 2730</span>&#160;        numericAttr = om.MFnNumericAttribute()</div>\n\
<div class=\"line\"><a name=\"l02731\"></a><span class=\"lineno\"> 2731</span>&#160;        enumAttr = om.MFnEnumAttribute()</div>\n\
<div class=\"line\"><a name=\"l02732\"></a><span class=\"lineno\"> 2732</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02733\"></a><span class=\"lineno\"> 2733</span>&#160;        <span class=\"comment\">## ----------------------- INPUTS -------------------------</span></div>\n\
<div class=\"line\"><a name=\"l02734\"></a><span class=\"lineno\"> 2734</span>&#160;        apiMeshCreator.size = numericAttr.create( <span class=\"stringliteral\">&quot;size&quot;</span>, <span class=\"stringliteral\">&quot;sz&quot;</span>, om.MFnNumericData.kDouble, 1 )</div>\n\
<div class=\"line\"><a name=\"l02735\"></a><span class=\"lineno\"> 2735</span>&#160;        numericAttr.array = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02736\"></a><span class=\"lineno\"> 2736</span>&#160;        numericAttr.usesArrayDataBuilder = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02737\"></a><span class=\"lineno\"> 2737</span>&#160;        numericAttr.hidden = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02738\"></a><span class=\"lineno\"> 2738</span>&#160;        numericAttr.keyable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02739\"></a><span class=\"lineno\"> 2739</span>&#160;        om.MPxNode.addAttribute( apiMeshCreator.size )</div>\n\
<div class=\"line\"><a name=\"l02740\"></a><span class=\"lineno\"> 2740</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02741\"></a><span class=\"lineno\"> 2741</span>&#160;        apiMeshCreator.shapeType = enumAttr.create( <span class=\"stringliteral\">&quot;shapeType&quot;</span>, <span class=\"stringliteral\">&quot;st&quot;</span>, 0 )</div>\n\
<div class=\"line\"><a name=\"l02742\"></a><span class=\"lineno\"> 2742</span>&#160;        enumAttr.addField( <span class=\"stringliteral\">&quot;cube&quot;</span>, 0 )</div>\n\
<div class=\"line\"><a name=\"l02743\"></a><span class=\"lineno\"> 2743</span>&#160;        enumAttr.addField( <span class=\"stringliteral\">&quot;sphere&quot;</span>, 1 )</div>\n\
<div class=\"line\"><a name=\"l02744\"></a><span class=\"lineno\"> 2744</span>&#160;        enumAttr.hidden = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02745\"></a><span class=\"lineno\"> 2745</span>&#160;        enumAttr.keyable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02746\"></a><span class=\"lineno\"> 2746</span>&#160;        om.MPxNode.addAttribute( apiMeshCreator.shapeType )</div>\n\
<div class=\"line\"><a name=\"l02747\"></a><span class=\"lineno\"> 2747</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02748\"></a><span class=\"lineno\"> 2748</span>&#160;        apiMeshCreator.inputMesh = typedAttr.create( <span class=\"stringliteral\">&quot;inputMesh&quot;</span>, <span class=\"stringliteral\">&quot;im&quot;</span>, om.MFnData.kMesh, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l02749\"></a><span class=\"lineno\"> 2749</span>&#160;        typedAttr.hidden = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02750\"></a><span class=\"lineno\"> 2750</span>&#160;        om.MPxNode.addAttribute( apiMeshCreator.inputMesh )</div>\n\
<div class=\"line\"><a name=\"l02751\"></a><span class=\"lineno\"> 2751</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02752\"></a><span class=\"lineno\"> 2752</span>&#160;        <span class=\"comment\">## ----------------------- OUTPUTS -------------------------</span></div>\n\
<div class=\"line\"><a name=\"l02753\"></a><span class=\"lineno\"> 2753</span>&#160;        apiMeshCreator.outputSurface = typedAttr.create( <span class=\"stringliteral\">&quot;outputSurface&quot;</span>, <span class=\"stringliteral\">&quot;os&quot;</span>, apiMeshData.id, om.MObject.kNullObj )</div>\n\
<div class=\"line\"><a name=\"l02754\"></a><span class=\"lineno\"> 2754</span>&#160;        typedAttr.writable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02755\"></a><span class=\"lineno\"> 2755</span>&#160;        om.MPxNode.addAttribute( apiMeshCreator.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02756\"></a><span class=\"lineno\"> 2756</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02757\"></a><span class=\"lineno\"> 2757</span>&#160;        <span class=\"comment\">## ---------- Specify what inputs affect the outputs ----------</span></div>\n\
<div class=\"line\"><a name=\"l02758\"></a><span class=\"lineno\"> 2758</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02759\"></a><span class=\"lineno\"> 2759</span>&#160;        om.MPxNode.attributeAffects( apiMeshCreator.inputMesh, apiMeshCreator.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02760\"></a><span class=\"lineno\"> 2760</span>&#160;        om.MPxNode.attributeAffects( apiMeshCreator.size, apiMeshCreator.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02761\"></a><span class=\"lineno\"> 2761</span>&#160;        om.MPxNode.attributeAffects( apiMeshCreator.shapeType, apiMeshCreator.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02762\"></a><span class=\"lineno\"> 2762</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02763\"></a><span class=\"lineno\"> 2763</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l02764\"></a><span class=\"lineno\"> 2764</span>&#160;        om.MPxNode.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l02765\"></a><span class=\"lineno\"> 2765</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02766\"></a><span class=\"lineno\"> 2766</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02767\"></a><span class=\"lineno\"> 2767</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02768\"></a><span class=\"lineno\"> 2768</span>&#160;    <span class=\"comment\">## Overrides</span></div>\n\
<div class=\"line\"><a name=\"l02769\"></a><span class=\"lineno\"> 2769</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02770\"></a><span class=\"lineno\"> 2770</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02771\"></a><span class=\"lineno\"> 2771</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02772\"></a><span class=\"lineno\"> 2772</span>&#160;    <span class=\"keyword\">def </span>compute(self, plug, datablock):</div>\n\
<div class=\"line\"><a name=\"l02773\"></a><span class=\"lineno\"> 2773</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02774\"></a><span class=\"lineno\"> 2774</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02775\"></a><span class=\"lineno\"> 2775</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02776\"></a><span class=\"lineno\"> 2776</span>&#160;        <span class=\"comment\">##    When input attributes are dirty this method will be called to</span></div>\n\
<div class=\"line\"><a name=\"l02777\"></a><span class=\"lineno\"> 2777</span>&#160;        <span class=\"comment\">##    recompute the output attributes.</span></div>\n\
<div class=\"line\"><a name=\"l02778\"></a><span class=\"lineno\"> 2778</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02779\"></a><span class=\"lineno\"> 2779</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02780\"></a><span class=\"lineno\"> 2780</span>&#160;        <span class=\"keywordflow\">if</span> plug == apiMeshCreator.outputSurface:</div>\n\
<div class=\"line\"><a name=\"l02781\"></a><span class=\"lineno\"> 2781</span>&#160;            <span class=\"comment\">## Create some user defined geometry data and access the</span></div>\n\
<div class=\"line\"><a name=\"l02782\"></a><span class=\"lineno\"> 2782</span>&#160;            <span class=\"comment\">## geometry so we can set it</span></div>\n\
<div class=\"line\"><a name=\"l02783\"></a><span class=\"lineno\"> 2783</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02784\"></a><span class=\"lineno\"> 2784</span>&#160;            fnDataCreator = om.MFnPluginData()</div>\n\
<div class=\"line\"><a name=\"l02785\"></a><span class=\"lineno\"> 2785</span>&#160;            fnDataCreator.create( apiMeshData.id )</div>\n\
<div class=\"line\"><a name=\"l02786\"></a><span class=\"lineno\"> 2786</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02787\"></a><span class=\"lineno\"> 2787</span>&#160;            newData = fnDataCreator.data()</div>\n\
<div class=\"line\"><a name=\"l02788\"></a><span class=\"lineno\"> 2788</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(newData, apiMeshData):</div>\n\
<div class=\"line\"><a name=\"l02789\"></a><span class=\"lineno\"> 2789</span>&#160;                <span class=\"keywordflow\">raise</span> RuntimeError(<span class=\"stringliteral\">&quot;compute : invalid proxy cached apiMeshData object&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l02790\"></a><span class=\"lineno\"> 2790</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02791\"></a><span class=\"lineno\"> 2791</span>&#160;            geometry = newData.fGeometry</div>\n\
<div class=\"line\"><a name=\"l02792\"></a><span class=\"lineno\"> 2792</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02793\"></a><span class=\"lineno\"> 2793</span>&#160;            <span class=\"comment\">## If there is an input mesh then copy it&#39;s values</span></div>\n\
<div class=\"line\"><a name=\"l02794\"></a><span class=\"lineno\"> 2794</span>&#160;            <span class=\"comment\">## and construct some apiMeshGeom for it.</span></div>\n\
<div class=\"line\"><a name=\"l02795\"></a><span class=\"lineno\"> 2795</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02796\"></a><span class=\"lineno\"> 2796</span>&#160;            hasHistory = self.computeInputMesh( plug, datablock, geometry )</div>\n\
<div class=\"line\"><a name=\"l02797\"></a><span class=\"lineno\"> 2797</span>&#160;                                                </div>\n\
<div class=\"line\"><a name=\"l02798\"></a><span class=\"lineno\"> 2798</span>&#160;            <span class=\"comment\">## There is no input mesh so check the shapeType attribute</span></div>\n\
<div class=\"line\"><a name=\"l02799\"></a><span class=\"lineno\"> 2799</span>&#160;            <span class=\"comment\">## and create either a cube or a sphere.</span></div>\n\
<div class=\"line\"><a name=\"l02800\"></a><span class=\"lineno\"> 2800</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02801\"></a><span class=\"lineno\"> 2801</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> hasHistory:</div>\n\
<div class=\"line\"><a name=\"l02802\"></a><span class=\"lineno\"> 2802</span>&#160;                sizeHandle = datablock.inputValue( apiMeshCreator.size )</div>\n\
<div class=\"line\"><a name=\"l02803\"></a><span class=\"lineno\"> 2803</span>&#160;                shape_size = sizeHandle.asDouble()</div>\n\
<div class=\"line\"><a name=\"l02804\"></a><span class=\"lineno\"> 2804</span>&#160;                typeHandle = datablock.inputValue( apiMeshCreator.shapeType )</div>\n\
<div class=\"line\"><a name=\"l02805\"></a><span class=\"lineno\"> 2805</span>&#160;                shape_type = typeHandle.asShort()</div>\n\
<div class=\"line\"><a name=\"l02806\"></a><span class=\"lineno\"> 2806</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02807\"></a><span class=\"lineno\"> 2807</span>&#160;                <span class=\"keywordflow\">if</span> shape_type == 0: <span class=\"comment\">## build a cube</span></div>\n\
<div class=\"line\"><a name=\"l02808\"></a><span class=\"lineno\"> 2808</span>&#160;                    self.buildCube( shape_size, geometry )</div>\n\
<div class=\"line\"><a name=\"l02809\"></a><span class=\"lineno\"> 2809</span>&#160;                <span class=\"keywordflow\">elif</span> shape_type == 1: <span class=\"comment\">## build a sphere</span></div>\n\
<div class=\"line\"><a name=\"l02810\"></a><span class=\"lineno\"> 2810</span>&#160;                    self.buildSphere( shape_size, 32, geometry )</div>\n\
<div class=\"line\"><a name=\"l02811\"></a><span class=\"lineno\"> 2811</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02812\"></a><span class=\"lineno\"> 2812</span>&#160;            geometry.faceCount = len(geometry.face_counts)</div>\n\
<div class=\"line\"><a name=\"l02813\"></a><span class=\"lineno\"> 2813</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02814\"></a><span class=\"lineno\"> 2814</span>&#160;            <span class=\"comment\">## Assign the new data to the outputSurface handle</span></div>\n\
<div class=\"line\"><a name=\"l02815\"></a><span class=\"lineno\"> 2815</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02816\"></a><span class=\"lineno\"> 2816</span>&#160;            outHandle = datablock.outputValue( apiMeshCreator.outputSurface )</div>\n\
<div class=\"line\"><a name=\"l02817\"></a><span class=\"lineno\"> 2817</span>&#160;            outHandle.setMPxData( newData )</div>\n\
<div class=\"line\"><a name=\"l02818\"></a><span class=\"lineno\"> 2818</span>&#160;            datablock.setClean( plug )</div>\n\
<div class=\"line\"><a name=\"l02819\"></a><span class=\"lineno\"> 2819</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02820\"></a><span class=\"lineno\"> 2820</span>&#160;            <span class=\"comment\"># The plug was computed successfully</span></div>\n\
<div class=\"line\"><a name=\"l02821\"></a><span class=\"lineno\"> 2821</span>&#160;            <span class=\"keywordflow\">return</span> self</div>\n\
<div class=\"line\"><a name=\"l02822\"></a><span class=\"lineno\"> 2822</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02823\"></a><span class=\"lineno\"> 2823</span>&#160;        <span class=\"comment\"># Let the Maya parent class compute the plug</span></div>\n\
<div class=\"line\"><a name=\"l02824\"></a><span class=\"lineno\"> 2824</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l02825\"></a><span class=\"lineno\"> 2825</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02826\"></a><span class=\"lineno\"> 2826</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02827\"></a><span class=\"lineno\"> 2827</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02828\"></a><span class=\"lineno\"> 2828</span>&#160;    <span class=\"comment\">## Helper methods</span></div>\n\
<div class=\"line\"><a name=\"l02829\"></a><span class=\"lineno\"> 2829</span>&#160;    <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02830\"></a><span class=\"lineno\"> 2830</span>&#160;    <span class=\"comment\">##########################################################</span></div>\n\
<div class=\"line\"><a name=\"l02831\"></a><span class=\"lineno\"> 2831</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02832\"></a><span class=\"lineno\"> 2832</span>&#160;    <span class=\"keyword\">def </span>computeInputMesh(self, plug, datablock, geometry):</div>\n\
<div class=\"line\"><a name=\"l02833\"></a><span class=\"lineno\"> 2833</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02834\"></a><span class=\"lineno\"> 2834</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02835\"></a><span class=\"lineno\"> 2835</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02836\"></a><span class=\"lineno\"> 2836</span>&#160;        <span class=\"comment\">##     This function takes an input surface of type kMeshData and converts</span></div>\n\
<div class=\"line\"><a name=\"l02837\"></a><span class=\"lineno\"> 2837</span>&#160;        <span class=\"comment\">##     the geometry into this nodes attributes.</span></div>\n\
<div class=\"line\"><a name=\"l02838\"></a><span class=\"lineno\"> 2838</span>&#160;        <span class=\"comment\">##     Returns kFailure if nothing is connected.</span></div>\n\
<div class=\"line\"><a name=\"l02839\"></a><span class=\"lineno\"> 2839</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02840\"></a><span class=\"lineno\"> 2840</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02841\"></a><span class=\"lineno\"> 2841</span>&#160;        <span class=\"comment\">## Get the input subdiv</span></div>\n\
<div class=\"line\"><a name=\"l02842\"></a><span class=\"lineno\"> 2842</span>&#160;        <span class=\"comment\">##        </span></div>\n\
<div class=\"line\"><a name=\"l02843\"></a><span class=\"lineno\"> 2843</span>&#160;        inputData = datablock.inputValue( apiMeshCreator.inputMesh )</div>\n\
<div class=\"line\"><a name=\"l02844\"></a><span class=\"lineno\"> 2844</span>&#160;        surf = inputData.asMesh()</div>\n\
<div class=\"line\"><a name=\"l02845\"></a><span class=\"lineno\"> 2845</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02846\"></a><span class=\"lineno\"> 2846</span>&#160;        <span class=\"comment\">## Check if anything is connected</span></div>\n\
<div class=\"line\"><a name=\"l02847\"></a><span class=\"lineno\"> 2847</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02848\"></a><span class=\"lineno\"> 2848</span>&#160;        thisObj = self.thisMObject()</div>\n\
<div class=\"line\"><a name=\"l02849\"></a><span class=\"lineno\"> 2849</span>&#160;        surfPlug = om.MPlug( thisObj, apiMeshCreator.inputMesh )</div>\n\
<div class=\"line\"><a name=\"l02850\"></a><span class=\"lineno\"> 2850</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> surfPlug.isConnected:</div>\n\
<div class=\"line\"><a name=\"l02851\"></a><span class=\"lineno\"> 2851</span>&#160;            datablock.setClean( plug )</div>\n\
<div class=\"line\"><a name=\"l02852\"></a><span class=\"lineno\"> 2852</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l02853\"></a><span class=\"lineno\"> 2853</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02854\"></a><span class=\"lineno\"> 2854</span>&#160;        <span class=\"comment\">## Extract the mesh data</span></div>\n\
<div class=\"line\"><a name=\"l02855\"></a><span class=\"lineno\"> 2855</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02856\"></a><span class=\"lineno\"> 2856</span>&#160;        surfFn = om.MFnMesh(surf)</div>\n\
<div class=\"line\"><a name=\"l02857\"></a><span class=\"lineno\"> 2857</span>&#160;        geometry.vertices = surfFn.getPoints(om.MSpace.kObject)</div>\n\
<div class=\"line\"><a name=\"l02858\"></a><span class=\"lineno\"> 2858</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02859\"></a><span class=\"lineno\"> 2859</span>&#160;        <span class=\"comment\">## Check to see if we have UVs to copy. </span></div>\n\
<div class=\"line\"><a name=\"l02860\"></a><span class=\"lineno\"> 2860</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02861\"></a><span class=\"lineno\"> 2861</span>&#160;        hasUVs = surfFn.numUVs() &gt; 0</div>\n\
<div class=\"line\"><a name=\"l02862\"></a><span class=\"lineno\"> 2862</span>&#160;        uvs = surfFn.getUVs()</div>\n\
<div class=\"line\"><a name=\"l02863\"></a><span class=\"lineno\"> 2863</span>&#160;        geometry.uvcoords.ucoord = uvs[0]</div>\n\
<div class=\"line\"><a name=\"l02864\"></a><span class=\"lineno\"> 2864</span>&#160;        geometry.uvcoords.vcoord = uvs[1]</div>\n\
<div class=\"line\"><a name=\"l02865\"></a><span class=\"lineno\"> 2865</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02866\"></a><span class=\"lineno\"> 2866</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(surfFn.numPolygons()):</div>\n\
<div class=\"line\"><a name=\"l02867\"></a><span class=\"lineno\"> 2867</span>&#160;            polyVerts = surfFn.getPolygonVertices(i)</div>\n\
<div class=\"line\"><a name=\"l02868\"></a><span class=\"lineno\"> 2868</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02869\"></a><span class=\"lineno\"> 2869</span>&#160;            pvc = len(polyVerts)</div>\n\
<div class=\"line\"><a name=\"l02870\"></a><span class=\"lineno\"> 2870</span>&#160;            geometry.face_counts.append( pvc )</div>\n\
<div class=\"line\"><a name=\"l02871\"></a><span class=\"lineno\"> 2871</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02872\"></a><span class=\"lineno\"> 2872</span>&#160;            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(pvc):</div>\n\
<div class=\"line\"><a name=\"l02873\"></a><span class=\"lineno\"> 2873</span>&#160;                <span class=\"keywordflow\">if</span> hasUVs:</div>\n\
<div class=\"line\"><a name=\"l02874\"></a><span class=\"lineno\"> 2874</span>&#160;                    uvId = surfFn.getPolygonUVid(i, v)</div>\n\
<div class=\"line\"><a name=\"l02875\"></a><span class=\"lineno\"> 2875</span>&#160;                    geometry.uvcoords.faceVertexIndex.append( uvId )</div>\n\
<div class=\"line\"><a name=\"l02876\"></a><span class=\"lineno\"> 2876</span>&#160;                geometry.face_connects.append( polyVerts[v] )</div>\n\
<div class=\"line\"><a name=\"l02877\"></a><span class=\"lineno\"> 2877</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02878\"></a><span class=\"lineno\"> 2878</span>&#160;        <span class=\"keywordflow\">for</span> n <span class=\"keywordflow\">in</span> range(len(geometry.vertices)):</div>\n\
<div class=\"line\"><a name=\"l02879\"></a><span class=\"lineno\"> 2879</span>&#160;            normal = surfFn.getVertexNormal(n)</div>\n\
<div class=\"line\"><a name=\"l02880\"></a><span class=\"lineno\"> 2880</span>&#160;            geometry.normals.append( normal )</div>\n\
<div class=\"line\"><a name=\"l02881\"></a><span class=\"lineno\"> 2881</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02882\"></a><span class=\"lineno\"> 2882</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l02883\"></a><span class=\"lineno\"> 2883</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02884\"></a><span class=\"lineno\"> 2884</span>&#160;    <span class=\"keyword\">def </span>buildCube(self, cube_size, geometry):</div>\n\
<div class=\"line\"><a name=\"l02885\"></a><span class=\"lineno\"> 2885</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02886\"></a><span class=\"lineno\"> 2886</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02887\"></a><span class=\"lineno\"> 2887</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02888\"></a><span class=\"lineno\"> 2888</span>&#160;        <span class=\"comment\">##    Constructs a cube</span></div>\n\
<div class=\"line\"><a name=\"l02889\"></a><span class=\"lineno\"> 2889</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02890\"></a><span class=\"lineno\"> 2890</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02891\"></a><span class=\"lineno\"> 2891</span>&#160;        geometry.vertices.clear()</div>\n\
<div class=\"line\"><a name=\"l02892\"></a><span class=\"lineno\"> 2892</span>&#160;        geometry.normals.clear()</div>\n\
<div class=\"line\"><a name=\"l02893\"></a><span class=\"lineno\"> 2893</span>&#160;        geometry.face_counts.clear()</div>\n\
<div class=\"line\"><a name=\"l02894\"></a><span class=\"lineno\"> 2894</span>&#160;        geometry.face_connects.clear()</div>\n\
<div class=\"line\"><a name=\"l02895\"></a><span class=\"lineno\"> 2895</span>&#160;        geometry.uvcoords.reset()</div>\n\
<div class=\"line\"><a name=\"l02896\"></a><span class=\"lineno\"> 2896</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02897\"></a><span class=\"lineno\"> 2897</span>&#160;        geometry.vertices.append( om.MPoint( -cube_size, -cube_size, -cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02898\"></a><span class=\"lineno\"> 2898</span>&#160;        geometry.vertices.append( om.MPoint(  cube_size, -cube_size, -cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02899\"></a><span class=\"lineno\"> 2899</span>&#160;        geometry.vertices.append( om.MPoint(  cube_size, -cube_size, cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02900\"></a><span class=\"lineno\"> 2900</span>&#160;        geometry.vertices.append( om.MPoint( -cube_size, -cube_size, cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02901\"></a><span class=\"lineno\"> 2901</span>&#160;        geometry.vertices.append( om.MPoint( -cube_size, cube_size, -cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02902\"></a><span class=\"lineno\"> 2902</span>&#160;        geometry.vertices.append( om.MPoint( -cube_size, cube_size, cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02903\"></a><span class=\"lineno\"> 2903</span>&#160;        geometry.vertices.append( om.MPoint(  cube_size, cube_size, cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02904\"></a><span class=\"lineno\"> 2904</span>&#160;        geometry.vertices.append( om.MPoint(  cube_size, cube_size, -cube_size ) )</div>\n\
<div class=\"line\"><a name=\"l02905\"></a><span class=\"lineno\"> 2905</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02906\"></a><span class=\"lineno\"> 2906</span>&#160;        normal_value = 0.5775</div>\n\
<div class=\"line\"><a name=\"l02907\"></a><span class=\"lineno\"> 2907</span>&#160;        geometry.normals.append( om.MVector( -normal_value, -normal_value, -normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02908\"></a><span class=\"lineno\"> 2908</span>&#160;        geometry.normals.append( om.MVector(  normal_value, -normal_value, -normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02909\"></a><span class=\"lineno\"> 2909</span>&#160;        geometry.normals.append( om.MVector(  normal_value, -normal_value, normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02910\"></a><span class=\"lineno\"> 2910</span>&#160;        geometry.normals.append( om.MVector( -normal_value, -normal_value, normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02911\"></a><span class=\"lineno\"> 2911</span>&#160;        geometry.normals.append( om.MVector( -normal_value, normal_value, -normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02912\"></a><span class=\"lineno\"> 2912</span>&#160;        geometry.normals.append( om.MVector( -normal_value, normal_value, normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02913\"></a><span class=\"lineno\"> 2913</span>&#160;        geometry.normals.append( om.MVector(  normal_value, normal_value, normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02914\"></a><span class=\"lineno\"> 2914</span>&#160;        geometry.normals.append( om.MVector(  normal_value, normal_value, -normal_value ) )</div>\n\
<div class=\"line\"><a name=\"l02915\"></a><span class=\"lineno\"> 2915</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02916\"></a><span class=\"lineno\"> 2916</span>&#160;        <span class=\"comment\">## Define the UVs for the cube. </span></div>\n\
<div class=\"line\"><a name=\"l02917\"></a><span class=\"lineno\"> 2917</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02918\"></a><span class=\"lineno\"> 2918</span>&#160;        uv_count = 14</div>\n\
<div class=\"line\"><a name=\"l02919\"></a><span class=\"lineno\"> 2919</span>&#160;        uv_pts = [  [ 0.375, 0.0  ],</div>\n\
<div class=\"line\"><a name=\"l02920\"></a><span class=\"lineno\"> 2920</span>&#160;                    [ 0.625, 0.0  ],</div>\n\
<div class=\"line\"><a name=\"l02921\"></a><span class=\"lineno\"> 2921</span>&#160;                    [ 0.625, 0.25 ],</div>\n\
<div class=\"line\"><a name=\"l02922\"></a><span class=\"lineno\"> 2922</span>&#160;                    [ 0.375, 0.25 ],</div>\n\
<div class=\"line\"><a name=\"l02923\"></a><span class=\"lineno\"> 2923</span>&#160;                    [ 0.625, 0.5  ],</div>\n\
<div class=\"line\"><a name=\"l02924\"></a><span class=\"lineno\"> 2924</span>&#160;                    [ 0.375, 0.5  ],</div>\n\
<div class=\"line\"><a name=\"l02925\"></a><span class=\"lineno\"> 2925</span>&#160;                    [ 0.625, 0.75 ],</div>\n\
<div class=\"line\"><a name=\"l02926\"></a><span class=\"lineno\"> 2926</span>&#160;                    [ 0.375, 0.75 ],</div>\n\
<div class=\"line\"><a name=\"l02927\"></a><span class=\"lineno\"> 2927</span>&#160;                    [ 0.625, 1.0  ],</div>\n\
<div class=\"line\"><a name=\"l02928\"></a><span class=\"lineno\"> 2928</span>&#160;                    [ 0.375, 1.0  ],</div>\n\
<div class=\"line\"><a name=\"l02929\"></a><span class=\"lineno\"> 2929</span>&#160;                    [ 0.875, 0.0  ],</div>\n\
<div class=\"line\"><a name=\"l02930\"></a><span class=\"lineno\"> 2930</span>&#160;                    [ 0.875, 0.25 ],</div>\n\
<div class=\"line\"><a name=\"l02931\"></a><span class=\"lineno\"> 2931</span>&#160;                    [ 0.125, 0.0  ],</div>\n\
<div class=\"line\"><a name=\"l02932\"></a><span class=\"lineno\"> 2932</span>&#160;                    [ 0.125, 0.25 ] ]</div>\n\
<div class=\"line\"><a name=\"l02933\"></a><span class=\"lineno\"> 2933</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02934\"></a><span class=\"lineno\"> 2934</span>&#160;        <span class=\"comment\">## UV Face Vertex Id. </span></div>\n\
<div class=\"line\"><a name=\"l02935\"></a><span class=\"lineno\"> 2935</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02936\"></a><span class=\"lineno\"> 2936</span>&#160;        num_face_connects = 24</div>\n\
<div class=\"line\"><a name=\"l02937\"></a><span class=\"lineno\"> 2937</span>&#160;        uv_fvid = [ 0, 1, 2, 3, </div>\n\
<div class=\"line\"><a name=\"l02938\"></a><span class=\"lineno\"> 2938</span>&#160;                    3, 2, 4, 5, </div>\n\
<div class=\"line\"><a name=\"l02939\"></a><span class=\"lineno\"> 2939</span>&#160;                    5, 4, 6, 7, </div>\n\
<div class=\"line\"><a name=\"l02940\"></a><span class=\"lineno\"> 2940</span>&#160;                    7, 6, 8, 9, </div>\n\
<div class=\"line\"><a name=\"l02941\"></a><span class=\"lineno\"> 2941</span>&#160;                    1, 10, 11, 2, </div>\n\
<div class=\"line\"><a name=\"l02942\"></a><span class=\"lineno\"> 2942</span>&#160;                    12, 0, 3, 13 ]</div>\n\
<div class=\"line\"><a name=\"l02943\"></a><span class=\"lineno\"> 2943</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02944\"></a><span class=\"lineno\"> 2944</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(uv_count):</div>\n\
<div class=\"line\"><a name=\"l02945\"></a><span class=\"lineno\"> 2945</span>&#160;            geometry.uvcoords.append_uv( uv_pts[i][0], uv_pts[i][1] )</div>\n\
<div class=\"line\"><a name=\"l02946\"></a><span class=\"lineno\"> 2946</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l02947\"></a><span class=\"lineno\"> 2947</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(num_face_connects):</div>\n\
<div class=\"line\"><a name=\"l02948\"></a><span class=\"lineno\"> 2948</span>&#160;            geometry.uvcoords.faceVertexIndex.append( uv_fvid[i] ) </div>\n\
<div class=\"line\"><a name=\"l02949\"></a><span class=\"lineno\"> 2949</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02950\"></a><span class=\"lineno\"> 2950</span>&#160;        <span class=\"comment\">## Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\"><a name=\"l02951\"></a><span class=\"lineno\"> 2951</span>&#160;        <span class=\"comment\">## for each of the 6 cube faces (4 verticies per face)</span></div>\n\
<div class=\"line\"><a name=\"l02952\"></a><span class=\"lineno\"> 2952</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02953\"></a><span class=\"lineno\"> 2953</span>&#160;        num_faces = 6</div>\n\
<div class=\"line\"><a name=\"l02954\"></a><span class=\"lineno\"> 2954</span>&#160;        face_counts = [ 4, 4, 4, 4, 4, 4 ]</div>\n\
<div class=\"line\"><a name=\"l02955\"></a><span class=\"lineno\"> 2955</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02956\"></a><span class=\"lineno\"> 2956</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(num_faces):</div>\n\
<div class=\"line\"><a name=\"l02957\"></a><span class=\"lineno\"> 2957</span>&#160;            geometry.face_counts.append( face_counts[i] )</div>\n\
<div class=\"line\"><a name=\"l02958\"></a><span class=\"lineno\"> 2958</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02959\"></a><span class=\"lineno\"> 2959</span>&#160;        <span class=\"comment\">## Set up and array to assign vertices from vertices to each face </span></div>\n\
<div class=\"line\"><a name=\"l02960\"></a><span class=\"lineno\"> 2960</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02961\"></a><span class=\"lineno\"> 2961</span>&#160;        face_connects =   [ 0, 1, 2, 3,</div>\n\
<div class=\"line\"><a name=\"l02962\"></a><span class=\"lineno\"> 2962</span>&#160;                            4, 5, 6, 7,</div>\n\
<div class=\"line\"><a name=\"l02963\"></a><span class=\"lineno\"> 2963</span>&#160;                            3, 2, 6, 5,</div>\n\
<div class=\"line\"><a name=\"l02964\"></a><span class=\"lineno\"> 2964</span>&#160;                            0, 3, 5, 4,</div>\n\
<div class=\"line\"><a name=\"l02965\"></a><span class=\"lineno\"> 2965</span>&#160;                            0, 4, 7, 1,</div>\n\
<div class=\"line\"><a name=\"l02966\"></a><span class=\"lineno\"> 2966</span>&#160;                            1, 7, 6, 2 ]</div>\n\
<div class=\"line\"><a name=\"l02967\"></a><span class=\"lineno\"> 2967</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02968\"></a><span class=\"lineno\"> 2968</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(num_face_connects):</div>\n\
<div class=\"line\"><a name=\"l02969\"></a><span class=\"lineno\"> 2969</span>&#160;            geometry.face_connects.append( face_connects[i] )</div>\n\
<div class=\"line\"><a name=\"l02970\"></a><span class=\"lineno\"> 2970</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02971\"></a><span class=\"lineno\"> 2971</span>&#160;    <span class=\"keyword\">def </span>buildSphere(self, radius, divisions, geometry):</div>\n\
<div class=\"line\"><a name=\"l02972\"></a><span class=\"lineno\"> 2972</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02973\"></a><span class=\"lineno\"> 2973</span>&#160;        <span class=\"comment\">## Description</span></div>\n\
<div class=\"line\"><a name=\"l02974\"></a><span class=\"lineno\"> 2974</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02975\"></a><span class=\"lineno\"> 2975</span>&#160;        <span class=\"comment\">##    Create circles of vertices starting with </span></div>\n\
<div class=\"line\"><a name=\"l02976\"></a><span class=\"lineno\"> 2976</span>&#160;        <span class=\"comment\">##    the top pole ending with the botton pole</span></div>\n\
<div class=\"line\"><a name=\"l02977\"></a><span class=\"lineno\"> 2977</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02978\"></a><span class=\"lineno\"> 2978</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02979\"></a><span class=\"lineno\"> 2979</span>&#160;        geometry.vertices.clear()</div>\n\
<div class=\"line\"><a name=\"l02980\"></a><span class=\"lineno\"> 2980</span>&#160;        geometry.normals.clear()</div>\n\
<div class=\"line\"><a name=\"l02981\"></a><span class=\"lineno\"> 2981</span>&#160;        geometry.face_counts.clear()</div>\n\
<div class=\"line\"><a name=\"l02982\"></a><span class=\"lineno\"> 2982</span>&#160;        geometry.face_connects.clear()</div>\n\
<div class=\"line\"><a name=\"l02983\"></a><span class=\"lineno\"> 2983</span>&#160;        geometry.uvcoords.reset()</div>\n\
<div class=\"line\"><a name=\"l02984\"></a><span class=\"lineno\"> 2984</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02985\"></a><span class=\"lineno\"> 2985</span>&#160;        u = -math.pi / 2.</div>\n\
<div class=\"line\"><a name=\"l02986\"></a><span class=\"lineno\"> 2986</span>&#160;        v = -math.pi</div>\n\
<div class=\"line\"><a name=\"l02987\"></a><span class=\"lineno\"> 2987</span>&#160;        u_delta = math.pi / divisions</div>\n\
<div class=\"line\"><a name=\"l02988\"></a><span class=\"lineno\"> 2988</span>&#160;        v_delta = 2 * math.pi / divisions</div>\n\
<div class=\"line\"><a name=\"l02989\"></a><span class=\"lineno\"> 2989</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02990\"></a><span class=\"lineno\"> 2990</span>&#160;        topPole = om.MPoint( 0.0, radius, 0.0 )</div>\n\
<div class=\"line\"><a name=\"l02991\"></a><span class=\"lineno\"> 2991</span>&#160;        botPole = om.MPoint( 0.0, -radius, 0.0 )</div>\n\
<div class=\"line\"><a name=\"l02992\"></a><span class=\"lineno\"> 2992</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02993\"></a><span class=\"lineno\"> 2993</span>&#160;        <span class=\"comment\">## Build the vertex and normal table</span></div>\n\
<div class=\"line\"><a name=\"l02994\"></a><span class=\"lineno\"> 2994</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l02995\"></a><span class=\"lineno\"> 2995</span>&#160;        geometry.vertices.append( botPole )</div>\n\
<div class=\"line\"><a name=\"l02996\"></a><span class=\"lineno\"> 2996</span>&#160;        geometry.normals.append( botPole - om.MPoint.kOrigin )</div>\n\
<div class=\"line\"><a name=\"l02997\"></a><span class=\"lineno\"> 2997</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l02998\"></a><span class=\"lineno\"> 2998</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(divisions-1):</div>\n\
<div class=\"line\"><a name=\"l02999\"></a><span class=\"lineno\"> 2999</span>&#160;            u += u_delta</div>\n\
<div class=\"line\"><a name=\"l03000\"></a><span class=\"lineno\"> 3000</span>&#160;            v = -math.pi</div>\n\
<div class=\"line\"><a name=\"l03001\"></a><span class=\"lineno\"> 3001</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03002\"></a><span class=\"lineno\"> 3002</span>&#160;            <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(divisions):</div>\n\
<div class=\"line\"><a name=\"l03003\"></a><span class=\"lineno\"> 3003</span>&#160;                x = radius * math.cos(u) * math.cos(v)</div>\n\
<div class=\"line\"><a name=\"l03004\"></a><span class=\"lineno\"> 3004</span>&#160;                y = radius * math.sin(u)</div>\n\
<div class=\"line\"><a name=\"l03005\"></a><span class=\"lineno\"> 3005</span>&#160;                z = radius * math.cos(u) * math.sin(v)</div>\n\
<div class=\"line\"><a name=\"l03006\"></a><span class=\"lineno\"> 3006</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03007\"></a><span class=\"lineno\"> 3007</span>&#160;                pnt = om.MPoint( x, y, z )</div>\n\
<div class=\"line\"><a name=\"l03008\"></a><span class=\"lineno\"> 3008</span>&#160;                geometry.vertices.append( pnt )</div>\n\
<div class=\"line\"><a name=\"l03009\"></a><span class=\"lineno\"> 3009</span>&#160;                geometry.normals.append( pnt - om.MPoint.kOrigin )</div>\n\
<div class=\"line\"><a name=\"l03010\"></a><span class=\"lineno\"> 3010</span>&#160;                v += v_delta</div>\n\
<div class=\"line\"><a name=\"l03011\"></a><span class=\"lineno\"> 3011</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03012\"></a><span class=\"lineno\"> 3012</span>&#160;        geometry.vertices.append( topPole )</div>\n\
<div class=\"line\"><a name=\"l03013\"></a><span class=\"lineno\"> 3013</span>&#160;        geometry.normals.append( topPole - om.MPoint.kOrigin )</div>\n\
<div class=\"line\"><a name=\"l03014\"></a><span class=\"lineno\"> 3014</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03015\"></a><span class=\"lineno\"> 3015</span>&#160;        <span class=\"comment\">## Create the connectivity lists</span></div>\n\
<div class=\"line\"><a name=\"l03016\"></a><span class=\"lineno\"> 3016</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03017\"></a><span class=\"lineno\"> 3017</span>&#160;        vid = 1</div>\n\
<div class=\"line\"><a name=\"l03018\"></a><span class=\"lineno\"> 3018</span>&#160;        numV = 0</div>\n\
<div class=\"line\"><a name=\"l03019\"></a><span class=\"lineno\"> 3019</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(divisions):</div>\n\
<div class=\"line\"><a name=\"l03020\"></a><span class=\"lineno\"> 3020</span>&#160;            <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(divisions):</div>\n\
<div class=\"line\"><a name=\"l03021\"></a><span class=\"lineno\"> 3021</span>&#160;                <span class=\"keywordflow\">if</span> i == 0:</div>\n\
<div class=\"line\"><a name=\"l03022\"></a><span class=\"lineno\"> 3022</span>&#160;                    geometry.face_counts.append( 3 )</div>\n\
<div class=\"line\"><a name=\"l03023\"></a><span class=\"lineno\"> 3023</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03024\"></a><span class=\"lineno\"> 3024</span>&#160;                    geometry.face_connects.append( 0 )</div>\n\
<div class=\"line\"><a name=\"l03025\"></a><span class=\"lineno\"> 3025</span>&#160;                    geometry.face_connects.append( j + vid )</div>\n\
<div class=\"line\"><a name=\"l03026\"></a><span class=\"lineno\"> 3026</span>&#160;                    <span class=\"keywordflow\">if</span> j == divisions-1:</div>\n\
<div class=\"line\"><a name=\"l03027\"></a><span class=\"lineno\"> 3027</span>&#160;                        geometry.face_connects.append( vid )</div>\n\
<div class=\"line\"><a name=\"l03028\"></a><span class=\"lineno\"> 3028</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03029\"></a><span class=\"lineno\"> 3029</span>&#160;                        geometry.face_connects.append( j + vid + 1 )</div>\n\
<div class=\"line\"><a name=\"l03030\"></a><span class=\"lineno\"> 3030</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03031\"></a><span class=\"lineno\"> 3031</span>&#160;                <span class=\"keywordflow\">elif</span> i == divisions-1:</div>\n\
<div class=\"line\"><a name=\"l03032\"></a><span class=\"lineno\"> 3032</span>&#160;                    geometry.face_counts.append( 3 )</div>\n\
<div class=\"line\"><a name=\"l03033\"></a><span class=\"lineno\"> 3033</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03034\"></a><span class=\"lineno\"> 3034</span>&#160;                    geometry.face_connects.append( j + vid + 1 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03035\"></a><span class=\"lineno\"> 3035</span>&#160;                    geometry.face_connects.append( vid + 1 )</div>\n\
<div class=\"line\"><a name=\"l03036\"></a><span class=\"lineno\"> 3036</span>&#160;                    <span class=\"keywordflow\">if</span> j == divisions-1:</div>\n\
<div class=\"line\"><a name=\"l03037\"></a><span class=\"lineno\"> 3037</span>&#160;                        geometry.face_connects.append( vid + 1 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03038\"></a><span class=\"lineno\"> 3038</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03039\"></a><span class=\"lineno\"> 3039</span>&#160;                        geometry.face_connects.append( j + vid + 2 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03040\"></a><span class=\"lineno\"> 3040</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03041\"></a><span class=\"lineno\"> 3041</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03042\"></a><span class=\"lineno\"> 3042</span>&#160;                    geometry.face_counts.append( 4 )</div>\n\
<div class=\"line\"><a name=\"l03043\"></a><span class=\"lineno\"> 3043</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03044\"></a><span class=\"lineno\"> 3044</span>&#160;                    geometry.face_connects.append( j + vid + 1 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03045\"></a><span class=\"lineno\"> 3045</span>&#160;                    geometry.face_connects.append( j + vid + 1 )</div>\n\
<div class=\"line\"><a name=\"l03046\"></a><span class=\"lineno\"> 3046</span>&#160;                    <span class=\"keywordflow\">if</span> j == divisions-1:</div>\n\
<div class=\"line\"><a name=\"l03047\"></a><span class=\"lineno\"> 3047</span>&#160;                        geometry.face_connects.append( vid + 1 )</div>\n\
<div class=\"line\"><a name=\"l03048\"></a><span class=\"lineno\"> 3048</span>&#160;                        geometry.face_connects.append( vid + 1 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03049\"></a><span class=\"lineno\"> 3049</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03050\"></a><span class=\"lineno\"> 3050</span>&#160;                        geometry.face_connects.append( j + vid + 2 )</div>\n\
<div class=\"line\"><a name=\"l03051\"></a><span class=\"lineno\"> 3051</span>&#160;                        geometry.face_connects.append( j + vid + 2 - divisions )</div>\n\
<div class=\"line\"><a name=\"l03052\"></a><span class=\"lineno\"> 3052</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03053\"></a><span class=\"lineno\"> 3053</span>&#160;                numV += 1</div>\n\
<div class=\"line\"><a name=\"l03054\"></a><span class=\"lineno\"> 3054</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03055\"></a><span class=\"lineno\"> 3055</span>&#160;            vid = numV</div>\n\
<div class=\"line\"><a name=\"l03056\"></a><span class=\"lineno\"> 3056</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03057\"></a><span class=\"lineno\"> 3057</span>&#160;<span class=\"comment\">## Helper class for link lost callback</span></div>\n\
<div class=\"line\"><a name=\"l03058\"></a><span class=\"lineno\"> 3058</span>&#160;<span class=\"keyword\">class </span>ShadedItemUserData(om.MUserData):</div>\n\
<div class=\"line\"><a name=\"l03059\"></a><span class=\"lineno\"> 3059</span>&#160;    <span class=\"keyword\">def </span>__init__(self, override):</div>\n\
<div class=\"line\"><a name=\"l03060\"></a><span class=\"lineno\"> 3060</span>&#160;        om.MUserData.__init__(self, legacy=<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l03061\"></a><span class=\"lineno\"> 3061</span>&#160;        self.fOverride = override</div>\n\
<div class=\"line\"><a name=\"l03062\"></a><span class=\"lineno\"> 3062</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03063\"></a><span class=\"lineno\"> 3063</span>&#160;<span class=\"comment\">## Custom user data class to attach to face selection render item</span></div>\n\
<div class=\"line\"><a name=\"l03064\"></a><span class=\"lineno\"> 3064</span>&#160;<span class=\"comment\">## to help with viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l03065\"></a><span class=\"lineno\"> 3065</span>&#160;<span class=\"keyword\">class </span>apiMeshHWSelectionUserData(om.MUserData):</div>\n\
<div class=\"line\"><a name=\"l03066\"></a><span class=\"lineno\"> 3066</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l03067\"></a><span class=\"lineno\"> 3067</span>&#160;        om.MUserData.__init__(self, legacy=<span class=\"keyword\">False</span>)   <span class=\"comment\">## let Maya clean up</span></div>\n\
<div class=\"line\"><a name=\"l03068\"></a><span class=\"lineno\"> 3068</span>&#160;        self.fMeshGeom = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03069\"></a><span class=\"lineno\"> 3069</span>&#160;        self.fInstanceIndex = 0</div>\n\
<div class=\"line\"><a name=\"l03070\"></a><span class=\"lineno\"> 3070</span>&#160;        self.fFaceViewSelectedStates = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03071\"></a><span class=\"lineno\"> 3071</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03072\"></a><span class=\"lineno\"> 3072</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03073\"></a><span class=\"lineno\"> 3073</span>&#160;sViewSelectedInstanceMark = -1      </div>\n\
<div class=\"line\"><a name=\"l03074\"></a><span class=\"lineno\"> 3074</span>&#160;sViewSelectedFaceSelectionNames = set()</div>\n\
<div class=\"line\"><a name=\"l03075\"></a><span class=\"lineno\"> 3075</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03076\"></a><span class=\"lineno\"> 3076</span>&#160;<span class=\"comment\"># Gather the view-selected face indices of each instance. Use -1 to mark a  </span></div>\n\
<div class=\"line\"><a name=\"l03077\"></a><span class=\"lineno\"> 3077</span>&#160;<span class=\"comment\"># view-selected instance (but not any of its faces) for easier processing</span></div>\n\
<div class=\"line\"><a name=\"l03078\"></a><span class=\"lineno\"> 3078</span>&#160;<span class=\"comment\"># later in shouldDrawInstance().</span></div>\n\
<div class=\"line\"><a name=\"l03079\"></a><span class=\"lineno\"> 3079</span>&#160;<span class=\"keyword\">def </span>gatherViewSelectedFaceInfo(frameContext, instances, meshGeom):</div>\n\
<div class=\"line\"><a name=\"l03080\"></a><span class=\"lineno\"> 3080</span>&#160;    viewSelectedFaceInfo = collections.defaultdict(list)</div>\n\
<div class=\"line\"><a name=\"l03081\"></a><span class=\"lineno\"> 3081</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03082\"></a><span class=\"lineno\"> 3082</span>&#160;    <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> meshGeom <span class=\"keywordflow\">or</span> meshGeom.faceCount &lt;= 0):</div>\n\
<div class=\"line\"><a name=\"l03083\"></a><span class=\"lineno\"> 3083</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span>, viewSelectedFaceInfo</div>\n\
<div class=\"line\"><a name=\"l03084\"></a><span class=\"lineno\"> 3084</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03085\"></a><span class=\"lineno\"> 3085</span>&#160;    renderingDestinationResult = frameContext.renderingDestination()</div>\n\
<div class=\"line\"><a name=\"l03086\"></a><span class=\"lineno\"> 3086</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03087\"></a><span class=\"lineno\"> 3087</span>&#160;    <span class=\"keywordflow\">if</span> (renderingDestinationResult[0] != omr.MFrameContext.k3dViewport):</div>\n\
<div class=\"line\"><a name=\"l03088\"></a><span class=\"lineno\"> 3088</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span>, viewSelectedFaceInfo</div>\n\
<div class=\"line\"><a name=\"l03089\"></a><span class=\"lineno\"> 3089</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03090\"></a><span class=\"lineno\"> 3090</span>&#160;    view = omui.M3dView.getM3dViewFromModelPanel(renderingDestinationResult[1])</div>\n\
<div class=\"line\"><a name=\"l03091\"></a><span class=\"lineno\"> 3091</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03092\"></a><span class=\"lineno\"> 3092</span>&#160;    if(<span class=\"keywordflow\">not</span> view <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> view.viewIsFiltered()):</div>\n\
<div class=\"line\"><a name=\"l03093\"></a><span class=\"lineno\"> 3093</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span>, viewSelectedFaceInfo</div>\n\
<div class=\"line\"><a name=\"l03094\"></a><span class=\"lineno\"> 3094</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03095\"></a><span class=\"lineno\"> 3095</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03096\"></a><span class=\"lineno\"> 3096</span>&#160;    viewSelectedList = view.filteredObjectList()</div>\n\
<div class=\"line\"><a name=\"l03097\"></a><span class=\"lineno\"> 3097</span>&#160;    if(viewSelectedList):</div>\n\
<div class=\"line\"><a name=\"l03098\"></a><span class=\"lineno\"> 3098</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03099\"></a><span class=\"lineno\"> 3099</span>&#160;        <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> range(len(instances)):</div>\n\
<div class=\"line\"><a name=\"l03100\"></a><span class=\"lineno\"> 3100</span>&#160;            intersectionList = om.MSelectionList()</div>\n\
<div class=\"line\"><a name=\"l03101\"></a><span class=\"lineno\"> 3101</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03102\"></a><span class=\"lineno\"> 3102</span>&#160;            intersectionList.add(instances[instIdx])</div>\n\
<div class=\"line\"><a name=\"l03103\"></a><span class=\"lineno\"> 3103</span>&#160;            intersectionList.intersect(viewSelectedList, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03104\"></a><span class=\"lineno\"> 3104</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03105\"></a><span class=\"lineno\"> 3105</span>&#160;            selectionIt = om.MItSelectionList(intersectionList)</div>\n\
<div class=\"line\"><a name=\"l03106\"></a><span class=\"lineno\"> 3106</span>&#160;            <span class=\"keywordflow\">while</span> <span class=\"keywordflow\">not</span> selectionIt.isDone():</div>\n\
<div class=\"line\"><a name=\"l03107\"></a><span class=\"lineno\"> 3107</span>&#160;                comp = selectionIt.getComponent()[1]</div>\n\
<div class=\"line\"><a name=\"l03108\"></a><span class=\"lineno\"> 3108</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03109\"></a><span class=\"lineno\"> 3109</span>&#160;                if(comp.isNull()):</div>\n\
<div class=\"line\"><a name=\"l03110\"></a><span class=\"lineno\"> 3110</span>&#160;                    viewSelectedFaceInfo[instIdx].append(sViewSelectedInstanceMark)</div>\n\
<div class=\"line\"><a name=\"l03111\"></a><span class=\"lineno\"> 3111</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l03112\"></a><span class=\"lineno\"> 3112</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03113\"></a><span class=\"lineno\"> 3113</span>&#160;                    fnComp = om.MFnSingleIndexedComponent(comp)     </div>\n\
<div class=\"line\"><a name=\"l03114\"></a><span class=\"lineno\"> 3114</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l03115\"></a><span class=\"lineno\"> 3115</span>&#160;                    <span class=\"keywordflow\">if</span> (fnComp.componentType == om.MFn.kMeshPolygonComponent):</div>\n\
<div class=\"line\"><a name=\"l03116\"></a><span class=\"lineno\"> 3116</span>&#160;                        faceIds = fnComp.getElements()</div>\n\
<div class=\"line\"><a name=\"l03117\"></a><span class=\"lineno\"> 3117</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l03118\"></a><span class=\"lineno\"> 3118</span>&#160;                        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(faceIds)):</div>\n\
<div class=\"line\"><a name=\"l03119\"></a><span class=\"lineno\"> 3119</span>&#160;                            faceId = faceIds[i]</div>\n\
<div class=\"line\"><a name=\"l03120\"></a><span class=\"lineno\"> 3120</span>&#160;                            <span class=\"keywordflow\">if</span> (faceId &gt;= 0 <span class=\"keywordflow\">and</span> faceId &lt; meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l03121\"></a><span class=\"lineno\"> 3121</span>&#160;                                viewSelectedFaceInfo[instIdx].append(faceId)</div>\n\
<div class=\"line\"><a name=\"l03122\"></a><span class=\"lineno\"> 3122</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03123\"></a><span class=\"lineno\"> 3123</span>&#160;                next(selectionIt)</div>\n\
<div class=\"line\"><a name=\"l03124\"></a><span class=\"lineno\"> 3124</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03125\"></a><span class=\"lineno\"> 3125</span>&#160;    <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span>, viewSelectedFaceInfo</div>\n\
<div class=\"line\"><a name=\"l03126\"></a><span class=\"lineno\"> 3126</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03127\"></a><span class=\"lineno\"> 3127</span>&#160;<span class=\"comment\"># If an instance has only -1 stored in its ViewSelectedFaceInfo map, it is</span></div>\n\
<div class=\"line\"><a name=\"l03128\"></a><span class=\"lineno\"> 3128</span>&#160;<span class=\"comment\"># view-selected but none of its faces is, so the instance should be drawn.</span></div>\n\
<div class=\"line\"><a name=\"l03129\"></a><span class=\"lineno\"> 3129</span>&#160;<span class=\"keyword\">def </span>shouldDrawInstance(viewSelectedFaceInfo, instIdx):</div>\n\
<div class=\"line\"><a name=\"l03130\"></a><span class=\"lineno\"> 3130</span>&#160;    found = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03131\"></a><span class=\"lineno\"> 3131</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03132\"></a><span class=\"lineno\"> 3132</span>&#160;    <span class=\"keywordflow\">if</span> instIdx <span class=\"keywordflow\">in</span> viewSelectedFaceInfo:</div>\n\
<div class=\"line\"><a name=\"l03133\"></a><span class=\"lineno\"> 3133</span>&#160;        faceIds = viewSelectedFaceInfo[instIdx]</div>\n\
<div class=\"line\"><a name=\"l03134\"></a><span class=\"lineno\"> 3134</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03135\"></a><span class=\"lineno\"> 3135</span>&#160;        <span class=\"keywordflow\">for</span> id <span class=\"keywordflow\">in</span> faceIds:</div>\n\
<div class=\"line\"><a name=\"l03136\"></a><span class=\"lineno\"> 3136</span>&#160;            <span class=\"keywordflow\">if</span> id != sViewSelectedInstanceMark:</div>\n\
<div class=\"line\"><a name=\"l03137\"></a><span class=\"lineno\"> 3137</span>&#160;                <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03138\"></a><span class=\"lineno\"> 3138</span>&#160;            found = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03139\"></a><span class=\"lineno\"> 3139</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03140\"></a><span class=\"lineno\"> 3140</span>&#160;    <span class=\"keywordflow\">return</span> found</div>\n\
<div class=\"line\"><a name=\"l03141\"></a><span class=\"lineno\"> 3141</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03142\"></a><span class=\"lineno\"> 3142</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l03143\"></a><span class=\"lineno\"> 3143</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03144\"></a><span class=\"lineno\"> 3144</span>&#160;<span class=\"comment\">## apiMeshSubSceneOverride</span></div>\n\
<div class=\"line\"><a name=\"l03145\"></a><span class=\"lineno\"> 3145</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03146\"></a><span class=\"lineno\"> 3146</span>&#160;<span class=\"comment\">## Handles vertex data preparation for drawing the user defined shape in</span></div>\n\
<div class=\"line\"><a name=\"l03147\"></a><span class=\"lineno\"> 3147</span>&#160;<span class=\"comment\">## Viewport 2.0.</span></div>\n\
<div class=\"line\"><a name=\"l03148\"></a><span class=\"lineno\"> 3148</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03149\"></a><span class=\"lineno\"> 3149</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l03150\"></a><span class=\"lineno\"> 3150</span>&#160;<span class=\"comment\">## Custom component converter to select components</span></div>\n\
<div class=\"line\"><a name=\"l03151\"></a><span class=\"lineno\"> 3151</span>&#160;<span class=\"comment\">## Attached to the vertex, edge and face selection render items</span></div>\n\
<div class=\"line\"><a name=\"l03152\"></a><span class=\"lineno\"> 3152</span>&#160;<span class=\"comment\">## respectively apiMeshSubSceneOverride.sVertexSelectionName, apiMeshSubSceneOverride.sEdgeSelectionName</span></div>\n\
<div class=\"line\"><a name=\"l03153\"></a><span class=\"lineno\"> 3153</span>&#160;<span class=\"comment\">## and apiMeshSubSceneOverride.sFaceSelectionName</span></div>\n\
<div class=\"line\"><a name=\"l03154\"></a><span class=\"lineno\"> 3154</span>&#160;<span class=\"keyword\">class </span>simpleComponentConverterSubsceneOverride(omr.MPxComponentConverter):</div>\n\
<div class=\"line\"><a name=\"l03155\"></a><span class=\"lineno\"> 3155</span>&#160;    <span class=\"keyword\">def </span>__init__(self, componentType, selectionType):</div>\n\
<div class=\"line\"><a name=\"l03156\"></a><span class=\"lineno\"> 3156</span>&#160;        omr.MPxComponentConverter.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l03157\"></a><span class=\"lineno\"> 3157</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03158\"></a><span class=\"lineno\"> 3158</span>&#160;        self.fComponentType = componentType</div>\n\
<div class=\"line\"><a name=\"l03159\"></a><span class=\"lineno\"> 3159</span>&#160;        self.fSelectionType = selectionType</div>\n\
<div class=\"line\"><a name=\"l03160\"></a><span class=\"lineno\"> 3160</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03161\"></a><span class=\"lineno\"> 3161</span>&#160;        self.fComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l03162\"></a><span class=\"lineno\"> 3162</span>&#160;        self.fComponentObject = om.MObject.kNullObj</div>\n\
<div class=\"line\"><a name=\"l03163\"></a><span class=\"lineno\"> 3163</span>&#160;        self.fLookupTable = []</div>\n\
<div class=\"line\"><a name=\"l03164\"></a><span class=\"lineno\"> 3164</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03165\"></a><span class=\"lineno\"> 3165</span>&#160;    <span class=\"keyword\">def </span>initialize(self, renderItem):</div>\n\
<div class=\"line\"><a name=\"l03166\"></a><span class=\"lineno\"> 3166</span>&#160;        <span class=\"comment\">## Create the component selection object</span></div>\n\
<div class=\"line\"><a name=\"l03167\"></a><span class=\"lineno\"> 3167</span>&#160;        self.fComponentObject = self.fComponent.create( self.fComponentType )</div>\n\
<div class=\"line\"><a name=\"l03168\"></a><span class=\"lineno\"> 3168</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03169\"></a><span class=\"lineno\"> 3169</span>&#160;        <span class=\"comment\">## For face selection, </span></div>\n\
<div class=\"line\"><a name=\"l03170\"></a><span class=\"lineno\"> 3170</span>&#160;        <span class=\"comment\">## create a lookup table to match triangle intersection with face id :</span></div>\n\
<div class=\"line\"><a name=\"l03171\"></a><span class=\"lineno\"> 3171</span>&#160;        <span class=\"comment\">## One face may contains more than one triangle</span></div>\n\
<div class=\"line\"><a name=\"l03172\"></a><span class=\"lineno\"> 3172</span>&#160;        <span class=\"keywordflow\">if</span> self.fComponentType == om.MFn.kMeshPolygonComponent:</div>\n\
<div class=\"line\"><a name=\"l03173\"></a><span class=\"lineno\"> 3173</span>&#160;            selectionData = renderItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l03174\"></a><span class=\"lineno\"> 3174</span>&#160;            <span class=\"keywordflow\">if</span> isinstance(selectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l03175\"></a><span class=\"lineno\"> 3175</span>&#160;                meshGeom = selectionData.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l03176\"></a><span class=\"lineno\"> 3176</span>&#160;                faceStates = selectionData.fFaceViewSelectedStates</div>\n\
<div class=\"line\"><a name=\"l03177\"></a><span class=\"lineno\"> 3177</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03178\"></a><span class=\"lineno\"> 3178</span>&#160;                <span class=\"comment\">## Allocate faces lookup table</span></div>\n\
<div class=\"line\"><a name=\"l03179\"></a><span class=\"lineno\"> 3179</span>&#160;                numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l03180\"></a><span class=\"lineno\"> 3180</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l03181\"></a><span class=\"lineno\"> 3181</span>&#160;                    numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l03182\"></a><span class=\"lineno\"> 3182</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l03183\"></a><span class=\"lineno\"> 3183</span>&#160;                        if(<span class=\"keywordflow\">not</span> faceStates <span class=\"keywordflow\">or</span> faceStates[i]):</div>\n\
<div class=\"line\"><a name=\"l03184\"></a><span class=\"lineno\"> 3184</span>&#160;                            numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l03185\"></a><span class=\"lineno\"> 3185</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03186\"></a><span class=\"lineno\"> 3186</span>&#160;                self.fLookupTable = [0]*numTriangles</div>\n\
<div class=\"line\"><a name=\"l03187\"></a><span class=\"lineno\"> 3187</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03188\"></a><span class=\"lineno\"> 3188</span>&#160;                <span class=\"comment\">## Fill faces lookup table</span></div>\n\
<div class=\"line\"><a name=\"l03189\"></a><span class=\"lineno\"> 3189</span>&#160;                triId = 0</div>\n\
<div class=\"line\"><a name=\"l03190\"></a><span class=\"lineno\"> 3190</span>&#160;                <span class=\"keywordflow\">for</span> faceId <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l03191\"></a><span class=\"lineno\"> 3191</span>&#160;                    <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l03192\"></a><span class=\"lineno\"> 3192</span>&#160;                    numVerts = meshGeom.face_counts[faceId]</div>\n\
<div class=\"line\"><a name=\"l03193\"></a><span class=\"lineno\"> 3193</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l03194\"></a><span class=\"lineno\"> 3194</span>&#160;                        if(<span class=\"keywordflow\">not</span> faceStates <span class=\"keywordflow\">or</span> faceStates[faceId]):</div>\n\
<div class=\"line\"><a name=\"l03195\"></a><span class=\"lineno\"> 3195</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l03196\"></a><span class=\"lineno\"> 3196</span>&#160;                                self.fLookupTable[triId] = faceId</div>\n\
<div class=\"line\"><a name=\"l03197\"></a><span class=\"lineno\"> 3197</span>&#160;                                triId += 1</div>\n\
<div class=\"line\"><a name=\"l03198\"></a><span class=\"lineno\"> 3198</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03199\"></a><span class=\"lineno\"> 3199</span>&#160;    <span class=\"keyword\">def </span>addIntersection(self, intersection):</div>\n\
<div class=\"line\"><a name=\"l03200\"></a><span class=\"lineno\"> 3200</span>&#160;        <span class=\"comment\">## Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\"><a name=\"l03201\"></a><span class=\"lineno\"> 3201</span>&#160;        <span class=\"comment\">## index buffer, to the correct component id</span></div>\n\
<div class=\"line\"><a name=\"l03202\"></a><span class=\"lineno\"> 3202</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03203\"></a><span class=\"lineno\"> 3203</span>&#160;        <span class=\"comment\">## For vertex and edge: the primitive index value is the same as the component id</span></div>\n\
<div class=\"line\"><a name=\"l03204\"></a><span class=\"lineno\"> 3204</span>&#160;        <span class=\"comment\">## For face: get the face id that matches the triangle index from the lookup table</span></div>\n\
<div class=\"line\"><a name=\"l03205\"></a><span class=\"lineno\"> 3205</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03206\"></a><span class=\"lineno\"> 3206</span>&#160;        <span class=\"keywordflow\">if</span> self.fComponentType == om.MFn.kMeshEdgeComponent:</div>\n\
<div class=\"line\"><a name=\"l03207\"></a><span class=\"lineno\"> 3207</span>&#160;            <span class=\"comment\"># Only accept edge selection intersection on draw instance #2 -- scaled by 2</span></div>\n\
<div class=\"line\"><a name=\"l03208\"></a><span class=\"lineno\"> 3208</span>&#160;            <span class=\"comment\"># and instance #-1 (when useDrawInstancingOnEdgeSelectionItem is False)</span></div>\n\
<div class=\"line\"><a name=\"l03209\"></a><span class=\"lineno\"> 3209</span>&#160;            <span class=\"keywordflow\">if</span> intersection.instanceID == 1 <span class=\"keywordflow\">or</span> intersection.instanceID == 3:</div>\n\
<div class=\"line\"><a name=\"l03210\"></a><span class=\"lineno\"> 3210</span>&#160;                <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03211\"></a><span class=\"lineno\"> 3211</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03212\"></a><span class=\"lineno\"> 3212</span>&#160;        idx = intersection.index</div>\n\
<div class=\"line\"><a name=\"l03213\"></a><span class=\"lineno\"> 3213</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03214\"></a><span class=\"lineno\"> 3214</span>&#160;        <span class=\"keywordflow\">if</span> self.fComponentType == om.MFn.kMeshPolygonComponent:</div>\n\
<div class=\"line\"><a name=\"l03215\"></a><span class=\"lineno\"> 3215</span>&#160;            <span class=\"keywordflow\">if</span> idx &gt;= 0 <span class=\"keywordflow\">and</span> idx &lt; len(self.fLookupTable):</div>\n\
<div class=\"line\"><a name=\"l03216\"></a><span class=\"lineno\"> 3216</span>&#160;                idx = self.fLookupTable[idx]</div>\n\
<div class=\"line\"><a name=\"l03217\"></a><span class=\"lineno\"> 3217</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03218\"></a><span class=\"lineno\"> 3218</span>&#160;        self.fComponent.addElement(idx)</div>\n\
<div class=\"line\"><a name=\"l03219\"></a><span class=\"lineno\"> 3219</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03220\"></a><span class=\"lineno\"> 3220</span>&#160;    <span class=\"keyword\">def </span>component(self):</div>\n\
<div class=\"line\"><a name=\"l03221\"></a><span class=\"lineno\"> 3221</span>&#160;        <span class=\"comment\">## Return the component object that contains the ids of the selected components</span></div>\n\
<div class=\"line\"><a name=\"l03222\"></a><span class=\"lineno\"> 3222</span>&#160;        <span class=\"keywordflow\">return</span> self.fComponentObject</div>\n\
<div class=\"line\"><a name=\"l03223\"></a><span class=\"lineno\"> 3223</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03224\"></a><span class=\"lineno\"> 3224</span>&#160;    <span class=\"keyword\">def </span>selectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l03225\"></a><span class=\"lineno\"> 3225</span>&#160;        <span class=\"comment\">## This converter is only valid for specified selection type</span></div>\n\
<div class=\"line\"><a name=\"l03226\"></a><span class=\"lineno\"> 3226</span>&#160;        <span class=\"keywordflow\">return</span> self.fSelectionType</div>\n\
<div class=\"line\"><a name=\"l03227\"></a><span class=\"lineno\"> 3227</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03228\"></a><span class=\"lineno\"> 3228</span>&#160;    <span class=\"comment\">## creator function to instanciate a component converter for vertex selection</span></div>\n\
<div class=\"line\"><a name=\"l03229\"></a><span class=\"lineno\"> 3229</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l03230\"></a><span class=\"lineno\"> 3230</span>&#160;    <span class=\"keyword\">def </span>creatorVertexSelection():</div>\n\
<div class=\"line\"><a name=\"l03231\"></a><span class=\"lineno\"> 3231</span>&#160;        mask = om.MSelectionMask(om.MSelectionMask.kSelectMeshVerts)</div>\n\
<div class=\"line\"><a name=\"l03232\"></a><span class=\"lineno\"> 3232</span>&#160;        mask.addMask(om.MSelectionMask.kSelectPointsForGravity)</div>\n\
<div class=\"line\"><a name=\"l03233\"></a><span class=\"lineno\"> 3233</span>&#160;        <span class=\"keywordflow\">return</span> simpleComponentConverterSubsceneOverride(om.MFn.kMeshVertComponent, mask)</div>\n\
<div class=\"line\"><a name=\"l03234\"></a><span class=\"lineno\"> 3234</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03235\"></a><span class=\"lineno\"> 3235</span>&#160;    <span class=\"comment\">## creator function to instanciate a component converter for edge selection</span></div>\n\
<div class=\"line\"><a name=\"l03236\"></a><span class=\"lineno\"> 3236</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l03237\"></a><span class=\"lineno\"> 3237</span>&#160;    <span class=\"keyword\">def </span>creatorEdgeSelection():</div>\n\
<div class=\"line\"><a name=\"l03238\"></a><span class=\"lineno\"> 3238</span>&#160;        <span class=\"keywordflow\">return</span> simpleComponentConverterSubsceneOverride(om.MFn.kMeshEdgeComponent, om.MSelectionMask.kSelectMeshEdges)</div>\n\
<div class=\"line\"><a name=\"l03239\"></a><span class=\"lineno\"> 3239</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03240\"></a><span class=\"lineno\"> 3240</span>&#160;    <span class=\"comment\">## creator function to instanciate a component converter for face selection</span></div>\n\
<div class=\"line\"><a name=\"l03241\"></a><span class=\"lineno\"> 3241</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l03242\"></a><span class=\"lineno\"> 3242</span>&#160;    <span class=\"keyword\">def </span>creatorFaceSelection():</div>\n\
<div class=\"line\"><a name=\"l03243\"></a><span class=\"lineno\"> 3243</span>&#160;        <span class=\"keywordflow\">return</span> simpleComponentConverterSubsceneOverride(om.MFn.kMeshPolygonComponent, om.MSelectionMask.kSelectMeshFaces)</div>\n\
<div class=\"line\"><a name=\"l03244\"></a><span class=\"lineno\"> 3244</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03245\"></a><span class=\"lineno\"> 3245</span>&#160;<span class=\"keyword\">class </span>apiMeshSubSceneOverride(omr.MPxSubSceneOverride):</div>\n\
<div class=\"line\"><a name=\"l03246\"></a><span class=\"lineno\"> 3246</span>&#160;    sWireName        = <span class=\"stringliteral\">&quot;apiMeshWire_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03247\"></a><span class=\"lineno\"> 3247</span>&#160;    sSelectName      = <span class=\"stringliteral\">&quot;apiMeshSelection_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03248\"></a><span class=\"lineno\"> 3248</span>&#160;    sBoxName         = <span class=\"stringliteral\">&quot;apiMeshBox_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03249\"></a><span class=\"lineno\"> 3249</span>&#160;    sSelectedBoxName = <span class=\"stringliteral\">&quot;apiMeshBoxSelection_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03250\"></a><span class=\"lineno\"> 3250</span>&#160;    sShadedName      = <span class=\"stringliteral\">&quot;apiMeshShaded_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03251\"></a><span class=\"lineno\"> 3251</span>&#160;    sTexturedName    = <span class=\"stringliteral\">&quot;apiMeshTextured_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03252\"></a><span class=\"lineno\"> 3252</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03253\"></a><span class=\"lineno\"> 3253</span>&#160;    sVertexSelectionName = <span class=\"stringliteral\">&quot;apiMeshVertexSelection_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03254\"></a><span class=\"lineno\"> 3254</span>&#160;    sEdgeSelectionName   = <span class=\"stringliteral\">&quot;apiMeshEdgeSelection_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03255\"></a><span class=\"lineno\"> 3255</span>&#160;    sFaceSelectionName   = <span class=\"stringliteral\">&quot;apiMeshFaceSelection_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03256\"></a><span class=\"lineno\"> 3256</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03257\"></a><span class=\"lineno\"> 3257</span>&#160;    sActiveVertexName = <span class=\"stringliteral\">&quot;apiMeshActiveVertex_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03258\"></a><span class=\"lineno\"> 3258</span>&#160;    sActiveEdgeName   = <span class=\"stringliteral\">&quot;apiMeshActiveEdge_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03259\"></a><span class=\"lineno\"> 3259</span>&#160;    sActiveFaceName   = <span class=\"stringliteral\">&quot;apiMeshActiveFace_subscene_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03260\"></a><span class=\"lineno\"> 3260</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03261\"></a><span class=\"lineno\"> 3261</span>&#160;    sNameSeparator    = <span class=\"stringliteral\">&quot;_&quot;</span></div>\n\
<div class=\"line\"><a name=\"l03262\"></a><span class=\"lineno\"> 3262</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03263\"></a><span class=\"lineno\"> 3263</span>&#160;    <span class=\"keyword\">class </span>InstanceInfo(object):</div>\n\
<div class=\"line\"><a name=\"l03264\"></a><span class=\"lineno\"> 3264</span>&#160;        <span class=\"keyword\">def </span>__init__(self, transform, isSelected):</div>\n\
<div class=\"line\"><a name=\"l03265\"></a><span class=\"lineno\"> 3265</span>&#160;            self.fTransform = transform</div>\n\
<div class=\"line\"><a name=\"l03266\"></a><span class=\"lineno\"> 3266</span>&#160;            self.fIsSelected = isSelected</div>\n\
<div class=\"line\"><a name=\"l03267\"></a><span class=\"lineno\"> 3267</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03268\"></a><span class=\"lineno\"> 3268</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l03269\"></a><span class=\"lineno\"> 3269</span>&#160;    <span class=\"keyword\">def </span>creator(obj):</div>\n\
<div class=\"line\"><a name=\"l03270\"></a><span class=\"lineno\"> 3270</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshSubSceneOverride(obj)</div>\n\
<div class=\"line\"><a name=\"l03271\"></a><span class=\"lineno\"> 3271</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03272\"></a><span class=\"lineno\"> 3272</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l03273\"></a><span class=\"lineno\"> 3273</span>&#160;    <span class=\"keyword\">def </span>shadedItemLinkLost(userData):</div>\n\
<div class=\"line\"><a name=\"l03274\"></a><span class=\"lineno\"> 3274</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> userData <span class=\"keywordflow\">is</span> <span class=\"keywordtype\">None</span> <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> userData.fOverride <span class=\"keywordflow\">is</span> <span class=\"keywordtype\">None</span>:</div>\n\
<div class=\"line\"><a name=\"l03275\"></a><span class=\"lineno\"> 3275</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> userData.fOverride.fMesh <span class=\"keywordflow\">is</span> <span class=\"keywordtype\">None</span>:</div>\n\
<div class=\"line\"><a name=\"l03276\"></a><span class=\"lineno\"> 3276</span>&#160;                userData.fOverride.fMesh.setMaterialDirty(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03277\"></a><span class=\"lineno\"> 3277</span>&#160;            userData.fOverride = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03278\"></a><span class=\"lineno\"> 3278</span>&#160;        userData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03279\"></a><span class=\"lineno\"> 3279</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03280\"></a><span class=\"lineno\"> 3280</span>&#160;    <span class=\"keyword\">def </span>__init__(self, obj):</div>\n\
<div class=\"line\"><a name=\"l03281\"></a><span class=\"lineno\"> 3281</span>&#160;        omr.MPxSubSceneOverride.__init__(self, obj)</div>\n\
<div class=\"line\"><a name=\"l03282\"></a><span class=\"lineno\"> 3282</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03283\"></a><span class=\"lineno\"> 3283</span>&#160;        node = om.MFnDependencyNode(obj)</div>\n\
<div class=\"line\"><a name=\"l03284\"></a><span class=\"lineno\"> 3284</span>&#160;        self.fMesh = node.userNode()</div>\n\
<div class=\"line\"><a name=\"l03285\"></a><span class=\"lineno\"> 3285</span>&#160;        self.fObject = om.MObject(obj)</div>\n\
<div class=\"line\"><a name=\"l03286\"></a><span class=\"lineno\"> 3286</span>&#160;        self.fWireShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03287\"></a><span class=\"lineno\"> 3287</span>&#160;        self.fThickWireShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03288\"></a><span class=\"lineno\"> 3288</span>&#160;        self.fSelectShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03289\"></a><span class=\"lineno\"> 3289</span>&#160;        self.fThickSelectShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03290\"></a><span class=\"lineno\"> 3290</span>&#160;        self.fShadedShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03291\"></a><span class=\"lineno\"> 3291</span>&#160;        self.fVertexComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03292\"></a><span class=\"lineno\"> 3292</span>&#160;        self.fEdgeComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03293\"></a><span class=\"lineno\"> 3293</span>&#160;        self.fFaceComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03294\"></a><span class=\"lineno\"> 3294</span>&#160;        self.fPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03295\"></a><span class=\"lineno\"> 3295</span>&#160;        self.fNormalBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03296\"></a><span class=\"lineno\"> 3296</span>&#160;        self.fBoxPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03297\"></a><span class=\"lineno\"> 3297</span>&#160;        self.fWireIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03298\"></a><span class=\"lineno\"> 3298</span>&#160;        self.fBoxIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03299\"></a><span class=\"lineno\"> 3299</span>&#160;        self.fShadedIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03300\"></a><span class=\"lineno\"> 3300</span>&#160;        self.fActiveVerticesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03301\"></a><span class=\"lineno\"> 3301</span>&#160;        self.fActiveEdgesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03302\"></a><span class=\"lineno\"> 3302</span>&#160;        self.fActiveFacesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03303\"></a><span class=\"lineno\"> 3303</span>&#160;        self.fThickLineWidth = -1.0</div>\n\
<div class=\"line\"><a name=\"l03304\"></a><span class=\"lineno\"> 3304</span>&#160;        self.fQueuedLineWidth = -1.0</div>\n\
<div class=\"line\"><a name=\"l03305\"></a><span class=\"lineno\"> 3305</span>&#160;        self.fNumInstances = 0</div>\n\
<div class=\"line\"><a name=\"l03306\"></a><span class=\"lineno\"> 3306</span>&#160;        self.fIsInstanceMode = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03307\"></a><span class=\"lineno\"> 3307</span>&#160;        self.fQueueUpdate = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03308\"></a><span class=\"lineno\"> 3308</span>&#160;        self.fUseQueuedLineUpdate = <span class=\"keyword\">False</span> <span class=\"comment\">## Set to True to run sample line width update code</span></div>\n\
<div class=\"line\"><a name=\"l03309\"></a><span class=\"lineno\"> 3309</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03310\"></a><span class=\"lineno\"> 3310</span>&#160;        self.fInstanceInfoCache = collections.defaultdict(set)</div>\n\
<div class=\"line\"><a name=\"l03311\"></a><span class=\"lineno\"> 3311</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03312\"></a><span class=\"lineno\"> 3312</span>&#160;        self.fActiveVerticesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03313\"></a><span class=\"lineno\"> 3313</span>&#160;        self.fActiveEdgesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03314\"></a><span class=\"lineno\"> 3314</span>&#160;        self.fActiveFacesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03315\"></a><span class=\"lineno\"> 3315</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03316\"></a><span class=\"lineno\"> 3316</span>&#160;        self.fViewSelectedFaceInfoCache = collections.defaultdict(list)</div>\n\
<div class=\"line\"><a name=\"l03317\"></a><span class=\"lineno\"> 3317</span>&#160;        self.fLinkLostCallbackData      = []</div>\n\
<div class=\"line\"><a name=\"l03318\"></a><span class=\"lineno\"> 3318</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03319\"></a><span class=\"lineno\"> 3319</span>&#160;    <span class=\"keyword\">def </span>__del__(self):</div>\n\
<div class=\"line\"><a name=\"l03320\"></a><span class=\"lineno\"> 3320</span>&#160;        self.fMesh = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03321\"></a><span class=\"lineno\"> 3321</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03322\"></a><span class=\"lineno\"> 3322</span>&#160;        shaderMgr = omr.MRenderer.getShaderManager()</div>\n\
<div class=\"line\"><a name=\"l03323\"></a><span class=\"lineno\"> 3323</span>&#160;        <span class=\"keywordflow\">if</span> shaderMgr:</div>\n\
<div class=\"line\"><a name=\"l03324\"></a><span class=\"lineno\"> 3324</span>&#160;            <span class=\"keywordflow\">if</span> self.fWireShader:</div>\n\
<div class=\"line\"><a name=\"l03325\"></a><span class=\"lineno\"> 3325</span>&#160;                shaderMgr.releaseShader(self.fWireShader)</div>\n\
<div class=\"line\"><a name=\"l03326\"></a><span class=\"lineno\"> 3326</span>&#160;                self.fWireShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03327\"></a><span class=\"lineno\"> 3327</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03328\"></a><span class=\"lineno\"> 3328</span>&#160;            <span class=\"keywordflow\">if</span> self.fThickWireShader:</div>\n\
<div class=\"line\"><a name=\"l03329\"></a><span class=\"lineno\"> 3329</span>&#160;                shaderMgr.releaseShader(self.fThickWireShader)</div>\n\
<div class=\"line\"><a name=\"l03330\"></a><span class=\"lineno\"> 3330</span>&#160;                self.fThickWireShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03331\"></a><span class=\"lineno\"> 3331</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03332\"></a><span class=\"lineno\"> 3332</span>&#160;            <span class=\"keywordflow\">if</span> self.fSelectShader:</div>\n\
<div class=\"line\"><a name=\"l03333\"></a><span class=\"lineno\"> 3333</span>&#160;                shaderMgr.releaseShader(self.fSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03334\"></a><span class=\"lineno\"> 3334</span>&#160;                self.fSelectShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03335\"></a><span class=\"lineno\"> 3335</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03336\"></a><span class=\"lineno\"> 3336</span>&#160;            <span class=\"keywordflow\">if</span> self.fThickSelectShader:</div>\n\
<div class=\"line\"><a name=\"l03337\"></a><span class=\"lineno\"> 3337</span>&#160;                shaderMgr.releaseShader(self.fThickSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03338\"></a><span class=\"lineno\"> 3338</span>&#160;                self.fThickSelectShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03339\"></a><span class=\"lineno\"> 3339</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03340\"></a><span class=\"lineno\"> 3340</span>&#160;            <span class=\"keywordflow\">if</span> self.fShadedShader:</div>\n\
<div class=\"line\"><a name=\"l03341\"></a><span class=\"lineno\"> 3341</span>&#160;                shaderMgr.releaseShader(self.fShadedShader)</div>\n\
<div class=\"line\"><a name=\"l03342\"></a><span class=\"lineno\"> 3342</span>&#160;                self.fShadedShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03343\"></a><span class=\"lineno\"> 3343</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03344\"></a><span class=\"lineno\"> 3344</span>&#160;            <span class=\"keywordflow\">if</span> self.fVertexComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03345\"></a><span class=\"lineno\"> 3345</span>&#160;                shaderMgr.releaseShader(self.fVertexComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03346\"></a><span class=\"lineno\"> 3346</span>&#160;                self.fVertexComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03347\"></a><span class=\"lineno\"> 3347</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03348\"></a><span class=\"lineno\"> 3348</span>&#160;            <span class=\"keywordflow\">if</span> self.fEdgeComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03349\"></a><span class=\"lineno\"> 3349</span>&#160;                shaderMgr.releaseShader(self.fEdgeComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03350\"></a><span class=\"lineno\"> 3350</span>&#160;                self.fEdgeComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03351\"></a><span class=\"lineno\"> 3351</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03352\"></a><span class=\"lineno\"> 3352</span>&#160;            <span class=\"keywordflow\">if</span> self.fFaceComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03353\"></a><span class=\"lineno\"> 3353</span>&#160;                shaderMgr.releaseShader(self.fFaceComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03354\"></a><span class=\"lineno\"> 3354</span>&#160;                self.fFaceComponentShader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03355\"></a><span class=\"lineno\"> 3355</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03356\"></a><span class=\"lineno\"> 3356</span>&#160;        self.clearBuffers()</div>\n\
<div class=\"line\"><a name=\"l03357\"></a><span class=\"lineno\"> 3357</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03358\"></a><span class=\"lineno\"> 3358</span>&#160;    <span class=\"keyword\">def </span>supportedDrawAPIs(self):</div>\n\
<div class=\"line\"><a name=\"l03359\"></a><span class=\"lineno\"> 3359</span>&#160;        <span class=\"comment\">## this plugin supports both GL and DX</span></div>\n\
<div class=\"line\"><a name=\"l03360\"></a><span class=\"lineno\"> 3360</span>&#160;        <span class=\"keywordflow\">return</span> omr.MRenderer.kOpenGL | omr.MRenderer.kDirectX11 | omr.MRenderer.kOpenGLCoreProfile</div>\n\
<div class=\"line\"><a name=\"l03361\"></a><span class=\"lineno\"> 3361</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03362\"></a><span class=\"lineno\"> 3362</span>&#160;    <span class=\"keyword\">def </span>requiresUpdate(self, container, frameContext):</div>\n\
<div class=\"line\"><a name=\"l03363\"></a><span class=\"lineno\"> 3363</span>&#160;        <span class=\"comment\"># Nothing in the container, definitely need to update</span></div>\n\
<div class=\"line\"><a name=\"l03364\"></a><span class=\"lineno\"> 3364</span>&#160;        <span class=\"keywordflow\">if</span> len(container) == 0:</div>\n\
<div class=\"line\"><a name=\"l03365\"></a><span class=\"lineno\"> 3365</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03366\"></a><span class=\"lineno\"> 3366</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03367\"></a><span class=\"lineno\"> 3367</span>&#160;        <span class=\"comment\"># Update always. This could be optimized to only update when the</span></div>\n\
<div class=\"line\"><a name=\"l03368\"></a><span class=\"lineno\"> 3368</span>&#160;        <span class=\"comment\"># actual shape node detects a change.</span></div>\n\
<div class=\"line\"><a name=\"l03369\"></a><span class=\"lineno\"> 3369</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03370\"></a><span class=\"lineno\"> 3370</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03371\"></a><span class=\"lineno\"> 3371</span>&#160;    <span class=\"keyword\">def </span>update(self, container, frameContext):</div>\n\
<div class=\"line\"><a name=\"l03372\"></a><span class=\"lineno\"> 3372</span>&#160;        <span class=\"comment\"># Update render items based on current set of instances</span></div>\n\
<div class=\"line\"><a name=\"l03373\"></a><span class=\"lineno\"> 3373</span>&#160;        self.manageRenderItems(container, frameContext, self.fMesh.shapeDirty() <span class=\"keywordflow\">or</span> len(container) == 0)</div>\n\
<div class=\"line\"><a name=\"l03374\"></a><span class=\"lineno\"> 3374</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03375\"></a><span class=\"lineno\"> 3375</span>&#160;        <span class=\"comment\"># Always reset shape dirty flag</span></div>\n\
<div class=\"line\"><a name=\"l03376\"></a><span class=\"lineno\"> 3376</span>&#160;        self.fMesh.resetShapeDirty()</div>\n\
<div class=\"line\"><a name=\"l03377\"></a><span class=\"lineno\"> 3377</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03378\"></a><span class=\"lineno\"> 3378</span>&#160;    <span class=\"keyword\">def </span>furtherUpdateRequired(self, frameContext):</div>\n\
<div class=\"line\"><a name=\"l03379\"></a><span class=\"lineno\"> 3379</span>&#160;        <span class=\"keywordflow\">if</span> self.fUseQueuedLineUpdate:</div>\n\
<div class=\"line\"><a name=\"l03380\"></a><span class=\"lineno\"> 3380</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> frameContext.inUserInteraction() <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> frameContext.userChangingViewContext():</div>\n\
<div class=\"line\"><a name=\"l03381\"></a><span class=\"lineno\"> 3381</span>&#160;                <span class=\"keywordflow\">return</span> self.fQueueUpdate</div>\n\
<div class=\"line\"><a name=\"l03382\"></a><span class=\"lineno\"> 3382</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03383\"></a><span class=\"lineno\"> 3383</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03384\"></a><span class=\"lineno\"> 3384</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03385\"></a><span class=\"lineno\"> 3385</span>&#160;    <span class=\"keyword\">def </span>manageRenderItems(self, container, frameContext, updateGeometry):</div>\n\
<div class=\"line\"><a name=\"l03386\"></a><span class=\"lineno\"> 3386</span>&#160;        <span class=\"comment\">## Preamble</span></div>\n\
<div class=\"line\"><a name=\"l03387\"></a><span class=\"lineno\"> 3387</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fMesh <span class=\"keywordflow\">or</span> self.fObject.isNull():</div>\n\
<div class=\"line\"><a name=\"l03388\"></a><span class=\"lineno\"> 3388</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03389\"></a><span class=\"lineno\"> 3389</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03390\"></a><span class=\"lineno\"> 3390</span>&#160;        shaderMgr = omr.MRenderer.getShaderManager()</div>\n\
<div class=\"line\"><a name=\"l03391\"></a><span class=\"lineno\"> 3391</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shaderMgr:</div>\n\
<div class=\"line\"><a name=\"l03392\"></a><span class=\"lineno\"> 3392</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03393\"></a><span class=\"lineno\"> 3393</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03394\"></a><span class=\"lineno\"> 3394</span>&#160;        node = om.MFnDagNode(self.fObject)</div>\n\
<div class=\"line\"><a name=\"l03395\"></a><span class=\"lineno\"> 3395</span>&#160;        instances = node.getAllPaths()</div>\n\
<div class=\"line\"><a name=\"l03396\"></a><span class=\"lineno\"> 3396</span>&#160;        <span class=\"keywordflow\">if</span> len(instances) == 0:</div>\n\
<div class=\"line\"><a name=\"l03397\"></a><span class=\"lineno\"> 3397</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03398\"></a><span class=\"lineno\"> 3398</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03399\"></a><span class=\"lineno\"> 3399</span>&#160;        <span class=\"comment\">## Constants</span></div>\n\
<div class=\"line\"><a name=\"l03400\"></a><span class=\"lineno\"> 3400</span>&#160;        sRed     = [1.0, 0.0, 0.0, 1.0]</div>\n\
<div class=\"line\"><a name=\"l03401\"></a><span class=\"lineno\"> 3401</span>&#160;        sGreen   = [0.0, 1.0, 0.0, 1.0]</div>\n\
<div class=\"line\"><a name=\"l03402\"></a><span class=\"lineno\"> 3402</span>&#160;        sWhite   = [1.0, 1.0, 1.0, 1.0]</div>\n\
<div class=\"line\"><a name=\"l03403\"></a><span class=\"lineno\"> 3403</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03404\"></a><span class=\"lineno\"> 3404</span>&#160;        <span class=\"comment\">## Set up shared shaders if needed</span></div>\n\
<div class=\"line\"><a name=\"l03405\"></a><span class=\"lineno\"> 3405</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fWireShader:</div>\n\
<div class=\"line\"><a name=\"l03406\"></a><span class=\"lineno\"> 3406</span>&#160;            self.fWireShader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader)</div>\n\
<div class=\"line\"><a name=\"l03407\"></a><span class=\"lineno\"> 3407</span>&#160;            self.fWireShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sRed)</div>\n\
<div class=\"line\"><a name=\"l03408\"></a><span class=\"lineno\"> 3408</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03409\"></a><span class=\"lineno\"> 3409</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fThickWireShader:</div>\n\
<div class=\"line\"><a name=\"l03410\"></a><span class=\"lineno\"> 3410</span>&#160;            self.fThickWireShader = shaderMgr.getStockShader(omr.MShaderManager.k3dThickLineShader)</div>\n\
<div class=\"line\"><a name=\"l03411\"></a><span class=\"lineno\"> 3411</span>&#160;            self.fThickWireShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sRed)</div>\n\
<div class=\"line\"><a name=\"l03412\"></a><span class=\"lineno\"> 3412</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03413\"></a><span class=\"lineno\"> 3413</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fSelectShader:</div>\n\
<div class=\"line\"><a name=\"l03414\"></a><span class=\"lineno\"> 3414</span>&#160;            self.fSelectShader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader)</div>\n\
<div class=\"line\"><a name=\"l03415\"></a><span class=\"lineno\"> 3415</span>&#160;            self.fSelectShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sGreen)</div>\n\
<div class=\"line\"><a name=\"l03416\"></a><span class=\"lineno\"> 3416</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03417\"></a><span class=\"lineno\"> 3417</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fThickSelectShader:</div>\n\
<div class=\"line\"><a name=\"l03418\"></a><span class=\"lineno\"> 3418</span>&#160;            self.fThickSelectShader = shaderMgr.getStockShader(omr.MShaderManager.k3dThickLineShader)</div>\n\
<div class=\"line\"><a name=\"l03419\"></a><span class=\"lineno\"> 3419</span>&#160;            self.fThickSelectShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sGreen)</div>\n\
<div class=\"line\"><a name=\"l03420\"></a><span class=\"lineno\"> 3420</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03421\"></a><span class=\"lineno\"> 3421</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fVertexComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03422\"></a><span class=\"lineno\"> 3422</span>&#160;            self.fVertexComponentShader = shaderMgr.getStockShader(omr.MShaderManager.k3dFatPointShader)</div>\n\
<div class=\"line\"><a name=\"l03423\"></a><span class=\"lineno\"> 3423</span>&#160;            self.fVertexComponentShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite)</div>\n\
<div class=\"line\"><a name=\"l03424\"></a><span class=\"lineno\"> 3424</span>&#160;            self.fVertexComponentShader.setParameter(<span class=\"stringliteral\">&quot;pointSize&quot;</span>, [5.0, 5.0])</div>\n\
<div class=\"line\"><a name=\"l03425\"></a><span class=\"lineno\"> 3425</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03426\"></a><span class=\"lineno\"> 3426</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fEdgeComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03427\"></a><span class=\"lineno\"> 3427</span>&#160;            self.fEdgeComponentShader = shaderMgr.getStockShader(omr.MShaderManager.k3dThickLineShader)</div>\n\
<div class=\"line\"><a name=\"l03428\"></a><span class=\"lineno\"> 3428</span>&#160;            self.fEdgeComponentShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite)</div>\n\
<div class=\"line\"><a name=\"l03429\"></a><span class=\"lineno\"> 3429</span>&#160;            self.fEdgeComponentShader.setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, [2.0, 2.0])</div>\n\
<div class=\"line\"><a name=\"l03430\"></a><span class=\"lineno\"> 3430</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03431\"></a><span class=\"lineno\"> 3431</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fFaceComponentShader:</div>\n\
<div class=\"line\"><a name=\"l03432\"></a><span class=\"lineno\"> 3432</span>&#160;            self.fFaceComponentShader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader)</div>\n\
<div class=\"line\"><a name=\"l03433\"></a><span class=\"lineno\"> 3433</span>&#160;            self.fFaceComponentShader.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite)</div>\n\
<div class=\"line\"><a name=\"l03434\"></a><span class=\"lineno\"> 3434</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03435\"></a><span class=\"lineno\"> 3435</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fShadedShader:</div>\n\
<div class=\"line\"><a name=\"l03436\"></a><span class=\"lineno\"> 3436</span>&#160;            self.fShadedShader = shaderMgr.getStockShader(omr.MShaderManager.k3dBlinnShader)</div>\n\
<div class=\"line\"><a name=\"l03437\"></a><span class=\"lineno\"> 3437</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03438\"></a><span class=\"lineno\"> 3438</span>&#160;        <span class=\"comment\">## Set up shared geometry if necessary</span></div>\n\
<div class=\"line\"><a name=\"l03439\"></a><span class=\"lineno\"> 3439</span>&#160;        <span class=\"keywordflow\">if</span> updateGeometry:</div>\n\
<div class=\"line\"><a name=\"l03440\"></a><span class=\"lineno\"> 3440</span>&#160;            self.rebuildGeometryBuffers()</div>\n\
<div class=\"line\"><a name=\"l03441\"></a><span class=\"lineno\"> 3441</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03442\"></a><span class=\"lineno\"> 3442</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> all((self.fPositionBuffer, self.fNormalBuffer, self.fBoxPositionBuffer, self.fWireIndexBuffer, self.fBoxIndexBuffer, self.fShadedIndexBuffer)):</div>\n\
<div class=\"line\"><a name=\"l03443\"></a><span class=\"lineno\"> 3443</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03444\"></a><span class=\"lineno\"> 3444</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03445\"></a><span class=\"lineno\"> 3445</span>&#160;        isActiveViewFiltered, viewSelectedFaceInfo = gatherViewSelectedFaceInfo(frameContext, instances, self.fMesh.meshGeom()) </div>\n\
<div class=\"line\"><a name=\"l03446\"></a><span class=\"lineno\"> 3446</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03447\"></a><span class=\"lineno\"> 3447</span>&#160;        selectedList = om.MGlobal.getActiveSelectionList()</div>\n\
<div class=\"line\"><a name=\"l03448\"></a><span class=\"lineno\"> 3448</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03449\"></a><span class=\"lineno\"> 3449</span>&#160;        anyMatrixChanged = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03450\"></a><span class=\"lineno\"> 3450</span>&#160;        itemsChanged = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03451\"></a><span class=\"lineno\"> 3451</span>&#160;        instanceArrayLength = len(instances)</div>\n\
<div class=\"line\"><a name=\"l03452\"></a><span class=\"lineno\"> 3452</span>&#160;        numInstanceSelected = 0</div>\n\
<div class=\"line\"><a name=\"l03453\"></a><span class=\"lineno\"> 3453</span>&#160;        numInstanceUnselected = 0</div>\n\
<div class=\"line\"><a name=\"l03454\"></a><span class=\"lineno\"> 3454</span>&#160;        numInstances = 0</div>\n\
<div class=\"line\"><a name=\"l03455\"></a><span class=\"lineno\"> 3455</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03456\"></a><span class=\"lineno\"> 3456</span>&#160;        instanceMatrixArray = om.MMatrixArray(instanceArrayLength)</div>\n\
<div class=\"line\"><a name=\"l03457\"></a><span class=\"lineno\"> 3457</span>&#160;        selectedInstanceMatrixArray = om.MMatrixArray(instanceArrayLength)</div>\n\
<div class=\"line\"><a name=\"l03458\"></a><span class=\"lineno\"> 3458</span>&#160;        unselectedInstanceMatrixArray = om.MMatrixArray(instanceArrayLength)</div>\n\
<div class=\"line\"><a name=\"l03459\"></a><span class=\"lineno\"> 3459</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03460\"></a><span class=\"lineno\"> 3460</span>&#160;        <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> range(instanceArrayLength):</div>\n\
<div class=\"line\"><a name=\"l03461\"></a><span class=\"lineno\"> 3461</span>&#160;            <span class=\"comment\">## If expecting large numbers of instances, then walking through the whole</span></div>\n\
<div class=\"line\"><a name=\"l03462\"></a><span class=\"lineno\"> 3462</span>&#160;            <span class=\"comment\">## list of instances every time to look for changes is not efficient</span></div>\n\
<div class=\"line\"><a name=\"l03463\"></a><span class=\"lineno\"> 3463</span>&#160;            <span class=\"comment\">## enough.  Watching for change events and changing only the required</span></div>\n\
<div class=\"line\"><a name=\"l03464\"></a><span class=\"lineno\"> 3464</span>&#160;            <span class=\"comment\">## instances should be done instead.  This method of checking for selection</span></div>\n\
<div class=\"line\"><a name=\"l03465\"></a><span class=\"lineno\"> 3465</span>&#160;            <span class=\"comment\">## status is also not fast.</span></div>\n\
<div class=\"line\"><a name=\"l03466\"></a><span class=\"lineno\"> 3466</span>&#160;            instance = instances[instIdx]</div>\n\
<div class=\"line\"><a name=\"l03467\"></a><span class=\"lineno\"> 3467</span>&#160;            instanceNum = instance.instanceNumber()</div>\n\
<div class=\"line\"><a name=\"l03468\"></a><span class=\"lineno\"> 3468</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03469\"></a><span class=\"lineno\"> 3469</span>&#160;            <span class=\"keywordflow\">if</span> (instance.isValid <span class=\"keywordflow\">and</span> instance.isVisible <span class=\"keywordflow\">and</span> (<span class=\"keywordflow\">not</span> isActiveViewFiltered <span class=\"keywordflow\">or</span> shouldDrawInstance(viewSelectedFaceInfo, instIdx))):</div>\n\
<div class=\"line\"><a name=\"l03470\"></a><span class=\"lineno\"> 3470</span>&#160;                instanceInfo = apiMeshSubSceneOverride.InstanceInfo(instance.inclusiveMatrix(), useSelectHighlight(selectedList, instance))</div>\n\
<div class=\"line\"><a name=\"l03471\"></a><span class=\"lineno\"> 3471</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03472\"></a><span class=\"lineno\"> 3472</span>&#160;                if( instanceNum <span class=\"keywordflow\">not</span> <span class=\"keywordflow\">in</span> self.fInstanceInfoCache <span class=\"keywordflow\">or</span> </div>\n\
<div class=\"line\"><a name=\"l03473\"></a><span class=\"lineno\"> 3473</span>&#160;                    self.fInstanceInfoCache[instanceNum].fIsSelected != instanceInfo.fIsSelected <span class=\"keywordflow\">or</span> </div>\n\
<div class=\"line\"><a name=\"l03474\"></a><span class=\"lineno\"> 3474</span>&#160;                    <span class=\"keywordflow\">not</span> self.fInstanceInfoCache[instanceNum].fTransform.isEquivalent(instanceInfo.fTransform)):</div>\n\
<div class=\"line\"><a name=\"l03475\"></a><span class=\"lineno\"> 3475</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l03476\"></a><span class=\"lineno\"> 3476</span>&#160;                    self.fInstanceInfoCache[instanceNum] = instanceInfo</div>\n\
<div class=\"line\"><a name=\"l03477\"></a><span class=\"lineno\"> 3477</span>&#160;                    anyMatrixChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03478\"></a><span class=\"lineno\"> 3478</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03479\"></a><span class=\"lineno\"> 3479</span>&#160;                instanceMatrixArray[numInstances] = instanceInfo.fTransform</div>\n\
<div class=\"line\"><a name=\"l03480\"></a><span class=\"lineno\"> 3480</span>&#160;                numInstances += 1</div>\n\
<div class=\"line\"><a name=\"l03481\"></a><span class=\"lineno\"> 3481</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03482\"></a><span class=\"lineno\"> 3482</span>&#160;                <span class=\"keywordflow\">if</span> instanceInfo.fIsSelected:</div>\n\
<div class=\"line\"><a name=\"l03483\"></a><span class=\"lineno\"> 3483</span>&#160;                    selectedInstanceMatrixArray[numInstanceSelected] = instanceInfo.fTransform</div>\n\
<div class=\"line\"><a name=\"l03484\"></a><span class=\"lineno\"> 3484</span>&#160;                    numInstanceSelected += 1</div>\n\
<div class=\"line\"><a name=\"l03485\"></a><span class=\"lineno\"> 3485</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03486\"></a><span class=\"lineno\"> 3486</span>&#160;                    unselectedInstanceMatrixArray[numInstanceUnselected] = instanceInfo.fTransform</div>\n\
<div class=\"line\"><a name=\"l03487\"></a><span class=\"lineno\"> 3487</span>&#160;                    numInstanceUnselected += 1</div>\n\
<div class=\"line\"><a name=\"l03488\"></a><span class=\"lineno\"> 3488</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03489\"></a><span class=\"lineno\"> 3489</span>&#160;                <span class=\"keywordflow\">if</span> (instanceNum <span class=\"keywordflow\">in</span> self.fInstanceInfoCache):</div>\n\
<div class=\"line\"><a name=\"l03490\"></a><span class=\"lineno\"> 3490</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l03491\"></a><span class=\"lineno\"> 3491</span>&#160;                    del self.fInstanceInfoCache[instanceNum]</div>\n\
<div class=\"line\"><a name=\"l03492\"></a><span class=\"lineno\"> 3492</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l03493\"></a><span class=\"lineno\"> 3493</span>&#160;                    anyMatrixChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03494\"></a><span class=\"lineno\"> 3494</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03495\"></a><span class=\"lineno\"> 3495</span>&#160;        instanceMatrixArray.setLength(numInstances)  <span class=\"comment\">## collapse to correct length</span></div>\n\
<div class=\"line\"><a name=\"l03496\"></a><span class=\"lineno\"> 3496</span>&#160;        selectedInstanceMatrixArray.setLength(numInstanceSelected)</div>\n\
<div class=\"line\"><a name=\"l03497\"></a><span class=\"lineno\"> 3497</span>&#160;        unselectedInstanceMatrixArray.setLength(numInstanceUnselected)</div>\n\
<div class=\"line\"><a name=\"l03498\"></a><span class=\"lineno\"> 3498</span>&#160;        <span class=\"keywordflow\">if</span> self.fNumInstances != numInstances:</div>\n\
<div class=\"line\"><a name=\"l03499\"></a><span class=\"lineno\"> 3499</span>&#160;            anyMatrixChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03500\"></a><span class=\"lineno\"> 3500</span>&#160;            self.fNumInstances = numInstances</div>\n\
<div class=\"line\"><a name=\"l03501\"></a><span class=\"lineno\"> 3501</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03502\"></a><span class=\"lineno\"> 3502</span>&#160;        anyInstanceSelected = numInstanceSelected &gt; 0</div>\n\
<div class=\"line\"><a name=\"l03503\"></a><span class=\"lineno\"> 3503</span>&#160;        anyInstanceUnselected = numInstanceUnselected &gt; 0</div>\n\
<div class=\"line\"><a name=\"l03504\"></a><span class=\"lineno\"> 3504</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03505\"></a><span class=\"lineno\"> 3505</span>&#160;        activeVerticesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03506\"></a><span class=\"lineno\"> 3506</span>&#160;        activeEdgesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03507\"></a><span class=\"lineno\"> 3507</span>&#160;        activeFacesSet = set()</div>\n\
<div class=\"line\"><a name=\"l03508\"></a><span class=\"lineno\"> 3508</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03509\"></a><span class=\"lineno\"> 3509</span>&#160;        meshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l03510\"></a><span class=\"lineno\"> 3510</span>&#160;        <span class=\"keywordflow\">if</span> meshGeom <span class=\"keywordflow\">and</span> self.fMesh.hasActiveComponents():</div>\n\
<div class=\"line\"><a name=\"l03511\"></a><span class=\"lineno\"> 3511</span>&#160;            activeComponents = self.fMesh.activeComponents()</div>\n\
<div class=\"line\"><a name=\"l03512\"></a><span class=\"lineno\"> 3512</span>&#160;            <span class=\"keywordflow\">if</span> len(activeComponents) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l03513\"></a><span class=\"lineno\"> 3513</span>&#160;                fnComponent = om.MFnSingleIndexedComponent( activeComponents[0] )</div>\n\
<div class=\"line\"><a name=\"l03514\"></a><span class=\"lineno\"> 3514</span>&#160;                <span class=\"keywordflow\">if</span> fnComponent.elementCount &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l03515\"></a><span class=\"lineno\"> 3515</span>&#160;                    activeIds = fnComponent.getElements()</div>\n\
<div class=\"line\"><a name=\"l03516\"></a><span class=\"lineno\"> 3516</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03517\"></a><span class=\"lineno\"> 3517</span>&#160;                    <span class=\"keywordflow\">if</span> fnComponent.componentType == om.MFn.kMeshVertComponent:</div>\n\
<div class=\"line\"><a name=\"l03518\"></a><span class=\"lineno\"> 3518</span>&#160;                        activeVerticesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l03519\"></a><span class=\"lineno\"> 3519</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03520\"></a><span class=\"lineno\"> 3520</span>&#160;                    <span class=\"keywordflow\">elif</span> fnComponent.componentType == om.MFn.kMeshEdgeComponent:</div>\n\
<div class=\"line\"><a name=\"l03521\"></a><span class=\"lineno\"> 3521</span>&#160;                        activeEdgesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l03522\"></a><span class=\"lineno\"> 3522</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03523\"></a><span class=\"lineno\"> 3523</span>&#160;                    <span class=\"keywordflow\">elif</span> fnComponent.componentType == om.MFn.kMeshPolygonComponent:</div>\n\
<div class=\"line\"><a name=\"l03524\"></a><span class=\"lineno\"> 3524</span>&#160;                        activeFacesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l03525\"></a><span class=\"lineno\"> 3525</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03526\"></a><span class=\"lineno\"> 3526</span>&#160;        <span class=\"comment\">## Update index buffer of active items if necessary</span></div>\n\
<div class=\"line\"><a name=\"l03527\"></a><span class=\"lineno\"> 3527</span>&#160;        updateActiveItems = updateGeometry <span class=\"keywordflow\">or</span> self.fActiveVerticesSet != activeVerticesSet <span class=\"keywordflow\">or</span> self.fActiveEdgesSet != activeEdgesSet <span class=\"keywordflow\">or</span> self.fActiveFacesSet != activeFacesSet</div>\n\
<div class=\"line\"><a name=\"l03528\"></a><span class=\"lineno\"> 3528</span>&#160;        self.fActiveVerticesSet = activeVerticesSet</div>\n\
<div class=\"line\"><a name=\"l03529\"></a><span class=\"lineno\"> 3529</span>&#160;        self.fActiveEdgesSet = activeEdgesSet</div>\n\
<div class=\"line\"><a name=\"l03530\"></a><span class=\"lineno\"> 3530</span>&#160;        self.fActiveFacesSet = activeFacesSet</div>\n\
<div class=\"line\"><a name=\"l03531\"></a><span class=\"lineno\"> 3531</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03532\"></a><span class=\"lineno\"> 3532</span>&#160;        <span class=\"keywordflow\">if</span> updateActiveItems:</div>\n\
<div class=\"line\"><a name=\"l03533\"></a><span class=\"lineno\"> 3533</span>&#160;            self.rebuildActiveComponentIndexBuffers()</div>\n\
<div class=\"line\"><a name=\"l03534\"></a><span class=\"lineno\"> 3534</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03535\"></a><span class=\"lineno\"> 3535</span>&#160;        anyVertexSelected = bool(self.fActiveVerticesSet)</div>\n\
<div class=\"line\"><a name=\"l03536\"></a><span class=\"lineno\"> 3536</span>&#160;        anyEdgeSelected = bool(self.fActiveEdgesSet)</div>\n\
<div class=\"line\"><a name=\"l03537\"></a><span class=\"lineno\"> 3537</span>&#160;        anyFaceSelected = bool(self.fActiveFacesSet)</div>\n\
<div class=\"line\"><a name=\"l03538\"></a><span class=\"lineno\"> 3538</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03539\"></a><span class=\"lineno\"> 3539</span>&#160;        <span class=\"keywordflow\">if</span> (anyVertexSelected <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> self.fActiveVerticesIndexBuffer) <span class=\"keywordflow\">or</span> (anyEdgeSelected <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> self.fActiveEdgesIndexBuffer) <span class=\"keywordflow\">or</span> (anyFaceSelected <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> self.fActiveFacesIndexBuffer):</div>\n\
<div class=\"line\"><a name=\"l03540\"></a><span class=\"lineno\"> 3540</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03541\"></a><span class=\"lineno\"> 3541</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03542\"></a><span class=\"lineno\"> 3542</span>&#160;        <span class=\"comment\">## Add render items if necessary.  Remove any pre-existing render items</span></div>\n\
<div class=\"line\"><a name=\"l03543\"></a><span class=\"lineno\"> 3543</span>&#160;        <span class=\"comment\">## that are no longer needed.</span></div>\n\
<div class=\"line\"><a name=\"l03544\"></a><span class=\"lineno\"> 3544</span>&#160;        wireItem = container.find(self.sWireName)</div>\n\
<div class=\"line\"><a name=\"l03545\"></a><span class=\"lineno\"> 3545</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> wireItem <span class=\"keywordflow\">and</span> anyInstanceUnselected:</div>\n\
<div class=\"line\"><a name=\"l03546\"></a><span class=\"lineno\"> 3546</span>&#160;            wireItem = omr.MRenderItem.create( self.sWireName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03547\"></a><span class=\"lineno\"> 3547</span>&#160;            wireItem.setDrawMode(omr.MGeometry.kWireframe)</div>\n\
<div class=\"line\"><a name=\"l03548\"></a><span class=\"lineno\"> 3548</span>&#160;            wireItem.setDepthPriority(omr.MRenderItem.sActiveWireDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03549\"></a><span class=\"lineno\"> 3549</span>&#160;            wireItem.setShader(self.fWireShader)</div>\n\
<div class=\"line\"><a name=\"l03550\"></a><span class=\"lineno\"> 3550</span>&#160;            container.add(wireItem)</div>\n\
<div class=\"line\"><a name=\"l03551\"></a><span class=\"lineno\"> 3551</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03552\"></a><span class=\"lineno\"> 3552</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03553\"></a><span class=\"lineno\"> 3553</span>&#160;        <span class=\"keywordflow\">elif</span> wireItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyInstanceUnselected:</div>\n\
<div class=\"line\"><a name=\"l03554\"></a><span class=\"lineno\"> 3554</span>&#160;            container.remove(self.sWireName)</div>\n\
<div class=\"line\"><a name=\"l03555\"></a><span class=\"lineno\"> 3555</span>&#160;            wireItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03556\"></a><span class=\"lineno\"> 3556</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03557\"></a><span class=\"lineno\"> 3557</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03558\"></a><span class=\"lineno\"> 3558</span>&#160;        selectItem = container.find(self.sSelectName)</div>\n\
<div class=\"line\"><a name=\"l03559\"></a><span class=\"lineno\"> 3559</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> selectItem <span class=\"keywordflow\">and</span> anyInstanceSelected:</div>\n\
<div class=\"line\"><a name=\"l03560\"></a><span class=\"lineno\"> 3560</span>&#160;            selectItem = omr.MRenderItem.create( self.sSelectName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03561\"></a><span class=\"lineno\"> 3561</span>&#160;            selectItem.setDrawMode(omr.MGeometry.kWireframe | omr.MGeometry.kShaded | omr.MGeometry.kTextured)</div>\n\
<div class=\"line\"><a name=\"l03562\"></a><span class=\"lineno\"> 3562</span>&#160;            selectItem.setDepthPriority(omr.MRenderItem.sActiveWireDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03563\"></a><span class=\"lineno\"> 3563</span>&#160;            selectItem.setShader(self.fSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03564\"></a><span class=\"lineno\"> 3564</span>&#160;            container.add(selectItem)</div>\n\
<div class=\"line\"><a name=\"l03565\"></a><span class=\"lineno\"> 3565</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03566\"></a><span class=\"lineno\"> 3566</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03567\"></a><span class=\"lineno\"> 3567</span>&#160;        <span class=\"keywordflow\">elif</span> selectItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyInstanceSelected:</div>\n\
<div class=\"line\"><a name=\"l03568\"></a><span class=\"lineno\"> 3568</span>&#160;            container.remove(self.sSelectName)</div>\n\
<div class=\"line\"><a name=\"l03569\"></a><span class=\"lineno\"> 3569</span>&#160;            selectItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03570\"></a><span class=\"lineno\"> 3570</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03571\"></a><span class=\"lineno\"> 3571</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03572\"></a><span class=\"lineno\"> 3572</span>&#160;        boxItem = container.find(self.sBoxName)</div>\n\
<div class=\"line\"><a name=\"l03573\"></a><span class=\"lineno\"> 3573</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> boxItem <span class=\"keywordflow\">and</span> anyInstanceUnselected:</div>\n\
<div class=\"line\"><a name=\"l03574\"></a><span class=\"lineno\"> 3574</span>&#160;            boxItem = omr.MRenderItem.create( self.sBoxName, omr.MRenderItem.NonMaterialSceneItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03575\"></a><span class=\"lineno\"> 3575</span>&#160;            boxItem.setDrawMode(omr.MGeometry.kBoundingBox)</div>\n\
<div class=\"line\"><a name=\"l03576\"></a><span class=\"lineno\"> 3576</span>&#160;            boxItem.setShader(self.fWireShader)</div>\n\
<div class=\"line\"><a name=\"l03577\"></a><span class=\"lineno\"> 3577</span>&#160;            container.add(boxItem)</div>\n\
<div class=\"line\"><a name=\"l03578\"></a><span class=\"lineno\"> 3578</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03579\"></a><span class=\"lineno\"> 3579</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03580\"></a><span class=\"lineno\"> 3580</span>&#160;        <span class=\"keywordflow\">elif</span> boxItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyInstanceUnselected:</div>\n\
<div class=\"line\"><a name=\"l03581\"></a><span class=\"lineno\"> 3581</span>&#160;            container.remove(self.sBoxName)</div>\n\
<div class=\"line\"><a name=\"l03582\"></a><span class=\"lineno\"> 3582</span>&#160;            boxItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03583\"></a><span class=\"lineno\"> 3583</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03584\"></a><span class=\"lineno\"> 3584</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03585\"></a><span class=\"lineno\"> 3585</span>&#160;        selectedBoxItem = container.find(self.sSelectedBoxName)</div>\n\
<div class=\"line\"><a name=\"l03586\"></a><span class=\"lineno\"> 3586</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> selectedBoxItem <span class=\"keywordflow\">and</span> anyInstanceSelected:</div>\n\
<div class=\"line\"><a name=\"l03587\"></a><span class=\"lineno\"> 3587</span>&#160;            selectedBoxItem = omr.MRenderItem.create( self.sSelectedBoxName, omr.MRenderItem.NonMaterialSceneItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03588\"></a><span class=\"lineno\"> 3588</span>&#160;            selectedBoxItem.setDrawMode(omr.MGeometry.kBoundingBox)</div>\n\
<div class=\"line\"><a name=\"l03589\"></a><span class=\"lineno\"> 3589</span>&#160;            selectedBoxItem.setShader(self.fSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03590\"></a><span class=\"lineno\"> 3590</span>&#160;            container.add(selectedBoxItem)</div>\n\
<div class=\"line\"><a name=\"l03591\"></a><span class=\"lineno\"> 3591</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03592\"></a><span class=\"lineno\"> 3592</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03593\"></a><span class=\"lineno\"> 3593</span>&#160;        <span class=\"keywordflow\">elif</span> selectedBoxItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyInstanceSelected:</div>\n\
<div class=\"line\"><a name=\"l03594\"></a><span class=\"lineno\"> 3594</span>&#160;            container.remove(self.sSelectedBoxName)</div>\n\
<div class=\"line\"><a name=\"l03595\"></a><span class=\"lineno\"> 3595</span>&#160;            selectedBoxItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03596\"></a><span class=\"lineno\"> 3596</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03597\"></a><span class=\"lineno\"> 3597</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03598\"></a><span class=\"lineno\"> 3598</span>&#160;        shadedItem = container.find(self.sShadedName)</div>\n\
<div class=\"line\"><a name=\"l03599\"></a><span class=\"lineno\"> 3599</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shadedItem:</div>\n\
<div class=\"line\"><a name=\"l03600\"></a><span class=\"lineno\"> 3600</span>&#160;            <span class=\"comment\">## We always want a shaded item</span></div>\n\
<div class=\"line\"><a name=\"l03601\"></a><span class=\"lineno\"> 3601</span>&#160;            shadedItem = omr.MRenderItem.create( self.sShadedName, omr.MRenderItem.MaterialSceneItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l03602\"></a><span class=\"lineno\"> 3602</span>&#160;            shadedItem.setDrawMode(omr.MGeometry.kShaded)</div>\n\
<div class=\"line\"><a name=\"l03603\"></a><span class=\"lineno\"> 3603</span>&#160;            shadedItem.setExcludedFromPostEffects(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l03604\"></a><span class=\"lineno\"> 3604</span>&#160;            shadedItem.setCastsShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03605\"></a><span class=\"lineno\"> 3605</span>&#160;            shadedItem.setReceivesShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03606\"></a><span class=\"lineno\"> 3606</span>&#160;            container.add(shadedItem)</div>\n\
<div class=\"line\"><a name=\"l03607\"></a><span class=\"lineno\"> 3607</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03608\"></a><span class=\"lineno\"> 3608</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03609\"></a><span class=\"lineno\"> 3609</span>&#160;        texturedItem = container.find(self.sTexturedName)</div>\n\
<div class=\"line\"><a name=\"l03610\"></a><span class=\"lineno\"> 3610</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> texturedItem:</div>\n\
<div class=\"line\"><a name=\"l03611\"></a><span class=\"lineno\"> 3611</span>&#160;            <span class=\"comment\">## We always want a textured item</span></div>\n\
<div class=\"line\"><a name=\"l03612\"></a><span class=\"lineno\"> 3612</span>&#160;            texturedItem = omr.MRenderItem.create( self.sTexturedName, omr.MRenderItem.MaterialSceneItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l03613\"></a><span class=\"lineno\"> 3613</span>&#160;            texturedItem.setDrawMode(omr.MGeometry.kTextured)</div>\n\
<div class=\"line\"><a name=\"l03614\"></a><span class=\"lineno\"> 3614</span>&#160;            texturedItem.setExcludedFromPostEffects(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l03615\"></a><span class=\"lineno\"> 3615</span>&#160;            texturedItem.setCastsShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03616\"></a><span class=\"lineno\"> 3616</span>&#160;            texturedItem.setReceivesShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03617\"></a><span class=\"lineno\"> 3617</span>&#160;            container.add(texturedItem)</div>\n\
<div class=\"line\"><a name=\"l03618\"></a><span class=\"lineno\"> 3618</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03619\"></a><span class=\"lineno\"> 3619</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03620\"></a><span class=\"lineno\"> 3620</span>&#160;        <span class=\"comment\">## Grab shading node from first component of first instance of the</span></div>\n\
<div class=\"line\"><a name=\"l03621\"></a><span class=\"lineno\"> 3621</span>&#160;        <span class=\"comment\">## object and use it to get an MShaderInstance. This could be expanded</span></div>\n\
<div class=\"line\"><a name=\"l03622\"></a><span class=\"lineno\"> 3622</span>&#160;        <span class=\"comment\">## to support full instancing and components if necessary.</span></div>\n\
<div class=\"line\"><a name=\"l03623\"></a><span class=\"lineno\"> 3623</span>&#160;        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l03624\"></a><span class=\"lineno\"> 3624</span>&#160;            shader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03625\"></a><span class=\"lineno\"> 3625</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03626\"></a><span class=\"lineno\"> 3626</span>&#160;            connectedPlugs = om.MPlugArray()</div>\n\
<div class=\"line\"><a name=\"l03627\"></a><span class=\"lineno\"> 3627</span>&#160;            (sets, comps) = node.getConnectedSetsAndMembers(0, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03628\"></a><span class=\"lineno\"> 3628</span>&#160;            <span class=\"keywordflow\">for</span> obj <span class=\"keywordflow\">in</span> sets:</div>\n\
<div class=\"line\"><a name=\"l03629\"></a><span class=\"lineno\"> 3629</span>&#160;                dn = om.MFnDependencyNode(obj)</div>\n\
<div class=\"line\"><a name=\"l03630\"></a><span class=\"lineno\"> 3630</span>&#160;                shaderPlug = dn.findPlug(<span class=\"stringliteral\">&quot;surfaceShader&quot;</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l03631\"></a><span class=\"lineno\"> 3631</span>&#160;                connectedPlugs = shaderPlug.connectedTo(<span class=\"keyword\">True</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l03632\"></a><span class=\"lineno\"> 3632</span>&#160;                <span class=\"keywordflow\">if</span> len(connectedPlugs) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l03633\"></a><span class=\"lineno\"> 3633</span>&#160;                    shader = connectedPlugs[0].node()</div>\n\
<div class=\"line\"><a name=\"l03634\"></a><span class=\"lineno\"> 3634</span>&#160;                    if(shader):</div>\n\
<div class=\"line\"><a name=\"l03635\"></a><span class=\"lineno\"> 3635</span>&#160;                        <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l03636\"></a><span class=\"lineno\"> 3636</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03637\"></a><span class=\"lineno\"> 3637</span>&#160;            <span class=\"comment\">## Check the dirty flag and make necessary update for shader assignment.</span></div>\n\
<div class=\"line\"><a name=\"l03638\"></a><span class=\"lineno\"> 3638</span>&#160;            updateMaterial =  self.fMesh.materialDirty()</div>\n\
<div class=\"line\"><a name=\"l03639\"></a><span class=\"lineno\"> 3639</span>&#160;            self.fMesh.setMaterialDirty(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l03640\"></a><span class=\"lineno\"> 3640</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03641\"></a><span class=\"lineno\"> 3641</span>&#160;            <span class=\"comment\">## Update shader for shaded item</span></div>\n\
<div class=\"line\"><a name=\"l03642\"></a><span class=\"lineno\"> 3642</span>&#160;            <span class=\"keywordflow\">if</span> updateMaterial <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> shadedItem.isShaderFromNode():</div>\n\
<div class=\"line\"><a name=\"l03643\"></a><span class=\"lineno\"> 3643</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shader <span class=\"keywordflow\">or</span> \\</div>\n\
<div class=\"line\"><a name=\"l03644\"></a><span class=\"lineno\"> 3644</span>&#160;                    <span class=\"keywordflow\">not</span> shadedItem.setShaderFromNode(shader, </div>\n\
<div class=\"line\"><a name=\"l03645\"></a><span class=\"lineno\"> 3645</span>&#160;                                                    instances[0], </div>\n\
<div class=\"line\"><a name=\"l03646\"></a><span class=\"lineno\"> 3646</span>&#160;                                                    apiMeshSubSceneOverride.shadedItemLinkLost, </div>\n\
<div class=\"line\"><a name=\"l03647\"></a><span class=\"lineno\"> 3647</span>&#160;                                                    ShadedItemUserData(self), </div>\n\
<div class=\"line\"><a name=\"l03648\"></a><span class=\"lineno\"> 3648</span>&#160;                                                    <span class=\"keyword\">True</span>):</div>\n\
<div class=\"line\"><a name=\"l03649\"></a><span class=\"lineno\"> 3649</span>&#160;                    shadedItem.setShader(self.fShadedShader)</div>\n\
<div class=\"line\"><a name=\"l03650\"></a><span class=\"lineno\"> 3650</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03651\"></a><span class=\"lineno\"> 3651</span>&#160;            <span class=\"comment\">## Update shader for textured item</span></div>\n\
<div class=\"line\"><a name=\"l03652\"></a><span class=\"lineno\"> 3652</span>&#160;            <span class=\"keywordflow\">if</span> updateMaterial <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> texturedItem.isShaderFromNode():</div>\n\
<div class=\"line\"><a name=\"l03653\"></a><span class=\"lineno\"> 3653</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shader <span class=\"keywordflow\">or</span> \\</div>\n\
<div class=\"line\"><a name=\"l03654\"></a><span class=\"lineno\"> 3654</span>&#160;                    <span class=\"keywordflow\">not</span> texturedItem.setShaderFromNode(shader,</div>\n\
<div class=\"line\"><a name=\"l03655\"></a><span class=\"lineno\"> 3655</span>&#160;                                                    instances[0],</div>\n\
<div class=\"line\"><a name=\"l03656\"></a><span class=\"lineno\"> 3656</span>&#160;                                                    apiMeshSubSceneOverride.shadedItemLinkLost,</div>\n\
<div class=\"line\"><a name=\"l03657\"></a><span class=\"lineno\"> 3657</span>&#160;                                                    ShadedItemUserData(self),</div>\n\
<div class=\"line\"><a name=\"l03658\"></a><span class=\"lineno\"> 3658</span>&#160;                                                    <span class=\"keyword\">False</span>):</div>\n\
<div class=\"line\"><a name=\"l03659\"></a><span class=\"lineno\"> 3659</span>&#160;                    texturedItem.setShader(self.fShadedShader)</div>\n\
<div class=\"line\"><a name=\"l03660\"></a><span class=\"lineno\"> 3660</span>&#160;        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l03661\"></a><span class=\"lineno\"> 3661</span>&#160;            print(<span class=\"stringliteral\">&quot;Unexpected error:&quot;</span>, sys.exc_info()[0])</div>\n\
<div class=\"line\"><a name=\"l03662\"></a><span class=\"lineno\"> 3662</span>&#160;            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l03663\"></a><span class=\"lineno\"> 3663</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03664\"></a><span class=\"lineno\"> 3664</span>&#160;        <span class=\"comment\"># render item for vertex selection</span></div>\n\
<div class=\"line\"><a name=\"l03665\"></a><span class=\"lineno\"> 3665</span>&#160;        vertexSelectionItem = container.find(self.sVertexSelectionName)</div>\n\
<div class=\"line\"><a name=\"l03666\"></a><span class=\"lineno\"> 3666</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> vertexSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l03667\"></a><span class=\"lineno\"> 3667</span>&#160;            vertexSelectionItem = omr.MRenderItem.create( self.sVertexSelectionName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l03668\"></a><span class=\"lineno\"> 3668</span>&#160;            <span class=\"comment\"># use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\"><a name=\"l03669\"></a><span class=\"lineno\"> 3669</span>&#160;            vertexSelectionItem.setDrawMode(omr.MGeometry.kSelectionOnly)</div>\n\
<div class=\"line\"><a name=\"l03670\"></a><span class=\"lineno\"> 3670</span>&#160;            <span class=\"comment\"># set the selection mask to kSelectMeshVerts : we want the render item to be used for Vertex Components selection</span></div>\n\
<div class=\"line\"><a name=\"l03671\"></a><span class=\"lineno\"> 3671</span>&#160;            mask = om.MSelectionMask(om.MSelectionMask.kSelectMeshVerts)</div>\n\
<div class=\"line\"><a name=\"l03672\"></a><span class=\"lineno\"> 3672</span>&#160;            mask.addMask(om.MSelectionMask.kSelectPointsForGravity)</div>\n\
<div class=\"line\"><a name=\"l03673\"></a><span class=\"lineno\"> 3673</span>&#160;            vertexSelectionItem.setSelectionMask( mask )</div>\n\
<div class=\"line\"><a name=\"l03674\"></a><span class=\"lineno\"> 3674</span>&#160;            <span class=\"comment\"># set selection priority : on top</span></div>\n\
<div class=\"line\"><a name=\"l03675\"></a><span class=\"lineno\"> 3675</span>&#160;            vertexSelectionItem.setDepthPriority(omr.MRenderItem.sSelectionDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03676\"></a><span class=\"lineno\"> 3676</span>&#160;            vertexSelectionItem.setShader(self.fVertexComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03677\"></a><span class=\"lineno\"> 3677</span>&#160;            container.add(vertexSelectionItem)</div>\n\
<div class=\"line\"><a name=\"l03678\"></a><span class=\"lineno\"> 3678</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03679\"></a><span class=\"lineno\"> 3679</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03680\"></a><span class=\"lineno\"> 3680</span>&#160;        <span class=\"comment\"># change this value to enable item instancing : same item will be rendered multiple times</span></div>\n\
<div class=\"line\"><a name=\"l03681\"></a><span class=\"lineno\"> 3681</span>&#160;        <span class=\"comment\"># the edge selection item will be visible in the viewport and rendered 3 times (with different scaling)</span></div>\n\
<div class=\"line\"><a name=\"l03682\"></a><span class=\"lineno\"> 3682</span>&#160;        <span class=\"comment\"># only the second instance (scale 1.5) will be selectable (see simpleComponentConverterSubsceneOverride)</span></div>\n\
<div class=\"line\"><a name=\"l03683\"></a><span class=\"lineno\"> 3683</span>&#160;        useDrawInstancingOnEdgeSelectionItem = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03684\"></a><span class=\"lineno\"> 3684</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03685\"></a><span class=\"lineno\"> 3685</span>&#160;        <span class=\"comment\"># render item for edge selection</span></div>\n\
<div class=\"line\"><a name=\"l03686\"></a><span class=\"lineno\"> 3686</span>&#160;        edgeSelectionItem = container.find(self.sEdgeSelectionName)</div>\n\
<div class=\"line\"><a name=\"l03687\"></a><span class=\"lineno\"> 3687</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> edgeSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l03688\"></a><span class=\"lineno\"> 3688</span>&#160;            <span class=\"comment\"># use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\"><a name=\"l03689\"></a><span class=\"lineno\"> 3689</span>&#160;            drawMode = omr.MGeometry.kSelectionOnly</div>\n\
<div class=\"line\"><a name=\"l03690\"></a><span class=\"lineno\"> 3690</span>&#160;            depthPriority = omr.MRenderItem.sSelectionDepthPriority</div>\n\
<div class=\"line\"><a name=\"l03691\"></a><span class=\"lineno\"> 3691</span>&#160;            <span class=\"keywordflow\">if</span> useDrawInstancingOnEdgeSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l03692\"></a><span class=\"lineno\"> 3692</span>&#160;                <span class=\"comment\"># display in viewport and in selection</span></div>\n\
<div class=\"line\"><a name=\"l03693\"></a><span class=\"lineno\"> 3693</span>&#160;                drawMode = omr.MGeometry.kAll</div>\n\
<div class=\"line\"><a name=\"l03694\"></a><span class=\"lineno\"> 3694</span>&#160;                <span class=\"comment\"># reduce priority so we can see the active item</span></div>\n\
<div class=\"line\"><a name=\"l03695\"></a><span class=\"lineno\"> 3695</span>&#160;                depthPriority = omr.MRenderItem.sActiveWireDepthPriority-1</div>\n\
<div class=\"line\"><a name=\"l03696\"></a><span class=\"lineno\"> 3696</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03697\"></a><span class=\"lineno\"> 3697</span>&#160;            edgeSelectionItem = omr.MRenderItem.create( self.sEdgeSelectionName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03698\"></a><span class=\"lineno\"> 3698</span>&#160;            edgeSelectionItem.setDrawMode(drawMode)</div>\n\
<div class=\"line\"><a name=\"l03699\"></a><span class=\"lineno\"> 3699</span>&#160;            <span class=\"comment\"># set selection priority : on top</span></div>\n\
<div class=\"line\"><a name=\"l03700\"></a><span class=\"lineno\"> 3700</span>&#160;            edgeSelectionItem.setDepthPriority(depthPriority)</div>\n\
<div class=\"line\"><a name=\"l03701\"></a><span class=\"lineno\"> 3701</span>&#160;            <span class=\"comment\"># set the selection mask to kSelectMeshEdges : we want the render item to be used for Edge Components selection</span></div>\n\
<div class=\"line\"><a name=\"l03702\"></a><span class=\"lineno\"> 3702</span>&#160;            edgeSelectionItem.setSelectionMask( om.MSelectionMask.kSelectMeshEdges )</div>\n\
<div class=\"line\"><a name=\"l03703\"></a><span class=\"lineno\"> 3703</span>&#160;            edgeSelectionItem.setShader(self.fWireShader)</div>\n\
<div class=\"line\"><a name=\"l03704\"></a><span class=\"lineno\"> 3704</span>&#160;            container.add(edgeSelectionItem)</div>\n\
<div class=\"line\"><a name=\"l03705\"></a><span class=\"lineno\"> 3705</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03706\"></a><span class=\"lineno\"> 3706</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03707\"></a><span class=\"lineno\"> 3707</span>&#160;        <span class=\"comment\"># render item for face selection - not visible in viewport</span></div>\n\
<div class=\"line\"><a name=\"l03708\"></a><span class=\"lineno\"> 3708</span>&#160;        faceSelectionItem = container.find(self.sFaceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l03709\"></a><span class=\"lineno\"> 3709</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> faceSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l03710\"></a><span class=\"lineno\"> 3710</span>&#160;            faceSelectionItem = omr.MRenderItem.create( self.sFaceSelectionName, omr.MRenderItem.DecorationItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l03711\"></a><span class=\"lineno\"> 3711</span>&#160;            <span class=\"comment\"># use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\"><a name=\"l03712\"></a><span class=\"lineno\"> 3712</span>&#160;            faceSelectionItem.setDrawMode(omr.MGeometry.kSelectionOnly)</div>\n\
<div class=\"line\"><a name=\"l03713\"></a><span class=\"lineno\"> 3713</span>&#160;            <span class=\"comment\"># set the selection mask to kSelectMeshFaces : we want the render item to be used for Face Components selection</span></div>\n\
<div class=\"line\"><a name=\"l03714\"></a><span class=\"lineno\"> 3714</span>&#160;            faceSelectionItem.setSelectionMask( om.MSelectionMask.kSelectMeshFaces )</div>\n\
<div class=\"line\"><a name=\"l03715\"></a><span class=\"lineno\"> 3715</span>&#160;            <span class=\"comment\"># set selection priority : on top</span></div>\n\
<div class=\"line\"><a name=\"l03716\"></a><span class=\"lineno\"> 3716</span>&#160;            faceSelectionItem.setDepthPriority(omr.MRenderItem.sSelectionDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03717\"></a><span class=\"lineno\"> 3717</span>&#160;            faceSelectionItem.setShader(self.fFaceComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03718\"></a><span class=\"lineno\"> 3718</span>&#160;            container.add(faceSelectionItem)</div>\n\
<div class=\"line\"><a name=\"l03719\"></a><span class=\"lineno\"> 3719</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03720\"></a><span class=\"lineno\"> 3720</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03721\"></a><span class=\"lineno\"> 3721</span>&#160;        <span class=\"comment\">## create and add a custom data to help the face component converter</span></div>\n\
<div class=\"line\"><a name=\"l03722\"></a><span class=\"lineno\"> 3722</span>&#160;        <span class=\"keywordflow\">if</span> updateGeometry:</div>\n\
<div class=\"line\"><a name=\"l03723\"></a><span class=\"lineno\"> 3723</span>&#160;            mySelectionData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l03724\"></a><span class=\"lineno\"> 3724</span>&#160;            mySelectionData.fMeshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l03725\"></a><span class=\"lineno\"> 3725</span>&#160;            faceSelectionItem.setCustomData(mySelectionData)</div>\n\
<div class=\"line\"><a name=\"l03726\"></a><span class=\"lineno\"> 3726</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03727\"></a><span class=\"lineno\"> 3727</span>&#160;        <span class=\"comment\"># render item to display active (selected) vertices</span></div>\n\
<div class=\"line\"><a name=\"l03728\"></a><span class=\"lineno\"> 3728</span>&#160;        activeVertexItem = container.find(self.sActiveVertexName)</div>\n\
<div class=\"line\"><a name=\"l03729\"></a><span class=\"lineno\"> 3729</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> activeVertexItem <span class=\"keywordflow\">and</span> anyVertexSelected:</div>\n\
<div class=\"line\"><a name=\"l03730\"></a><span class=\"lineno\"> 3730</span>&#160;            activeVertexItem = omr.MRenderItem.create( self.sActiveVertexName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l03731\"></a><span class=\"lineno\"> 3731</span>&#160;            activeVertexItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l03732\"></a><span class=\"lineno\"> 3732</span>&#160;            activeVertexItem.setDepthPriority(omr.MRenderItem.sActivePointDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03733\"></a><span class=\"lineno\"> 3733</span>&#160;            activeVertexItem.setShader(self.fVertexComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03734\"></a><span class=\"lineno\"> 3734</span>&#160;            container.add(activeVertexItem)</div>\n\
<div class=\"line\"><a name=\"l03735\"></a><span class=\"lineno\"> 3735</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03736\"></a><span class=\"lineno\"> 3736</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03737\"></a><span class=\"lineno\"> 3737</span>&#160;        <span class=\"keywordflow\">elif</span> activeVertexItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyVertexSelected:</div>\n\
<div class=\"line\"><a name=\"l03738\"></a><span class=\"lineno\"> 3738</span>&#160;            container.remove(self.sActiveVertexName)</div>\n\
<div class=\"line\"><a name=\"l03739\"></a><span class=\"lineno\"> 3739</span>&#160;            activeVertexItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03740\"></a><span class=\"lineno\"> 3740</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03741\"></a><span class=\"lineno\"> 3741</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03742\"></a><span class=\"lineno\"> 3742</span>&#160;        <span class=\"comment\"># render item to display active (selected) edges</span></div>\n\
<div class=\"line\"><a name=\"l03743\"></a><span class=\"lineno\"> 3743</span>&#160;        activeEdgeItem = container.find(self.sActiveEdgeName)</div>\n\
<div class=\"line\"><a name=\"l03744\"></a><span class=\"lineno\"> 3744</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> activeEdgeItem <span class=\"keywordflow\">and</span> anyEdgeSelected:</div>\n\
<div class=\"line\"><a name=\"l03745\"></a><span class=\"lineno\"> 3745</span>&#160;            activeEdgeItem = omr.MRenderItem.create( self.sActiveEdgeName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l03746\"></a><span class=\"lineno\"> 3746</span>&#160;            activeEdgeItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l03747\"></a><span class=\"lineno\"> 3747</span>&#160;            activeEdgeItem.setDepthPriority(omr.MRenderItem.sActiveLineDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03748\"></a><span class=\"lineno\"> 3748</span>&#160;            activeEdgeItem.setShader(self.fEdgeComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03749\"></a><span class=\"lineno\"> 3749</span>&#160;            container.add(activeEdgeItem)</div>\n\
<div class=\"line\"><a name=\"l03750\"></a><span class=\"lineno\"> 3750</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03751\"></a><span class=\"lineno\"> 3751</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03752\"></a><span class=\"lineno\"> 3752</span>&#160;        <span class=\"keywordflow\">elif</span> activeEdgeItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyEdgeSelected:</div>\n\
<div class=\"line\"><a name=\"l03753\"></a><span class=\"lineno\"> 3753</span>&#160;            container.remove(self.sActiveEdgeName)</div>\n\
<div class=\"line\"><a name=\"l03754\"></a><span class=\"lineno\"> 3754</span>&#160;            activeEdgeItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03755\"></a><span class=\"lineno\"> 3755</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03756\"></a><span class=\"lineno\"> 3756</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03757\"></a><span class=\"lineno\"> 3757</span>&#160;        <span class=\"comment\"># render item to display active (selected) faces</span></div>\n\
<div class=\"line\"><a name=\"l03758\"></a><span class=\"lineno\"> 3758</span>&#160;        activeFaceItem = container.find(self.sActiveFaceName)</div>\n\
<div class=\"line\"><a name=\"l03759\"></a><span class=\"lineno\"> 3759</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> activeFaceItem <span class=\"keywordflow\">and</span> anyFaceSelected:</div>\n\
<div class=\"line\"><a name=\"l03760\"></a><span class=\"lineno\"> 3760</span>&#160;            activeFaceItem = omr.MRenderItem.create( self.sActiveFaceName, omr.MRenderItem.DecorationItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l03761\"></a><span class=\"lineno\"> 3761</span>&#160;            activeFaceItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l03762\"></a><span class=\"lineno\"> 3762</span>&#160;            activeFaceItem.setDepthPriority(omr.MRenderItem.sActiveLineDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l03763\"></a><span class=\"lineno\"> 3763</span>&#160;            activeFaceItem.setShader(self.fFaceComponentShader)</div>\n\
<div class=\"line\"><a name=\"l03764\"></a><span class=\"lineno\"> 3764</span>&#160;            container.add(activeFaceItem)</div>\n\
<div class=\"line\"><a name=\"l03765\"></a><span class=\"lineno\"> 3765</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03766\"></a><span class=\"lineno\"> 3766</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03767\"></a><span class=\"lineno\"> 3767</span>&#160;        <span class=\"keywordflow\">elif</span> activeFaceItem <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> anyFaceSelected:</div>\n\
<div class=\"line\"><a name=\"l03768\"></a><span class=\"lineno\"> 3768</span>&#160;            container.remove(self.sActiveFaceName)</div>\n\
<div class=\"line\"><a name=\"l03769\"></a><span class=\"lineno\"> 3769</span>&#160;            activeFaceItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l03770\"></a><span class=\"lineno\"> 3770</span>&#160;            itemsChanged = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03771\"></a><span class=\"lineno\"> 3771</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03772\"></a><span class=\"lineno\"> 3772</span>&#160;        <span class=\"comment\">## update the line width on the shader for our wire items if it changed</span></div>\n\
<div class=\"line\"><a name=\"l03773\"></a><span class=\"lineno\"> 3773</span>&#160;        lineWidth = frameContext.getGlobalLineWidth()</div>\n\
<div class=\"line\"><a name=\"l03774\"></a><span class=\"lineno\"> 3774</span>&#160;        userWidthChange = <span class=\"keywordflow\">not</span> floatApproxEqual(lineWidth, self.fThickLineWidth)</div>\n\
<div class=\"line\"><a name=\"l03775\"></a><span class=\"lineno\"> 3775</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03776\"></a><span class=\"lineno\"> 3776</span>&#160;        doUpdate = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03777\"></a><span class=\"lineno\"> 3777</span>&#160;        targetRefinedLineWidth = 50.0</div>\n\
<div class=\"line\"><a name=\"l03778\"></a><span class=\"lineno\"> 3778</span>&#160;        <span class=\"keywordflow\">if</span> userWidthChange:</div>\n\
<div class=\"line\"><a name=\"l03779\"></a><span class=\"lineno\"> 3779</span>&#160;            self.fThickLineWidth = lineWidth</div>\n\
<div class=\"line\"><a name=\"l03780\"></a><span class=\"lineno\"> 3780</span>&#160;            doUpdate = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03781\"></a><span class=\"lineno\"> 3781</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03782\"></a><span class=\"lineno\"> 3782</span>&#160;            <span class=\"comment\">## First user change will trigger an update requirement</span></div>\n\
<div class=\"line\"><a name=\"l03783\"></a><span class=\"lineno\"> 3783</span>&#160;            <span class=\"keywordflow\">if</span> self.fUseQueuedLineUpdate:</div>\n\
<div class=\"line\"><a name=\"l03784\"></a><span class=\"lineno\"> 3784</span>&#160;                self.fQueuedLineWidth = lineWidth</div>\n\
<div class=\"line\"><a name=\"l03785\"></a><span class=\"lineno\"> 3785</span>&#160;                <span class=\"keywordflow\">if</span> self.fQueuedLineWidth &lt; targetRefinedLineWidth:</div>\n\
<div class=\"line\"><a name=\"l03786\"></a><span class=\"lineno\"> 3786</span>&#160;                    self.fQueueUpdate = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03787\"></a><span class=\"lineno\"> 3787</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03788\"></a><span class=\"lineno\"> 3788</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03789\"></a><span class=\"lineno\"> 3789</span>&#160;            <span class=\"comment\">## Increment by 1 until we reach the target width.</span></div>\n\
<div class=\"line\"><a name=\"l03790\"></a><span class=\"lineno\"> 3790</span>&#160;            <span class=\"comment\">## If we haven&#39;t reached it yet then queue another update</span></div>\n\
<div class=\"line\"><a name=\"l03791\"></a><span class=\"lineno\"> 3791</span>&#160;            <span class=\"comment\">## so we can increment and retest against the target width.</span></div>\n\
<div class=\"line\"><a name=\"l03792\"></a><span class=\"lineno\"> 3792</span>&#160;            <span class=\"keywordflow\">if</span> self.fUseQueuedLineUpdate <span class=\"keywordflow\">and</span> self.fQueueUpdate:</div>\n\
<div class=\"line\"><a name=\"l03793\"></a><span class=\"lineno\"> 3793</span>&#160;                <span class=\"keywordflow\">if</span> self.fQueuedLineWidth &lt; targetRefinedLineWidth:</div>\n\
<div class=\"line\"><a name=\"l03794\"></a><span class=\"lineno\"> 3794</span>&#160;                    lineWidth = self.fQueuedLineWidth</div>\n\
<div class=\"line\"><a name=\"l03795\"></a><span class=\"lineno\"> 3795</span>&#160;                    self.fQueuedLineWidth += 1</div>\n\
<div class=\"line\"><a name=\"l03796\"></a><span class=\"lineno\"> 3796</span>&#160;                    self.fQueueUpdate = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03797\"></a><span class=\"lineno\"> 3797</span>&#160;                    doUpdate = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03798\"></a><span class=\"lineno\"> 3798</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03799\"></a><span class=\"lineno\"> 3799</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03800\"></a><span class=\"lineno\"> 3800</span>&#160;                    <span class=\"comment\">## Reached target. Stop asking for more refinement</span></div>\n\
<div class=\"line\"><a name=\"l03801\"></a><span class=\"lineno\"> 3801</span>&#160;                    self.fQueueUpdate = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03802\"></a><span class=\"lineno\"> 3802</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03803\"></a><span class=\"lineno\"> 3803</span>&#160;        <span class=\"keywordflow\">if</span> doUpdate:</div>\n\
<div class=\"line\"><a name=\"l03804\"></a><span class=\"lineno\"> 3804</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> floatApproxEqual(lineWidth, 1.0):</div>\n\
<div class=\"line\"><a name=\"l03805\"></a><span class=\"lineno\"> 3805</span>&#160;                <span class=\"comment\">## Only set the shader if the line width changes (or the first time)</span></div>\n\
<div class=\"line\"><a name=\"l03806\"></a><span class=\"lineno\"> 3806</span>&#160;                lineWidthArray = [ lineWidth, lineWidth ]</div>\n\
<div class=\"line\"><a name=\"l03807\"></a><span class=\"lineno\"> 3807</span>&#160;                self.fThickWireShader.setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, lineWidthArray)</div>\n\
<div class=\"line\"><a name=\"l03808\"></a><span class=\"lineno\"> 3808</span>&#160;                self.fThickSelectShader.setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, lineWidthArray)</div>\n\
<div class=\"line\"><a name=\"l03809\"></a><span class=\"lineno\"> 3809</span>&#160;                <span class=\"keywordflow\">if</span> wireItem:</div>\n\
<div class=\"line\"><a name=\"l03810\"></a><span class=\"lineno\"> 3810</span>&#160;                    wireItem.setShader(self.fThickWireShader)</div>\n\
<div class=\"line\"><a name=\"l03811\"></a><span class=\"lineno\"> 3811</span>&#160;                <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l03812\"></a><span class=\"lineno\"> 3812</span>&#160;                    selectItem.setShader(self.fThickSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03813\"></a><span class=\"lineno\"> 3813</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03814\"></a><span class=\"lineno\"> 3814</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03815\"></a><span class=\"lineno\"> 3815</span>&#160;                <span class=\"keywordflow\">if</span> wireItem:</div>\n\
<div class=\"line\"><a name=\"l03816\"></a><span class=\"lineno\"> 3816</span>&#160;                    wireItem.setShader(self.fWireShader)</div>\n\
<div class=\"line\"><a name=\"l03817\"></a><span class=\"lineno\"> 3817</span>&#160;                <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l03818\"></a><span class=\"lineno\"> 3818</span>&#160;                    selectItem.setShader(self.fSelectShader)</div>\n\
<div class=\"line\"><a name=\"l03819\"></a><span class=\"lineno\"> 3819</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03820\"></a><span class=\"lineno\"> 3820</span>&#160;        <span class=\"comment\">## Update geometry if required</span></div>\n\
<div class=\"line\"><a name=\"l03821\"></a><span class=\"lineno\"> 3821</span>&#160;        <span class=\"keywordflow\">if</span> itemsChanged <span class=\"keywordflow\">or</span> updateGeometry:</div>\n\
<div class=\"line\"><a name=\"l03822\"></a><span class=\"lineno\"> 3822</span>&#160;            bounds = self.fMesh.boundingBox()</div>\n\
<div class=\"line\"><a name=\"l03823\"></a><span class=\"lineno\"> 3823</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03824\"></a><span class=\"lineno\"> 3824</span>&#160;            wireBuffers = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l03825\"></a><span class=\"lineno\"> 3825</span>&#160;            wireBuffers.append(self.fPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l03826\"></a><span class=\"lineno\"> 3826</span>&#160;            <span class=\"keywordflow\">if</span> wireItem:</div>\n\
<div class=\"line\"><a name=\"l03827\"></a><span class=\"lineno\"> 3827</span>&#160;                self.setGeometryForRenderItem(wireItem, wireBuffers, self.fWireIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03828\"></a><span class=\"lineno\"> 3828</span>&#160;            <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l03829\"></a><span class=\"lineno\"> 3829</span>&#160;                self.setGeometryForRenderItem(selectItem, wireBuffers, self.fWireIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03830\"></a><span class=\"lineno\"> 3830</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03831\"></a><span class=\"lineno\"> 3831</span>&#160;            boxBuffers = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l03832\"></a><span class=\"lineno\"> 3832</span>&#160;            boxBuffers.append(self.fBoxPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l03833\"></a><span class=\"lineno\"> 3833</span>&#160;            <span class=\"keywordflow\">if</span> boxItem:</div>\n\
<div class=\"line\"><a name=\"l03834\"></a><span class=\"lineno\"> 3834</span>&#160;                self.setGeometryForRenderItem(boxItem, boxBuffers, self.fBoxIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03835\"></a><span class=\"lineno\"> 3835</span>&#160;            <span class=\"keywordflow\">if</span> selectedBoxItem:</div>\n\
<div class=\"line\"><a name=\"l03836\"></a><span class=\"lineno\"> 3836</span>&#160;                self.setGeometryForRenderItem(selectedBoxItem, boxBuffers, self.fBoxIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03837\"></a><span class=\"lineno\"> 3837</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03838\"></a><span class=\"lineno\"> 3838</span>&#160;            shadedBuffers = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l03839\"></a><span class=\"lineno\"> 3839</span>&#160;            shadedBuffers.append(self.fPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l03840\"></a><span class=\"lineno\"> 3840</span>&#160;            shadedBuffers.append(self.fNormalBuffer, <span class=\"stringliteral\">&quot;normals&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l03841\"></a><span class=\"lineno\"> 3841</span>&#160;            self.setGeometryForRenderItem(shadedItem, shadedBuffers, self.fShadedIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03842\"></a><span class=\"lineno\"> 3842</span>&#160;            self.setGeometryForRenderItem(texturedItem, shadedBuffers, self.fShadedIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03843\"></a><span class=\"lineno\"> 3843</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03844\"></a><span class=\"lineno\"> 3844</span>&#160;            <span class=\"comment\"># The vertexSelectionItem has a sequential index buffer, use non-indexed draw:</span></div>\n\
<div class=\"line\"><a name=\"l03845\"></a><span class=\"lineno\"> 3845</span>&#160;            self.setGeometryForRenderItem(vertexSelectionItem, wireBuffers, objectBox = bounds)</div>\n\
<div class=\"line\"><a name=\"l03846\"></a><span class=\"lineno\"> 3846</span>&#160;            self.setGeometryForRenderItem(edgeSelectionItem, wireBuffers, self.fWireIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03847\"></a><span class=\"lineno\"> 3847</span>&#160;            self.setGeometryForRenderItem(faceSelectionItem, wireBuffers, self.fShadedIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03848\"></a><span class=\"lineno\"> 3848</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03849\"></a><span class=\"lineno\"> 3849</span>&#160;        <span class=\"comment\">## Update active component items if required</span></div>\n\
<div class=\"line\"><a name=\"l03850\"></a><span class=\"lineno\"> 3850</span>&#160;        <span class=\"keywordflow\">if</span> itemsChanged <span class=\"keywordflow\">or</span> updateActiveItems:</div>\n\
<div class=\"line\"><a name=\"l03851\"></a><span class=\"lineno\"> 3851</span>&#160;            bounds = self.fMesh.boundingBox()</div>\n\
<div class=\"line\"><a name=\"l03852\"></a><span class=\"lineno\"> 3852</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03853\"></a><span class=\"lineno\"> 3853</span>&#160;            vertexBuffer = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l03854\"></a><span class=\"lineno\"> 3854</span>&#160;            vertexBuffer.append(self.fPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l03855\"></a><span class=\"lineno\"> 3855</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03856\"></a><span class=\"lineno\"> 3856</span>&#160;            <span class=\"keywordflow\">if</span> activeVertexItem:</div>\n\
<div class=\"line\"><a name=\"l03857\"></a><span class=\"lineno\"> 3857</span>&#160;                self.setGeometryForRenderItem(activeVertexItem, vertexBuffer, self.fActiveVerticesIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03858\"></a><span class=\"lineno\"> 3858</span>&#160;            <span class=\"keywordflow\">if</span> activeEdgeItem:</div>\n\
<div class=\"line\"><a name=\"l03859\"></a><span class=\"lineno\"> 3859</span>&#160;                self.setGeometryForRenderItem(activeEdgeItem, vertexBuffer, self.fActiveEdgesIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03860\"></a><span class=\"lineno\"> 3860</span>&#160;            <span class=\"keywordflow\">if</span> activeFaceItem:</div>\n\
<div class=\"line\"><a name=\"l03861\"></a><span class=\"lineno\"> 3861</span>&#160;                self.setGeometryForRenderItem(activeFaceItem, vertexBuffer, self.fActiveFacesIndexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l03862\"></a><span class=\"lineno\"> 3862</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03863\"></a><span class=\"lineno\"> 3863</span>&#160;        <span class=\"comment\">## Update render item matrices if necessary</span></div>\n\
<div class=\"line\"><a name=\"l03864\"></a><span class=\"lineno\"> 3864</span>&#160;        <span class=\"keywordflow\">if</span> itemsChanged <span class=\"keywordflow\">or</span> anyMatrixChanged:</div>\n\
<div class=\"line\"><a name=\"l03865\"></a><span class=\"lineno\"> 3865</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fIsInstanceMode <span class=\"keywordflow\">and</span> numInstances == 1:</div>\n\
<div class=\"line\"><a name=\"l03866\"></a><span class=\"lineno\"> 3866</span>&#160;                <span class=\"comment\">## When not dealing with multiple instances, don&#39;t convert the render items into instanced</span></div>\n\
<div class=\"line\"><a name=\"l03867\"></a><span class=\"lineno\"> 3867</span>&#160;                <span class=\"comment\">## mode.  Set the matrices on them directly.</span></div>\n\
<div class=\"line\"><a name=\"l03868\"></a><span class=\"lineno\"> 3868</span>&#160;                objToWorld = instanceMatrixArray[0]</div>\n\
<div class=\"line\"><a name=\"l03869\"></a><span class=\"lineno\"> 3869</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03870\"></a><span class=\"lineno\"> 3870</span>&#160;                <span class=\"keywordflow\">if</span> wireItem:</div>\n\
<div class=\"line\"><a name=\"l03871\"></a><span class=\"lineno\"> 3871</span>&#160;                    wireItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03872\"></a><span class=\"lineno\"> 3872</span>&#160;                <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l03873\"></a><span class=\"lineno\"> 3873</span>&#160;                    selectItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03874\"></a><span class=\"lineno\"> 3874</span>&#160;                <span class=\"keywordflow\">if</span> boxItem:</div>\n\
<div class=\"line\"><a name=\"l03875\"></a><span class=\"lineno\"> 3875</span>&#160;                    boxItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03876\"></a><span class=\"lineno\"> 3876</span>&#160;                <span class=\"keywordflow\">if</span> selectedBoxItem:</div>\n\
<div class=\"line\"><a name=\"l03877\"></a><span class=\"lineno\"> 3877</span>&#160;                    selectedBoxItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03878\"></a><span class=\"lineno\"> 3878</span>&#160;                shadedItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03879\"></a><span class=\"lineno\"> 3879</span>&#160;                texturedItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03880\"></a><span class=\"lineno\"> 3880</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03881\"></a><span class=\"lineno\"> 3881</span>&#160;                vertexSelectionItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03882\"></a><span class=\"lineno\"> 3882</span>&#160;                edgeSelectionItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03883\"></a><span class=\"lineno\"> 3883</span>&#160;                faceSelectionItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03884\"></a><span class=\"lineno\"> 3884</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03885\"></a><span class=\"lineno\"> 3885</span>&#160;                <span class=\"keywordflow\">if</span> useDrawInstancingOnEdgeSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l03886\"></a><span class=\"lineno\"> 3886</span>&#160;                    <span class=\"comment\">## create/update draw instances</span></div>\n\
<div class=\"line\"><a name=\"l03887\"></a><span class=\"lineno\"> 3887</span>&#160;                    <span class=\"comment\">## first instance : no scaling - won&#39;t be selectable see simpleComponentConverterSubsceneOverride.addIntersection</span></div>\n\
<div class=\"line\"><a name=\"l03888\"></a><span class=\"lineno\"> 3888</span>&#160;                    transform1 = objToWorld</div>\n\
<div class=\"line\"><a name=\"l03889\"></a><span class=\"lineno\"> 3889</span>&#160;                    transform1[15] = 1  <span class=\"comment\"># make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\"><a name=\"l03890\"></a><span class=\"lineno\"> 3890</span>&#160;                    <span class=\"comment\">## second instance : scaled by 2</span></div>\n\
<div class=\"line\"><a name=\"l03891\"></a><span class=\"lineno\"> 3891</span>&#160;                    transform2 = objToWorld * 2</div>\n\
<div class=\"line\"><a name=\"l03892\"></a><span class=\"lineno\"> 3892</span>&#160;                    transform2[15] = 1  <span class=\"comment\"># make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\"><a name=\"l03893\"></a><span class=\"lineno\"> 3893</span>&#160;                    <span class=\"comment\">## third instance : scaled by 3 - won&#39;t be selectable see simpleComponentConverterSubsceneOverride.addIntersection</span></div>\n\
<div class=\"line\"><a name=\"l03894\"></a><span class=\"lineno\"> 3894</span>&#160;                    transform3 = objToWorld * 3</div>\n\
<div class=\"line\"><a name=\"l03895\"></a><span class=\"lineno\"> 3895</span>&#160;                    transform3[15] = 1  <span class=\"comment\"># make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\"><a name=\"l03896\"></a><span class=\"lineno\"> 3896</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03897\"></a><span class=\"lineno\"> 3897</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keyword\">True</span>:</div>\n\
<div class=\"line\"><a name=\"l03898\"></a><span class=\"lineno\"> 3898</span>&#160;                        transforms = om.MMatrixArray((transform1, transform2, transform3))</div>\n\
<div class=\"line\"><a name=\"l03899\"></a><span class=\"lineno\"> 3899</span>&#160;                        self.setInstanceTransformArray(edgeSelectionItem, transforms)</div>\n\
<div class=\"line\"><a name=\"l03900\"></a><span class=\"lineno\"> 3900</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03901\"></a><span class=\"lineno\"> 3901</span>&#160;                        <span class=\"comment\">## another way to set up the instances</span></div>\n\
<div class=\"line\"><a name=\"l03902\"></a><span class=\"lineno\"> 3902</span>&#160;                        <span class=\"comment\">## useful to get the instance ID</span></div>\n\
<div class=\"line\"><a name=\"l03903\"></a><span class=\"lineno\"> 3903</span>&#160;                        <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l03904\"></a><span class=\"lineno\"> 3904</span>&#160;                            self.removeAllInstances(edgeSelectionItem)</div>\n\
<div class=\"line\"><a name=\"l03905\"></a><span class=\"lineno\"> 3905</span>&#160;                        <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l03906\"></a><span class=\"lineno\"> 3906</span>&#160;                            <span class=\"comment\"># removeAllInstances raise an error if the item is not set up for instancing</span></div>\n\
<div class=\"line\"><a name=\"l03907\"></a><span class=\"lineno\"> 3907</span>&#160;                            <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l03908\"></a><span class=\"lineno\"> 3908</span>&#160;                        newInstanceId = self.addInstanceTransform(edgeSelectionItem, transform1)</div>\n\
<div class=\"line\"><a name=\"l03909\"></a><span class=\"lineno\"> 3909</span>&#160;                        print(<span class=\"stringliteral\">&quot;newInstanceId &quot;</span> + str(newInstanceId))</div>\n\
<div class=\"line\"><a name=\"l03910\"></a><span class=\"lineno\"> 3910</span>&#160;                        newInstanceId = self.addInstanceTransform(edgeSelectionItem, transform2)</div>\n\
<div class=\"line\"><a name=\"l03911\"></a><span class=\"lineno\"> 3911</span>&#160;                        print(<span class=\"stringliteral\">&quot;newInstanceId &quot;</span> + str(newInstanceId))</div>\n\
<div class=\"line\"><a name=\"l03912\"></a><span class=\"lineno\"> 3912</span>&#160;                        newInstanceId = self.addInstanceTransform(edgeSelectionItem, transform3)</div>\n\
<div class=\"line\"><a name=\"l03913\"></a><span class=\"lineno\"> 3913</span>&#160;                        print(<span class=\"stringliteral\">&quot;newInstanceId &quot;</span> + str(newInstanceId))</div>\n\
<div class=\"line\"><a name=\"l03914\"></a><span class=\"lineno\"> 3914</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03915\"></a><span class=\"lineno\"> 3915</span>&#160;                <span class=\"keywordflow\">if</span> activeVertexItem:</div>\n\
<div class=\"line\"><a name=\"l03916\"></a><span class=\"lineno\"> 3916</span>&#160;                    activeVertexItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03917\"></a><span class=\"lineno\"> 3917</span>&#160;                <span class=\"keywordflow\">if</span> activeEdgeItem:</div>\n\
<div class=\"line\"><a name=\"l03918\"></a><span class=\"lineno\"> 3918</span>&#160;                    activeEdgeItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03919\"></a><span class=\"lineno\"> 3919</span>&#160;                <span class=\"keywordflow\">if</span> activeFaceItem:</div>\n\
<div class=\"line\"><a name=\"l03920\"></a><span class=\"lineno\"> 3920</span>&#160;                    activeFaceItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l03921\"></a><span class=\"lineno\"> 3921</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03922\"></a><span class=\"lineno\"> 3922</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l03923\"></a><span class=\"lineno\"> 3923</span>&#160;                <span class=\"comment\">## If we have DAG instances of this shape then use the MPxSubSceneOverride instance</span></div>\n\
<div class=\"line\"><a name=\"l03924\"></a><span class=\"lineno\"> 3924</span>&#160;                <span class=\"comment\">## transform API to set up instance copies of the render items.  This will be faster</span></div>\n\
<div class=\"line\"><a name=\"l03925\"></a><span class=\"lineno\"> 3925</span>&#160;                <span class=\"comment\">## to render than creating render items for each instance, especially for large numbers</span></div>\n\
<div class=\"line\"><a name=\"l03926\"></a><span class=\"lineno\"> 3926</span>&#160;                <span class=\"comment\">## of instances.</span></div>\n\
<div class=\"line\"><a name=\"l03927\"></a><span class=\"lineno\"> 3927</span>&#160;                <span class=\"comment\">## Note: for simplicity, this code is not tracking the actual shaded material binding</span></div>\n\
<div class=\"line\"><a name=\"l03928\"></a><span class=\"lineno\"> 3928</span>&#160;                <span class=\"comment\">## of the shape.  MPxSubSceneOverride render item instances require that the shader</span></div>\n\
<div class=\"line\"><a name=\"l03929\"></a><span class=\"lineno\"> 3929</span>&#160;                <span class=\"comment\">## and other properties of the instances all match.  So if we were to bind a shader based</span></div>\n\
<div class=\"line\"><a name=\"l03930\"></a><span class=\"lineno\"> 3930</span>&#160;                <span class=\"comment\">## on the DAG shape material binding, then we would need one render item per material. We</span></div>\n\
<div class=\"line\"><a name=\"l03931\"></a><span class=\"lineno\"> 3931</span>&#160;                <span class=\"comment\">## could then group up the instance transforms based matching materials.</span></div>\n\
<div class=\"line\"><a name=\"l03932\"></a><span class=\"lineno\"> 3932</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03933\"></a><span class=\"lineno\"> 3933</span>&#160;                <span class=\"comment\">## Note this has to happen after the geometry and shaders are set, otherwise it will fail.</span></div>\n\
<div class=\"line\"><a name=\"l03934\"></a><span class=\"lineno\"> 3934</span>&#160;                <span class=\"keywordflow\">if</span> wireItem:</div>\n\
<div class=\"line\"><a name=\"l03935\"></a><span class=\"lineno\"> 3935</span>&#160;                    self.setInstanceTransformArray(wireItem, unselectedInstanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03936\"></a><span class=\"lineno\"> 3936</span>&#160;                <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l03937\"></a><span class=\"lineno\"> 3937</span>&#160;                    self.setInstanceTransformArray(selectItem, selectedInstanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03938\"></a><span class=\"lineno\"> 3938</span>&#160;                <span class=\"keywordflow\">if</span> boxItem:</div>\n\
<div class=\"line\"><a name=\"l03939\"></a><span class=\"lineno\"> 3939</span>&#160;                    self.setInstanceTransformArray(boxItem, unselectedInstanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03940\"></a><span class=\"lineno\"> 3940</span>&#160;                <span class=\"keywordflow\">if</span> selectedBoxItem:</div>\n\
<div class=\"line\"><a name=\"l03941\"></a><span class=\"lineno\"> 3941</span>&#160;                    self.setInstanceTransformArray(selectedBoxItem, selectedInstanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03942\"></a><span class=\"lineno\"> 3942</span>&#160;                self.setInstanceTransformArray(shadedItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03943\"></a><span class=\"lineno\"> 3943</span>&#160;                self.setInstanceTransformArray(texturedItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03944\"></a><span class=\"lineno\"> 3944</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03945\"></a><span class=\"lineno\"> 3945</span>&#160;                self.setInstanceTransformArray(vertexSelectionItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03946\"></a><span class=\"lineno\"> 3946</span>&#160;                self.setInstanceTransformArray(edgeSelectionItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03947\"></a><span class=\"lineno\"> 3947</span>&#160;                self.setInstanceTransformArray(faceSelectionItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03948\"></a><span class=\"lineno\"> 3948</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03949\"></a><span class=\"lineno\"> 3949</span>&#160;                <span class=\"keywordflow\">if</span> activeVertexItem:</div>\n\
<div class=\"line\"><a name=\"l03950\"></a><span class=\"lineno\"> 3950</span>&#160;                    self.setInstanceTransformArray(activeVertexItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03951\"></a><span class=\"lineno\"> 3951</span>&#160;                <span class=\"keywordflow\">if</span> activeEdgeItem:</div>\n\
<div class=\"line\"><a name=\"l03952\"></a><span class=\"lineno\"> 3952</span>&#160;                    self.setInstanceTransformArray(activeEdgeItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03953\"></a><span class=\"lineno\"> 3953</span>&#160;                <span class=\"keywordflow\">if</span> activeFaceItem:</div>\n\
<div class=\"line\"><a name=\"l03954\"></a><span class=\"lineno\"> 3954</span>&#160;                    self.setInstanceTransformArray(activeFaceItem, instanceMatrixArray)</div>\n\
<div class=\"line\"><a name=\"l03955\"></a><span class=\"lineno\"> 3955</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03956\"></a><span class=\"lineno\"> 3956</span>&#160;                <span class=\"comment\">## Once we change the render items into instance rendering they can&#39;t be changed back without</span></div>\n\
<div class=\"line\"><a name=\"l03957\"></a><span class=\"lineno\"> 3957</span>&#160;                <span class=\"comment\">## being deleted and re-created.  So if instances are deleted to leave only one remaining,</span></div>\n\
<div class=\"line\"><a name=\"l03958\"></a><span class=\"lineno\"> 3958</span>&#160;                <span class=\"comment\">## just keep treating them the instance way.</span></div>\n\
<div class=\"line\"><a name=\"l03959\"></a><span class=\"lineno\"> 3959</span>&#160;                self.fIsInstanceMode = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03960\"></a><span class=\"lineno\"> 3960</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03961\"></a><span class=\"lineno\"> 3961</span>&#160;        self.manageIsolateSelectRenderItems(container, frameContext, instances, viewSelectedFaceInfo, shader, updateMaterial, updateGeometry)</div>\n\
<div class=\"line\"><a name=\"l03962\"></a><span class=\"lineno\"> 3962</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03963\"></a><span class=\"lineno\"> 3963</span>&#160;        <span class=\"keywordflow\">if</span> itemsChanged <span class=\"keywordflow\">or</span> anyMatrixChanged <span class=\"keywordflow\">or</span> updateGeometry:</div>\n\
<div class=\"line\"><a name=\"l03964\"></a><span class=\"lineno\"> 3964</span>&#160;            <span class=\"comment\">## On transform or geometry change, force recalculation of shadow maps</span></div>\n\
<div class=\"line\"><a name=\"l03965\"></a><span class=\"lineno\"> 3965</span>&#160;            omr.MRenderer.setLightsAndShadowsDirty()</div>\n\
<div class=\"line\"><a name=\"l03966\"></a><span class=\"lineno\"> 3966</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l03967\"></a><span class=\"lineno\"> 3967</span>&#160;    <span class=\"keyword\">def </span>manageIsolateSelectRenderItems(self, container, frameContext, instances, viewSelectedFaceInfo, shader, updateMaterial, updateGeometry):</div>\n\
<div class=\"line\"><a name=\"l03968\"></a><span class=\"lineno\"> 3968</span>&#160;        <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> self.fMesh):</div>\n\
<div class=\"line\"><a name=\"l03969\"></a><span class=\"lineno\"> 3969</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03970\"></a><span class=\"lineno\"> 3970</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03971\"></a><span class=\"lineno\"> 3971</span>&#160;        meshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l03972\"></a><span class=\"lineno\"> 3972</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03973\"></a><span class=\"lineno\"> 3973</span>&#160;        <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> meshGeom):</div>\n\
<div class=\"line\"><a name=\"l03974\"></a><span class=\"lineno\"> 3974</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03975\"></a><span class=\"lineno\"> 3975</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03976\"></a><span class=\"lineno\"> 3976</span>&#160;        destination = frameContext.renderingDestination()</div>\n\
<div class=\"line\"><a name=\"l03977\"></a><span class=\"lineno\"> 3977</span>&#160;        <span class=\"keywordflow\">if</span> (destination[0] != omr.MFrameContext.k3dViewport):</div>\n\
<div class=\"line\"><a name=\"l03978\"></a><span class=\"lineno\"> 3978</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l03979\"></a><span class=\"lineno\"> 3979</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03980\"></a><span class=\"lineno\"> 3980</span>&#160;        <span class=\"comment\">## Check whether the view-selected faces of the DAG instances changed for the current view</span></div>\n\
<div class=\"line\"><a name=\"l03981\"></a><span class=\"lineno\"> 3981</span>&#160;        activeViewName = destination[1]</div>\n\
<div class=\"line\"><a name=\"l03982\"></a><span class=\"lineno\"> 3982</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03983\"></a><span class=\"lineno\"> 3983</span>&#160;        updateViewSelectedFaces = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l03984\"></a><span class=\"lineno\"> 3984</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l03985\"></a><span class=\"lineno\"> 3985</span>&#160;        if(activeViewName <span class=\"keywordflow\">not</span> <span class=\"keywordflow\">in</span> self.fViewSelectedFaceInfoCache):</div>\n\
<div class=\"line\"><a name=\"l03986\"></a><span class=\"lineno\"> 3986</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03987\"></a><span class=\"lineno\"> 3987</span>&#160;            if(len(viewSelectedFaceInfo) != 0):</div>\n\
<div class=\"line\"><a name=\"l03988\"></a><span class=\"lineno\"> 3988</span>&#160;                updateViewSelectedFaces = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03989\"></a><span class=\"lineno\"> 3989</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l03990\"></a><span class=\"lineno\"> 3990</span>&#160;        elif(self.fViewSelectedFaceInfoCache[activeViewName] != viewSelectedFaceInfo):</div>\n\
<div class=\"line\"><a name=\"l03991\"></a><span class=\"lineno\"> 3991</span>&#160;            updateViewSelectedFaces = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l03992\"></a><span class=\"lineno\"> 3992</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l03993\"></a><span class=\"lineno\"> 3993</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03994\"></a><span class=\"lineno\"> 3994</span>&#160;        <span class=\"comment\">##  Create/remove render items for the current view</span></div>\n\
<div class=\"line\"><a name=\"l03995\"></a><span class=\"lineno\"> 3995</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l03996\"></a><span class=\"lineno\"> 3996</span>&#160;        <span class=\"keywordflow\">if</span> updateViewSelectedFaces:</div>\n\
<div class=\"line\"><a name=\"l03997\"></a><span class=\"lineno\"> 3997</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l03998\"></a><span class=\"lineno\"> 3998</span>&#160;            <span class=\"comment\">## Gather previous instances which own view-selected faces</span></div>\n\
<div class=\"line\"><a name=\"l03999\"></a><span class=\"lineno\"> 3999</span>&#160;            prevInstIdxArray = set()</div>\n\
<div class=\"line\"><a name=\"l04000\"></a><span class=\"lineno\"> 4000</span>&#160;            <span class=\"keywordflow\">if</span> (activeViewName <span class=\"keywordflow\">in</span> self.fViewSelectedFaceInfoCache):</div>\n\
<div class=\"line\"><a name=\"l04001\"></a><span class=\"lineno\"> 4001</span>&#160;                prevInfo = self.fViewSelectedFaceInfoCache[activeViewName]</div>\n\
<div class=\"line\"><a name=\"l04002\"></a><span class=\"lineno\"> 4002</span>&#160;                <span class=\"keywordflow\">for</span> instIdx, faceIdxList <span class=\"keywordflow\">in</span> list(prevInfo.items()):</div>\n\
<div class=\"line\"><a name=\"l04003\"></a><span class=\"lineno\"> 4003</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> faceIdxList:</div>\n\
<div class=\"line\"><a name=\"l04004\"></a><span class=\"lineno\"> 4004</span>&#160;                        <span class=\"keywordflow\">if</span> faceIdx != sViewSelectedInstanceMark:</div>\n\
<div class=\"line\"><a name=\"l04005\"></a><span class=\"lineno\"> 4005</span>&#160;                            prevInstIdxArray.add(instIdx)</div>\n\
<div class=\"line\"><a name=\"l04006\"></a><span class=\"lineno\"> 4006</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04007\"></a><span class=\"lineno\"> 4007</span>&#160;            <span class=\"comment\">## Gather current instances which own view-selected faces</span></div>\n\
<div class=\"line\"><a name=\"l04008\"></a><span class=\"lineno\"> 4008</span>&#160;            currInstIdxArray = set()</div>\n\
<div class=\"line\"><a name=\"l04009\"></a><span class=\"lineno\"> 4009</span>&#160;            <span class=\"keywordflow\">for</span> instIdx, faceIdxList <span class=\"keywordflow\">in</span> list(viewSelectedFaceInfo.items()):</div>\n\
<div class=\"line\"><a name=\"l04010\"></a><span class=\"lineno\"> 4010</span>&#160;                <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> faceIdxList:</div>\n\
<div class=\"line\"><a name=\"l04011\"></a><span class=\"lineno\"> 4011</span>&#160;                    <span class=\"keywordflow\">if</span> (faceIdx != sViewSelectedInstanceMark):</div>\n\
<div class=\"line\"><a name=\"l04012\"></a><span class=\"lineno\"> 4012</span>&#160;                        currInstIdxArray.add(instIdx)</div>\n\
<div class=\"line\"><a name=\"l04013\"></a><span class=\"lineno\"> 4013</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l04014\"></a><span class=\"lineno\"> 4014</span>&#160;            <span class=\"comment\">## Update the cache now that we&#39;ve gathered the previous data</span></div>\n\
<div class=\"line\"><a name=\"l04015\"></a><span class=\"lineno\"> 4015</span>&#160;            self.fViewSelectedFaceInfoCache[activeViewName] = viewSelectedFaceInfo</div>\n\
<div class=\"line\"><a name=\"l04016\"></a><span class=\"lineno\"> 4016</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04017\"></a><span class=\"lineno\"> 4017</span>&#160;            <span class=\"comment\">## For the DAG instances which don&#39;t own view-selected faces any more,</span></div>\n\
<div class=\"line\"><a name=\"l04018\"></a><span class=\"lineno\"> 4018</span>&#160;            <span class=\"comment\">## their isolate select render items are removed to reduce the number of</span></div>\n\
<div class=\"line\"><a name=\"l04019\"></a><span class=\"lineno\"> 4019</span>&#160;            <span class=\"comment\">## render items. Plug-ins can also choose to disable the render items if</span></div>\n\
<div class=\"line\"><a name=\"l04020\"></a><span class=\"lineno\"> 4020</span>&#160;            <span class=\"comment\">## frequent reuse of the render items is expected.</span></div>\n\
<div class=\"line\"><a name=\"l04021\"></a><span class=\"lineno\"> 4021</span>&#160;            diffInstIdxArray = prevInstIdxArray - currInstIdxArray</div>\n\
<div class=\"line\"><a name=\"l04022\"></a><span class=\"lineno\"> 4022</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04023\"></a><span class=\"lineno\"> 4023</span>&#160;            <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> diffInstIdxArray:</div>\n\
<div class=\"line\"><a name=\"l04024\"></a><span class=\"lineno\"> 4024</span>&#160;                namePostfix = self.sNameSeparator + str(instIdx) + self.sNameSeparator + activeViewName</div>\n\
<div class=\"line\"><a name=\"l04025\"></a><span class=\"lineno\"> 4025</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04026\"></a><span class=\"lineno\"> 4026</span>&#160;                shadedName = self.sShadedName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04027\"></a><span class=\"lineno\"> 4027</span>&#160;                container.remove(shadedName)</div>\n\
<div class=\"line\"><a name=\"l04028\"></a><span class=\"lineno\"> 4028</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04029\"></a><span class=\"lineno\"> 4029</span>&#160;                texturedName = self.sTexturedName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04030\"></a><span class=\"lineno\"> 4030</span>&#160;                container.remove(texturedName)</div>\n\
<div class=\"line\"><a name=\"l04031\"></a><span class=\"lineno\"> 4031</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04032\"></a><span class=\"lineno\"> 4032</span>&#160;                faceSelectionName = self.sFaceSelectionName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04033\"></a><span class=\"lineno\"> 4033</span>&#160;                container.remove(faceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l04034\"></a><span class=\"lineno\"> 4034</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04035\"></a><span class=\"lineno\"> 4035</span>&#160;            <span class=\"comment\">## Create render items for new DAG instances which own view-selected</span></div>\n\
<div class=\"line\"><a name=\"l04036\"></a><span class=\"lineno\"> 4036</span>&#160;            <span class=\"comment\">## faces since the last update</span></div>\n\
<div class=\"line\"><a name=\"l04037\"></a><span class=\"lineno\"> 4037</span>&#160;            <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> currInstIdxArray:</div>\n\
<div class=\"line\"><a name=\"l04038\"></a><span class=\"lineno\"> 4038</span>&#160;                namePostfix = self.sNameSeparator + str(instIdx) + self.sNameSeparator + activeViewName</div>\n\
<div class=\"line\"><a name=\"l04039\"></a><span class=\"lineno\"> 4039</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04040\"></a><span class=\"lineno\"> 4040</span>&#160;                shadedName = self.sShadedName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04041\"></a><span class=\"lineno\"> 4041</span>&#160;                viewSelectedShadedItem = container.find(shadedName)</div>\n\
<div class=\"line\"><a name=\"l04042\"></a><span class=\"lineno\"> 4042</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> viewSelectedShadedItem:</div>\n\
<div class=\"line\"><a name=\"l04043\"></a><span class=\"lineno\"> 4043</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04044\"></a><span class=\"lineno\"> 4044</span>&#160;                    viewSelectedShadedItem = omr.MRenderItem.create(shadedName, omr.MRenderItem.MaterialSceneItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l04045\"></a><span class=\"lineno\"> 4045</span>&#160;                    viewSelectedShadedItem.setDrawMode(omr.MGeometry.kShaded)</div>\n\
<div class=\"line\"><a name=\"l04046\"></a><span class=\"lineno\"> 4046</span>&#160;                    viewSelectedShadedItem.setExcludedFromPostEffects(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l04047\"></a><span class=\"lineno\"> 4047</span>&#160;                    viewSelectedShadedItem.setCastsShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04048\"></a><span class=\"lineno\"> 4048</span>&#160;                    viewSelectedShadedItem.setReceivesShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04049\"></a><span class=\"lineno\"> 4049</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04050\"></a><span class=\"lineno\"> 4050</span>&#160;                    container.add(viewSelectedShadedItem)</div>\n\
<div class=\"line\"><a name=\"l04051\"></a><span class=\"lineno\"> 4051</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04052\"></a><span class=\"lineno\"> 4052</span>&#160;                    userData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l04053\"></a><span class=\"lineno\"> 4053</span>&#160;                    userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04054\"></a><span class=\"lineno\"> 4054</span>&#160;                    userData.fInstanceIndex = instIdx</div>\n\
<div class=\"line\"><a name=\"l04055\"></a><span class=\"lineno\"> 4055</span>&#160;                    viewSelectedShadedItem.setCustomData(userData)</div>\n\
<div class=\"line\"><a name=\"l04056\"></a><span class=\"lineno\"> 4056</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04057\"></a><span class=\"lineno\"> 4057</span>&#160;                texturedName = self.sTexturedName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04058\"></a><span class=\"lineno\"> 4058</span>&#160;                viewSelectedTexturedItem = container.find(texturedName)</div>\n\
<div class=\"line\"><a name=\"l04059\"></a><span class=\"lineno\"> 4059</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> viewSelectedTexturedItem:</div>\n\
<div class=\"line\"><a name=\"l04060\"></a><span class=\"lineno\"> 4060</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04061\"></a><span class=\"lineno\"> 4061</span>&#160;                    viewSelectedTexturedItem = omr.MRenderItem.create(texturedName, omr.MRenderItem.MaterialSceneItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l04062\"></a><span class=\"lineno\"> 4062</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04063\"></a><span class=\"lineno\"> 4063</span>&#160;                    viewSelectedTexturedItem.setDrawMode(omr.MGeometry.kTextured)</div>\n\
<div class=\"line\"><a name=\"l04064\"></a><span class=\"lineno\"> 4064</span>&#160;                    viewSelectedTexturedItem.setExcludedFromPostEffects(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l04065\"></a><span class=\"lineno\"> 4065</span>&#160;                    viewSelectedTexturedItem.setCastsShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04066\"></a><span class=\"lineno\"> 4066</span>&#160;                    viewSelectedTexturedItem.setReceivesShadows(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04067\"></a><span class=\"lineno\"> 4067</span>&#160;                    container.add(viewSelectedTexturedItem)</div>\n\
<div class=\"line\"><a name=\"l04068\"></a><span class=\"lineno\"> 4068</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04069\"></a><span class=\"lineno\"> 4069</span>&#160;                    userData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l04070\"></a><span class=\"lineno\"> 4070</span>&#160;                    userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04071\"></a><span class=\"lineno\"> 4071</span>&#160;                    userData.fInstanceIndex = instIdx</div>\n\
<div class=\"line\"><a name=\"l04072\"></a><span class=\"lineno\"> 4072</span>&#160;                    viewSelectedTexturedItem.setCustomData(userData)</div>\n\
<div class=\"line\"><a name=\"l04073\"></a><span class=\"lineno\"> 4073</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04074\"></a><span class=\"lineno\"> 4074</span>&#160;                faceSelectionName = self.sFaceSelectionName + namePostfix</div>\n\
<div class=\"line\"><a name=\"l04075\"></a><span class=\"lineno\"> 4075</span>&#160;                viewSelectedFaceSelectionItem = container.find(faceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l04076\"></a><span class=\"lineno\"> 4076</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> viewSelectedFaceSelectionItem:</div>\n\
<div class=\"line\"><a name=\"l04077\"></a><span class=\"lineno\"> 4077</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04078\"></a><span class=\"lineno\"> 4078</span>&#160;                    viewSelectedFaceSelectionItem = omr.MRenderItem.create(faceSelectionName, omr.MRenderItem.DecorationItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l04079\"></a><span class=\"lineno\"> 4079</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04080\"></a><span class=\"lineno\"> 4080</span>&#160;                    <span class=\"comment\">## use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\"><a name=\"l04081\"></a><span class=\"lineno\"> 4081</span>&#160;                    viewSelectedFaceSelectionItem.setDrawMode(omr.MGeometry.kSelectionOnly)</div>\n\
<div class=\"line\"><a name=\"l04082\"></a><span class=\"lineno\"> 4082</span>&#160;                    <span class=\"comment\">## set the selection mask to kSelectMeshFaces : we want the render item to be used for Face Components selection</span></div>\n\
<div class=\"line\"><a name=\"l04083\"></a><span class=\"lineno\"> 4083</span>&#160;                    viewSelectedFaceSelectionItem.setSelectionMask(om.MSelectionMask.kSelectMeshFaces)</div>\n\
<div class=\"line\"><a name=\"l04084\"></a><span class=\"lineno\"> 4084</span>&#160;                    <span class=\"comment\">## set selection priority : on top</span></div>\n\
<div class=\"line\"><a name=\"l04085\"></a><span class=\"lineno\"> 4085</span>&#160;                    viewSelectedFaceSelectionItem.setDepthPriority(omr.MRenderItem.sSelectionDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l04086\"></a><span class=\"lineno\"> 4086</span>&#160;                    viewSelectedFaceSelectionItem.setShader(self.fFaceComponentShader)</div>\n\
<div class=\"line\"><a name=\"l04087\"></a><span class=\"lineno\"> 4087</span>&#160;                    container.add(viewSelectedFaceSelectionItem)</div>\n\
<div class=\"line\"><a name=\"l04088\"></a><span class=\"lineno\"> 4088</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04089\"></a><span class=\"lineno\"> 4089</span>&#160;                    userData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l04090\"></a><span class=\"lineno\"> 4090</span>&#160;                    userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04091\"></a><span class=\"lineno\"> 4091</span>&#160;                    userData.fInstanceIndex = instIdx</div>\n\
<div class=\"line\"><a name=\"l04092\"></a><span class=\"lineno\"> 4092</span>&#160;                    viewSelectedFaceSelectionItem.setCustomData(userData)</div>\n\
<div class=\"line\"><a name=\"l04093\"></a><span class=\"lineno\"> 4093</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04094\"></a><span class=\"lineno\"> 4094</span>&#160;                    <span class=\"comment\">## Register component converter for isolate select render items</span></div>\n\
<div class=\"line\"><a name=\"l04095\"></a><span class=\"lineno\"> 4095</span>&#160;                    <span class=\"keywordflow\">if</span> (faceSelectionName <span class=\"keywordflow\">not</span> <span class=\"keywordflow\">in</span> sViewSelectedFaceSelectionNames):</div>\n\
<div class=\"line\"><a name=\"l04096\"></a><span class=\"lineno\"> 4096</span>&#160;                        omr.MDrawRegistry.registerComponentConverter(faceSelectionName, simpleComponentConverterSubsceneOverride.creatorFaceSelection)</div>\n\
<div class=\"line\"><a name=\"l04097\"></a><span class=\"lineno\"> 4097</span>&#160;                        sViewSelectedFaceSelectionNames.add(faceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l04098\"></a><span class=\"lineno\"> 4098</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04099\"></a><span class=\"lineno\"> 4099</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04100\"></a><span class=\"lineno\"> 4100</span>&#160;        <span class=\"comment\">##  Update render items for all views as required</span></div>\n\
<div class=\"line\"><a name=\"l04101\"></a><span class=\"lineno\"> 4101</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04102\"></a><span class=\"lineno\"> 4102</span>&#160;        <span class=\"keywordflow\">for</span> key <span class=\"keywordflow\">in</span> self.fViewSelectedFaceInfoCache:</div>\n\
<div class=\"line\"><a name=\"l04103\"></a><span class=\"lineno\"> 4103</span>&#160;            viewName = key</div>\n\
<div class=\"line\"><a name=\"l04104\"></a><span class=\"lineno\"> 4104</span>&#160;            faceInfo = self.fViewSelectedFaceInfoCache[key]</div>\n\
<div class=\"line\"><a name=\"l04105\"></a><span class=\"lineno\"> 4105</span>&#160;            isActiveView = viewName == activeViewName</div>\n\
<div class=\"line\"><a name=\"l04106\"></a><span class=\"lineno\"> 4106</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04107\"></a><span class=\"lineno\"> 4107</span>&#160;            instIdxArray = set()</div>\n\
<div class=\"line\"><a name=\"l04108\"></a><span class=\"lineno\"> 4108</span>&#160;            <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> faceInfo:</div>\n\
<div class=\"line\"><a name=\"l04109\"></a><span class=\"lineno\"> 4109</span>&#160;                faceIdx = faceInfo[instIdx]</div>\n\
<div class=\"line\"><a name=\"l04110\"></a><span class=\"lineno\"> 4110</span>&#160;                <span class=\"keywordflow\">if</span> (faceIdx != sViewSelectedInstanceMark):</div>\n\
<div class=\"line\"><a name=\"l04111\"></a><span class=\"lineno\"> 4111</span>&#160;                    instIdxArray.add(instIdx)</div>\n\
<div class=\"line\"><a name=\"l04112\"></a><span class=\"lineno\"> 4112</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04113\"></a><span class=\"lineno\"> 4113</span>&#160;            <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> instIdxArray:</div>\n\
<div class=\"line\"><a name=\"l04114\"></a><span class=\"lineno\"> 4114</span>&#160;                namePostfix = self.sNameSeparator + str(instIdx) + self.sNameSeparator + viewName</div>\n\
<div class=\"line\"><a name=\"l04115\"></a><span class=\"lineno\"> 4115</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04116\"></a><span class=\"lineno\"> 4116</span>&#160;                viewSelectedShadedItem = container.find(self.sShadedName + namePostfix)</div>\n\
<div class=\"line\"><a name=\"l04117\"></a><span class=\"lineno\"> 4117</span>&#160;                viewSelectedTexturedItem = container.find(self.sTexturedName + namePostfix)</div>\n\
<div class=\"line\"><a name=\"l04118\"></a><span class=\"lineno\"> 4118</span>&#160;                viewSelectedFaceSelectionItem = container.find(self.sFaceSelectionName + namePostfix)</div>\n\
<div class=\"line\"><a name=\"l04119\"></a><span class=\"lineno\"> 4119</span>&#160;                <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> viewSelectedShadedItem <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> viewSelectedTexturedItem <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> viewSelectedFaceSelectionItem):</div>\n\
<div class=\"line\"><a name=\"l04120\"></a><span class=\"lineno\"> 4120</span>&#160;                    <span class=\"keywordflow\">continue</span></div>\n\
<div class=\"line\"><a name=\"l04121\"></a><span class=\"lineno\"> 4121</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04122\"></a><span class=\"lineno\"> 4122</span>&#160;                <span class=\"comment\">## Enable isolate select render items for the active view and disable those for other views</span></div>\n\
<div class=\"line\"><a name=\"l04123\"></a><span class=\"lineno\"> 4123</span>&#160;                viewSelectedShadedItem.enable(isActiveView)</div>\n\
<div class=\"line\"><a name=\"l04124\"></a><span class=\"lineno\"> 4124</span>&#160;                viewSelectedTexturedItem.enable(isActiveView)</div>\n\
<div class=\"line\"><a name=\"l04125\"></a><span class=\"lineno\"> 4125</span>&#160;                viewSelectedFaceSelectionItem.enable(isActiveView)</div>\n\
<div class=\"line\"><a name=\"l04126\"></a><span class=\"lineno\"> 4126</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04127\"></a><span class=\"lineno\"> 4127</span>&#160;                <span class=\"comment\">## Update matrix</span></div>\n\
<div class=\"line\"><a name=\"l04128\"></a><span class=\"lineno\"> 4128</span>&#160;                instance = instances[instIdx]</div>\n\
<div class=\"line\"><a name=\"l04129\"></a><span class=\"lineno\"> 4129</span>&#160;                objToWorld = instance.inclusiveMatrix()</div>\n\
<div class=\"line\"><a name=\"l04130\"></a><span class=\"lineno\"> 4130</span>&#160;                viewSelectedShadedItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l04131\"></a><span class=\"lineno\"> 4131</span>&#160;                viewSelectedTexturedItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l04132\"></a><span class=\"lineno\"> 4132</span>&#160;                viewSelectedFaceSelectionItem.setMatrix(objToWorld)</div>\n\
<div class=\"line\"><a name=\"l04133\"></a><span class=\"lineno\"> 4133</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04134\"></a><span class=\"lineno\"> 4134</span>&#160;                <span class=\"comment\">## Perform necessary update for shader, geometry, bounding box</span></div>\n\
<div class=\"line\"><a name=\"l04135\"></a><span class=\"lineno\"> 4135</span>&#160;                <span class=\"keywordflow\">if</span> (updateViewSelectedFaces <span class=\"keywordflow\">or</span> updateMaterial <span class=\"keywordflow\">or</span> updateGeometry):</div>\n\
<div class=\"line\"><a name=\"l04136\"></a><span class=\"lineno\"> 4136</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04137\"></a><span class=\"lineno\"> 4137</span>&#160;                    <span class=\"keywordflow\">if</span> (updateMaterial <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> viewSelectedShadedItem.isShaderFromNode()):</div>\n\
<div class=\"line\"><a name=\"l04138\"></a><span class=\"lineno\"> 4138</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l04139\"></a><span class=\"lineno\"> 4139</span>&#160;                        userData = ShadedItemUserData(self)</div>\n\
<div class=\"line\"><a name=\"l04140\"></a><span class=\"lineno\"> 4140</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l04141\"></a><span class=\"lineno\"> 4141</span>&#160;                        <span class=\"keywordflow\">if</span> shader <span class=\"keywordflow\">and</span> viewSelectedShadedItem.setShaderFromNode(shader, instance, apiMeshSubSceneOverride.shadedItemLinkLost, userData, <span class=\"keyword\">True</span>):</div>\n\
<div class=\"line\"><a name=\"l04142\"></a><span class=\"lineno\"> 4142</span>&#160;                            self.fLinkLostCallbackData.append(userData)</div>\n\
<div class=\"line\"><a name=\"l04143\"></a><span class=\"lineno\"> 4143</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l04144\"></a><span class=\"lineno\"> 4144</span>&#160;                            viewSelectedShadedItem.setShader(self.fShadedShader)</div>\n\
<div class=\"line\"><a name=\"l04145\"></a><span class=\"lineno\"> 4145</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04146\"></a><span class=\"lineno\"> 4146</span>&#160;                    <span class=\"keywordflow\">if</span> (updateMaterial <span class=\"keywordflow\">or</span> <span class=\"keywordflow\">not</span> viewSelectedTexturedItem.isShaderFromNode()):</div>\n\
<div class=\"line\"><a name=\"l04147\"></a><span class=\"lineno\"> 4147</span>&#160;                        userData = ShadedItemUserData(self)</div>\n\
<div class=\"line\"><a name=\"l04148\"></a><span class=\"lineno\"> 4148</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l04149\"></a><span class=\"lineno\"> 4149</span>&#160;                        <span class=\"keywordflow\">if</span> shader <span class=\"keywordflow\">and</span> viewSelectedTexturedItem.setShaderFromNode(shader, instance, apiMeshSubSceneOverride.shadedItemLinkLost, userData, <span class=\"keyword\">True</span>):</div>\n\
<div class=\"line\"><a name=\"l04150\"></a><span class=\"lineno\"> 4150</span>&#160;                            self.fLinkLostCallbackData.append(userData)</div>\n\
<div class=\"line\"><a name=\"l04151\"></a><span class=\"lineno\"> 4151</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l04152\"></a><span class=\"lineno\"> 4152</span>&#160;                            viewSelectedTexturedItem.setShader(self.fShadedShader)</div>\n\
<div class=\"line\"><a name=\"l04153\"></a><span class=\"lineno\"> 4153</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l04154\"></a><span class=\"lineno\"> 4154</span>&#160;                    shadedBuffers = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l04155\"></a><span class=\"lineno\"> 4155</span>&#160;                    shadedBuffers.append(self.fPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04156\"></a><span class=\"lineno\"> 4156</span>&#160;                    shadedBuffers.append(self.fNormalBuffer, <span class=\"stringliteral\">&quot;normals&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04157\"></a><span class=\"lineno\"> 4157</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04158\"></a><span class=\"lineno\"> 4158</span>&#160;                    selectionBuffers = omr.MVertexBufferArray()</div>\n\
<div class=\"line\"><a name=\"l04159\"></a><span class=\"lineno\"> 4159</span>&#160;                    selectionBuffers.append(self.fPositionBuffer, <span class=\"stringliteral\">&quot;positions&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04160\"></a><span class=\"lineno\"> 4160</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04161\"></a><span class=\"lineno\"> 4161</span>&#160;                    faceStates = []</div>\n\
<div class=\"line\"><a name=\"l04162\"></a><span class=\"lineno\"> 4162</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04163\"></a><span class=\"lineno\"> 4163</span>&#160;                        faceStates.append(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l04164\"></a><span class=\"lineno\"> 4164</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04165\"></a><span class=\"lineno\"> 4165</span>&#160;                    faceIds = faceInfo[instIdx]</div>\n\
<div class=\"line\"><a name=\"l04166\"></a><span class=\"lineno\"> 4166</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> faceIds:</div>\n\
<div class=\"line\"><a name=\"l04167\"></a><span class=\"lineno\"> 4167</span>&#160;                        <span class=\"keywordflow\">if</span> (faceIdx != sViewSelectedInstanceMark):</div>\n\
<div class=\"line\"><a name=\"l04168\"></a><span class=\"lineno\"> 4168</span>&#160;                            faceStates[faceIdx] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04169\"></a><span class=\"lineno\"> 4169</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04170\"></a><span class=\"lineno\"> 4170</span>&#160;                    numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l04171\"></a><span class=\"lineno\"> 4171</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04172\"></a><span class=\"lineno\"> 4172</span>&#160;                        numVerts = meshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l04173\"></a><span class=\"lineno\"> 4173</span>&#160;                        <span class=\"keywordflow\">if</span> (numVerts &gt; 2):</div>\n\
<div class=\"line\"><a name=\"l04174\"></a><span class=\"lineno\"> 4174</span>&#160;                            <span class=\"keywordflow\">if</span> faceStates[faceIdx]:</div>\n\
<div class=\"line\"><a name=\"l04175\"></a><span class=\"lineno\"> 4175</span>&#160;                                numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l04176\"></a><span class=\"lineno\"> 4176</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04177\"></a><span class=\"lineno\"> 4177</span>&#160;                    indexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04178\"></a><span class=\"lineno\"> 4178</span>&#160;                    bufferSize = numTriangles * 3</div>\n\
<div class=\"line\"><a name=\"l04179\"></a><span class=\"lineno\"> 4179</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04180\"></a><span class=\"lineno\"> 4180</span>&#160;                    dataAddress = indexBuffer.acquire(bufferSize, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04181\"></a><span class=\"lineno\"> 4181</span>&#160;                    <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l04182\"></a><span class=\"lineno\"> 4182</span>&#160;                        data = (ctypes.c_uint * bufferSize).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l04183\"></a><span class=\"lineno\"> 4183</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04184\"></a><span class=\"lineno\"> 4184</span>&#160;                        base = 0</div>\n\
<div class=\"line\"><a name=\"l04185\"></a><span class=\"lineno\"> 4185</span>&#160;                        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04186\"></a><span class=\"lineno\"> 4186</span>&#160;                        <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04187\"></a><span class=\"lineno\"> 4187</span>&#160;                            <span class=\"comment\">## Ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04188\"></a><span class=\"lineno\"> 4188</span>&#160;                            numVerts = meshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l04189\"></a><span class=\"lineno\"> 4189</span>&#160;                            <span class=\"keywordflow\">if</span> (numVerts &gt; 2):</div>\n\
<div class=\"line\"><a name=\"l04190\"></a><span class=\"lineno\"> 4190</span>&#160;                                <span class=\"keywordflow\">if</span> (faceStates[faceIdx]):</div>\n\
<div class=\"line\"><a name=\"l04191\"></a><span class=\"lineno\"> 4191</span>&#160;                                    <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts - 1):</div>\n\
<div class=\"line\"><a name=\"l04192\"></a><span class=\"lineno\"> 4192</span>&#160;                                        data[idx] = meshGeom.face_connects[base]</div>\n\
<div class=\"line\"><a name=\"l04193\"></a><span class=\"lineno\"> 4193</span>&#160;                                        idx += 1</div>\n\
<div class=\"line\"><a name=\"l04194\"></a><span class=\"lineno\"> 4194</span>&#160;                                        data[idx] = meshGeom.face_connects[base + v]</div>\n\
<div class=\"line\"><a name=\"l04195\"></a><span class=\"lineno\"> 4195</span>&#160;                                        idx += 1</div>\n\
<div class=\"line\"><a name=\"l04196\"></a><span class=\"lineno\"> 4196</span>&#160;                                        data[idx] = meshGeom.face_connects[base + v + 1]</div>\n\
<div class=\"line\"><a name=\"l04197\"></a><span class=\"lineno\"> 4197</span>&#160;                                        idx += 1</div>\n\
<div class=\"line\"><a name=\"l04198\"></a><span class=\"lineno\"> 4198</span>&#160;                                base += numVerts</div>\n\
<div class=\"line\"><a name=\"l04199\"></a><span class=\"lineno\"> 4199</span>&#160;                        indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l04200\"></a><span class=\"lineno\"> 4200</span>&#160;                        dataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04201\"></a><span class=\"lineno\"> 4201</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04202\"></a><span class=\"lineno\"> 4202</span>&#160;                    bounds = self.fMesh.boundingBox()</div>\n\
<div class=\"line\"><a name=\"l04203\"></a><span class=\"lineno\"> 4203</span>&#160;                    self.setGeometryForRenderItem(viewSelectedShadedItem, shadedBuffers, indexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l04204\"></a><span class=\"lineno\"> 4204</span>&#160;                    self.setGeometryForRenderItem(viewSelectedTexturedItem, shadedBuffers, indexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l04205\"></a><span class=\"lineno\"> 4205</span>&#160;                    self.setGeometryForRenderItem(viewSelectedFaceSelectionItem, selectionBuffers, indexBuffer, bounds)</div>\n\
<div class=\"line\"><a name=\"l04206\"></a><span class=\"lineno\"> 4206</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04207\"></a><span class=\"lineno\"> 4207</span>&#160;                    <span class=\"comment\">## The apiMeshGeom object can be re-created during DG evaluation, thus update the pointer.</span></div>\n\
<div class=\"line\"><a name=\"l04208\"></a><span class=\"lineno\"> 4208</span>&#160;                    userData = viewSelectedShadedItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04209\"></a><span class=\"lineno\"> 4209</span>&#160;                    <span class=\"keywordflow\">if</span> userData <span class=\"keywordflow\">and</span> isinstance(userData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04210\"></a><span class=\"lineno\"> 4210</span>&#160;                        userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04211\"></a><span class=\"lineno\"> 4211</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l04212\"></a><span class=\"lineno\"> 4212</span>&#160;                    userData = viewSelectedTexturedItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04213\"></a><span class=\"lineno\"> 4213</span>&#160;                    <span class=\"keywordflow\">if</span> userData <span class=\"keywordflow\">and</span> isinstance(userData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04214\"></a><span class=\"lineno\"> 4214</span>&#160;                        userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04215\"></a><span class=\"lineno\"> 4215</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04216\"></a><span class=\"lineno\"> 4216</span>&#160;                    userData = viewSelectedFaceSelectionItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04217\"></a><span class=\"lineno\"> 4217</span>&#160;                    <span class=\"keywordflow\">if</span> userData <span class=\"keywordflow\">and</span> isinstance(userData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04218\"></a><span class=\"lineno\"> 4218</span>&#160;                        userData.fMeshGeom = meshGeom</div>\n\
<div class=\"line\"><a name=\"l04219\"></a><span class=\"lineno\"> 4219</span>&#160;                        userData.fFaceViewSelectedStates = faceStates</div>\n\
<div class=\"line\"><a name=\"l04220\"></a><span class=\"lineno\"> 4220</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l04221\"></a><span class=\"lineno\"> 4221</span>&#160;    <span class=\"keyword\">def </span>rebuildGeometryBuffers(self):</div>\n\
<div class=\"line\"><a name=\"l04222\"></a><span class=\"lineno\"> 4222</span>&#160;        <span class=\"comment\">## Preamble</span></div>\n\
<div class=\"line\"><a name=\"l04223\"></a><span class=\"lineno\"> 4223</span>&#160;        meshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l04224\"></a><span class=\"lineno\"> 4224</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> meshGeom:</div>\n\
<div class=\"line\"><a name=\"l04225\"></a><span class=\"lineno\"> 4225</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l04226\"></a><span class=\"lineno\"> 4226</span>&#160;        bounds = self.fMesh.boundingBox()</div>\n\
<div class=\"line\"><a name=\"l04227\"></a><span class=\"lineno\"> 4227</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04228\"></a><span class=\"lineno\"> 4228</span>&#160;        <span class=\"comment\">## Clear old</span></div>\n\
<div class=\"line\"><a name=\"l04229\"></a><span class=\"lineno\"> 4229</span>&#160;        self.clearGeometryBuffers()</div>\n\
<div class=\"line\"><a name=\"l04230\"></a><span class=\"lineno\"> 4230</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04231\"></a><span class=\"lineno\"> 4231</span>&#160;        <span class=\"comment\">## Compute mesh data size</span></div>\n\
<div class=\"line\"><a name=\"l04232\"></a><span class=\"lineno\"> 4232</span>&#160;        numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l04233\"></a><span class=\"lineno\"> 4233</span>&#160;        totalVerts = 0</div>\n\
<div class=\"line\"><a name=\"l04234\"></a><span class=\"lineno\"> 4234</span>&#160;        totalPoints = len(meshGeom.vertices)</div>\n\
<div class=\"line\"><a name=\"l04235\"></a><span class=\"lineno\"> 4235</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04236\"></a><span class=\"lineno\"> 4236</span>&#160;            numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04237\"></a><span class=\"lineno\"> 4237</span>&#160;            <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04238\"></a><span class=\"lineno\"> 4238</span>&#160;                numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l04239\"></a><span class=\"lineno\"> 4239</span>&#160;                totalVerts += numVerts</div>\n\
<div class=\"line\"><a name=\"l04240\"></a><span class=\"lineno\"> 4240</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04241\"></a><span class=\"lineno\"> 4241</span>&#160;        <span class=\"comment\">## Acquire vertex buffer resources</span></div>\n\
<div class=\"line\"><a name=\"l04242\"></a><span class=\"lineno\"> 4242</span>&#160;        posDesc = omr.MVertexBufferDescriptor(<span class=\"stringliteral\">&quot;&quot;</span>, omr.MGeometry.kPosition, omr.MGeometry.kFloat, 3)</div>\n\
<div class=\"line\"><a name=\"l04243\"></a><span class=\"lineno\"> 4243</span>&#160;        normalDesc = omr.MVertexBufferDescriptor(<span class=\"stringliteral\">&quot;&quot;</span>, omr.MGeometry.kNormal, omr.MGeometry.kFloat, 3)</div>\n\
<div class=\"line\"><a name=\"l04244\"></a><span class=\"lineno\"> 4244</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04245\"></a><span class=\"lineno\"> 4245</span>&#160;        self.fPositionBuffer = omr.MVertexBuffer(posDesc)</div>\n\
<div class=\"line\"><a name=\"l04246\"></a><span class=\"lineno\"> 4246</span>&#160;        self.fNormalBuffer = omr.MVertexBuffer(normalDesc)</div>\n\
<div class=\"line\"><a name=\"l04247\"></a><span class=\"lineno\"> 4247</span>&#160;        self.fBoxPositionBuffer = omr.MVertexBuffer(posDesc)</div>\n\
<div class=\"line\"><a name=\"l04248\"></a><span class=\"lineno\"> 4248</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04249\"></a><span class=\"lineno\"> 4249</span>&#160;        positionDataAddress = self.fPositionBuffer.acquire(totalPoints, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04250\"></a><span class=\"lineno\"> 4250</span>&#160;        normalDataAddress = self.fNormalBuffer.acquire(totalPoints, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04251\"></a><span class=\"lineno\"> 4251</span>&#160;        boxPositionDataAddress = self.fBoxPositionBuffer.acquire(8, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04252\"></a><span class=\"lineno\"> 4252</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04253\"></a><span class=\"lineno\"> 4253</span>&#160;        <span class=\"comment\">## Acquire index buffer resources</span></div>\n\
<div class=\"line\"><a name=\"l04254\"></a><span class=\"lineno\"> 4254</span>&#160;        self.fWireIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04255\"></a><span class=\"lineno\"> 4255</span>&#160;        self.fBoxIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04256\"></a><span class=\"lineno\"> 4256</span>&#160;        self.fShadedIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04257\"></a><span class=\"lineno\"> 4257</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04258\"></a><span class=\"lineno\"> 4258</span>&#160;        wireBufferDataAddress = self.fWireIndexBuffer.acquire(2*totalVerts, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04259\"></a><span class=\"lineno\"> 4259</span>&#160;        boxBufferDataAddress = self.fBoxIndexBuffer.acquire(24, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04260\"></a><span class=\"lineno\"> 4260</span>&#160;        shadedBufferDataAddress = self.fShadedIndexBuffer.acquire(3*numTriangles, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04261\"></a><span class=\"lineno\"> 4261</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04262\"></a><span class=\"lineno\"> 4262</span>&#160;        <span class=\"comment\">## Sanity check</span></div>\n\
<div class=\"line\"><a name=\"l04263\"></a><span class=\"lineno\"> 4263</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> all((positionDataAddress, normalDataAddress, boxPositionDataAddress, wireBufferDataAddress, boxBufferDataAddress, shadedBufferDataAddress)):</div>\n\
<div class=\"line\"><a name=\"l04264\"></a><span class=\"lineno\"> 4264</span>&#160;            self.clearGeometryBuffers()</div>\n\
<div class=\"line\"><a name=\"l04265\"></a><span class=\"lineno\"> 4265</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l04266\"></a><span class=\"lineno\"> 4266</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04267\"></a><span class=\"lineno\"> 4267</span>&#160;        positionData = ((ctypes.c_float * 3)*totalPoints).from_address(positionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04268\"></a><span class=\"lineno\"> 4268</span>&#160;        normalData = ((ctypes.c_float * 3)*totalPoints).from_address(normalDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04269\"></a><span class=\"lineno\"> 4269</span>&#160;        boxPositionData = ((ctypes.c_float * 3)*8).from_address(boxPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04270\"></a><span class=\"lineno\"> 4270</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04271\"></a><span class=\"lineno\"> 4271</span>&#160;        wireBufferData = (ctypes.c_uint * (2*totalVerts)).from_address(wireBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04272\"></a><span class=\"lineno\"> 4272</span>&#160;        boxBufferData = (ctypes.c_uint * 24).from_address(boxBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04273\"></a><span class=\"lineno\"> 4273</span>&#160;        shadedBufferData = ((ctypes.c_uint * 3)*numTriangles).from_address(shadedBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04274\"></a><span class=\"lineno\"> 4274</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04275\"></a><span class=\"lineno\"> 4275</span>&#160;        <span class=\"comment\">## Fill vertex data for shaded/wireframe</span></div>\n\
<div class=\"line\"><a name=\"l04276\"></a><span class=\"lineno\"> 4276</span>&#160;        <span class=\"keywordflow\">for</span> vid,position <span class=\"keywordflow\">in</span> enumerate(meshGeom.vertices):</div>\n\
<div class=\"line\"><a name=\"l04277\"></a><span class=\"lineno\"> 4277</span>&#160;            positionData[vid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l04278\"></a><span class=\"lineno\"> 4278</span>&#160;            positionData[vid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l04279\"></a><span class=\"lineno\"> 4279</span>&#160;            positionData[vid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l04280\"></a><span class=\"lineno\"> 4280</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04281\"></a><span class=\"lineno\"> 4281</span>&#160;        <span class=\"keywordflow\">for</span> vid,normal <span class=\"keywordflow\">in</span> enumerate(meshGeom.normals):</div>\n\
<div class=\"line\"><a name=\"l04282\"></a><span class=\"lineno\"> 4282</span>&#160;            normalData[vid][0] = normal[0]</div>\n\
<div class=\"line\"><a name=\"l04283\"></a><span class=\"lineno\"> 4283</span>&#160;            normalData[vid][1] = normal[1]</div>\n\
<div class=\"line\"><a name=\"l04284\"></a><span class=\"lineno\"> 4284</span>&#160;            normalData[vid][2] = normal[2]</div>\n\
<div class=\"line\"><a name=\"l04285\"></a><span class=\"lineno\"> 4285</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04286\"></a><span class=\"lineno\"> 4286</span>&#160;        self.fPositionBuffer.commit(positionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04287\"></a><span class=\"lineno\"> 4287</span>&#160;        positionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04288\"></a><span class=\"lineno\"> 4288</span>&#160;        self.fNormalBuffer.commit(normalDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04289\"></a><span class=\"lineno\"> 4289</span>&#160;        normalDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04290\"></a><span class=\"lineno\"> 4290</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04291\"></a><span class=\"lineno\"> 4291</span>&#160;        <span class=\"comment\">## Fill vertex data for bounding box</span></div>\n\
<div class=\"line\"><a name=\"l04292\"></a><span class=\"lineno\"> 4292</span>&#160;        bbmin = bounds.min</div>\n\
<div class=\"line\"><a name=\"l04293\"></a><span class=\"lineno\"> 4293</span>&#160;        bbmax = bounds.max</div>\n\
<div class=\"line\"><a name=\"l04294\"></a><span class=\"lineno\"> 4294</span>&#160;        boxPositionData[0][0] = bbmin.x</div>\n\
<div class=\"line\"><a name=\"l04295\"></a><span class=\"lineno\"> 4295</span>&#160;        boxPositionData[0][1] = bbmin.y</div>\n\
<div class=\"line\"><a name=\"l04296\"></a><span class=\"lineno\"> 4296</span>&#160;        boxPositionData[0][2] = bbmin.z</div>\n\
<div class=\"line\"><a name=\"l04297\"></a><span class=\"lineno\"> 4297</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04298\"></a><span class=\"lineno\"> 4298</span>&#160;        boxPositionData[1][0] = bbmin.x</div>\n\
<div class=\"line\"><a name=\"l04299\"></a><span class=\"lineno\"> 4299</span>&#160;        boxPositionData[1][1] = bbmin.y</div>\n\
<div class=\"line\"><a name=\"l04300\"></a><span class=\"lineno\"> 4300</span>&#160;        boxPositionData[1][2] = bbmax.z</div>\n\
<div class=\"line\"><a name=\"l04301\"></a><span class=\"lineno\"> 4301</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04302\"></a><span class=\"lineno\"> 4302</span>&#160;        boxPositionData[2][0] = bbmax.x</div>\n\
<div class=\"line\"><a name=\"l04303\"></a><span class=\"lineno\"> 4303</span>&#160;        boxPositionData[2][1] = bbmin.y</div>\n\
<div class=\"line\"><a name=\"l04304\"></a><span class=\"lineno\"> 4304</span>&#160;        boxPositionData[2][2] = bbmax.z</div>\n\
<div class=\"line\"><a name=\"l04305\"></a><span class=\"lineno\"> 4305</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04306\"></a><span class=\"lineno\"> 4306</span>&#160;        boxPositionData[3][0] = bbmax.x</div>\n\
<div class=\"line\"><a name=\"l04307\"></a><span class=\"lineno\"> 4307</span>&#160;        boxPositionData[3][1] = bbmin.y</div>\n\
<div class=\"line\"><a name=\"l04308\"></a><span class=\"lineno\"> 4308</span>&#160;        boxPositionData[3][2] = bbmin.z</div>\n\
<div class=\"line\"><a name=\"l04309\"></a><span class=\"lineno\"> 4309</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04310\"></a><span class=\"lineno\"> 4310</span>&#160;        boxPositionData[4][0] = bbmin.x</div>\n\
<div class=\"line\"><a name=\"l04311\"></a><span class=\"lineno\"> 4311</span>&#160;        boxPositionData[4][1] = bbmax.y</div>\n\
<div class=\"line\"><a name=\"l04312\"></a><span class=\"lineno\"> 4312</span>&#160;        boxPositionData[4][2] = bbmin.z</div>\n\
<div class=\"line\"><a name=\"l04313\"></a><span class=\"lineno\"> 4313</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04314\"></a><span class=\"lineno\"> 4314</span>&#160;        boxPositionData[5][0] = bbmin.x</div>\n\
<div class=\"line\"><a name=\"l04315\"></a><span class=\"lineno\"> 4315</span>&#160;        boxPositionData[5][1] = bbmax.y</div>\n\
<div class=\"line\"><a name=\"l04316\"></a><span class=\"lineno\"> 4316</span>&#160;        boxPositionData[5][2] = bbmax.z</div>\n\
<div class=\"line\"><a name=\"l04317\"></a><span class=\"lineno\"> 4317</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04318\"></a><span class=\"lineno\"> 4318</span>&#160;        boxPositionData[6][0] = bbmax.x</div>\n\
<div class=\"line\"><a name=\"l04319\"></a><span class=\"lineno\"> 4319</span>&#160;        boxPositionData[6][1] = bbmax.y</div>\n\
<div class=\"line\"><a name=\"l04320\"></a><span class=\"lineno\"> 4320</span>&#160;        boxPositionData[6][2] = bbmax.z</div>\n\
<div class=\"line\"><a name=\"l04321\"></a><span class=\"lineno\"> 4321</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04322\"></a><span class=\"lineno\"> 4322</span>&#160;        boxPositionData[7][0] = bbmax.x</div>\n\
<div class=\"line\"><a name=\"l04323\"></a><span class=\"lineno\"> 4323</span>&#160;        boxPositionData[7][1] = bbmax.y</div>\n\
<div class=\"line\"><a name=\"l04324\"></a><span class=\"lineno\"> 4324</span>&#160;        boxPositionData[7][2] = bbmin.z</div>\n\
<div class=\"line\"><a name=\"l04325\"></a><span class=\"lineno\"> 4325</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04326\"></a><span class=\"lineno\"> 4326</span>&#160;        self.fBoxPositionBuffer.commit(boxPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04327\"></a><span class=\"lineno\"> 4327</span>&#160;        boxPositionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04328\"></a><span class=\"lineno\"> 4328</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04329\"></a><span class=\"lineno\"> 4329</span>&#160;        <span class=\"comment\">## Fill index data for wireframe</span></div>\n\
<div class=\"line\"><a name=\"l04330\"></a><span class=\"lineno\"> 4330</span>&#160;        vid = 0</div>\n\
<div class=\"line\"><a name=\"l04331\"></a><span class=\"lineno\"> 4331</span>&#160;        first = 0</div>\n\
<div class=\"line\"><a name=\"l04332\"></a><span class=\"lineno\"> 4332</span>&#160;        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04333\"></a><span class=\"lineno\"> 4333</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04334\"></a><span class=\"lineno\"> 4334</span>&#160;            <span class=\"comment\">## Ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04335\"></a><span class=\"lineno\"> 4335</span>&#160;            numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04336\"></a><span class=\"lineno\"> 4336</span>&#160;            <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04337\"></a><span class=\"lineno\"> 4337</span>&#160;                first = vid</div>\n\
<div class=\"line\"><a name=\"l04338\"></a><span class=\"lineno\"> 4338</span>&#160;                <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04339\"></a><span class=\"lineno\"> 4339</span>&#160;                    wireBufferData[idx] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04340\"></a><span class=\"lineno\"> 4340</span>&#160;                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l04341\"></a><span class=\"lineno\"> 4341</span>&#160;                    vid += 1</div>\n\
<div class=\"line\"><a name=\"l04342\"></a><span class=\"lineno\"> 4342</span>&#160;                    wireBufferData[idx] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04343\"></a><span class=\"lineno\"> 4343</span>&#160;                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l04344\"></a><span class=\"lineno\"> 4344</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04345\"></a><span class=\"lineno\"> 4345</span>&#160;                wireBufferData[idx] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04346\"></a><span class=\"lineno\"> 4346</span>&#160;                idx += 1</div>\n\
<div class=\"line\"><a name=\"l04347\"></a><span class=\"lineno\"> 4347</span>&#160;                vid += 1</div>\n\
<div class=\"line\"><a name=\"l04348\"></a><span class=\"lineno\"> 4348</span>&#160;                wireBufferData[idx] = meshGeom.face_connects[first]</div>\n\
<div class=\"line\"><a name=\"l04349\"></a><span class=\"lineno\"> 4349</span>&#160;                idx += 1</div>\n\
<div class=\"line\"><a name=\"l04350\"></a><span class=\"lineno\"> 4350</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04351\"></a><span class=\"lineno\"> 4351</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l04352\"></a><span class=\"lineno\"> 4352</span>&#160;                vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l04353\"></a><span class=\"lineno\"> 4353</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04354\"></a><span class=\"lineno\"> 4354</span>&#160;        self.fWireIndexBuffer.commit(wireBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04355\"></a><span class=\"lineno\"> 4355</span>&#160;        wireBufferDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04356\"></a><span class=\"lineno\"> 4356</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04357\"></a><span class=\"lineno\"> 4357</span>&#160;        <span class=\"comment\">## Fill index data for bounding box</span></div>\n\
<div class=\"line\"><a name=\"l04358\"></a><span class=\"lineno\"> 4358</span>&#160;        indexData = [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ]</div>\n\
<div class=\"line\"><a name=\"l04359\"></a><span class=\"lineno\"> 4359</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(24):</div>\n\
<div class=\"line\"><a name=\"l04360\"></a><span class=\"lineno\"> 4360</span>&#160;            boxBufferData[i] = indexData[i]</div>\n\
<div class=\"line\"><a name=\"l04361\"></a><span class=\"lineno\"> 4361</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04362\"></a><span class=\"lineno\"> 4362</span>&#160;        self.fBoxIndexBuffer.commit(boxBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04363\"></a><span class=\"lineno\"> 4363</span>&#160;        boxBufferDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04364\"></a><span class=\"lineno\"> 4364</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04365\"></a><span class=\"lineno\"> 4365</span>&#160;        <span class=\"comment\">## Fill index data for shaded</span></div>\n\
<div class=\"line\"><a name=\"l04366\"></a><span class=\"lineno\"> 4366</span>&#160;        base = 0</div>\n\
<div class=\"line\"><a name=\"l04367\"></a><span class=\"lineno\"> 4367</span>&#160;        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04368\"></a><span class=\"lineno\"> 4368</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04369\"></a><span class=\"lineno\"> 4369</span>&#160;            <span class=\"comment\">## Ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04370\"></a><span class=\"lineno\"> 4370</span>&#160;            numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04371\"></a><span class=\"lineno\"> 4371</span>&#160;            <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04372\"></a><span class=\"lineno\"> 4372</span>&#160;                <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04373\"></a><span class=\"lineno\"> 4373</span>&#160;                    shadedBufferData[idx][0] = meshGeom.face_connects[base]</div>\n\
<div class=\"line\"><a name=\"l04374\"></a><span class=\"lineno\"> 4374</span>&#160;                    shadedBufferData[idx][1] = meshGeom.face_connects[base+v]</div>\n\
<div class=\"line\"><a name=\"l04375\"></a><span class=\"lineno\"> 4375</span>&#160;                    shadedBufferData[idx][2] = meshGeom.face_connects[base+v+1]</div>\n\
<div class=\"line\"><a name=\"l04376\"></a><span class=\"lineno\"> 4376</span>&#160;                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l04377\"></a><span class=\"lineno\"> 4377</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04378\"></a><span class=\"lineno\"> 4378</span>&#160;                base += numVerts</div>\n\
<div class=\"line\"><a name=\"l04379\"></a><span class=\"lineno\"> 4379</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04380\"></a><span class=\"lineno\"> 4380</span>&#160;        self.fShadedIndexBuffer.commit(shadedBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04381\"></a><span class=\"lineno\"> 4381</span>&#160;        shadedBufferDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04382\"></a><span class=\"lineno\"> 4382</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04383\"></a><span class=\"lineno\"> 4383</span>&#160;    <span class=\"keyword\">def </span>rebuildActiveComponentIndexBuffers(self):</div>\n\
<div class=\"line\"><a name=\"l04384\"></a><span class=\"lineno\"> 4384</span>&#160;        <span class=\"comment\">## Preamble</span></div>\n\
<div class=\"line\"><a name=\"l04385\"></a><span class=\"lineno\"> 4385</span>&#160;        meshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l04386\"></a><span class=\"lineno\"> 4386</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> meshGeom:</div>\n\
<div class=\"line\"><a name=\"l04387\"></a><span class=\"lineno\"> 4387</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l04388\"></a><span class=\"lineno\"> 4388</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04389\"></a><span class=\"lineno\"> 4389</span>&#160;        <span class=\"comment\">## Clear old</span></div>\n\
<div class=\"line\"><a name=\"l04390\"></a><span class=\"lineno\"> 4390</span>&#160;        self.clearActiveComponentIndexBuffers()</div>\n\
<div class=\"line\"><a name=\"l04391\"></a><span class=\"lineno\"> 4391</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04392\"></a><span class=\"lineno\"> 4392</span>&#160;        <span class=\"comment\">## Acquire and fill index buffer for active vertices</span></div>\n\
<div class=\"line\"><a name=\"l04393\"></a><span class=\"lineno\"> 4393</span>&#160;        numActiveVertices = len(self.fActiveVerticesSet)</div>\n\
<div class=\"line\"><a name=\"l04394\"></a><span class=\"lineno\"> 4394</span>&#160;        <span class=\"keywordflow\">if</span> numActiveVertices &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l04395\"></a><span class=\"lineno\"> 4395</span>&#160;            self.fActiveVerticesIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04396\"></a><span class=\"lineno\"> 4396</span>&#160;            activeVerticesDataAddress = self.fActiveVerticesIndexBuffer.acquire(numActiveVertices, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04397\"></a><span class=\"lineno\"> 4397</span>&#160;            <span class=\"keywordflow\">if</span> activeVerticesDataAddress:</div>\n\
<div class=\"line\"><a name=\"l04398\"></a><span class=\"lineno\"> 4398</span>&#160;                activeVerticesData = (ctypes.c_uint*numActiveVertices).from_address(activeVerticesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04399\"></a><span class=\"lineno\"> 4399</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04400\"></a><span class=\"lineno\"> 4400</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l04401\"></a><span class=\"lineno\"> 4401</span>&#160;                <span class=\"keywordflow\">for</span> vid <span class=\"keywordflow\">in</span> self.fActiveVerticesSet:</div>\n\
<div class=\"line\"><a name=\"l04402\"></a><span class=\"lineno\"> 4402</span>&#160;                    activeVerticesData[idx] = vid </div>\n\
<div class=\"line\"><a name=\"l04403\"></a><span class=\"lineno\"> 4403</span>&#160;                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l04404\"></a><span class=\"lineno\"> 4404</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04405\"></a><span class=\"lineno\"> 4405</span>&#160;                self.fActiveVerticesIndexBuffer.commit(activeVerticesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04406\"></a><span class=\"lineno\"> 4406</span>&#160;                activeVerticesDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04407\"></a><span class=\"lineno\"> 4407</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04408\"></a><span class=\"lineno\"> 4408</span>&#160;        <span class=\"comment\">## Acquire and fill index buffer for active edges</span></div>\n\
<div class=\"line\"><a name=\"l04409\"></a><span class=\"lineno\"> 4409</span>&#160;        numActiveEdges = len(self.fActiveEdgesSet)</div>\n\
<div class=\"line\"><a name=\"l04410\"></a><span class=\"lineno\"> 4410</span>&#160;        <span class=\"keywordflow\">if</span> numActiveEdges &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l04411\"></a><span class=\"lineno\"> 4411</span>&#160;            self.fActiveEdgesIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04412\"></a><span class=\"lineno\"> 4412</span>&#160;            activeEdgesDataAddress = self.fActiveEdgesIndexBuffer.acquire(2*numActiveEdges, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04413\"></a><span class=\"lineno\"> 4413</span>&#160;            <span class=\"keywordflow\">if</span> activeEdgesDataAddress:</div>\n\
<div class=\"line\"><a name=\"l04414\"></a><span class=\"lineno\"> 4414</span>&#160;                activeEdgesData = ((ctypes.c_uint * 2)*numActiveEdges).from_address(activeEdgesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04415\"></a><span class=\"lineno\"> 4415</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04416\"></a><span class=\"lineno\"> 4416</span>&#160;                eid = 0</div>\n\
<div class=\"line\"><a name=\"l04417\"></a><span class=\"lineno\"> 4417</span>&#160;                first = 0</div>\n\
<div class=\"line\"><a name=\"l04418\"></a><span class=\"lineno\"> 4418</span>&#160;                vid = 0</div>\n\
<div class=\"line\"><a name=\"l04419\"></a><span class=\"lineno\"> 4419</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l04420\"></a><span class=\"lineno\"> 4420</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04421\"></a><span class=\"lineno\"> 4421</span>&#160;                    <span class=\"comment\">## Ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04422\"></a><span class=\"lineno\"> 4422</span>&#160;                    numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04423\"></a><span class=\"lineno\"> 4423</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04424\"></a><span class=\"lineno\"> 4424</span>&#160;                        first = vid</div>\n\
<div class=\"line\"><a name=\"l04425\"></a><span class=\"lineno\"> 4425</span>&#160;                        <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04426\"></a><span class=\"lineno\"> 4426</span>&#160;                            <span class=\"keywordflow\">if</span> eid <span class=\"keywordflow\">in</span> self.fActiveEdgesSet:</div>\n\
<div class=\"line\"><a name=\"l04427\"></a><span class=\"lineno\"> 4427</span>&#160;                                activeEdgesData[idx][0] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04428\"></a><span class=\"lineno\"> 4428</span>&#160;                                activeEdgesData[idx][1] = meshGeom.face_connects[vid + 1]</div>\n\
<div class=\"line\"><a name=\"l04429\"></a><span class=\"lineno\"> 4429</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l04430\"></a><span class=\"lineno\"> 4430</span>&#160;                            vid += 1</div>\n\
<div class=\"line\"><a name=\"l04431\"></a><span class=\"lineno\"> 4431</span>&#160;                            eid += 1</div>\n\
<div class=\"line\"><a name=\"l04432\"></a><span class=\"lineno\"> 4432</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04433\"></a><span class=\"lineno\"> 4433</span>&#160;                        <span class=\"keywordflow\">if</span> eid <span class=\"keywordflow\">in</span> self.fActiveEdgesSet:</div>\n\
<div class=\"line\"><a name=\"l04434\"></a><span class=\"lineno\"> 4434</span>&#160;                            activeEdgesData[idx][0] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04435\"></a><span class=\"lineno\"> 4435</span>&#160;                            activeEdgesData[idx][1] = meshGeom.face_connects[first]</div>\n\
<div class=\"line\"><a name=\"l04436\"></a><span class=\"lineno\"> 4436</span>&#160;                            idx += 1</div>\n\
<div class=\"line\"><a name=\"l04437\"></a><span class=\"lineno\"> 4437</span>&#160;                        vid += 1</div>\n\
<div class=\"line\"><a name=\"l04438\"></a><span class=\"lineno\"> 4438</span>&#160;                        eid += 1</div>\n\
<div class=\"line\"><a name=\"l04439\"></a><span class=\"lineno\"> 4439</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l04440\"></a><span class=\"lineno\"> 4440</span>&#160;                        vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l04441\"></a><span class=\"lineno\"> 4441</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04442\"></a><span class=\"lineno\"> 4442</span>&#160;                self.fActiveEdgesIndexBuffer.commit(activeEdgesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04443\"></a><span class=\"lineno\"> 4443</span>&#160;                activeEdgesDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04444\"></a><span class=\"lineno\"> 4444</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04445\"></a><span class=\"lineno\"> 4445</span>&#160;        <span class=\"comment\">## Acquire and fill index buffer for active faces</span></div>\n\
<div class=\"line\"><a name=\"l04446\"></a><span class=\"lineno\"> 4446</span>&#160;        numActiveFaces = len(self.fActiveFacesSet)</div>\n\
<div class=\"line\"><a name=\"l04447\"></a><span class=\"lineno\"> 4447</span>&#160;        <span class=\"keywordflow\">if</span> numActiveFaces &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l04448\"></a><span class=\"lineno\"> 4448</span>&#160;            numActiveFacesTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l04449\"></a><span class=\"lineno\"> 4449</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04450\"></a><span class=\"lineno\"> 4450</span>&#160;                <span class=\"keywordflow\">if</span> i <span class=\"keywordflow\">in</span> self.fActiveFacesSet:</div>\n\
<div class=\"line\"><a name=\"l04451\"></a><span class=\"lineno\"> 4451</span>&#160;                    numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04452\"></a><span class=\"lineno\"> 4452</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04453\"></a><span class=\"lineno\"> 4453</span>&#160;                        numActiveFacesTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l04454\"></a><span class=\"lineno\"> 4454</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04455\"></a><span class=\"lineno\"> 4455</span>&#160;            self.fActiveFacesIndexBuffer = omr.MIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l04456\"></a><span class=\"lineno\"> 4456</span>&#160;            activeFacesDataAddress = self.fActiveFacesIndexBuffer.acquire(3*numActiveFacesTriangles, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04457\"></a><span class=\"lineno\"> 4457</span>&#160;            <span class=\"keywordflow\">if</span> activeFacesDataAddress:</div>\n\
<div class=\"line\"><a name=\"l04458\"></a><span class=\"lineno\"> 4458</span>&#160;                activeFacesData = ((ctypes.c_uint * 3)*numActiveFacesTriangles).from_address(activeFacesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04459\"></a><span class=\"lineno\"> 4459</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04460\"></a><span class=\"lineno\"> 4460</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l04461\"></a><span class=\"lineno\"> 4461</span>&#160;                vid = 0</div>\n\
<div class=\"line\"><a name=\"l04462\"></a><span class=\"lineno\"> 4462</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04463\"></a><span class=\"lineno\"> 4463</span>&#160;                    numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04464\"></a><span class=\"lineno\"> 4464</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04465\"></a><span class=\"lineno\"> 4465</span>&#160;                        <span class=\"keywordflow\">if</span> i <span class=\"keywordflow\">in</span> self.fActiveFacesSet:</div>\n\
<div class=\"line\"><a name=\"l04466\"></a><span class=\"lineno\"> 4466</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04467\"></a><span class=\"lineno\"> 4467</span>&#160;                                activeFacesData[idx][0] = meshGeom.face_connects[vid]</div>\n\
<div class=\"line\"><a name=\"l04468\"></a><span class=\"lineno\"> 4468</span>&#160;                                activeFacesData[idx][1] = meshGeom.face_connects[vid+v]</div>\n\
<div class=\"line\"><a name=\"l04469\"></a><span class=\"lineno\"> 4469</span>&#160;                                activeFacesData[idx][2] = meshGeom.face_connects[vid+v+1]</div>\n\
<div class=\"line\"><a name=\"l04470\"></a><span class=\"lineno\"> 4470</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l04471\"></a><span class=\"lineno\"> 4471</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04472\"></a><span class=\"lineno\"> 4472</span>&#160;                        vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l04473\"></a><span class=\"lineno\"> 4473</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04474\"></a><span class=\"lineno\"> 4474</span>&#160;                self.fActiveFacesIndexBuffer.commit(activeFacesDataAddress)</div>\n\
<div class=\"line\"><a name=\"l04475\"></a><span class=\"lineno\"> 4475</span>&#160;                activeFacesDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04476\"></a><span class=\"lineno\"> 4476</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04477\"></a><span class=\"lineno\"> 4477</span>&#160;    <span class=\"keyword\">def </span>clearBuffers(self):</div>\n\
<div class=\"line\"><a name=\"l04478\"></a><span class=\"lineno\"> 4478</span>&#160;        self.clearGeometryBuffers()</div>\n\
<div class=\"line\"><a name=\"l04479\"></a><span class=\"lineno\"> 4479</span>&#160;        self.clearActiveComponentIndexBuffers()</div>\n\
<div class=\"line\"><a name=\"l04480\"></a><span class=\"lineno\"> 4480</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04481\"></a><span class=\"lineno\"> 4481</span>&#160;    <span class=\"keyword\">def </span>clearGeometryBuffers(self):</div>\n\
<div class=\"line\"><a name=\"l04482\"></a><span class=\"lineno\"> 4482</span>&#160;        self.fPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04483\"></a><span class=\"lineno\"> 4483</span>&#160;        self.fNormalBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04484\"></a><span class=\"lineno\"> 4484</span>&#160;        self.fBoxPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04485\"></a><span class=\"lineno\"> 4485</span>&#160;        self.fWireIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04486\"></a><span class=\"lineno\"> 4486</span>&#160;        self.fBoxIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04487\"></a><span class=\"lineno\"> 4487</span>&#160;        self.fShadedIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04488\"></a><span class=\"lineno\"> 4488</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04489\"></a><span class=\"lineno\"> 4489</span>&#160;    <span class=\"keyword\">def </span>clearActiveComponentIndexBuffers(self):</div>\n\
<div class=\"line\"><a name=\"l04490\"></a><span class=\"lineno\"> 4490</span>&#160;        self.fActiveVerticesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04491\"></a><span class=\"lineno\"> 4491</span>&#160;        self.fActiveEdgesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04492\"></a><span class=\"lineno\"> 4492</span>&#160;        self.fActiveFacesIndexBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04493\"></a><span class=\"lineno\"> 4493</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04494\"></a><span class=\"lineno\"> 4494</span>&#160;    <span class=\"keyword\">def </span>updateSelectionGranularity(self, path, selectionContext):</div>\n\
<div class=\"line\"><a name=\"l04495\"></a><span class=\"lineno\"> 4495</span>&#160;        <span class=\"comment\">## This is method is called during the pre-filtering phase of the viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l04496\"></a><span class=\"lineno\"> 4496</span>&#160;        <span class=\"comment\">## and is used to setup the selection context of the given DAG object.</span></div>\n\
<div class=\"line\"><a name=\"l04497\"></a><span class=\"lineno\"> 4497</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04498\"></a><span class=\"lineno\"> 4498</span>&#160;        <span class=\"comment\">## We want the whole shape to be selectable, so we set the selection level to kObject so that the shape</span></div>\n\
<div class=\"line\"><a name=\"l04499\"></a><span class=\"lineno\"> 4499</span>&#160;        <span class=\"comment\">## will be processed by the selection.</span></div>\n\
<div class=\"line\"><a name=\"l04500\"></a><span class=\"lineno\"> 4500</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04501\"></a><span class=\"lineno\"> 4501</span>&#160;        <span class=\"comment\">## In case we are currently in component selection mode (vertex, edge or face),</span></div>\n\
<div class=\"line\"><a name=\"l04502\"></a><span class=\"lineno\"> 4502</span>&#160;        <span class=\"comment\">## since we have created render items that can be use in the selection phase (kSelectionOnly draw mode)</span></div>\n\
<div class=\"line\"><a name=\"l04503\"></a><span class=\"lineno\"> 4503</span>&#160;        <span class=\"comment\">## and we also registered component converters to handle this render items,</span></div>\n\
<div class=\"line\"><a name=\"l04504\"></a><span class=\"lineno\"> 4504</span>&#160;        <span class=\"comment\">## we can set the selection level to kComponent so that the shape will also be processed by the selection.</span></div>\n\
<div class=\"line\"><a name=\"l04505\"></a><span class=\"lineno\"> 4505</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l04506\"></a><span class=\"lineno\"> 4506</span>&#160;        <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kHilite:</div>\n\
<div class=\"line\"><a name=\"l04507\"></a><span class=\"lineno\"> 4507</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l04508\"></a><span class=\"lineno\"> 4508</span>&#160;            globalComponentMask = om.MGlobal.objectSelectionMask()</div>\n\
<div class=\"line\"><a name=\"l04509\"></a><span class=\"lineno\"> 4509</span>&#160;            <span class=\"keywordflow\">if</span> om.MGlobal.selectionMode() == om.MGlobal.kSelectComponentMode:</div>\n\
<div class=\"line\"><a name=\"l04510\"></a><span class=\"lineno\"> 4510</span>&#160;                globalComponentMask = om.MGlobal.componentSelectionMask()</div>\n\
<div class=\"line\"><a name=\"l04511\"></a><span class=\"lineno\"> 4511</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04512\"></a><span class=\"lineno\"> 4512</span>&#160;            supportedComponentMask = om.MSelectionMask( om.MSelectionMask.kSelectMeshVerts )</div>\n\
<div class=\"line\"><a name=\"l04513\"></a><span class=\"lineno\"> 4513</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectMeshEdges )</div>\n\
<div class=\"line\"><a name=\"l04514\"></a><span class=\"lineno\"> 4514</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectMeshFaces )</div>\n\
<div class=\"line\"><a name=\"l04515\"></a><span class=\"lineno\"> 4515</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectPointsForGravity )</div>\n\
<div class=\"line\"><a name=\"l04516\"></a><span class=\"lineno\"> 4516</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04517\"></a><span class=\"lineno\"> 4517</span>&#160;            <span class=\"keywordflow\">if</span> globalComponentMask.intersects(supportedComponentMask):</div>\n\
<div class=\"line\"><a name=\"l04518\"></a><span class=\"lineno\"> 4518</span>&#160;                selectionContext.selectionLevel = omr.MSelectionContext.kComponent</div>\n\
<div class=\"line\"><a name=\"l04519\"></a><span class=\"lineno\"> 4519</span>&#160;        <span class=\"keywordflow\">elif</span> omr.MPxSubSceneOverride.pointSnappingActive():</div>\n\
<div class=\"line\"><a name=\"l04520\"></a><span class=\"lineno\"> 4520</span>&#160;            selectionContext.selectionLevel = omr.MSelectionContext.kComponent</div>\n\
<div class=\"line\"><a name=\"l04521\"></a><span class=\"lineno\"> 4521</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04522\"></a><span class=\"lineno\"> 4522</span>&#160;    <span class=\"keyword\">def </span>getSelectionPath(self, renderItem, dagPath):</div>\n\
<div class=\"line\"><a name=\"l04523\"></a><span class=\"lineno\"> 4523</span>&#160;        node = om.MFnDagNode(self.fObject)</div>\n\
<div class=\"line\"><a name=\"l04524\"></a><span class=\"lineno\"> 4524</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> node:</div>\n\
<div class=\"line\"><a name=\"l04525\"></a><span class=\"lineno\"> 4525</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04526\"></a><span class=\"lineno\"> 4526</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l04527\"></a><span class=\"lineno\"> 4527</span>&#160;        instances = node.getAllPaths()</div>\n\
<div class=\"line\"><a name=\"l04528\"></a><span class=\"lineno\"> 4528</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> instances <span class=\"keywordflow\">or</span> len(instances) == 0:</div>\n\
<div class=\"line\"><a name=\"l04529\"></a><span class=\"lineno\"> 4529</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04530\"></a><span class=\"lineno\"> 4530</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04531\"></a><span class=\"lineno\"> 4531</span>&#160;        dagPath.set(instances[0])</div>\n\
<div class=\"line\"><a name=\"l04532\"></a><span class=\"lineno\"> 4532</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04533\"></a><span class=\"lineno\"> 4533</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04534\"></a><span class=\"lineno\"> 4534</span>&#160;    <span class=\"keyword\">def </span>getInstancedSelectionPath(self, renderItem, intersection, dagPath):</div>\n\
<div class=\"line\"><a name=\"l04535\"></a><span class=\"lineno\"> 4535</span>&#160;        node = om.MFnDagNode(self.fObject)</div>\n\
<div class=\"line\"><a name=\"l04536\"></a><span class=\"lineno\"> 4536</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> node:</div>\n\
<div class=\"line\"><a name=\"l04537\"></a><span class=\"lineno\"> 4537</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04538\"></a><span class=\"lineno\"> 4538</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04539\"></a><span class=\"lineno\"> 4539</span>&#160;        instances = node.getAllPaths()</div>\n\
<div class=\"line\"><a name=\"l04540\"></a><span class=\"lineno\"> 4540</span>&#160;        instanceCount = len(instances)</div>\n\
<div class=\"line\"><a name=\"l04541\"></a><span class=\"lineno\"> 4541</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> instances <span class=\"keywordflow\">or</span> instanceCount == 0:</div>\n\
<div class=\"line\"><a name=\"l04542\"></a><span class=\"lineno\"> 4542</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04543\"></a><span class=\"lineno\"> 4543</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04544\"></a><span class=\"lineno\"> 4544</span>&#160;        instanceId = intersection.instanceID</div>\n\
<div class=\"line\"><a name=\"l04545\"></a><span class=\"lineno\"> 4545</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l04546\"></a><span class=\"lineno\"> 4546</span>&#160;        <span class=\"comment\">## In case there is only one instance or GPU instancing is not used</span></div>\n\
<div class=\"line\"><a name=\"l04547\"></a><span class=\"lineno\"> 4547</span>&#160;        if(instanceCount == 1 <span class=\"keywordflow\">or</span> instanceId == -1):</div>\n\
<div class=\"line\"><a name=\"l04548\"></a><span class=\"lineno\"> 4548</span>&#160;            instanceId = 0</div>\n\
<div class=\"line\"><a name=\"l04549\"></a><span class=\"lineno\"> 4549</span>&#160;            userData = renderItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04550\"></a><span class=\"lineno\"> 4550</span>&#160;            if( userData <span class=\"keywordflow\">and</span> </div>\n\
<div class=\"line\"><a name=\"l04551\"></a><span class=\"lineno\"> 4551</span>&#160;                isinstance(userData, apiMeshHWSelectionUserData) <span class=\"keywordflow\">and</span> </div>\n\
<div class=\"line\"><a name=\"l04552\"></a><span class=\"lineno\"> 4552</span>&#160;                userData.fInstanceIndex &gt;= 0 <span class=\"keywordflow\">and</span> </div>\n\
<div class=\"line\"><a name=\"l04553\"></a><span class=\"lineno\"> 4553</span>&#160;                userData.fInstanceIndex &lt; instanceCount):</div>\n\
<div class=\"line\"><a name=\"l04554\"></a><span class=\"lineno\"> 4554</span>&#160;                instanceId = userData.fInstanceIndex</div>\n\
<div class=\"line\"><a name=\"l04555\"></a><span class=\"lineno\"> 4555</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04556\"></a><span class=\"lineno\"> 4556</span>&#160;            dagPath.set(instances[instanceId])</div>\n\
<div class=\"line\"><a name=\"l04557\"></a><span class=\"lineno\"> 4557</span>&#160;            <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04558\"></a><span class=\"lineno\"> 4558</span>&#160;        <span class=\"comment\">## The instance ID starts from 1 for the first DAG node. We can use instanceID - 1  </span></div>\n\
<div class=\"line\"><a name=\"l04559\"></a><span class=\"lineno\"> 4559</span>&#160;        <span class=\"comment\">## as the index to DagPath array returned by MFnDagNode::getAllPaths().</span></div>\n\
<div class=\"line\"><a name=\"l04560\"></a><span class=\"lineno\"> 4560</span>&#160;        <span class=\"comment\">## HOWEVER there is an exception when there are instances within a Shape object,</span></div>\n\
<div class=\"line\"><a name=\"l04561\"></a><span class=\"lineno\"> 4561</span>&#160;        <span class=\"comment\">## which introduces nested instancing scenarios. For simplicity reason the selection</span></div>\n\
<div class=\"line\"><a name=\"l04562\"></a><span class=\"lineno\"> 4562</span>&#160;        <span class=\"comment\">## edge instancing is disabled when there are multiple apiMesh instances.</span></div>\n\
<div class=\"line\"><a name=\"l04563\"></a><span class=\"lineno\"> 4563</span>&#160;        elif(instanceId &gt;=1 <span class=\"keywordflow\">and</span> instanceId &lt;= instanceCount):</div>\n\
<div class=\"line\"><a name=\"l04564\"></a><span class=\"lineno\"> 4564</span>&#160;            view = omui.M3dView.active3dView()</div>\n\
<div class=\"line\"><a name=\"l04565\"></a><span class=\"lineno\"> 4565</span>&#160;            <span class=\"keywordflow\">if</span> view.viewIsFiltered():</div>\n\
<div class=\"line\"><a name=\"l04566\"></a><span class=\"lineno\"> 4566</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04567\"></a><span class=\"lineno\"> 4567</span>&#160;                viewSelectedList = view.filteredObjectList()</div>\n\
<div class=\"line\"><a name=\"l04568\"></a><span class=\"lineno\"> 4568</span>&#160;                <span class=\"keywordflow\">if</span> viewSelectedList:</div>\n\
<div class=\"line\"><a name=\"l04569\"></a><span class=\"lineno\"> 4569</span>&#160;                    <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> range(instanceCount):</div>\n\
<div class=\"line\"><a name=\"l04570\"></a><span class=\"lineno\"> 4570</span>&#160;                        instance = instances[instIdx]</div>\n\
<div class=\"line\"><a name=\"l04571\"></a><span class=\"lineno\"> 4571</span>&#160;                        <span class=\"keywordflow\">if</span> instance.isValid() <span class=\"keywordflow\">and</span> instance.isVisible():</div>\n\
<div class=\"line\"><a name=\"l04572\"></a><span class=\"lineno\"> 4572</span>&#160;                            intersectionList = om.MSelectionList()</div>\n\
<div class=\"line\"><a name=\"l04573\"></a><span class=\"lineno\"> 4573</span>&#160;                            </div>\n\
<div class=\"line\"><a name=\"l04574\"></a><span class=\"lineno\"> 4574</span>&#160;                            intersectionList.add(instance)</div>\n\
<div class=\"line\"><a name=\"l04575\"></a><span class=\"lineno\"> 4575</span>&#160;                            intersectionList.intersect(viewSelectedList, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l04576\"></a><span class=\"lineno\"> 4576</span>&#160;                            </div>\n\
<div class=\"line\"><a name=\"l04577\"></a><span class=\"lineno\"> 4577</span>&#160;                            selectionIt = om.MItSelectionList(intersectionList)</div>\n\
<div class=\"line\"><a name=\"l04578\"></a><span class=\"lineno\"> 4578</span>&#160;                            <span class=\"keywordflow\">while</span> <span class=\"keywordflow\">not</span> selectionIt.isDone():</div>\n\
<div class=\"line\"><a name=\"l04579\"></a><span class=\"lineno\"> 4579</span>&#160;                                comp = selectionIt.getComponent()[1]</div>\n\
<div class=\"line\"><a name=\"l04580\"></a><span class=\"lineno\"> 4580</span>&#160;                                </div>\n\
<div class=\"line\"><a name=\"l04581\"></a><span class=\"lineno\"> 4581</span>&#160;                                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> comp:</div>\n\
<div class=\"line\"><a name=\"l04582\"></a><span class=\"lineno\"> 4582</span>&#160;                                    instanceId = instanceId - 1</div>\n\
<div class=\"line\"><a name=\"l04583\"></a><span class=\"lineno\"> 4583</span>&#160;                                    <span class=\"keywordflow\">if</span> instanceId == 0:</div>\n\
<div class=\"line\"><a name=\"l04584\"></a><span class=\"lineno\"> 4584</span>&#160;                                        dagPath.set(instance)</div>\n\
<div class=\"line\"><a name=\"l04585\"></a><span class=\"lineno\"> 4585</span>&#160;                                        <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04586\"></a><span class=\"lineno\"> 4586</span>&#160;                                next(selectionIt)</div>\n\
<div class=\"line\"><a name=\"l04587\"></a><span class=\"lineno\"> 4587</span>&#160;            <span class=\"keywordflow\">else</span>:               </div>\n\
<div class=\"line\"><a name=\"l04588\"></a><span class=\"lineno\"> 4588</span>&#160;                <span class=\"keywordflow\">for</span> instIdx <span class=\"keywordflow\">in</span> range(instanceCount):</div>\n\
<div class=\"line\"><a name=\"l04589\"></a><span class=\"lineno\"> 4589</span>&#160;                    instance = instances[instIdx]</div>\n\
<div class=\"line\"><a name=\"l04590\"></a><span class=\"lineno\"> 4590</span>&#160;                    <span class=\"keywordflow\">if</span> (instance.isValid() <span class=\"keywordflow\">and</span> instance.isVisible()):</div>\n\
<div class=\"line\"><a name=\"l04591\"></a><span class=\"lineno\"> 4591</span>&#160;                        instanceId = instanceId - 1</div>\n\
<div class=\"line\"><a name=\"l04592\"></a><span class=\"lineno\"> 4592</span>&#160;                        <span class=\"keywordflow\">if</span> (instanceId == 0):</div>\n\
<div class=\"line\"><a name=\"l04593\"></a><span class=\"lineno\"> 4593</span>&#160;                            dagPath.set(instance)</div>\n\
<div class=\"line\"><a name=\"l04594\"></a><span class=\"lineno\"> 4594</span>&#160;                            <span class=\"keywordflow\">return</span> <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04595\"></a><span class=\"lineno\"> 4595</span>&#160;                            </div>\n\
<div class=\"line\"><a name=\"l04596\"></a><span class=\"lineno\"> 4596</span>&#160;        <span class=\"keywordflow\">return</span> <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04597\"></a><span class=\"lineno\"> 4597</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l04598\"></a><span class=\"lineno\"> 4598</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l04599\"></a><span class=\"lineno\"> 4599</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04600\"></a><span class=\"lineno\"> 4600</span>&#160;<span class=\"comment\">## apiMeshGeometryOverride</span></div>\n\
<div class=\"line\"><a name=\"l04601\"></a><span class=\"lineno\"> 4601</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04602\"></a><span class=\"lineno\"> 4602</span>&#160;<span class=\"comment\">## Handles vertex data preparation for drawing the user defined shape in</span></div>\n\
<div class=\"line\"><a name=\"l04603\"></a><span class=\"lineno\"> 4603</span>&#160;<span class=\"comment\">## Viewport 2.0.</span></div>\n\
<div class=\"line\"><a name=\"l04604\"></a><span class=\"lineno\"> 4604</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04605\"></a><span class=\"lineno\"> 4605</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l04606\"></a><span class=\"lineno\"> 4606</span>&#160;<span class=\"comment\">## Custom user data class to attach to render items</span></div>\n\
<div class=\"line\"><a name=\"l04607\"></a><span class=\"lineno\"> 4607</span>&#160;<span class=\"keyword\">class </span>apiMeshUserData(om.MUserData):</div>\n\
<div class=\"line\"><a name=\"l04608\"></a><span class=\"lineno\"> 4608</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l04609\"></a><span class=\"lineno\"> 4609</span>&#160;        om.MUserData.__init__(self, <span class=\"keyword\">True</span>)   <span class=\"comment\">## let Maya clean up</span></div>\n\
<div class=\"line\"><a name=\"l04610\"></a><span class=\"lineno\"> 4610</span>&#160;        self.fMessage = <span class=\"stringliteral\">&quot;&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04611\"></a><span class=\"lineno\"> 4611</span>&#160;        self.fNumModifications = 0</div>\n\
<div class=\"line\"><a name=\"l04612\"></a><span class=\"lineno\"> 4612</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04613\"></a><span class=\"lineno\"> 4613</span>&#160;<span class=\"comment\">## Pre/Post callback helper</span></div>\n\
<div class=\"line\"><a name=\"l04614\"></a><span class=\"lineno\"> 4614</span>&#160;<span class=\"keyword\">def </span>callbackDataPrint(context, renderItemList):</div>\n\
<div class=\"line\"><a name=\"l04615\"></a><span class=\"lineno\"> 4615</span>&#160;    <span class=\"keywordflow\">for</span> item <span class=\"keywordflow\">in</span> renderItemList:</div>\n\
<div class=\"line\"><a name=\"l04616\"></a><span class=\"lineno\"> 4616</span>&#160;        <span class=\"keywordflow\">if</span> item:</div>\n\
<div class=\"line\"><a name=\"l04617\"></a><span class=\"lineno\"> 4617</span>&#160;            path = item.sourceDagPath()</div>\n\
<div class=\"line\"><a name=\"l04618\"></a><span class=\"lineno\"> 4618</span>&#160;            print(<span class=\"stringliteral\">&quot;\\tITEM: &#39;&quot;</span> + item.name() + <span class=\"stringliteral\">&quot;&#39; -- SOURCE: &#39;&quot;</span> + path.fullPathName() + <span class=\"stringliteral\">&quot;&#39;&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04619\"></a><span class=\"lineno\"> 4619</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04620\"></a><span class=\"lineno\"> 4620</span>&#160;    passCtx = context.getPassContext()</div>\n\
<div class=\"line\"><a name=\"l04621\"></a><span class=\"lineno\"> 4621</span>&#160;    passId = passCtx.passIdentifier()</div>\n\
<div class=\"line\"><a name=\"l04622\"></a><span class=\"lineno\"> 4622</span>&#160;    passSem = passCtx.passSemantics()</div>\n\
<div class=\"line\"><a name=\"l04623\"></a><span class=\"lineno\"> 4623</span>&#160;    print(<span class=\"stringliteral\">&quot;\\tAPI mesh drawing in pass[&quot;</span> + passId + <span class=\"stringliteral\">&quot;], semantic[&quot;</span> + passSem + <span class=\"stringliteral\">&quot;]&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04624\"></a><span class=\"lineno\"> 4624</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04625\"></a><span class=\"lineno\"> 4625</span>&#160;<span class=\"comment\">## Custom pre-draw callback</span></div>\n\
<div class=\"line\"><a name=\"l04626\"></a><span class=\"lineno\"> 4626</span>&#160;<span class=\"keyword\">def </span>apiMeshPreDrawCallback(context, renderItemList, shaderInstance):</div>\n\
<div class=\"line\"><a name=\"l04627\"></a><span class=\"lineno\"> 4627</span>&#160;    print(<span class=\"stringliteral\">&quot;PRE-draw callback triggered for render item list with data:&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04628\"></a><span class=\"lineno\"> 4628</span>&#160;    callbackDataPrint(context, renderItemList)</div>\n\
<div class=\"line\"><a name=\"l04629\"></a><span class=\"lineno\"> 4629</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04630\"></a><span class=\"lineno\"> 4630</span>&#160;<span class=\"comment\">## Custom post-draw callback</span></div>\n\
<div class=\"line\"><a name=\"l04631\"></a><span class=\"lineno\"> 4631</span>&#160;<span class=\"keyword\">def </span>apiMeshPostDrawCallback(context, renderItemList, shaderInstance):</div>\n\
<div class=\"line\"><a name=\"l04632\"></a><span class=\"lineno\"> 4632</span>&#160;    print(<span class=\"stringliteral\">&quot;POST-draw callback triggered for render item list with data:&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l04633\"></a><span class=\"lineno\"> 4633</span>&#160;    callbackDataPrint(context, renderItemList)</div>\n\
<div class=\"line\"><a name=\"l04634\"></a><span class=\"lineno\"> 4634</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04635\"></a><span class=\"lineno\"> 4635</span>&#160;<span class=\"comment\">## Custom component converter to select vertices</span></div>\n\
<div class=\"line\"><a name=\"l04636\"></a><span class=\"lineno\"> 4636</span>&#160;<span class=\"comment\">## Attached to the dormant vertices render item (apiMeshGeometryOverride.sVertexItemName)</span></div>\n\
<div class=\"line\"><a name=\"l04637\"></a><span class=\"lineno\"> 4637</span>&#160;<span class=\"keyword\">class </span>meshVertComponentConverterGeometryOverride(omr.MPxComponentConverter):</div>\n\
<div class=\"line\"><a name=\"l04638\"></a><span class=\"lineno\"> 4638</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l04639\"></a><span class=\"lineno\"> 4639</span>&#160;        omr.MPxComponentConverter.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l04640\"></a><span class=\"lineno\"> 4640</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04641\"></a><span class=\"lineno\"> 4641</span>&#160;        self.fComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l04642\"></a><span class=\"lineno\"> 4642</span>&#160;        self.fComponentObject = om.MObject.kNullObj</div>\n\
<div class=\"line\"><a name=\"l04643\"></a><span class=\"lineno\"> 4643</span>&#160;        self.fVertices = []</div>\n\
<div class=\"line\"><a name=\"l04644\"></a><span class=\"lineno\"> 4644</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04645\"></a><span class=\"lineno\"> 4645</span>&#160;    <span class=\"keyword\">def </span>initialize(self, renderItem):</div>\n\
<div class=\"line\"><a name=\"l04646\"></a><span class=\"lineno\"> 4646</span>&#160;        <span class=\"comment\">## Create the component selection object .. here we are selecting vertex component</span></div>\n\
<div class=\"line\"><a name=\"l04647\"></a><span class=\"lineno\"> 4647</span>&#160;        self.fComponentObject = self.fComponent.create( om.MFn.kMeshVertComponent )</div>\n\
<div class=\"line\"><a name=\"l04648\"></a><span class=\"lineno\"> 4648</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04649\"></a><span class=\"lineno\"> 4649</span>&#160;        <span class=\"comment\">## Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\"><a name=\"l04650\"></a><span class=\"lineno\"> 4650</span>&#160;        <span class=\"comment\">## to the correponding vertex component of the object</span></div>\n\
<div class=\"line\"><a name=\"l04651\"></a><span class=\"lineno\"> 4651</span>&#160;        <span class=\"comment\">## Use same algorithm as in apiMeshGeometryOverride.updateIndexingForDormantVertices</span></div>\n\
<div class=\"line\"><a name=\"l04652\"></a><span class=\"lineno\"> 4652</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04653\"></a><span class=\"lineno\"> 4653</span>&#160;        selectionData = renderItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04654\"></a><span class=\"lineno\"> 4654</span>&#160;        <span class=\"keywordflow\">if</span> isinstance(selectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04655\"></a><span class=\"lineno\"> 4655</span>&#160;            meshGeom = selectionData.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l04656\"></a><span class=\"lineno\"> 4656</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04657\"></a><span class=\"lineno\"> 4657</span>&#160;            <span class=\"comment\">## Allocate vertices lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04658\"></a><span class=\"lineno\"> 4658</span>&#160;            numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l04659\"></a><span class=\"lineno\"> 4659</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04660\"></a><span class=\"lineno\"> 4660</span>&#160;                numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04661\"></a><span class=\"lineno\"> 4661</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04662\"></a><span class=\"lineno\"> 4662</span>&#160;                    numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l04663\"></a><span class=\"lineno\"> 4663</span>&#160;            self.fVertices = [0]*(3*numTriangles)</div>\n\
<div class=\"line\"><a name=\"l04664\"></a><span class=\"lineno\"> 4664</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04665\"></a><span class=\"lineno\"> 4665</span>&#160;            <span class=\"comment\">## Fill vertices lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04666\"></a><span class=\"lineno\"> 4666</span>&#160;            base = 0</div>\n\
<div class=\"line\"><a name=\"l04667\"></a><span class=\"lineno\"> 4667</span>&#160;            idx = 0</div>\n\
<div class=\"line\"><a name=\"l04668\"></a><span class=\"lineno\"> 4668</span>&#160;            <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04669\"></a><span class=\"lineno\"> 4669</span>&#160;                <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04670\"></a><span class=\"lineno\"> 4670</span>&#160;                numVerts = meshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l04671\"></a><span class=\"lineno\"> 4671</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04672\"></a><span class=\"lineno\"> 4672</span>&#160;                    <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04673\"></a><span class=\"lineno\"> 4673</span>&#160;                        self.fVertices[idx] = meshGeom.face_connects[base]</div>\n\
<div class=\"line\"><a name=\"l04674\"></a><span class=\"lineno\"> 4674</span>&#160;                        self.fVertices[idx+1] = meshGeom.face_connects[base+v]</div>\n\
<div class=\"line\"><a name=\"l04675\"></a><span class=\"lineno\"> 4675</span>&#160;                        self.fVertices[idx+2] = meshGeom.face_connects[base+v+1]</div>\n\
<div class=\"line\"><a name=\"l04676\"></a><span class=\"lineno\"> 4676</span>&#160;                        idx += 3</div>\n\
<div class=\"line\"><a name=\"l04677\"></a><span class=\"lineno\"> 4677</span>&#160;                    base += numVerts</div>\n\
<div class=\"line\"><a name=\"l04678\"></a><span class=\"lineno\"> 4678</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04679\"></a><span class=\"lineno\"> 4679</span>&#160;    <span class=\"keyword\">def </span>addIntersection(self, intersection):</div>\n\
<div class=\"line\"><a name=\"l04680\"></a><span class=\"lineno\"> 4680</span>&#160;        <span class=\"comment\">## Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\"><a name=\"l04681\"></a><span class=\"lineno\"> 4681</span>&#160;        <span class=\"comment\">## index buffer, to the correct vertex component</span></div>\n\
<div class=\"line\"><a name=\"l04682\"></a><span class=\"lineno\"> 4682</span>&#160;        rawIdx = intersection.index</div>\n\
<div class=\"line\"><a name=\"l04683\"></a><span class=\"lineno\"> 4683</span>&#160;        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04684\"></a><span class=\"lineno\"> 4684</span>&#160;        <span class=\"keywordflow\">if</span> rawIdx &gt;= 0 <span class=\"keywordflow\">and</span> rawIdx &lt; len(self.fVertices):</div>\n\
<div class=\"line\"><a name=\"l04685\"></a><span class=\"lineno\"> 4685</span>&#160;            idx = self.fVertices[rawIdx]</div>\n\
<div class=\"line\"><a name=\"l04686\"></a><span class=\"lineno\"> 4686</span>&#160;        self.fComponent.addElement(idx)</div>\n\
<div class=\"line\"><a name=\"l04687\"></a><span class=\"lineno\"> 4687</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04688\"></a><span class=\"lineno\"> 4688</span>&#160;    <span class=\"keyword\">def </span>component(self):</div>\n\
<div class=\"line\"><a name=\"l04689\"></a><span class=\"lineno\"> 4689</span>&#160;        <span class=\"comment\">## Return the component object that contains the ids of the selected vertices</span></div>\n\
<div class=\"line\"><a name=\"l04690\"></a><span class=\"lineno\"> 4690</span>&#160;        <span class=\"keywordflow\">return</span> self.fComponentObject</div>\n\
<div class=\"line\"><a name=\"l04691\"></a><span class=\"lineno\"> 4691</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04692\"></a><span class=\"lineno\"> 4692</span>&#160;    <span class=\"keyword\">def </span>selectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l04693\"></a><span class=\"lineno\"> 4693</span>&#160;        <span class=\"comment\">## This converter is only valid for vertex selection</span></div>\n\
<div class=\"line\"><a name=\"l04694\"></a><span class=\"lineno\"> 4694</span>&#160;        mask = om.MSelectionMask(om.MSelectionMask.kSelectMeshVerts)</div>\n\
<div class=\"line\"><a name=\"l04695\"></a><span class=\"lineno\"> 4695</span>&#160;        mask.addMask(om.MSelectionMask.kSelectPointsForGravity)</div>\n\
<div class=\"line\"><a name=\"l04696\"></a><span class=\"lineno\"> 4696</span>&#160;        <span class=\"keywordflow\">return</span> mask</div>\n\
<div class=\"line\"><a name=\"l04697\"></a><span class=\"lineno\"> 4697</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04698\"></a><span class=\"lineno\"> 4698</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l04699\"></a><span class=\"lineno\"> 4699</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l04700\"></a><span class=\"lineno\"> 4700</span>&#160;        <span class=\"keywordflow\">return</span> meshVertComponentConverterGeometryOverride()</div>\n\
<div class=\"line\"><a name=\"l04701\"></a><span class=\"lineno\"> 4701</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04702\"></a><span class=\"lineno\"> 4702</span>&#160;<span class=\"comment\">## Custom component converter to select edges</span></div>\n\
<div class=\"line\"><a name=\"l04703\"></a><span class=\"lineno\"> 4703</span>&#160;<span class=\"comment\">## Attached to the edge selection render item (apiMeshGeometryOverride.sEdgeSelectionItemName)</span></div>\n\
<div class=\"line\"><a name=\"l04704\"></a><span class=\"lineno\"> 4704</span>&#160;<span class=\"keyword\">class </span>meshEdgeComponentConverterGeometryOverride(omr.MPxComponentConverter):</div>\n\
<div class=\"line\"><a name=\"l04705\"></a><span class=\"lineno\"> 4705</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l04706\"></a><span class=\"lineno\"> 4706</span>&#160;        omr.MPxComponentConverter.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l04707\"></a><span class=\"lineno\"> 4707</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04708\"></a><span class=\"lineno\"> 4708</span>&#160;        self.fComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l04709\"></a><span class=\"lineno\"> 4709</span>&#160;        self.fComponentObject = om.MObject.kNullObj</div>\n\
<div class=\"line\"><a name=\"l04710\"></a><span class=\"lineno\"> 4710</span>&#160;        self.fEdges = []</div>\n\
<div class=\"line\"><a name=\"l04711\"></a><span class=\"lineno\"> 4711</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04712\"></a><span class=\"lineno\"> 4712</span>&#160;    <span class=\"keyword\">def </span>initialize(self, renderItem):</div>\n\
<div class=\"line\"><a name=\"l04713\"></a><span class=\"lineno\"> 4713</span>&#160;        <span class=\"comment\">## Create the component selection object .. here we are selecting edge component</span></div>\n\
<div class=\"line\"><a name=\"l04714\"></a><span class=\"lineno\"> 4714</span>&#160;        self.fComponentObject = self.fComponent.create( om.MFn.kMeshEdgeComponent )</div>\n\
<div class=\"line\"><a name=\"l04715\"></a><span class=\"lineno\"> 4715</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04716\"></a><span class=\"lineno\"> 4716</span>&#160;        <span class=\"comment\">## Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\"><a name=\"l04717\"></a><span class=\"lineno\"> 4717</span>&#160;        <span class=\"comment\">## to the correponding edge component of the object</span></div>\n\
<div class=\"line\"><a name=\"l04718\"></a><span class=\"lineno\"> 4718</span>&#160;        <span class=\"comment\">## Use same algorithm as in apiMeshGeometryOverride.updateIndexingForEdges</span></div>\n\
<div class=\"line\"><a name=\"l04719\"></a><span class=\"lineno\"> 4719</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04720\"></a><span class=\"lineno\"> 4720</span>&#160;        <span class=\"comment\">## in updateIndexingForEdges the index buffer is allocated with &quot;totalEdges = 2*totalVerts&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04721\"></a><span class=\"lineno\"> 4721</span>&#160;        <span class=\"comment\">## but since we are drawing lines, we&#39;ll get only half of the data as primitive positions :</span></div>\n\
<div class=\"line\"><a name=\"l04722\"></a><span class=\"lineno\"> 4722</span>&#160;        <span class=\"comment\">## indices 0 &amp; 1 : primitive #0</span></div>\n\
<div class=\"line\"><a name=\"l04723\"></a><span class=\"lineno\"> 4723</span>&#160;        <span class=\"comment\">## indices 2 &amp; 3 : primitive #1</span></div>\n\
<div class=\"line\"><a name=\"l04724\"></a><span class=\"lineno\"> 4724</span>&#160;        <span class=\"comment\">## ...</span></div>\n\
<div class=\"line\"><a name=\"l04725\"></a><span class=\"lineno\"> 4725</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04726\"></a><span class=\"lineno\"> 4726</span>&#160;        selectionData = renderItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04727\"></a><span class=\"lineno\"> 4727</span>&#160;        <span class=\"keywordflow\">if</span> isinstance(selectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04728\"></a><span class=\"lineno\"> 4728</span>&#160;            meshGeom = selectionData.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l04729\"></a><span class=\"lineno\"> 4729</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04730\"></a><span class=\"lineno\"> 4730</span>&#160;            <span class=\"comment\">## Allocate edges lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04731\"></a><span class=\"lineno\"> 4731</span>&#160;            totalVerts = 0</div>\n\
<div class=\"line\"><a name=\"l04732\"></a><span class=\"lineno\"> 4732</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04733\"></a><span class=\"lineno\"> 4733</span>&#160;                numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04734\"></a><span class=\"lineno\"> 4734</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04735\"></a><span class=\"lineno\"> 4735</span>&#160;                    totalVerts += numVerts</div>\n\
<div class=\"line\"><a name=\"l04736\"></a><span class=\"lineno\"> 4736</span>&#160;            self.fEdges = [0]*(totalVerts)</div>\n\
<div class=\"line\"><a name=\"l04737\"></a><span class=\"lineno\"> 4737</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04738\"></a><span class=\"lineno\"> 4738</span>&#160;            <span class=\"comment\">## Fill edges lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04739\"></a><span class=\"lineno\"> 4739</span>&#160;            idx = 0</div>\n\
<div class=\"line\"><a name=\"l04740\"></a><span class=\"lineno\"> 4740</span>&#160;            edgeId = 0</div>\n\
<div class=\"line\"><a name=\"l04741\"></a><span class=\"lineno\"> 4741</span>&#160;            <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04742\"></a><span class=\"lineno\"> 4742</span>&#160;                <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04743\"></a><span class=\"lineno\"> 4743</span>&#160;                numVerts = meshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l04744\"></a><span class=\"lineno\"> 4744</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04745\"></a><span class=\"lineno\"> 4745</span>&#160;                    <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts):</div>\n\
<div class=\"line\"><a name=\"l04746\"></a><span class=\"lineno\"> 4746</span>&#160;                        self.fEdges[idx] = edgeId</div>\n\
<div class=\"line\"><a name=\"l04747\"></a><span class=\"lineno\"> 4747</span>&#160;                        edgeId += 1</div>\n\
<div class=\"line\"><a name=\"l04748\"></a><span class=\"lineno\"> 4748</span>&#160;                        idx += 1</div>\n\
<div class=\"line\"><a name=\"l04749\"></a><span class=\"lineno\"> 4749</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04750\"></a><span class=\"lineno\"> 4750</span>&#160;    <span class=\"keyword\">def </span>addIntersection(self, intersection):</div>\n\
<div class=\"line\"><a name=\"l04751\"></a><span class=\"lineno\"> 4751</span>&#160;        <span class=\"comment\">## Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\"><a name=\"l04752\"></a><span class=\"lineno\"> 4752</span>&#160;        <span class=\"comment\">## index buffer, to the correct edge component</span></div>\n\
<div class=\"line\"><a name=\"l04753\"></a><span class=\"lineno\"> 4753</span>&#160;        rawIdx = intersection.index</div>\n\
<div class=\"line\"><a name=\"l04754\"></a><span class=\"lineno\"> 4754</span>&#160;        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04755\"></a><span class=\"lineno\"> 4755</span>&#160;        <span class=\"keywordflow\">if</span> rawIdx &gt;= 0 <span class=\"keywordflow\">and</span> rawIdx &lt; len(self.fEdges):</div>\n\
<div class=\"line\"><a name=\"l04756\"></a><span class=\"lineno\"> 4756</span>&#160;            idx = self.fEdges[rawIdx]</div>\n\
<div class=\"line\"><a name=\"l04757\"></a><span class=\"lineno\"> 4757</span>&#160;        self.fComponent.addElement(idx)</div>\n\
<div class=\"line\"><a name=\"l04758\"></a><span class=\"lineno\"> 4758</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04759\"></a><span class=\"lineno\"> 4759</span>&#160;    <span class=\"keyword\">def </span>component(self):</div>\n\
<div class=\"line\"><a name=\"l04760\"></a><span class=\"lineno\"> 4760</span>&#160;        <span class=\"comment\">## Return the component object that contains the ids of the selected edges</span></div>\n\
<div class=\"line\"><a name=\"l04761\"></a><span class=\"lineno\"> 4761</span>&#160;        <span class=\"keywordflow\">return</span> self.fComponentObject</div>\n\
<div class=\"line\"><a name=\"l04762\"></a><span class=\"lineno\"> 4762</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04763\"></a><span class=\"lineno\"> 4763</span>&#160;    <span class=\"keyword\">def </span>selectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l04764\"></a><span class=\"lineno\"> 4764</span>&#160;        <span class=\"comment\">## This converter is only valid for edge selection</span></div>\n\
<div class=\"line\"><a name=\"l04765\"></a><span class=\"lineno\"> 4765</span>&#160;        <span class=\"keywordflow\">return</span> om.MSelectionMask(om.MSelectionMask.kSelectMeshEdges)</div>\n\
<div class=\"line\"><a name=\"l04766\"></a><span class=\"lineno\"> 4766</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04767\"></a><span class=\"lineno\"> 4767</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l04768\"></a><span class=\"lineno\"> 4768</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l04769\"></a><span class=\"lineno\"> 4769</span>&#160;        <span class=\"keywordflow\">return</span> meshEdgeComponentConverterGeometryOverride()</div>\n\
<div class=\"line\"><a name=\"l04770\"></a><span class=\"lineno\"> 4770</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04771\"></a><span class=\"lineno\"> 4771</span>&#160;<span class=\"comment\">## Custom component converter to select faces</span></div>\n\
<div class=\"line\"><a name=\"l04772\"></a><span class=\"lineno\"> 4772</span>&#160;<span class=\"comment\">## Attached to the face selection render item (apiMeshGeometryOverride.sFaceSelectionItemName)</span></div>\n\
<div class=\"line\"><a name=\"l04773\"></a><span class=\"lineno\"> 4773</span>&#160;<span class=\"keyword\">class </span>meshFaceComponentConverterGeometryOverride(omr.MPxComponentConverter):</div>\n\
<div class=\"line\"><a name=\"l04774\"></a><span class=\"lineno\"> 4774</span>&#160;    <span class=\"keyword\">def </span>__init__(self):</div>\n\
<div class=\"line\"><a name=\"l04775\"></a><span class=\"lineno\"> 4775</span>&#160;        omr.MPxComponentConverter.__init__(self)</div>\n\
<div class=\"line\"><a name=\"l04776\"></a><span class=\"lineno\"> 4776</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04777\"></a><span class=\"lineno\"> 4777</span>&#160;        self.fComponent = om.MFnSingleIndexedComponent()</div>\n\
<div class=\"line\"><a name=\"l04778\"></a><span class=\"lineno\"> 4778</span>&#160;        self.fComponentObject = om.MObject.kNullObj</div>\n\
<div class=\"line\"><a name=\"l04779\"></a><span class=\"lineno\"> 4779</span>&#160;        self.fFaces = []</div>\n\
<div class=\"line\"><a name=\"l04780\"></a><span class=\"lineno\"> 4780</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04781\"></a><span class=\"lineno\"> 4781</span>&#160;    <span class=\"keyword\">def </span>initialize(self, renderItem):</div>\n\
<div class=\"line\"><a name=\"l04782\"></a><span class=\"lineno\"> 4782</span>&#160;        <span class=\"comment\">## Create the component selection object .. here we are selecting face component</span></div>\n\
<div class=\"line\"><a name=\"l04783\"></a><span class=\"lineno\"> 4783</span>&#160;        self.fComponentObject = self.fComponent.create( om.MFn.kMeshPolygonComponent )</div>\n\
<div class=\"line\"><a name=\"l04784\"></a><span class=\"lineno\"> 4784</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04785\"></a><span class=\"lineno\"> 4785</span>&#160;        <span class=\"comment\">## Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\"><a name=\"l04786\"></a><span class=\"lineno\"> 4786</span>&#160;        <span class=\"comment\">## to the correponding face component of the object</span></div>\n\
<div class=\"line\"><a name=\"l04787\"></a><span class=\"lineno\"> 4787</span>&#160;        <span class=\"comment\">## Use same algorithm as in apiMeshGeometryOverride.updateIndexingForFaces</span></div>\n\
<div class=\"line\"><a name=\"l04788\"></a><span class=\"lineno\"> 4788</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04789\"></a><span class=\"lineno\"> 4789</span>&#160;        <span class=\"comment\">## in updateIndexingForFaces the index buffer is allocated with &quot;numTriangleVertices = 3*numTriangles&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04790\"></a><span class=\"lineno\"> 4790</span>&#160;        <span class=\"comment\">## but since we are drawing triangles, we&#39;ll get only a third of the data as primitive positions :</span></div>\n\
<div class=\"line\"><a name=\"l04791\"></a><span class=\"lineno\"> 4791</span>&#160;        <span class=\"comment\">## indices 0, 1 &amp; 2 : primitive #0</span></div>\n\
<div class=\"line\"><a name=\"l04792\"></a><span class=\"lineno\"> 4792</span>&#160;        <span class=\"comment\">## indices 3, 4 &amp; 5 : primitive #1</span></div>\n\
<div class=\"line\"><a name=\"l04793\"></a><span class=\"lineno\"> 4793</span>&#160;        <span class=\"comment\">## ...</span></div>\n\
<div class=\"line\"><a name=\"l04794\"></a><span class=\"lineno\"> 4794</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04795\"></a><span class=\"lineno\"> 4795</span>&#160;        selectionData = renderItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l04796\"></a><span class=\"lineno\"> 4796</span>&#160;        <span class=\"keywordflow\">if</span> isinstance(selectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l04797\"></a><span class=\"lineno\"> 4797</span>&#160;            meshGeom = selectionData.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l04798\"></a><span class=\"lineno\"> 4798</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04799\"></a><span class=\"lineno\"> 4799</span>&#160;            <span class=\"comment\">## isolate selection</span></div>\n\
<div class=\"line\"><a name=\"l04800\"></a><span class=\"lineno\"> 4800</span>&#160;            isolateSelect = renderItem.isIsolateSelectCopy()</div>\n\
<div class=\"line\"><a name=\"l04801\"></a><span class=\"lineno\"> 4801</span>&#160;            if(isolateSelect):</div>\n\
<div class=\"line\"><a name=\"l04802\"></a><span class=\"lineno\"> 4802</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l04803\"></a><span class=\"lineno\"> 4803</span>&#160;                enableFaces = [0] * meshGeom.faceCount</div>\n\
<div class=\"line\"><a name=\"l04804\"></a><span class=\"lineno\"> 4804</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04805\"></a><span class=\"lineno\"> 4805</span>&#160;                    enableFaces[i] = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04806\"></a><span class=\"lineno\"> 4806</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04807\"></a><span class=\"lineno\"> 4807</span>&#160;                fnComponent = om.MFnSingleIndexedComponent( renderItem.shadingComponent() )</div>\n\
<div class=\"line\"><a name=\"l04808\"></a><span class=\"lineno\"> 4808</span>&#160;                if(fnComponent.componentType == om.MFn.kMeshPolygonComponent):</div>\n\
<div class=\"line\"><a name=\"l04809\"></a><span class=\"lineno\"> 4809</span>&#160;                    faceIds = fnComponent.getElements()</div>\n\
<div class=\"line\"><a name=\"l04810\"></a><span class=\"lineno\"> 4810</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l04811\"></a><span class=\"lineno\"> 4811</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(faceIds)):</div>\n\
<div class=\"line\"><a name=\"l04812\"></a><span class=\"lineno\"> 4812</span>&#160;                        enableFaces[faceIds[i]] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04813\"></a><span class=\"lineno\"> 4813</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04814\"></a><span class=\"lineno\"> 4814</span>&#160;            <span class=\"comment\">## Allocate faces lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04815\"></a><span class=\"lineno\"> 4815</span>&#160;            numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l04816\"></a><span class=\"lineno\"> 4816</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04817\"></a><span class=\"lineno\"> 4817</span>&#160;                numVerts = meshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l04818\"></a><span class=\"lineno\"> 4818</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04819\"></a><span class=\"lineno\"> 4819</span>&#160;                    if(<span class=\"keywordflow\">not</span> isolateSelect <span class=\"keywordflow\">or</span> enableFaces[i]):</div>\n\
<div class=\"line\"><a name=\"l04820\"></a><span class=\"lineno\"> 4820</span>&#160;                        numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l04821\"></a><span class=\"lineno\"> 4821</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04822\"></a><span class=\"lineno\"> 4822</span>&#160;            self.fFaces = [0]*numTriangles</div>\n\
<div class=\"line\"><a name=\"l04823\"></a><span class=\"lineno\"> 4823</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04824\"></a><span class=\"lineno\"> 4824</span>&#160;            <span class=\"comment\">## Fill faces lookup table</span></div>\n\
<div class=\"line\"><a name=\"l04825\"></a><span class=\"lineno\"> 4825</span>&#160;            idx = 0</div>\n\
<div class=\"line\"><a name=\"l04826\"></a><span class=\"lineno\"> 4826</span>&#160;            <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(meshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l04827\"></a><span class=\"lineno\"> 4827</span>&#160;                <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l04828\"></a><span class=\"lineno\"> 4828</span>&#160;                numVerts = meshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l04829\"></a><span class=\"lineno\"> 4829</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l04830\"></a><span class=\"lineno\"> 4830</span>&#160;                    if(<span class=\"keywordflow\">not</span> isolateSelect <span class=\"keywordflow\">or</span> enableFaces[faceIdx]):</div>\n\
<div class=\"line\"><a name=\"l04831\"></a><span class=\"lineno\"> 4831</span>&#160;                        <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l04832\"></a><span class=\"lineno\"> 4832</span>&#160;                            self.fFaces[idx] = faceIdx</div>\n\
<div class=\"line\"><a name=\"l04833\"></a><span class=\"lineno\"> 4833</span>&#160;                            idx += 1</div>\n\
<div class=\"line\"><a name=\"l04834\"></a><span class=\"lineno\"> 4834</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04835\"></a><span class=\"lineno\"> 4835</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04836\"></a><span class=\"lineno\"> 4836</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04837\"></a><span class=\"lineno\"> 4837</span>&#160;    <span class=\"keyword\">def </span>addIntersection(self, intersection):</div>\n\
<div class=\"line\"><a name=\"l04838\"></a><span class=\"lineno\"> 4838</span>&#160;        <span class=\"comment\">## Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\"><a name=\"l04839\"></a><span class=\"lineno\"> 4839</span>&#160;        <span class=\"comment\">## index buffer, to the correct face component</span></div>\n\
<div class=\"line\"><a name=\"l04840\"></a><span class=\"lineno\"> 4840</span>&#160;        rawIdx = intersection.index</div>\n\
<div class=\"line\"><a name=\"l04841\"></a><span class=\"lineno\"> 4841</span>&#160;        idx = 0</div>\n\
<div class=\"line\"><a name=\"l04842\"></a><span class=\"lineno\"> 4842</span>&#160;        <span class=\"keywordflow\">if</span> rawIdx &gt;= 0 <span class=\"keywordflow\">and</span> rawIdx &lt; len(self.fFaces):</div>\n\
<div class=\"line\"><a name=\"l04843\"></a><span class=\"lineno\"> 4843</span>&#160;            idx = self.fFaces[rawIdx]</div>\n\
<div class=\"line\"><a name=\"l04844\"></a><span class=\"lineno\"> 4844</span>&#160;        self.fComponent.addElement(idx)</div>\n\
<div class=\"line\"><a name=\"l04845\"></a><span class=\"lineno\"> 4845</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04846\"></a><span class=\"lineno\"> 4846</span>&#160;    <span class=\"keyword\">def </span>component(self):</div>\n\
<div class=\"line\"><a name=\"l04847\"></a><span class=\"lineno\"> 4847</span>&#160;        <span class=\"comment\">## Return the component object that contains the ids of the selected faces</span></div>\n\
<div class=\"line\"><a name=\"l04848\"></a><span class=\"lineno\"> 4848</span>&#160;        <span class=\"keywordflow\">return</span> self.fComponentObject</div>\n\
<div class=\"line\"><a name=\"l04849\"></a><span class=\"lineno\"> 4849</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04850\"></a><span class=\"lineno\"> 4850</span>&#160;    <span class=\"keyword\">def </span>selectionMask(self):</div>\n\
<div class=\"line\"><a name=\"l04851\"></a><span class=\"lineno\"> 4851</span>&#160;        <span class=\"comment\">## This converter is only valid for face selection</span></div>\n\
<div class=\"line\"><a name=\"l04852\"></a><span class=\"lineno\"> 4852</span>&#160;        <span class=\"keywordflow\">return</span> om.MSelectionMask(om.MSelectionMask.kSelectMeshFaces)</div>\n\
<div class=\"line\"><a name=\"l04853\"></a><span class=\"lineno\"> 4853</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04854\"></a><span class=\"lineno\"> 4854</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l04855\"></a><span class=\"lineno\"> 4855</span>&#160;    <span class=\"keyword\">def </span>creator():</div>\n\
<div class=\"line\"><a name=\"l04856\"></a><span class=\"lineno\"> 4856</span>&#160;        <span class=\"keywordflow\">return</span> meshFaceComponentConverterGeometryOverride()</div>\n\
<div class=\"line\"><a name=\"l04857\"></a><span class=\"lineno\"> 4857</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04858\"></a><span class=\"lineno\"> 4858</span>&#160;<span class=\"keyword\">class </span>apiMeshGeometryOverride(omr.MPxGeometryOverride):</div>\n\
<div class=\"line\"><a name=\"l04859\"></a><span class=\"lineno\"> 4859</span>&#160;    <span class=\"comment\">## Render item names</span></div>\n\
<div class=\"line\"><a name=\"l04860\"></a><span class=\"lineno\"> 4860</span>&#160;    sWireframeItemName = <span class=\"stringliteral\">&quot;apiMeshWire_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04861\"></a><span class=\"lineno\"> 4861</span>&#160;    sShadedTemplateItemName = <span class=\"stringliteral\">&quot;apiMeshShadedTemplateWire_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04862\"></a><span class=\"lineno\"> 4862</span>&#160;    sSelectedWireframeItemName = <span class=\"stringliteral\">&quot;apiMeshSelectedWireFrame_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04863\"></a><span class=\"lineno\"> 4863</span>&#160;    sVertexItemName = <span class=\"stringliteral\">&quot;apiMeshVertices_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04864\"></a><span class=\"lineno\"> 4864</span>&#160;    sEdgeSelectionItemName = <span class=\"stringliteral\">&quot;apiMeshEdgeSelection_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04865\"></a><span class=\"lineno\"> 4865</span>&#160;    sFaceSelectionItemName = <span class=\"stringliteral\">&quot;apiMeshFaceSelection_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04866\"></a><span class=\"lineno\"> 4866</span>&#160;    sActiveVertexItemName = <span class=\"stringliteral\">&quot;apiMeshActiveVertices_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04867\"></a><span class=\"lineno\"> 4867</span>&#160;    sVertexIdItemName = <span class=\"stringliteral\">&quot;apiMeshVertexIds_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04868\"></a><span class=\"lineno\"> 4868</span>&#160;    sVertexPositionItemName = <span class=\"stringliteral\">&quot;apiMeshVertexPositions_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04869\"></a><span class=\"lineno\"> 4869</span>&#160;    sShadedModeFaceCenterItemName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterInShadedMode_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04870\"></a><span class=\"lineno\"> 4870</span>&#160;    sWireframeModeFaceCenterItemName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterInWireframeMode_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04871\"></a><span class=\"lineno\"> 4871</span>&#160;    sShadedProxyItemName = <span class=\"stringliteral\">&quot;apiShadedProxy_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04872\"></a><span class=\"lineno\"> 4872</span>&#160;    sAffectedEdgeItemName = <span class=\"stringliteral\">&quot;apiMeshAffectedEdges_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04873\"></a><span class=\"lineno\"> 4873</span>&#160;    sAffectedFaceItemName = <span class=\"stringliteral\">&quot;apiMeshAffectedFaces_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04874\"></a><span class=\"lineno\"> 4874</span>&#160;    sActiveVertexStreamName = <span class=\"stringliteral\">&quot;apiMeshSharedVertexStream_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04875\"></a><span class=\"lineno\"> 4875</span>&#160;    sFaceCenterStreamName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterStream_py&quot;</span></div>\n\
<div class=\"line\"><a name=\"l04876\"></a><span class=\"lineno\"> 4876</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04877\"></a><span class=\"lineno\"> 4877</span>&#160;    @staticmethod</div>\n\
<div class=\"line\"><a name=\"l04878\"></a><span class=\"lineno\"> 4878</span>&#160;    <span class=\"keyword\">def </span>creator(obj):</div>\n\
<div class=\"line\"><a name=\"l04879\"></a><span class=\"lineno\"> 4879</span>&#160;        <span class=\"keywordflow\">return</span> apiMeshGeometryOverride(obj)</div>\n\
<div class=\"line\"><a name=\"l04880\"></a><span class=\"lineno\"> 4880</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04881\"></a><span class=\"lineno\"> 4881</span>&#160;    <span class=\"keyword\">def </span>__init__(self, obj):</div>\n\
<div class=\"line\"><a name=\"l04882\"></a><span class=\"lineno\"> 4882</span>&#160;        omr.MPxGeometryOverride.__init__(self, obj)</div>\n\
<div class=\"line\"><a name=\"l04883\"></a><span class=\"lineno\"> 4883</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04884\"></a><span class=\"lineno\"> 4884</span>&#160;        node = om.MFnDependencyNode(obj)</div>\n\
<div class=\"line\"><a name=\"l04885\"></a><span class=\"lineno\"> 4885</span>&#160;        self.fMesh = node.userNode()</div>\n\
<div class=\"line\"><a name=\"l04886\"></a><span class=\"lineno\"> 4886</span>&#160;        self.fMeshGeom = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04887\"></a><span class=\"lineno\"> 4887</span>&#160;        self.fColorRemapTexture = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04888\"></a><span class=\"lineno\"> 4888</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04889\"></a><span class=\"lineno\"> 4889</span>&#160;        self.fActiveVertices = om.MIntArray()</div>\n\
<div class=\"line\"><a name=\"l04890\"></a><span class=\"lineno\"> 4890</span>&#160;        self.fActiveVerticesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04891\"></a><span class=\"lineno\"> 4891</span>&#160;        self.fActiveEdgesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04892\"></a><span class=\"lineno\"> 4892</span>&#160;        self.fActiveFacesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04893\"></a><span class=\"lineno\"> 4893</span>&#160;        self.fCastsShadows = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04894\"></a><span class=\"lineno\"> 4894</span>&#160;        self.fReceivesShadows = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04895\"></a><span class=\"lineno\"> 4895</span>&#160;        <span class=\"comment\">## Enable to show numeric render items</span></div>\n\
<div class=\"line\"><a name=\"l04896\"></a><span class=\"lineno\"> 4896</span>&#160;        self.fEnableNumericDisplay = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04897\"></a><span class=\"lineno\"> 4897</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04898\"></a><span class=\"lineno\"> 4898</span>&#160;        <span class=\"comment\">## Stream names used for filling in different data</span></div>\n\
<div class=\"line\"><a name=\"l04899\"></a><span class=\"lineno\"> 4899</span>&#160;        <span class=\"comment\">## for different streams required for different render items,</span></div>\n\
<div class=\"line\"><a name=\"l04900\"></a><span class=\"lineno\"> 4900</span>&#160;        <span class=\"comment\">## and toggle to choose whether to use name streams</span></div>\n\
<div class=\"line\"><a name=\"l04901\"></a><span class=\"lineno\"> 4901</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04902\"></a><span class=\"lineno\"> 4902</span>&#160;        self.fDrawSharedActiveVertices = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04903\"></a><span class=\"lineno\"> 4903</span>&#160;        <span class=\"comment\">## Turn on to view active vertices with colours lookedup from a 1D texture.</span></div>\n\
<div class=\"line\"><a name=\"l04904\"></a><span class=\"lineno\"> 4904</span>&#160;        self.fDrawActiveVerticesWithRamp = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04905\"></a><span class=\"lineno\"> 4905</span>&#160;        self.fLinearSampler = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04906\"></a><span class=\"lineno\"> 4906</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04907\"></a><span class=\"lineno\"> 4907</span>&#160;        <span class=\"comment\">##Vertex stream for face centers which is calculated from faces.</span></div>\n\
<div class=\"line\"><a name=\"l04908\"></a><span class=\"lineno\"> 4908</span>&#160;        self.fDrawFaceCenters = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04909\"></a><span class=\"lineno\"> 4909</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04910\"></a><span class=\"lineno\"> 4910</span>&#160;        <span class=\"keywordflow\">if</span> self.fDrawActiveVerticesWithRamp:</div>\n\
<div class=\"line\"><a name=\"l04911\"></a><span class=\"lineno\"> 4911</span>&#160;            self.fDrawFaceCenters = <span class=\"keyword\">False</span>   <span class=\"comment\">## Too cluttered showing the face centers at the same time.</span></div>\n\
<div class=\"line\"><a name=\"l04912\"></a><span class=\"lineno\"> 4912</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04913\"></a><span class=\"lineno\"> 4913</span>&#160;        <span class=\"comment\">## Can set the following to True, but then the logic to</span></div>\n\
<div class=\"line\"><a name=\"l04914\"></a><span class=\"lineno\"> 4914</span>&#160;        <span class=\"comment\">## determine what color to set is the responsibility of the plugin.</span></div>\n\
<div class=\"line\"><a name=\"l04915\"></a><span class=\"lineno\"> 4915</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l04916\"></a><span class=\"lineno\"> 4916</span>&#160;        self.fUseCustomColors = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04917\"></a><span class=\"lineno\"> 4917</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04918\"></a><span class=\"lineno\"> 4918</span>&#160;        <span class=\"comment\">## Can change this to choose a different shader to use when</span></div>\n\
<div class=\"line\"><a name=\"l04919\"></a><span class=\"lineno\"> 4919</span>&#160;        <span class=\"comment\">## no shader node is assigned to the object.</span></div>\n\
<div class=\"line\"><a name=\"l04920\"></a><span class=\"lineno\"> 4920</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dSolidShader ## - Basic line shader</span></div>\n\
<div class=\"line\"><a name=\"l04921\"></a><span class=\"lineno\"> 4921</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dStippleShader ## - For filled stipple faces (triangles)</span></div>\n\
<div class=\"line\"><a name=\"l04922\"></a><span class=\"lineno\"> 4922</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dThickLineShader ## For thick solid colored lines</span></div>\n\
<div class=\"line\"><a name=\"l04923\"></a><span class=\"lineno\"> 4923</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dCPVThickLineShader ## For thick colored lines. Black if no CPV</span></div>\n\
<div class=\"line\"><a name=\"l04924\"></a><span class=\"lineno\"> 4924</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dDashLineShader ## - For dashed solid color lines</span></div>\n\
<div class=\"line\"><a name=\"l04925\"></a><span class=\"lineno\"> 4925</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dCPVDashLineShader ##- For dashed coloured lines. Black if no CPV</span></div>\n\
<div class=\"line\"><a name=\"l04926\"></a><span class=\"lineno\"> 4926</span>&#160;        <span class=\"comment\">## self.fProxyShader = omr.MShaderManager.k3dThickDashLineShader ## For thick dashed solid color lines. black if no cpv</span></div>\n\
<div class=\"line\"><a name=\"l04927\"></a><span class=\"lineno\"> 4927</span>&#160;        self.fProxyShader = omr.MShaderManager.k3dCPVThickDashLineShader <span class=\"comment\">##- For thick, dashed and coloured lines</span></div>\n\
<div class=\"line\"><a name=\"l04928\"></a><span class=\"lineno\"> 4928</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04929\"></a><span class=\"lineno\"> 4929</span>&#160;        <span class=\"comment\">## Set to True to test that overriding internal items has no effect</span></div>\n\
<div class=\"line\"><a name=\"l04930\"></a><span class=\"lineno\"> 4930</span>&#160;        <span class=\"comment\">## for shadows and effects overrides</span></div>\n\
<div class=\"line\"><a name=\"l04931\"></a><span class=\"lineno\"> 4931</span>&#160;        self.fInternalItems_NoShadowCast = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04932\"></a><span class=\"lineno\"> 4932</span>&#160;        self.fInternalItems_NoShadowReceive = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04933\"></a><span class=\"lineno\"> 4933</span>&#160;        self.fInternalItems_NoPostEffects = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04934\"></a><span class=\"lineno\"> 4934</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04935\"></a><span class=\"lineno\"> 4935</span>&#160;        <span class=\"comment\">## Use the existing shadow casts / receives flags on the shape</span></div>\n\
<div class=\"line\"><a name=\"l04936\"></a><span class=\"lineno\"> 4936</span>&#160;        <span class=\"comment\">## to drive settings for applicable render items.</span></div>\n\
<div class=\"line\"><a name=\"l04937\"></a><span class=\"lineno\"> 4937</span>&#160;        self.fExternalItems_NoShadowCast = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04938\"></a><span class=\"lineno\"> 4938</span>&#160;        self.fExternalItems_NoShadowReceive = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04939\"></a><span class=\"lineno\"> 4939</span>&#160;        self.fExternalItemsNonTri_NoShadowCast = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04940\"></a><span class=\"lineno\"> 4940</span>&#160;        self.fExternalItemsNonTri_NoShadowReceive = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l04941\"></a><span class=\"lineno\"> 4941</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04942\"></a><span class=\"lineno\"> 4942</span>&#160;        <span class=\"comment\">## Set to True to ignore post-effects for wireframe items.</span></div>\n\
<div class=\"line\"><a name=\"l04943\"></a><span class=\"lineno\"> 4943</span>&#160;        <span class=\"comment\">## Shaded items will still have effects applied.</span></div>\n\
<div class=\"line\"><a name=\"l04944\"></a><span class=\"lineno\"> 4944</span>&#160;        self.fExternalItems_NoPostEffects = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04945\"></a><span class=\"lineno\"> 4945</span>&#160;        self.fExternalItemsNonTri_NoPostEffects = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l04946\"></a><span class=\"lineno\"> 4946</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04947\"></a><span class=\"lineno\"> 4947</span>&#160;    <span class=\"keyword\">def </span>__del__(self):</div>\n\
<div class=\"line\"><a name=\"l04948\"></a><span class=\"lineno\"> 4948</span>&#160;        self.fMesh = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04949\"></a><span class=\"lineno\"> 4949</span>&#160;        self.fMeshGeom = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04950\"></a><span class=\"lineno\"> 4950</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04951\"></a><span class=\"lineno\"> 4951</span>&#160;        <span class=\"keywordflow\">if</span> self.fColorRemapTexture:</div>\n\
<div class=\"line\"><a name=\"l04952\"></a><span class=\"lineno\"> 4952</span>&#160;            textureMgr = omr.MRenderer.getTextureManager()</div>\n\
<div class=\"line\"><a name=\"l04953\"></a><span class=\"lineno\"> 4953</span>&#160;            <span class=\"keywordflow\">if</span> textureMgr:</div>\n\
<div class=\"line\"><a name=\"l04954\"></a><span class=\"lineno\"> 4954</span>&#160;                textureMgr.releaseTexture(self.fColorRemapTexture)</div>\n\
<div class=\"line\"><a name=\"l04955\"></a><span class=\"lineno\"> 4955</span>&#160;            self.fColorRemapTexture = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04956\"></a><span class=\"lineno\"> 4956</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04957\"></a><span class=\"lineno\"> 4957</span>&#160;        <span class=\"keywordflow\">if</span> self.fLinearSampler:</div>\n\
<div class=\"line\"><a name=\"l04958\"></a><span class=\"lineno\"> 4958</span>&#160;            omr.MStateManager.releaseSamplerState(self.fLinearSampler)</div>\n\
<div class=\"line\"><a name=\"l04959\"></a><span class=\"lineno\"> 4959</span>&#160;            self.fLinearSampler = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l04960\"></a><span class=\"lineno\"> 4960</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04961\"></a><span class=\"lineno\"> 4961</span>&#160;    <span class=\"keyword\">def </span>supportedDrawAPIs(self):</div>\n\
<div class=\"line\"><a name=\"l04962\"></a><span class=\"lineno\"> 4962</span>&#160;        <span class=\"comment\">## this plugin supports both GL and DX</span></div>\n\
<div class=\"line\"><a name=\"l04963\"></a><span class=\"lineno\"> 4963</span>&#160;        <span class=\"keywordflow\">return</span> omr.MRenderer.kOpenGL | omr.MRenderer.kDirectX11 | omr.MRenderer.kOpenGLCoreProfile</div>\n\
<div class=\"line\"><a name=\"l04964\"></a><span class=\"lineno\"> 4964</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04965\"></a><span class=\"lineno\"> 4965</span>&#160;    <span class=\"keyword\">def </span>updateDG(self):</div>\n\
<div class=\"line\"><a name=\"l04966\"></a><span class=\"lineno\"> 4966</span>&#160;        <span class=\"comment\">## Pull the actual outMesh from the shape, as well</span></div>\n\
<div class=\"line\"><a name=\"l04967\"></a><span class=\"lineno\"> 4967</span>&#160;        <span class=\"comment\">## as any active components</span></div>\n\
<div class=\"line\"><a name=\"l04968\"></a><span class=\"lineno\"> 4968</span>&#160;        self.fActiveVertices.clear()</div>\n\
<div class=\"line\"><a name=\"l04969\"></a><span class=\"lineno\"> 4969</span>&#160;        self.fActiveVerticesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04970\"></a><span class=\"lineno\"> 4970</span>&#160;        self.fActiveEdgesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04971\"></a><span class=\"lineno\"> 4971</span>&#160;        self.fActiveFacesSet = set()</div>\n\
<div class=\"line\"><a name=\"l04972\"></a><span class=\"lineno\"> 4972</span>&#160;        <span class=\"keywordflow\">if</span> self.fMesh:</div>\n\
<div class=\"line\"><a name=\"l04973\"></a><span class=\"lineno\"> 4973</span>&#160;            self.fMeshGeom = self.fMesh.meshGeom()</div>\n\
<div class=\"line\"><a name=\"l04974\"></a><span class=\"lineno\"> 4974</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04975\"></a><span class=\"lineno\"> 4975</span>&#160;            <span class=\"keywordflow\">if</span> self.fMeshGeom <span class=\"keywordflow\">and</span> self.fMesh.hasActiveComponents():</div>\n\
<div class=\"line\"><a name=\"l04976\"></a><span class=\"lineno\"> 4976</span>&#160;                activeComponents = self.fMesh.activeComponents()</div>\n\
<div class=\"line\"><a name=\"l04977\"></a><span class=\"lineno\"> 4977</span>&#160;                <span class=\"keywordflow\">if</span> len(activeComponents) &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l04978\"></a><span class=\"lineno\"> 4978</span>&#160;                    fnComponent = om.MFnSingleIndexedComponent( activeComponents[0] )</div>\n\
<div class=\"line\"><a name=\"l04979\"></a><span class=\"lineno\"> 4979</span>&#160;                    <span class=\"keywordflow\">if</span> fnComponent.elementCount &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l04980\"></a><span class=\"lineno\"> 4980</span>&#160;                        activeIds = fnComponent.getElements()</div>\n\
<div class=\"line\"><a name=\"l04981\"></a><span class=\"lineno\"> 4981</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04982\"></a><span class=\"lineno\"> 4982</span>&#160;                        <span class=\"keywordflow\">if</span> fnComponent.componentType == om.MFn.kMeshVertComponent:</div>\n\
<div class=\"line\"><a name=\"l04983\"></a><span class=\"lineno\"> 4983</span>&#160;                            self.fActiveVertices = activeIds</div>\n\
<div class=\"line\"><a name=\"l04984\"></a><span class=\"lineno\"> 4984</span>&#160;                            self.fActiveVerticesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l04985\"></a><span class=\"lineno\"> 4985</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04986\"></a><span class=\"lineno\"> 4986</span>&#160;                        <span class=\"keywordflow\">elif</span> fnComponent.componentType == om.MFn.kMeshEdgeComponent:</div>\n\
<div class=\"line\"><a name=\"l04987\"></a><span class=\"lineno\"> 4987</span>&#160;                            self.fActiveEdgesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l04988\"></a><span class=\"lineno\"> 4988</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04989\"></a><span class=\"lineno\"> 4989</span>&#160;                        <span class=\"keywordflow\">elif</span> fnComponent.componentType == om.MFn.kMeshPolygonComponent:</div>\n\
<div class=\"line\"><a name=\"l04990\"></a><span class=\"lineno\"> 4990</span>&#160;                            self.fActiveFacesSet = set(activeIds)</div>\n\
<div class=\"line\"><a name=\"l04991\"></a><span class=\"lineno\"> 4991</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04992\"></a><span class=\"lineno\"> 4992</span>&#160;    <span class=\"keyword\">def </span>updateRenderItems(self, path, list):</div>\n\
<div class=\"line\"><a name=\"l04993\"></a><span class=\"lineno\"> 4993</span>&#160;        <span class=\"comment\">## Update render items. Shaded render item is provided so this</span></div>\n\
<div class=\"line\"><a name=\"l04994\"></a><span class=\"lineno\"> 4994</span>&#160;        <span class=\"comment\">## method will be adding and updating UI render items only.</span></div>\n\
<div class=\"line\"><a name=\"l04995\"></a><span class=\"lineno\"> 4995</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l04996\"></a><span class=\"lineno\"> 4996</span>&#160;        shaderMgr = omr.MRenderer.getShaderManager()</div>\n\
<div class=\"line\"><a name=\"l04997\"></a><span class=\"lineno\"> 4997</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shaderMgr:</div>\n\
<div class=\"line\"><a name=\"l04998\"></a><span class=\"lineno\"> 4998</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l04999\"></a><span class=\"lineno\"> 4999</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05000\"></a><span class=\"lineno\"> 5000</span>&#160;        dagNode = om.MFnDagNode(path)</div>\n\
<div class=\"line\"><a name=\"l05001\"></a><span class=\"lineno\"> 5001</span>&#160;        castsShadowsPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;castsShadows&quot;</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05002\"></a><span class=\"lineno\"> 5002</span>&#160;        self.fCastsShadows = castsShadowsPlug.asBool()</div>\n\
<div class=\"line\"><a name=\"l05003\"></a><span class=\"lineno\"> 5003</span>&#160;        receiveShadowsPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;receiveShadows&quot;</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05004\"></a><span class=\"lineno\"> 5004</span>&#160;        self.fReceivesShadows = receiveShadowsPlug.asBool()</div>\n\
<div class=\"line\"><a name=\"l05005\"></a><span class=\"lineno\"> 5005</span>&#160;        enableNumericDisplayPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;enableNumericDisplay&quot;</span>, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05006\"></a><span class=\"lineno\"> 5006</span>&#160;        self.fEnableNumericDisplay = enableNumericDisplayPlug.asBool()</div>\n\
<div class=\"line\"><a name=\"l05007\"></a><span class=\"lineno\"> 5007</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05008\"></a><span class=\"lineno\"> 5008</span>&#160;        <span class=\"comment\">##1 Update wireframe render items</span></div>\n\
<div class=\"line\"><a name=\"l05009\"></a><span class=\"lineno\"> 5009</span>&#160;        self.updateDormantAndTemplateWireframeItems(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05010\"></a><span class=\"lineno\"> 5010</span>&#160;        self.updateActiveWireframeItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05011\"></a><span class=\"lineno\"> 5011</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05012\"></a><span class=\"lineno\"> 5012</span>&#160;        <span class=\"comment\">## Update vertex render items</span></div>\n\
<div class=\"line\"><a name=\"l05013\"></a><span class=\"lineno\"> 5013</span>&#160;        self.updateDormantVerticesItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05014\"></a><span class=\"lineno\"> 5014</span>&#160;        self.updateActiveVerticesItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05015\"></a><span class=\"lineno\"> 5015</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05016\"></a><span class=\"lineno\"> 5016</span>&#160;        <span class=\"comment\">## Update vertex numeric render items</span></div>\n\
<div class=\"line\"><a name=\"l05017\"></a><span class=\"lineno\"> 5017</span>&#160;        self.updateVertexNumericItems(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05018\"></a><span class=\"lineno\"> 5018</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05019\"></a><span class=\"lineno\"> 5019</span>&#160;        <span class=\"comment\">## Update face center item</span></div>\n\
<div class=\"line\"><a name=\"l05020\"></a><span class=\"lineno\"> 5020</span>&#160;        <span class=\"keywordflow\">if</span> self.fDrawFaceCenters:</div>\n\
<div class=\"line\"><a name=\"l05021\"></a><span class=\"lineno\"> 5021</span>&#160;            self.updateWireframeModeFaceCenterItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05022\"></a><span class=\"lineno\"> 5022</span>&#160;            self.updateShadedModeFaceCenterItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05023\"></a><span class=\"lineno\"> 5023</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05024\"></a><span class=\"lineno\"> 5024</span>&#160;        <span class=\"comment\">## Update &quot;affected&quot; edge and face render items</span></div>\n\
<div class=\"line\"><a name=\"l05025\"></a><span class=\"lineno\"> 5025</span>&#160;        self.updateAffectedComponentItems(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05026\"></a><span class=\"lineno\"> 5026</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05027\"></a><span class=\"lineno\"> 5027</span>&#160;        <span class=\"comment\">## Update faces and edges selection items</span></div>\n\
<div class=\"line\"><a name=\"l05028\"></a><span class=\"lineno\"> 5028</span>&#160;        self.updateSelectionComponentItems(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05029\"></a><span class=\"lineno\"> 5029</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05030\"></a><span class=\"lineno\"> 5030</span>&#160;        <span class=\"comment\">## Update proxy shaded render item</span></div>\n\
<div class=\"line\"><a name=\"l05031\"></a><span class=\"lineno\"> 5031</span>&#160;        self.updateProxyShadedItem(path, list, shaderMgr)</div>\n\
<div class=\"line\"><a name=\"l05032\"></a><span class=\"lineno\"> 5032</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05033\"></a><span class=\"lineno\"> 5033</span>&#160;        <span class=\"comment\">## Test overrides on existing shaded items.</span></div>\n\
<div class=\"line\"><a name=\"l05034\"></a><span class=\"lineno\"> 5034</span>&#160;        <span class=\"comment\">## In this case it is not valid to override these states</span></div>\n\
<div class=\"line\"><a name=\"l05035\"></a><span class=\"lineno\"> 5035</span>&#160;        <span class=\"comment\">## so there should be no change in behaviour.</span></div>\n\
<div class=\"line\"><a name=\"l05036\"></a><span class=\"lineno\"> 5036</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05037\"></a><span class=\"lineno\"> 5037</span>&#160;        testShadedOverrides = self.fInternalItems_NoShadowCast <span class=\"keywordflow\">or</span> self.fInternalItems_NoShadowReceive <span class=\"keywordflow\">or</span> self.fInternalItems_NoPostEffects</div>\n\
<div class=\"line\"><a name=\"l05038\"></a><span class=\"lineno\"> 5038</span>&#160;        <span class=\"keywordflow\">if</span> testShadedOverrides:</div>\n\
<div class=\"line\"><a name=\"l05039\"></a><span class=\"lineno\"> 5039</span>&#160;            <span class=\"keywordflow\">for</span> item <span class=\"keywordflow\">in</span> list:</div>\n\
<div class=\"line\"><a name=\"l05040\"></a><span class=\"lineno\"> 5040</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> item:</div>\n\
<div class=\"line\"><a name=\"l05041\"></a><span class=\"lineno\"> 5041</span>&#160;                    <span class=\"keywordflow\">continue</span></div>\n\
<div class=\"line\"><a name=\"l05042\"></a><span class=\"lineno\"> 5042</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05043\"></a><span class=\"lineno\"> 5043</span>&#160;                drawMode = item.drawMode()</div>\n\
<div class=\"line\"><a name=\"l05044\"></a><span class=\"lineno\"> 5044</span>&#160;                <span class=\"keywordflow\">if</span> drawMode == omr.MGeometry.kShaded <span class=\"keywordflow\">or</span> drawMode == omr.MGeometry.kTextured:</div>\n\
<div class=\"line\"><a name=\"l05045\"></a><span class=\"lineno\"> 5045</span>&#160;                    <span class=\"keywordflow\">if</span> item.name() != self.sShadedTemplateItemName:</div>\n\
<div class=\"line\"><a name=\"l05046\"></a><span class=\"lineno\"> 5046</span>&#160;                        item.setCastsShadows( <span class=\"keywordflow\">not</span> self.fInternalItems_NoShadowCast <span class=\"keywordflow\">and</span> self.fCastsShadows )</div>\n\
<div class=\"line\"><a name=\"l05047\"></a><span class=\"lineno\"> 5047</span>&#160;                        item.setReceivesShadows( <span class=\"keywordflow\">not</span> self.fInternalItems_NoShadowReceive <span class=\"keywordflow\">and</span> self.fReceivesShadows )</div>\n\
<div class=\"line\"><a name=\"l05048\"></a><span class=\"lineno\"> 5048</span>&#160;                        item.setExcludedFromPostEffects( self.fInternalItems_NoPostEffects )</div>\n\
<div class=\"line\"><a name=\"l05049\"></a><span class=\"lineno\"> 5049</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05050\"></a><span class=\"lineno\"> 5050</span>&#160;    <span class=\"keyword\">def </span>populateGeometry(self, requirements, renderItems, data):</div>\n\
<div class=\"line\"><a name=\"l05051\"></a><span class=\"lineno\"> 5051</span>&#160;        <span class=\"comment\">## Fill in data and index streams based on the requirements passed in.</span></div>\n\
<div class=\"line\"><a name=\"l05052\"></a><span class=\"lineno\"> 5052</span>&#160;        <span class=\"comment\">## Associate indexing with the render items passed in.</span></div>\n\
<div class=\"line\"><a name=\"l05053\"></a><span class=\"lineno\"> 5053</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l05054\"></a><span class=\"lineno\"> 5054</span>&#160;        <span class=\"comment\">## Note that we leave both code paths to either draw shared or non-shared active vertices.</span></div>\n\
<div class=\"line\"><a name=\"l05055\"></a><span class=\"lineno\"> 5055</span>&#160;        <span class=\"comment\">## The choice of which to use is up to the circumstances per plug-in.</span></div>\n\
<div class=\"line\"><a name=\"l05056\"></a><span class=\"lineno\"> 5056</span>&#160;        <span class=\"comment\">## When drawing shared vertices, this requires an additional position buffer to be</span></div>\n\
<div class=\"line\"><a name=\"l05057\"></a><span class=\"lineno\"> 5057</span>&#160;        <span class=\"comment\">## created so will use more memory. If drawing unshared vertices redundent extra</span></div>\n\
<div class=\"line\"><a name=\"l05058\"></a><span class=\"lineno\"> 5058</span>&#160;        <span class=\"comment\">## vertices are drawn but will use less memory. The data member fDrawSharedActiveVertices</span></div>\n\
<div class=\"line\"><a name=\"l05059\"></a><span class=\"lineno\"> 5059</span>&#160;        <span class=\"comment\">## can be set to decide on which implementation to use.</span></div>\n\
<div class=\"line\"><a name=\"l05060\"></a><span class=\"lineno\"> 5060</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05061\"></a><span class=\"lineno\"> 5061</span>&#160;        debugPopulateGeometry = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05062\"></a><span class=\"lineno\"> 5062</span>&#160;        <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l05063\"></a><span class=\"lineno\"> 5063</span>&#160;            print(<span class=\"stringliteral\">&quot;&gt; Begin populate geometry&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05064\"></a><span class=\"lineno\"> 5064</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05065\"></a><span class=\"lineno\"> 5065</span>&#160;        <span class=\"comment\">## Get the active vertex count</span></div>\n\
<div class=\"line\"><a name=\"l05066\"></a><span class=\"lineno\"> 5066</span>&#160;        activeVertexCount = len(self.fActiveVertices)</div>\n\
<div class=\"line\"><a name=\"l05067\"></a><span class=\"lineno\"> 5067</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05068\"></a><span class=\"lineno\"> 5068</span>&#160;        <span class=\"comment\">## Compute the number of triangles, assume polys are always convex</span></div>\n\
<div class=\"line\"><a name=\"l05069\"></a><span class=\"lineno\"> 5069</span>&#160;        numTriangles = 0</div>\n\
<div class=\"line\"><a name=\"l05070\"></a><span class=\"lineno\"> 5070</span>&#160;        totalVerts = 0</div>\n\
<div class=\"line\"><a name=\"l05071\"></a><span class=\"lineno\"> 5071</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l05072\"></a><span class=\"lineno\"> 5072</span>&#160;            numVerts = self.fMeshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l05073\"></a><span class=\"lineno\"> 5073</span>&#160;            <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l05074\"></a><span class=\"lineno\"> 5074</span>&#160;                numTriangles += numVerts - 2</div>\n\
<div class=\"line\"><a name=\"l05075\"></a><span class=\"lineno\"> 5075</span>&#160;                totalVerts += numVerts</div>\n\
<div class=\"line\"><a name=\"l05076\"></a><span class=\"lineno\"> 5076</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05077\"></a><span class=\"lineno\"> 5077</span>&#160;        <span class=\"comment\">## Update data streams based on geometry requirements</span></div>\n\
<div class=\"line\"><a name=\"l05078\"></a><span class=\"lineno\"> 5078</span>&#160;        self.updateGeometryRequirements(requirements, data, activeVertexCount, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l05079\"></a><span class=\"lineno\"> 5079</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05080\"></a><span class=\"lineno\"> 5080</span>&#160;        <span class=\"comment\">## Update indexing data for all appropriate render items</span></div>\n\
<div class=\"line\"><a name=\"l05081\"></a><span class=\"lineno\"> 5081</span>&#160;        wireIndexBuffer = <span class=\"keywordtype\">None</span> <span class=\"comment\">## reuse same index buffer for both wireframe and selected</span></div>\n\
<div class=\"line\"><a name=\"l05082\"></a><span class=\"lineno\"> 5082</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05083\"></a><span class=\"lineno\"> 5083</span>&#160;        <span class=\"keywordflow\">for</span> item <span class=\"keywordflow\">in</span> renderItems:</div>\n\
<div class=\"line\"><a name=\"l05084\"></a><span class=\"lineno\"> 5084</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> item:</div>\n\
<div class=\"line\"><a name=\"l05085\"></a><span class=\"lineno\"> 5085</span>&#160;                <span class=\"keywordflow\">continue</span></div>\n\
<div class=\"line\"><a name=\"l05086\"></a><span class=\"lineno\"> 5086</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05087\"></a><span class=\"lineno\"> 5087</span>&#160;            <span class=\"comment\">## Enable to debug vertex buffers that are associated with each render item.</span></div>\n\
<div class=\"line\"><a name=\"l05088\"></a><span class=\"lineno\"> 5088</span>&#160;            <span class=\"comment\">## Can also use to generate indexing better, but we don&#39;t need that here.</span></div>\n\
<div class=\"line\"><a name=\"l05089\"></a><span class=\"lineno\"> 5089</span>&#160;            <span class=\"comment\">## Also debugs custom data on the render item.</span></div>\n\
<div class=\"line\"><a name=\"l05090\"></a><span class=\"lineno\"> 5090</span>&#160;            debugStuff = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05091\"></a><span class=\"lineno\"> 5091</span>&#160;            <span class=\"keywordflow\">if</span> debugStuff:</div>\n\
<div class=\"line\"><a name=\"l05092\"></a><span class=\"lineno\"> 5092</span>&#160;                itemBuffers = item.requiredVertexBuffers()</div>\n\
<div class=\"line\"><a name=\"l05093\"></a><span class=\"lineno\"> 5093</span>&#160;                <span class=\"keywordflow\">for</span> desc <span class=\"keywordflow\">in</span> itemBuffers:</div>\n\
<div class=\"line\"><a name=\"l05094\"></a><span class=\"lineno\"> 5094</span>&#160;                    print(<span class=\"stringliteral\">&quot;Buffer Required for Item &#39;&quot;</span> + item.name() + <span class=\"stringliteral\">&quot;&#39;:&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05095\"></a><span class=\"lineno\"> 5095</span>&#160;                    print(<span class=\"stringliteral\">&quot;\\tBufferName: &quot;</span> + desc.name)</div>\n\
<div class=\"line\"><a name=\"l05096\"></a><span class=\"lineno\"> 5096</span>&#160;                    print(<span class=\"stringliteral\">&quot;\\tDataType: &quot;</span> + omr.MGeometry.dataTypeString(desc.dataType) + <span class=\"stringliteral\">&quot; (dimension &quot;</span> + str(desc.dimension) + <span class=\"stringliteral\">&quot;)&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05097\"></a><span class=\"lineno\"> 5097</span>&#160;                    print(<span class=\"stringliteral\">&quot;\\tSemantic: &quot;</span> + omr.MGeometry.semanticString(desc.semantic))</div>\n\
<div class=\"line\"><a name=\"l05098\"></a><span class=\"lineno\"> 5098</span>&#160;                    print(<span class=\"stringliteral\">&quot;&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05099\"></a><span class=\"lineno\"> 5099</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05100\"></a><span class=\"lineno\"> 5100</span>&#160;                <span class=\"comment\">## Just print a message for illustration purposes. Note that the custom data is also</span></div>\n\
<div class=\"line\"><a name=\"l05101\"></a><span class=\"lineno\"> 5101</span>&#160;                <span class=\"comment\">## accessible from the MRenderItem in MPxShaderOverride::draw().</span></div>\n\
<div class=\"line\"><a name=\"l05102\"></a><span class=\"lineno\"> 5102</span>&#160;                myCustomData = item.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l05103\"></a><span class=\"lineno\"> 5103</span>&#160;                <span class=\"keywordflow\">if</span> isinstance(myCustomData, apiMeshUserData):</div>\n\
<div class=\"line\"><a name=\"l05104\"></a><span class=\"lineno\"> 5104</span>&#160;                    print(<span class=\"stringliteral\">&quot;Custom data &#39;&quot;</span> + myCustomData.fMessage + <span class=\"stringliteral\">&quot;&#39;, modified count=&#39;&quot;</span> + str(myCustomData.fNumModifications) + <span class=\"stringliteral\">&quot;&#39;&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05105\"></a><span class=\"lineno\"> 5105</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05106\"></a><span class=\"lineno\"> 5106</span>&#160;                    print(<span class=\"stringliteral\">&quot;No custom data&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05107\"></a><span class=\"lineno\"> 5107</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05108\"></a><span class=\"lineno\"> 5108</span>&#160;            <span class=\"comment\">## Update indexing for active vertex item</span></div>\n\
<div class=\"line\"><a name=\"l05109\"></a><span class=\"lineno\"> 5109</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05110\"></a><span class=\"lineno\"> 5110</span>&#160;            <span class=\"keywordflow\">if</span> item.name() == self.sActiveVertexItemName:</div>\n\
<div class=\"line\"><a name=\"l05111\"></a><span class=\"lineno\"> 5111</span>&#160;                self.updateIndexingForVertices( item, data, numTriangles, activeVertexCount, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l05112\"></a><span class=\"lineno\"> 5112</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05113\"></a><span class=\"lineno\"> 5113</span>&#160;            <span class=\"comment\">## Update indexing for face center item in wireframe mode and shaded mode</span></div>\n\
<div class=\"line\"><a name=\"l05114\"></a><span class=\"lineno\"> 5114</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05115\"></a><span class=\"lineno\"> 5115</span>&#160;            <span class=\"keywordflow\">if</span> self.fDrawFaceCenters <span class=\"keywordflow\">and</span> (item.name() == self.sShadedModeFaceCenterItemName <span class=\"keywordflow\">or</span> item.name() == self.sWireframeModeFaceCenterItemName):</div>\n\
<div class=\"line\"><a name=\"l05116\"></a><span class=\"lineno\"> 5116</span>&#160;                self.updateIndexingForFaceCenters( item, data, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l05117\"></a><span class=\"lineno\"> 5117</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05118\"></a><span class=\"lineno\"> 5118</span>&#160;            <span class=\"comment\">## Create indexing for dormant and numeric vertex render items</span></div>\n\
<div class=\"line\"><a name=\"l05119\"></a><span class=\"lineno\"> 5119</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05120\"></a><span class=\"lineno\"> 5120</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sVertexItemName <span class=\"keywordflow\">or</span> item.name() == self.sVertexIdItemName <span class=\"keywordflow\">or</span> item.name() == self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l05121\"></a><span class=\"lineno\"> 5121</span>&#160;                self.updateIndexingForDormantVertices( item, data, numTriangles )</div>\n\
<div class=\"line\"><a name=\"l05122\"></a><span class=\"lineno\"> 5122</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05123\"></a><span class=\"lineno\"> 5123</span>&#160;            <span class=\"comment\">## Create indexing for wireframe render items</span></div>\n\
<div class=\"line\"><a name=\"l05124\"></a><span class=\"lineno\"> 5124</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05125\"></a><span class=\"lineno\"> 5125</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sWireframeItemName <span class=\"keywordflow\">or</span> item.name() == self.sShadedTemplateItemName <span class=\"keywordflow\">or</span> item.name() == self.sSelectedWireframeItemName <span class=\"keywordflow\">or</span> (item.primitive() != omr.MGeometry.kTriangles <span class=\"keywordflow\">and</span> item.name() == self.sShadedProxyItemName):</div>\n\
<div class=\"line\"><a name=\"l05126\"></a><span class=\"lineno\"> 5126</span>&#160;                self.updateIndexingForWireframeItems(wireIndexBuffer, item, data, totalVerts)</div>\n\
<div class=\"line\"><a name=\"l05127\"></a><span class=\"lineno\"> 5127</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05128\"></a><span class=\"lineno\"> 5128</span>&#160;            <span class=\"comment\">## Handle indexing for affected edge render items</span></div>\n\
<div class=\"line\"><a name=\"l05129\"></a><span class=\"lineno\"> 5129</span>&#160;            <span class=\"comment\">## For each face we check the edges. If the edges are in the active vertex</span></div>\n\
<div class=\"line\"><a name=\"l05130\"></a><span class=\"lineno\"> 5130</span>&#160;            <span class=\"comment\">## list we add indexing for the 2 vertices on the edge to the index buffer.</span></div>\n\
<div class=\"line\"><a name=\"l05131\"></a><span class=\"lineno\"> 5131</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05132\"></a><span class=\"lineno\"> 5132</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sAffectedEdgeItemName:</div>\n\
<div class=\"line\"><a name=\"l05133\"></a><span class=\"lineno\"> 5133</span>&#160;                self.updateIndexingForEdges(item, data, totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## Filter edges using active edges or actives vertices set</span></div>\n\
<div class=\"line\"><a name=\"l05134\"></a><span class=\"lineno\"> 5134</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sEdgeSelectionItemName:</div>\n\
<div class=\"line\"><a name=\"l05135\"></a><span class=\"lineno\"> 5135</span>&#160;                self.updateIndexingForEdges(item, data, totalVerts, <span class=\"keyword\">False</span>) <span class=\"comment\">## No filter : all edges</span></div>\n\
<div class=\"line\"><a name=\"l05136\"></a><span class=\"lineno\"> 5136</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05137\"></a><span class=\"lineno\"> 5137</span>&#160;            <span class=\"comment\">## Handle indexing for affected edge render items</span></div>\n\
<div class=\"line\"><a name=\"l05138\"></a><span class=\"lineno\"> 5138</span>&#160;            <span class=\"comment\">## For each triangle we check the vertices. If any of the vertices are in the active vertex</span></div>\n\
<div class=\"line\"><a name=\"l05139\"></a><span class=\"lineno\"> 5139</span>&#160;            <span class=\"comment\">## list we add indexing for the triangle to the index buffer.</span></div>\n\
<div class=\"line\"><a name=\"l05140\"></a><span class=\"lineno\"> 5140</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05141\"></a><span class=\"lineno\"> 5141</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sAffectedFaceItemName:</div>\n\
<div class=\"line\"><a name=\"l05142\"></a><span class=\"lineno\"> 5142</span>&#160;                self.updateIndexingForFaces(item, data, numTriangles, <span class=\"keyword\">True</span>) <span class=\"comment\">## Filter faces using active faces or actives vertices set</span></div>\n\
<div class=\"line\"><a name=\"l05143\"></a><span class=\"lineno\"> 5143</span>&#160;            <span class=\"keywordflow\">elif</span> item.name() == self.sFaceSelectionItemName:</div>\n\
<div class=\"line\"><a name=\"l05144\"></a><span class=\"lineno\"> 5144</span>&#160;                self.updateIndexingForFaces(item, data, numTriangles, <span class=\"keyword\">False</span>) <span class=\"comment\">## No filter : all faces</span></div>\n\
<div class=\"line\"><a name=\"l05145\"></a><span class=\"lineno\"> 5145</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05146\"></a><span class=\"lineno\"> 5146</span>&#160;            <span class=\"comment\">## Create indexing for filled (shaded) render items</span></div>\n\
<div class=\"line\"><a name=\"l05147\"></a><span class=\"lineno\"> 5147</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05148\"></a><span class=\"lineno\"> 5148</span>&#160;            <span class=\"keywordflow\">elif</span> item.primitive() == omr.MGeometry.kTriangles:</div>\n\
<div class=\"line\"><a name=\"l05149\"></a><span class=\"lineno\"> 5149</span>&#160;                self.updateIndexingForShadedTriangles(item, data, numTriangles)</div>\n\
<div class=\"line\"><a name=\"l05150\"></a><span class=\"lineno\"> 5150</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05151\"></a><span class=\"lineno\"> 5151</span>&#160;        <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l05152\"></a><span class=\"lineno\"> 5152</span>&#160;            print(<span class=\"stringliteral\">&quot;&gt; End populate geometry&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05153\"></a><span class=\"lineno\"> 5153</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05154\"></a><span class=\"lineno\"> 5154</span>&#160;    <span class=\"keyword\">def </span>cleanUp(self):</div>\n\
<div class=\"line\"><a name=\"l05155\"></a><span class=\"lineno\"> 5155</span>&#160;        self.fMeshGeom = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05156\"></a><span class=\"lineno\"> 5156</span>&#160;        self.fActiveVertices.clear()</div>\n\
<div class=\"line\"><a name=\"l05157\"></a><span class=\"lineno\"> 5157</span>&#160;        self.fActiveVerticesSet = set()</div>\n\
<div class=\"line\"><a name=\"l05158\"></a><span class=\"lineno\"> 5158</span>&#160;        self.fActiveEdgesSet = set()</div>\n\
<div class=\"line\"><a name=\"l05159\"></a><span class=\"lineno\"> 5159</span>&#160;        self.fActiveFacesSet = set()</div>\n\
<div class=\"line\"><a name=\"l05160\"></a><span class=\"lineno\"> 5160</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05161\"></a><span class=\"lineno\"> 5161</span>&#160;    <span class=\"keyword\">def </span>updateSelectionGranularity(self, path, selectionContext):</div>\n\
<div class=\"line\"><a name=\"l05162\"></a><span class=\"lineno\"> 5162</span>&#160;        <span class=\"comment\">## This is method is called during the pre-filtering phase of the viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l05163\"></a><span class=\"lineno\"> 5163</span>&#160;        <span class=\"comment\">## and is used to setup the selection context of the given DAG object.</span></div>\n\
<div class=\"line\"><a name=\"l05164\"></a><span class=\"lineno\"> 5164</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05165\"></a><span class=\"lineno\"> 5165</span>&#160;        <span class=\"comment\">## We want the whole shape to be selectable, so we set the selection level to kObject so that the shape</span></div>\n\
<div class=\"line\"><a name=\"l05166\"></a><span class=\"lineno\"> 5166</span>&#160;        <span class=\"comment\">## will be processed by the selection.</span></div>\n\
<div class=\"line\"><a name=\"l05167\"></a><span class=\"lineno\"> 5167</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05168\"></a><span class=\"lineno\"> 5168</span>&#160;        <span class=\"comment\">## In case we are currently in component selection mode (vertex, edge or face),</span></div>\n\
<div class=\"line\"><a name=\"l05169\"></a><span class=\"lineno\"> 5169</span>&#160;        <span class=\"comment\">## since we have created render items that can be use in the selection phase (kSelectionOnly draw mode)</span></div>\n\
<div class=\"line\"><a name=\"l05170\"></a><span class=\"lineno\"> 5170</span>&#160;        <span class=\"comment\">## and we also registered component converters to handle this render items,</span></div>\n\
<div class=\"line\"><a name=\"l05171\"></a><span class=\"lineno\"> 5171</span>&#160;        <span class=\"comment\">## we can set the selection level to kComponent so that the shape will also be processed by the selection.</span></div>\n\
<div class=\"line\"><a name=\"l05172\"></a><span class=\"lineno\"> 5172</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05173\"></a><span class=\"lineno\"> 5173</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05174\"></a><span class=\"lineno\"> 5174</span>&#160;        <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kHilite:</div>\n\
<div class=\"line\"><a name=\"l05175\"></a><span class=\"lineno\"> 5175</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l05176\"></a><span class=\"lineno\"> 5176</span>&#160;            globalComponentMask = om.MGlobal.objectSelectionMask()</div>\n\
<div class=\"line\"><a name=\"l05177\"></a><span class=\"lineno\"> 5177</span>&#160;            <span class=\"keywordflow\">if</span> om.MGlobal.selectionMode() == om.MGlobal.kSelectComponentMode:</div>\n\
<div class=\"line\"><a name=\"l05178\"></a><span class=\"lineno\"> 5178</span>&#160;                globalComponentMask = om.MGlobal.componentSelectionMask()</div>\n\
<div class=\"line\"><a name=\"l05179\"></a><span class=\"lineno\"> 5179</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05180\"></a><span class=\"lineno\"> 5180</span>&#160;            supportedComponentMask = om.MSelectionMask( om.MSelectionMask.kSelectMeshVerts )</div>\n\
<div class=\"line\"><a name=\"l05181\"></a><span class=\"lineno\"> 5181</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectMeshEdges )</div>\n\
<div class=\"line\"><a name=\"l05182\"></a><span class=\"lineno\"> 5182</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectMeshFaces )</div>\n\
<div class=\"line\"><a name=\"l05183\"></a><span class=\"lineno\"> 5183</span>&#160;            supportedComponentMask.addMask( om.MSelectionMask.kSelectPointsForGravity )</div>\n\
<div class=\"line\"><a name=\"l05184\"></a><span class=\"lineno\"> 5184</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l05185\"></a><span class=\"lineno\"> 5185</span>&#160;            <span class=\"keywordflow\">if</span> globalComponentMask.intersects(supportedComponentMask):</div>\n\
<div class=\"line\"><a name=\"l05186\"></a><span class=\"lineno\"> 5186</span>&#160;                selectionContext.selectionLevel = omr.MSelectionContext.kComponent</div>\n\
<div class=\"line\"><a name=\"l05187\"></a><span class=\"lineno\"> 5187</span>&#160;        <span class=\"keywordflow\">elif</span> omr.MPxGeometryOverride.pointSnappingActive():</div>\n\
<div class=\"line\"><a name=\"l05188\"></a><span class=\"lineno\"> 5188</span>&#160;            selectionContext.selectionLevel = omr.MSelectionContext.kComponent</div>\n\
<div class=\"line\"><a name=\"l05189\"></a><span class=\"lineno\"> 5189</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05190\"></a><span class=\"lineno\"> 5190</span>&#160;    <span class=\"keyword\">def </span>printShader(self, shader):</div>\n\
<div class=\"line\"><a name=\"l05191\"></a><span class=\"lineno\"> 5191</span>&#160;        <span class=\"comment\">## Some example code to print out shader parameters</span></div>\n\
<div class=\"line\"><a name=\"l05192\"></a><span class=\"lineno\"> 5192</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05193\"></a><span class=\"lineno\"> 5193</span>&#160;            <span class=\"keywordflow\">return</span></div>\n\
<div class=\"line\"><a name=\"l05194\"></a><span class=\"lineno\"> 5194</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05195\"></a><span class=\"lineno\"> 5195</span>&#160;        params = shader.parameterList()</div>\n\
<div class=\"line\"><a name=\"l05196\"></a><span class=\"lineno\"> 5196</span>&#160;        print(<span class=\"stringliteral\">&quot;DEBUGGING SHADER, BEGIN PARAM LIST OF LENGTH &quot;</span> + str(len(params)))</div>\n\
<div class=\"line\"><a name=\"l05197\"></a><span class=\"lineno\"> 5197</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05198\"></a><span class=\"lineno\"> 5198</span>&#160;        <span class=\"keywordflow\">for</span> param <span class=\"keywordflow\">in</span> params:</div>\n\
<div class=\"line\"><a name=\"l05199\"></a><span class=\"lineno\"> 5199</span>&#160;            paramType = shader.parameterType(param)</div>\n\
<div class=\"line\"><a name=\"l05200\"></a><span class=\"lineno\"> 5200</span>&#160;            isArray = shader.isArrayParameter(param)</div>\n\
<div class=\"line\"><a name=\"l05201\"></a><span class=\"lineno\"> 5201</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05202\"></a><span class=\"lineno\"> 5202</span>&#160;            typeAsStr = <span class=\"stringliteral\">&quot;Unknown&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05203\"></a><span class=\"lineno\"> 5203</span>&#160;            <span class=\"keywordflow\">if</span> paramType == omr.MShaderInstance.kInvalid:</div>\n\
<div class=\"line\"><a name=\"l05204\"></a><span class=\"lineno\"> 5204</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Invalid&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05205\"></a><span class=\"lineno\"> 5205</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kBoolean:</div>\n\
<div class=\"line\"><a name=\"l05206\"></a><span class=\"lineno\"> 5206</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Boolean&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05207\"></a><span class=\"lineno\"> 5207</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kInteger:</div>\n\
<div class=\"line\"><a name=\"l05208\"></a><span class=\"lineno\"> 5208</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Integer&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05209\"></a><span class=\"lineno\"> 5209</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat:</div>\n\
<div class=\"line\"><a name=\"l05210\"></a><span class=\"lineno\"> 5210</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05211\"></a><span class=\"lineno\"> 5211</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat2:</div>\n\
<div class=\"line\"><a name=\"l05212\"></a><span class=\"lineno\"> 5212</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float2&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05213\"></a><span class=\"lineno\"> 5213</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat3:</div>\n\
<div class=\"line\"><a name=\"l05214\"></a><span class=\"lineno\"> 5214</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float3&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05215\"></a><span class=\"lineno\"> 5215</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat4:</div>\n\
<div class=\"line\"><a name=\"l05216\"></a><span class=\"lineno\"> 5216</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float4&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05217\"></a><span class=\"lineno\"> 5217</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat4x4Row:</div>\n\
<div class=\"line\"><a name=\"l05218\"></a><span class=\"lineno\"> 5218</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float4x4Row&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05219\"></a><span class=\"lineno\"> 5219</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kFloat4x4Col:</div>\n\
<div class=\"line\"><a name=\"l05220\"></a><span class=\"lineno\"> 5220</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Float4x4Col&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05221\"></a><span class=\"lineno\"> 5221</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kTexture1:</div>\n\
<div class=\"line\"><a name=\"l05222\"></a><span class=\"lineno\"> 5222</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;1D Texture&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05223\"></a><span class=\"lineno\"> 5223</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kTexture2:</div>\n\
<div class=\"line\"><a name=\"l05224\"></a><span class=\"lineno\"> 5224</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;2D Texture&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05225\"></a><span class=\"lineno\"> 5225</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kTexture3:</div>\n\
<div class=\"line\"><a name=\"l05226\"></a><span class=\"lineno\"> 5226</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;3D Texture&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05227\"></a><span class=\"lineno\"> 5227</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kTextureCube:</div>\n\
<div class=\"line\"><a name=\"l05228\"></a><span class=\"lineno\"> 5228</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Cube Texture&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05229\"></a><span class=\"lineno\"> 5229</span>&#160;            <span class=\"keywordflow\">elif</span> paramType == omr.MShaderInstance.kSampler:</div>\n\
<div class=\"line\"><a name=\"l05230\"></a><span class=\"lineno\"> 5230</span>&#160;                typeAsStr = <span class=\"stringliteral\">&quot;Sampler&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05231\"></a><span class=\"lineno\"> 5231</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05232\"></a><span class=\"lineno\"> 5232</span>&#160;            print(<span class=\"stringliteral\">&quot;ParamName=&#39;&quot;</span> + param + <span class=\"stringliteral\">&quot;&#39;, ParamType=&#39;&quot;</span> + typeAsStr + <span class=\"stringliteral\">&quot;&#39;, IsArrayParameter:&#39;&quot;</span> + str(isArray) + <span class=\"stringliteral\">&quot;&#39;&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05233\"></a><span class=\"lineno\"> 5233</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05234\"></a><span class=\"lineno\"> 5234</span>&#160;        print(<span class=\"stringliteral\">&quot;END PARAM LIST&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l05235\"></a><span class=\"lineno\"> 5235</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05236\"></a><span class=\"lineno\"> 5236</span>&#160;    <span class=\"keyword\">def </span>setSolidColor(self, shaderInstance, defaultColor, customColor=None):</div>\n\
<div class=\"line\"><a name=\"l05237\"></a><span class=\"lineno\"> 5237</span>&#160;        <span class=\"comment\">## Set the solid color for solid color shaders</span></div>\n\
<div class=\"line\"><a name=\"l05238\"></a><span class=\"lineno\"> 5238</span>&#160;        <span class=\"keywordflow\">if</span> shaderInstance:</div>\n\
<div class=\"line\"><a name=\"l05239\"></a><span class=\"lineno\"> 5239</span>&#160;            color = defaultColor</div>\n\
<div class=\"line\"><a name=\"l05240\"></a><span class=\"lineno\"> 5240</span>&#160;            <span class=\"keywordflow\">if</span> self.fUseCustomColors <span class=\"keywordflow\">and</span> customColor:</div>\n\
<div class=\"line\"><a name=\"l05241\"></a><span class=\"lineno\"> 5241</span>&#160;                color = customColor</div>\n\
<div class=\"line\"><a name=\"l05242\"></a><span class=\"lineno\"> 5242</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l05243\"></a><span class=\"lineno\"> 5243</span>&#160;                shaderInstance.setParameter(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, color)</div>\n\
<div class=\"line\"><a name=\"l05244\"></a><span class=\"lineno\"> 5244</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l05245\"></a><span class=\"lineno\"> 5245</span>&#160;                <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l05246\"></a><span class=\"lineno\"> 5246</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05247\"></a><span class=\"lineno\"> 5247</span>&#160;    <span class=\"keyword\">def </span>setSolidPointSize(self, shaderInstance, size):</div>\n\
<div class=\"line\"><a name=\"l05248\"></a><span class=\"lineno\"> 5248</span>&#160;        <span class=\"comment\">## Set the point size for solid color shaders</span></div>\n\
<div class=\"line\"><a name=\"l05249\"></a><span class=\"lineno\"> 5249</span>&#160;        <span class=\"keywordflow\">if</span> shaderInstance:</div>\n\
<div class=\"line\"><a name=\"l05250\"></a><span class=\"lineno\"> 5250</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l05251\"></a><span class=\"lineno\"> 5251</span>&#160;                shaderInstance.setParameter(<span class=\"stringliteral\">&quot;pointSize&quot;</span>, [size, size])</div>\n\
<div class=\"line\"><a name=\"l05252\"></a><span class=\"lineno\"> 5252</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l05253\"></a><span class=\"lineno\"> 5253</span>&#160;                <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l05254\"></a><span class=\"lineno\"> 5254</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05255\"></a><span class=\"lineno\"> 5255</span>&#160;    <span class=\"keyword\">def </span>setLineWidth(self, shaderInstance, width):</div>\n\
<div class=\"line\"><a name=\"l05256\"></a><span class=\"lineno\"> 5256</span>&#160;        <span class=\"comment\">## Set the line width for solid color shaders</span></div>\n\
<div class=\"line\"><a name=\"l05257\"></a><span class=\"lineno\"> 5257</span>&#160;        <span class=\"keywordflow\">if</span> shaderInstance:</div>\n\
<div class=\"line\"><a name=\"l05258\"></a><span class=\"lineno\"> 5258</span>&#160;            <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l05259\"></a><span class=\"lineno\"> 5259</span>&#160;                shaderInstance.setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, [width, width])</div>\n\
<div class=\"line\"><a name=\"l05260\"></a><span class=\"lineno\"> 5260</span>&#160;            <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l05261\"></a><span class=\"lineno\"> 5261</span>&#160;                <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l05262\"></a><span class=\"lineno\"> 5262</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05263\"></a><span class=\"lineno\"> 5263</span>&#160;    <span class=\"keyword\">def </span>enableActiveComponentDisplay(self, path):</div>\n\
<div class=\"line\"><a name=\"l05264\"></a><span class=\"lineno\"> 5264</span>&#160;        <span class=\"comment\">## Test to see if active components should be enabled.</span></div>\n\
<div class=\"line\"><a name=\"l05265\"></a><span class=\"lineno\"> 5265</span>&#160;        <span class=\"comment\">## Based on active vertices + non-template state</span></div>\n\
<div class=\"line\"><a name=\"l05266\"></a><span class=\"lineno\"> 5266</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05267\"></a><span class=\"lineno\"> 5267</span>&#160;        enable = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l05268\"></a><span class=\"lineno\"> 5268</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05269\"></a><span class=\"lineno\"> 5269</span>&#160;        <span class=\"comment\">## If there are components then we need to check</span></div>\n\
<div class=\"line\"><a name=\"l05270\"></a><span class=\"lineno\"> 5270</span>&#160;        <span class=\"comment\">## either the display status of the object, or</span></div>\n\
<div class=\"line\"><a name=\"l05271\"></a><span class=\"lineno\"> 5271</span>&#160;        <span class=\"comment\">## in the case of a templated object make sure</span></div>\n\
<div class=\"line\"><a name=\"l05272\"></a><span class=\"lineno\"> 5272</span>&#160;        <span class=\"comment\">## to hide components to be consistent with how</span></div>\n\
<div class=\"line\"><a name=\"l05273\"></a><span class=\"lineno\"> 5273</span>&#160;        <span class=\"comment\">## internal objects behave</span></div>\n\
<div class=\"line\"><a name=\"l05274\"></a><span class=\"lineno\"> 5274</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05275\"></a><span class=\"lineno\"> 5275</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05276\"></a><span class=\"lineno\"> 5276</span>&#160;        <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kHilite <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kActiveComponent:</div>\n\
<div class=\"line\"><a name=\"l05277\"></a><span class=\"lineno\"> 5277</span>&#160;            enable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05278\"></a><span class=\"lineno\"> 5278</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l05279\"></a><span class=\"lineno\"> 5279</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05280\"></a><span class=\"lineno\"> 5280</span>&#160;            <span class=\"comment\">## Do an explicit path test for templated</span></div>\n\
<div class=\"line\"><a name=\"l05281\"></a><span class=\"lineno\"> 5281</span>&#160;            <span class=\"comment\">## since display status does not indicate this.</span></div>\n\
<div class=\"line\"><a name=\"l05282\"></a><span class=\"lineno\"> 5282</span>&#160;            <span class=\"keywordflow\">if</span> path.isTemplated():</div>\n\
<div class=\"line\"><a name=\"l05283\"></a><span class=\"lineno\"> 5283</span>&#160;                enable = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05284\"></a><span class=\"lineno\"> 5284</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05285\"></a><span class=\"lineno\"> 5285</span>&#160;        <span class=\"keywordflow\">return</span> enable</div>\n\
<div class=\"line\"><a name=\"l05286\"></a><span class=\"lineno\"> 5286</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05287\"></a><span class=\"lineno\"> 5287</span>&#160;    <span class=\"comment\">## Render item handling methods</span></div>\n\
<div class=\"line\"><a name=\"l05288\"></a><span class=\"lineno\"> 5288</span>&#160;    <span class=\"keyword\">def </span>updateDormantAndTemplateWireframeItems(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05289\"></a><span class=\"lineno\"> 5289</span>&#160;        <span class=\"comment\">## Update render items for dormant and template wireframe drawing.</span></div>\n\
<div class=\"line\"><a name=\"l05290\"></a><span class=\"lineno\"> 5290</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l05291\"></a><span class=\"lineno\"> 5291</span>&#160;        <span class=\"comment\">## 1) If the object is dormant and not templated then we require</span></div>\n\
<div class=\"line\"><a name=\"l05292\"></a><span class=\"lineno\"> 5292</span>&#160;        <span class=\"comment\">## a render item to display when wireframe drawing is required (display modes</span></div>\n\
<div class=\"line\"><a name=\"l05293\"></a><span class=\"lineno\"> 5293</span>&#160;        <span class=\"comment\">## is wire or wire-on-shaded)</span></div>\n\
<div class=\"line\"><a name=\"l05294\"></a><span class=\"lineno\"> 5294</span>&#160;        <span class=\"comment\">## </span></div>\n\
<div class=\"line\"><a name=\"l05295\"></a><span class=\"lineno\"> 5295</span>&#160;        <span class=\"comment\">## 2a) If the object is templated then we use the same render item as in 1)</span></div>\n\
<div class=\"line\"><a name=\"l05296\"></a><span class=\"lineno\"> 5296</span>&#160;        <span class=\"comment\">## when in wireframe drawing is required.</span></div>\n\
<div class=\"line\"><a name=\"l05297\"></a><span class=\"lineno\"> 5297</span>&#160;        <span class=\"comment\">## 2b) However we also require a render item to display when in shaded mode.</span></div>\n\
<div class=\"line\"><a name=\"l05298\"></a><span class=\"lineno\"> 5298</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l05299\"></a><span class=\"lineno\"> 5299</span>&#160;        <span class=\"comment\">## Stock colors</span></div>\n\
<div class=\"line\"><a name=\"l05300\"></a><span class=\"lineno\"> 5300</span>&#160;        dormantColor = [ 0.0, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05301\"></a><span class=\"lineno\"> 5301</span>&#160;        templateColor = [ 0.45, 0.45, 0.45, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05302\"></a><span class=\"lineno\"> 5302</span>&#160;        activeTemplateColor = [ 1.0, 0.5, 0.5, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05303\"></a><span class=\"lineno\"> 5303</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05304\"></a><span class=\"lineno\"> 5304</span>&#160;        <span class=\"comment\">## Some local options to show debug interface</span></div>\n\
<div class=\"line\"><a name=\"l05305\"></a><span class=\"lineno\"> 5305</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05306\"></a><span class=\"lineno\"> 5306</span>&#160;        debugShader = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05307\"></a><span class=\"lineno\"> 5307</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05308\"></a><span class=\"lineno\"> 5308</span>&#160;        <span class=\"comment\">## Get render item used for draw in wireframe mode</span></div>\n\
<div class=\"line\"><a name=\"l05309\"></a><span class=\"lineno\"> 5309</span>&#160;        <span class=\"comment\">## (Mode to draw in is omr.MGeometry.kWireframe)</span></div>\n\
<div class=\"line\"><a name=\"l05310\"></a><span class=\"lineno\"> 5310</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05311\"></a><span class=\"lineno\"> 5311</span>&#160;        wireframeItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05312\"></a><span class=\"lineno\"> 5312</span>&#160;        index = list.indexOf(self.sWireframeItemName)</div>\n\
<div class=\"line\"><a name=\"l05313\"></a><span class=\"lineno\"> 5313</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05314\"></a><span class=\"lineno\"> 5314</span>&#160;            wireframeItem = omr.MRenderItem.create( self.sWireframeItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l05315\"></a><span class=\"lineno\"> 5315</span>&#160;            wireframeItem.setDrawMode(omr.MGeometry.kWireframe)</div>\n\
<div class=\"line\"><a name=\"l05316\"></a><span class=\"lineno\"> 5316</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05317\"></a><span class=\"lineno\"> 5317</span>&#160;            <span class=\"comment\">## Set dormant wireframe with appropriate priority to not clash with</span></div>\n\
<div class=\"line\"><a name=\"l05318\"></a><span class=\"lineno\"> 5318</span>&#160;            <span class=\"comment\">## any active wireframe which may overlap in depth.</span></div>\n\
<div class=\"line\"><a name=\"l05319\"></a><span class=\"lineno\"> 5319</span>&#160;            wireframeItem.setDepthPriority( omr.MRenderItem.sDormantWireDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05320\"></a><span class=\"lineno\"> 5320</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05321\"></a><span class=\"lineno\"> 5321</span>&#160;            list.append(wireframeItem)</div>\n\
<div class=\"line\"><a name=\"l05322\"></a><span class=\"lineno\"> 5322</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05323\"></a><span class=\"lineno\"> 5323</span>&#160;            preCb = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05324\"></a><span class=\"lineno\"> 5324</span>&#160;            postCb = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05325\"></a><span class=\"lineno\"> 5325</span>&#160;            <span class=\"keywordflow\">if</span> debugShader:</div>\n\
<div class=\"line\"><a name=\"l05326\"></a><span class=\"lineno\"> 5326</span>&#160;                preCb = apiMeshPreDrawCallback</div>\n\
<div class=\"line\"><a name=\"l05327\"></a><span class=\"lineno\"> 5327</span>&#160;                postCb = apiMeshPostDrawCallback</div>\n\
<div class=\"line\"><a name=\"l05328\"></a><span class=\"lineno\"> 5328</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05329\"></a><span class=\"lineno\"> 5329</span>&#160;            shader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader, preCb, postCb)</div>\n\
<div class=\"line\"><a name=\"l05330\"></a><span class=\"lineno\"> 5330</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05331\"></a><span class=\"lineno\"> 5331</span>&#160;                <span class=\"comment\">## assign shader</span></div>\n\
<div class=\"line\"><a name=\"l05332\"></a><span class=\"lineno\"> 5332</span>&#160;                wireframeItem.setShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05333\"></a><span class=\"lineno\"> 5333</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05334\"></a><span class=\"lineno\"> 5334</span>&#160;                <span class=\"comment\">## sample debug code</span></div>\n\
<div class=\"line\"><a name=\"l05335\"></a><span class=\"lineno\"> 5335</span>&#160;                <span class=\"keywordflow\">if</span> debugShader:</div>\n\
<div class=\"line\"><a name=\"l05336\"></a><span class=\"lineno\"> 5336</span>&#160;                    self.printShader( shader )</div>\n\
<div class=\"line\"><a name=\"l05337\"></a><span class=\"lineno\"> 5337</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05338\"></a><span class=\"lineno\"> 5338</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05339\"></a><span class=\"lineno\"> 5339</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05340\"></a><span class=\"lineno\"> 5340</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05341\"></a><span class=\"lineno\"> 5341</span>&#160;            wireframeItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05342\"></a><span class=\"lineno\"> 5342</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05343\"></a><span class=\"lineno\"> 5343</span>&#160;        <span class=\"comment\">## Get render item for handling mode shaded template drawing</span></div>\n\
<div class=\"line\"><a name=\"l05344\"></a><span class=\"lineno\"> 5344</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05345\"></a><span class=\"lineno\"> 5345</span>&#160;        shadedTemplateItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05346\"></a><span class=\"lineno\"> 5346</span>&#160;        index = list.indexOf(self.sShadedTemplateItemName)</div>\n\
<div class=\"line\"><a name=\"l05347\"></a><span class=\"lineno\"> 5347</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05348\"></a><span class=\"lineno\"> 5348</span>&#160;            shadedTemplateItem = omr.MRenderItem.create( self.sShadedTemplateItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l05349\"></a><span class=\"lineno\"> 5349</span>&#160;            shadedTemplateItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05350\"></a><span class=\"lineno\"> 5350</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05351\"></a><span class=\"lineno\"> 5351</span>&#160;            <span class=\"comment\">## Set shaded item as being dormant wire since it should still be raised</span></div>\n\
<div class=\"line\"><a name=\"l05352\"></a><span class=\"lineno\"> 5352</span>&#160;            <span class=\"comment\">## above any shaded items, but not as high as active items.</span></div>\n\
<div class=\"line\"><a name=\"l05353\"></a><span class=\"lineno\"> 5353</span>&#160;            shadedTemplateItem.setDepthPriority( omr.MRenderItem.sDormantWireDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05354\"></a><span class=\"lineno\"> 5354</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05355\"></a><span class=\"lineno\"> 5355</span>&#160;            list.append(shadedTemplateItem)</div>\n\
<div class=\"line\"><a name=\"l05356\"></a><span class=\"lineno\"> 5356</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05357\"></a><span class=\"lineno\"> 5357</span>&#160;            shader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader)</div>\n\
<div class=\"line\"><a name=\"l05358\"></a><span class=\"lineno\"> 5358</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05359\"></a><span class=\"lineno\"> 5359</span>&#160;                <span class=\"comment\">## assign shader</span></div>\n\
<div class=\"line\"><a name=\"l05360\"></a><span class=\"lineno\"> 5360</span>&#160;                shadedTemplateItem.setShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05361\"></a><span class=\"lineno\"> 5361</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05362\"></a><span class=\"lineno\"> 5362</span>&#160;                <span class=\"comment\">## sample debug code</span></div>\n\
<div class=\"line\"><a name=\"l05363\"></a><span class=\"lineno\"> 5363</span>&#160;                <span class=\"keywordflow\">if</span> debugShader:</div>\n\
<div class=\"line\"><a name=\"l05364\"></a><span class=\"lineno\"> 5364</span>&#160;                    self.printShader( shader )</div>\n\
<div class=\"line\"><a name=\"l05365\"></a><span class=\"lineno\"> 5365</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05366\"></a><span class=\"lineno\"> 5366</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05367\"></a><span class=\"lineno\"> 5367</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05368\"></a><span class=\"lineno\"> 5368</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05369\"></a><span class=\"lineno\"> 5369</span>&#160;            shadedTemplateItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05370\"></a><span class=\"lineno\"> 5370</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05371\"></a><span class=\"lineno\"> 5371</span>&#160;        <span class=\"comment\">## Sample code to disable cast, receives shadows, and post effects.</span></div>\n\
<div class=\"line\"><a name=\"l05372\"></a><span class=\"lineno\"> 5372</span>&#160;        shadedTemplateItem.setCastsShadows( <span class=\"keywordflow\">not</span> self.fExternalItemsNonTri_NoShadowCast )</div>\n\
<div class=\"line\"><a name=\"l05373\"></a><span class=\"lineno\"> 5373</span>&#160;        shadedTemplateItem.setReceivesShadows( <span class=\"keywordflow\">not</span> self.fExternalItemsNonTri_NoShadowReceive )</div>\n\
<div class=\"line\"><a name=\"l05374\"></a><span class=\"lineno\"> 5374</span>&#160;        shadedTemplateItem.setExcludedFromPostEffects( self.fExternalItemsNonTri_NoPostEffects )</div>\n\
<div class=\"line\"><a name=\"l05375\"></a><span class=\"lineno\"> 5375</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05376\"></a><span class=\"lineno\"> 5376</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05377\"></a><span class=\"lineno\"> 5377</span>&#160;        wireColor = omr.MGeometryUtilities.wireframeColor(path)</div>\n\
<div class=\"line\"><a name=\"l05378\"></a><span class=\"lineno\"> 5378</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05379\"></a><span class=\"lineno\"> 5379</span>&#160;        <span class=\"comment\">## Enable / disable wireframe item and update the shader parameters</span></div>\n\
<div class=\"line\"><a name=\"l05380\"></a><span class=\"lineno\"> 5380</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05381\"></a><span class=\"lineno\"> 5381</span>&#160;        <span class=\"keywordflow\">if</span> wireframeItem:</div>\n\
<div class=\"line\"><a name=\"l05382\"></a><span class=\"lineno\"> 5382</span>&#160;            shader = wireframeItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05383\"></a><span class=\"lineno\"> 5383</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05384\"></a><span class=\"lineno\"> 5384</span>&#160;            <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kTemplate:</div>\n\
<div class=\"line\"><a name=\"l05385\"></a><span class=\"lineno\"> 5385</span>&#160;                self.setSolidColor( shader, wireColor, templateColor)</div>\n\
<div class=\"line\"><a name=\"l05386\"></a><span class=\"lineno\"> 5386</span>&#160;                wireframeItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05387\"></a><span class=\"lineno\"> 5387</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05388\"></a><span class=\"lineno\"> 5388</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kActiveTemplate:</div>\n\
<div class=\"line\"><a name=\"l05389\"></a><span class=\"lineno\"> 5389</span>&#160;                self.setSolidColor( shader, wireColor, activeTemplateColor)</div>\n\
<div class=\"line\"><a name=\"l05390\"></a><span class=\"lineno\"> 5390</span>&#160;                wireframeItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05391\"></a><span class=\"lineno\"> 5391</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05392\"></a><span class=\"lineno\"> 5392</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kDormant:</div>\n\
<div class=\"line\"><a name=\"l05393\"></a><span class=\"lineno\"> 5393</span>&#160;                self.setSolidColor( shader, wireColor, dormantColor)</div>\n\
<div class=\"line\"><a name=\"l05394\"></a><span class=\"lineno\"> 5394</span>&#160;                wireframeItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05395\"></a><span class=\"lineno\"> 5395</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05396\"></a><span class=\"lineno\"> 5396</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kActiveAffected:</div>\n\
<div class=\"line\"><a name=\"l05397\"></a><span class=\"lineno\"> 5397</span>&#160;                theColor = [ 0.5, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05398\"></a><span class=\"lineno\"> 5398</span>&#160;                self.setSolidColor( shader, wireColor, theColor)</div>\n\
<div class=\"line\"><a name=\"l05399\"></a><span class=\"lineno\"> 5399</span>&#160;                wireframeItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05400\"></a><span class=\"lineno\"> 5400</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05401\"></a><span class=\"lineno\"> 5401</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05402\"></a><span class=\"lineno\"> 5402</span>&#160;                wireframeItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05403\"></a><span class=\"lineno\"> 5403</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05404\"></a><span class=\"lineno\"> 5404</span>&#160;        <span class=\"comment\">## Enable / disable shaded/template item and update the shader parameters</span></div>\n\
<div class=\"line\"><a name=\"l05405\"></a><span class=\"lineno\"> 5405</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05406\"></a><span class=\"lineno\"> 5406</span>&#160;        <span class=\"keywordflow\">if</span> shadedTemplateItem:</div>\n\
<div class=\"line\"><a name=\"l05407\"></a><span class=\"lineno\"> 5407</span>&#160;            isTemplate = path.isTemplated()</div>\n\
<div class=\"line\"><a name=\"l05408\"></a><span class=\"lineno\"> 5408</span>&#160;            shader = shadedTemplateItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05409\"></a><span class=\"lineno\"> 5409</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05410\"></a><span class=\"lineno\"> 5410</span>&#160;            <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kTemplate:</div>\n\
<div class=\"line\"><a name=\"l05411\"></a><span class=\"lineno\"> 5411</span>&#160;                self.setSolidColor( shader, wireColor, templateColor)</div>\n\
<div class=\"line\"><a name=\"l05412\"></a><span class=\"lineno\"> 5412</span>&#160;                shadedTemplateItem.enable(isTemplate)</div>\n\
<div class=\"line\"><a name=\"l05413\"></a><span class=\"lineno\"> 5413</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05414\"></a><span class=\"lineno\"> 5414</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kActiveTemplate:</div>\n\
<div class=\"line\"><a name=\"l05415\"></a><span class=\"lineno\"> 5415</span>&#160;                self.setSolidColor( shader, wireColor, activeTemplateColor)</div>\n\
<div class=\"line\"><a name=\"l05416\"></a><span class=\"lineno\"> 5416</span>&#160;                shadedTemplateItem.enable(isTemplate)</div>\n\
<div class=\"line\"><a name=\"l05417\"></a><span class=\"lineno\"> 5417</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05418\"></a><span class=\"lineno\"> 5418</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kDormant:</div>\n\
<div class=\"line\"><a name=\"l05419\"></a><span class=\"lineno\"> 5419</span>&#160;                self.setSolidColor( shader, wireColor, dormantColor)</div>\n\
<div class=\"line\"><a name=\"l05420\"></a><span class=\"lineno\"> 5420</span>&#160;                shadedTemplateItem.enable(isTemplate)</div>\n\
<div class=\"line\"><a name=\"l05421\"></a><span class=\"lineno\"> 5421</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05422\"></a><span class=\"lineno\"> 5422</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05423\"></a><span class=\"lineno\"> 5423</span>&#160;                shadedTemplateItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05424\"></a><span class=\"lineno\"> 5424</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05425\"></a><span class=\"lineno\"> 5425</span>&#160;    <span class=\"keyword\">def </span>updateActiveWireframeItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05426\"></a><span class=\"lineno\"> 5426</span>&#160;        <span class=\"comment\">## Create a render item for active wireframe if it does not exist. Updating</span></div>\n\
<div class=\"line\"><a name=\"l05427\"></a><span class=\"lineno\"> 5427</span>&#160;        <span class=\"comment\">## shading parameters as necessary.</span></div>\n\
<div class=\"line\"><a name=\"l05428\"></a><span class=\"lineno\"> 5428</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05429\"></a><span class=\"lineno\"> 5429</span>&#160;        selectItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05430\"></a><span class=\"lineno\"> 5430</span>&#160;        index = list.indexOf(self.sSelectedWireframeItemName)</div>\n\
<div class=\"line\"><a name=\"l05431\"></a><span class=\"lineno\"> 5431</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05432\"></a><span class=\"lineno\"> 5432</span>&#160;            selectItem = omr.MRenderItem.create(self.sSelectedWireframeItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l05433\"></a><span class=\"lineno\"> 5433</span>&#160;            selectItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05434\"></a><span class=\"lineno\"> 5434</span>&#160;            <span class=\"comment\">## This is the same as setting the argument raiseAboveShaded = True,/</span></div>\n\
<div class=\"line\"><a name=\"l05435\"></a><span class=\"lineno\"> 5435</span>&#160;            <span class=\"comment\">## since it sets the priority value to be the same. This line is just</span></div>\n\
<div class=\"line\"><a name=\"l05436\"></a><span class=\"lineno\"> 5436</span>&#160;            <span class=\"comment\">## an example of another way to do the same thing after creation of</span></div>\n\
<div class=\"line\"><a name=\"l05437\"></a><span class=\"lineno\"> 5437</span>&#160;            <span class=\"comment\">## the render item.</span></div>\n\
<div class=\"line\"><a name=\"l05438\"></a><span class=\"lineno\"> 5438</span>&#160;            selectItem.setDepthPriority( omr.MRenderItem.sActiveWireDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05439\"></a><span class=\"lineno\"> 5439</span>&#160;            list.append(selectItem)</div>\n\
<div class=\"line\"><a name=\"l05440\"></a><span class=\"lineno\"> 5440</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05441\"></a><span class=\"lineno\"> 5441</span>&#160;            <span class=\"comment\">## For active wireframe we will use a shader which allows us to draw thick lines</span></div>\n\
<div class=\"line\"><a name=\"l05442\"></a><span class=\"lineno\"> 5442</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05443\"></a><span class=\"lineno\"> 5443</span>&#160;            drawThick = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l05444\"></a><span class=\"lineno\"> 5444</span>&#160;            shaderId = omr.MShaderManager.k3dSolidShader</div>\n\
<div class=\"line\"><a name=\"l05445\"></a><span class=\"lineno\"> 5445</span>&#160;            <span class=\"keywordflow\">if</span> drawThick:</div>\n\
<div class=\"line\"><a name=\"l05446\"></a><span class=\"lineno\"> 5446</span>&#160;                shaderId = omr.MShaderManager.k3dThickLineShader</div>\n\
<div class=\"line\"><a name=\"l05447\"></a><span class=\"lineno\"> 5447</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05448\"></a><span class=\"lineno\"> 5448</span>&#160;            shader = shaderMgr.getStockShader(shaderId)</div>\n\
<div class=\"line\"><a name=\"l05449\"></a><span class=\"lineno\"> 5449</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05450\"></a><span class=\"lineno\"> 5450</span>&#160;                <span class=\"comment\">## assign shader</span></div>\n\
<div class=\"line\"><a name=\"l05451\"></a><span class=\"lineno\"> 5451</span>&#160;                selectItem.setShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05452\"></a><span class=\"lineno\"> 5452</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05453\"></a><span class=\"lineno\"> 5453</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05454\"></a><span class=\"lineno\"> 5454</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05455\"></a><span class=\"lineno\"> 5455</span>&#160;            selectItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05456\"></a><span class=\"lineno\"> 5456</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05457\"></a><span class=\"lineno\"> 5457</span>&#160;        shader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05458\"></a><span class=\"lineno\"> 5458</span>&#160;        <span class=\"keywordflow\">if</span> selectItem:</div>\n\
<div class=\"line\"><a name=\"l05459\"></a><span class=\"lineno\"> 5459</span>&#160;            shader = selectItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05460\"></a><span class=\"lineno\"> 5460</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05461\"></a><span class=\"lineno\"> 5461</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05462\"></a><span class=\"lineno\"> 5462</span>&#160;        wireColor = omr.MGeometryUtilities.wireframeColor(path)</div>\n\
<div class=\"line\"><a name=\"l05463\"></a><span class=\"lineno\"> 5463</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05464\"></a><span class=\"lineno\"> 5464</span>&#160;        <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kLead:</div>\n\
<div class=\"line\"><a name=\"l05465\"></a><span class=\"lineno\"> 5465</span>&#160;            theColor = [ 0.0, 0.8, 0.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05466\"></a><span class=\"lineno\"> 5466</span>&#160;            self.setSolidColor( shader, wireColor, theColor)</div>\n\
<div class=\"line\"><a name=\"l05467\"></a><span class=\"lineno\"> 5467</span>&#160;            selectItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05468\"></a><span class=\"lineno\"> 5468</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05469\"></a><span class=\"lineno\"> 5469</span>&#160;        <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kActive:</div>\n\
<div class=\"line\"><a name=\"l05470\"></a><span class=\"lineno\"> 5470</span>&#160;            theColor = [ 1.0, 1.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05471\"></a><span class=\"lineno\"> 5471</span>&#160;            self.setSolidColor( shader, wireColor, theColor)</div>\n\
<div class=\"line\"><a name=\"l05472\"></a><span class=\"lineno\"> 5472</span>&#160;            selectItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05473\"></a><span class=\"lineno\"> 5473</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05474\"></a><span class=\"lineno\"> 5474</span>&#160;        <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kHilite <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kActiveComponent:</div>\n\
<div class=\"line\"><a name=\"l05475\"></a><span class=\"lineno\"> 5475</span>&#160;            theColor = [ 0.0, 0.5, 0.7, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05476\"></a><span class=\"lineno\"> 5476</span>&#160;            self.setSolidColor( shader, wireColor, theColor)</div>\n\
<div class=\"line\"><a name=\"l05477\"></a><span class=\"lineno\"> 5477</span>&#160;            selectItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05478\"></a><span class=\"lineno\"> 5478</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05479\"></a><span class=\"lineno\"> 5479</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05480\"></a><span class=\"lineno\"> 5480</span>&#160;            selectItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05481\"></a><span class=\"lineno\"> 5481</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05482\"></a><span class=\"lineno\"> 5482</span>&#160;        <span class=\"comment\">## Add custom user data to selection item</span></div>\n\
<div class=\"line\"><a name=\"l05483\"></a><span class=\"lineno\"> 5483</span>&#160;        myCustomData = selectItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l05484\"></a><span class=\"lineno\"> 5484</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> myCustomData:</div>\n\
<div class=\"line\"><a name=\"l05485\"></a><span class=\"lineno\"> 5485</span>&#160;            <span class=\"comment\">## create the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05486\"></a><span class=\"lineno\"> 5486</span>&#160;            myCustomData = apiMeshUserData()</div>\n\
<div class=\"line\"><a name=\"l05487\"></a><span class=\"lineno\"> 5487</span>&#160;            myCustomData.fMessage = <span class=\"stringliteral\">&quot;I&#39;m custom data!&quot;</span></div>\n\
<div class=\"line\"><a name=\"l05488\"></a><span class=\"lineno\"> 5488</span>&#160;            selectItem.setCustomData(myCustomData)</div>\n\
<div class=\"line\"><a name=\"l05489\"></a><span class=\"lineno\"> 5489</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05490\"></a><span class=\"lineno\"> 5490</span>&#160;            <span class=\"comment\">## modify the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05491\"></a><span class=\"lineno\"> 5491</span>&#160;            myCustomData.fNumModifications += 1</div>\n\
<div class=\"line\"><a name=\"l05492\"></a><span class=\"lineno\"> 5492</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05493\"></a><span class=\"lineno\"> 5493</span>&#160;    <span class=\"keyword\">def </span>updateWireframeModeFaceCenterItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05494\"></a><span class=\"lineno\"> 5494</span>&#160;        <span class=\"comment\">## Add render item for face centers in wireframe mode, always show face centers</span></div>\n\
<div class=\"line\"><a name=\"l05495\"></a><span class=\"lineno\"> 5495</span>&#160;        <span class=\"comment\">## in wireframe mode except it is drawn as template.</span></div>\n\
<div class=\"line\"><a name=\"l05496\"></a><span class=\"lineno\"> 5496</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05497\"></a><span class=\"lineno\"> 5497</span>&#160;        wireframeModeFaceCenterItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05498\"></a><span class=\"lineno\"> 5498</span>&#160;        index = list.indexOf(self.sWireframeModeFaceCenterItemName)</div>\n\
<div class=\"line\"><a name=\"l05499\"></a><span class=\"lineno\"> 5499</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05500\"></a><span class=\"lineno\"> 5500</span>&#160;            wireframeModeFaceCenterItem = omr.MRenderItem.create(self.sWireframeModeFaceCenterItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05501\"></a><span class=\"lineno\"> 5501</span>&#160;            wireframeModeFaceCenterItem.setDrawMode(omr.MGeometry.kWireframe)</div>\n\
<div class=\"line\"><a name=\"l05502\"></a><span class=\"lineno\"> 5502</span>&#160;            wireframeModeFaceCenterItem.setDepthPriority( omr.MRenderItem.sActiveWireDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05503\"></a><span class=\"lineno\"> 5503</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05504\"></a><span class=\"lineno\"> 5504</span>&#160;            list.append(wireframeModeFaceCenterItem)</div>\n\
<div class=\"line\"><a name=\"l05505\"></a><span class=\"lineno\"> 5505</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05506\"></a><span class=\"lineno\"> 5506</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dFatPointShader )</div>\n\
<div class=\"line\"><a name=\"l05507\"></a><span class=\"lineno\"> 5507</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05508\"></a><span class=\"lineno\"> 5508</span>&#160;                <span class=\"comment\">## Set the point size parameter. Make it slightly larger for face centers</span></div>\n\
<div class=\"line\"><a name=\"l05509\"></a><span class=\"lineno\"> 5509</span>&#160;                pointSize = 5.0</div>\n\
<div class=\"line\"><a name=\"l05510\"></a><span class=\"lineno\"> 5510</span>&#160;                self.setSolidPointSize( shader, pointSize )</div>\n\
<div class=\"line\"><a name=\"l05511\"></a><span class=\"lineno\"> 5511</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05512\"></a><span class=\"lineno\"> 5512</span>&#160;                wireframeModeFaceCenterItem.setShader(shader, self.sFaceCenterStreamName )</div>\n\
<div class=\"line\"><a name=\"l05513\"></a><span class=\"lineno\"> 5513</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05514\"></a><span class=\"lineno\"> 5514</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05515\"></a><span class=\"lineno\"> 5515</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05516\"></a><span class=\"lineno\"> 5516</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05517\"></a><span class=\"lineno\"> 5517</span>&#160;                wireframeModeFaceCenterItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05518\"></a><span class=\"lineno\"> 5518</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05519\"></a><span class=\"lineno\"> 5519</span>&#160;        <span class=\"keywordflow\">if</span> wireframeModeFaceCenterItem:</div>\n\
<div class=\"line\"><a name=\"l05520\"></a><span class=\"lineno\"> 5520</span>&#160;            shader = wireframeModeFaceCenterItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05521\"></a><span class=\"lineno\"> 5521</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05522\"></a><span class=\"lineno\"> 5522</span>&#160;                <span class=\"comment\">## Set face center color in wireframe mode</span></div>\n\
<div class=\"line\"><a name=\"l05523\"></a><span class=\"lineno\"> 5523</span>&#160;                theColor = [ 0.0, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05524\"></a><span class=\"lineno\"> 5524</span>&#160;                self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05525\"></a><span class=\"lineno\"> 5525</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05526\"></a><span class=\"lineno\"> 5526</span>&#160;            <span class=\"comment\">## disable the face center item when template</span></div>\n\
<div class=\"line\"><a name=\"l05527\"></a><span class=\"lineno\"> 5527</span>&#160;            isTemplate = path.isTemplated()</div>\n\
<div class=\"line\"><a name=\"l05528\"></a><span class=\"lineno\"> 5528</span>&#160;            wireframeModeFaceCenterItem.enable( <span class=\"keywordflow\">not</span> isTemplate )</div>\n\
<div class=\"line\"><a name=\"l05529\"></a><span class=\"lineno\"> 5529</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05530\"></a><span class=\"lineno\"> 5530</span>&#160;    <span class=\"keyword\">def </span>updateShadedModeFaceCenterItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05531\"></a><span class=\"lineno\"> 5531</span>&#160;        <span class=\"comment\">##Add render item for face centers in shaded mode. If the geometry is not selected,</span></div>\n\
<div class=\"line\"><a name=\"l05532\"></a><span class=\"lineno\"> 5532</span>&#160;        <span class=\"comment\">## face centers are not drawn.</span></div>\n\
<div class=\"line\"><a name=\"l05533\"></a><span class=\"lineno\"> 5533</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05534\"></a><span class=\"lineno\"> 5534</span>&#160;        shadedModeFaceCenterItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05535\"></a><span class=\"lineno\"> 5535</span>&#160;        index = list.indexOf(self.sShadedModeFaceCenterItemName)</div>\n\
<div class=\"line\"><a name=\"l05536\"></a><span class=\"lineno\"> 5536</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05537\"></a><span class=\"lineno\"> 5537</span>&#160;            shadedModeFaceCenterItem = omr.MRenderItem.create( self.sShadedModeFaceCenterItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05538\"></a><span class=\"lineno\"> 5538</span>&#160;            shadedModeFaceCenterItem.setDrawMode(omr.MGeometry.kShaded | omr.MGeometry.kTextured)</div>\n\
<div class=\"line\"><a name=\"l05539\"></a><span class=\"lineno\"> 5539</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05540\"></a><span class=\"lineno\"> 5540</span>&#160;            shadedModeFaceCenterItem.setDepthPriority(omr.MRenderItem.sActivePointDepthPriority)</div>\n\
<div class=\"line\"><a name=\"l05541\"></a><span class=\"lineno\"> 5541</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05542\"></a><span class=\"lineno\"> 5542</span>&#160;            list.append(shadedModeFaceCenterItem)</div>\n\
<div class=\"line\"><a name=\"l05543\"></a><span class=\"lineno\"> 5543</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05544\"></a><span class=\"lineno\"> 5544</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dFatPointShader )</div>\n\
<div class=\"line\"><a name=\"l05545\"></a><span class=\"lineno\"> 5545</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05546\"></a><span class=\"lineno\"> 5546</span>&#160;                <span class=\"comment\">## Set the point size parameter. Make it slightly larger for face centers</span></div>\n\
<div class=\"line\"><a name=\"l05547\"></a><span class=\"lineno\"> 5547</span>&#160;                pointSize = 5.0</div>\n\
<div class=\"line\"><a name=\"l05548\"></a><span class=\"lineno\"> 5548</span>&#160;                self.setSolidPointSize( shader, pointSize )</div>\n\
<div class=\"line\"><a name=\"l05549\"></a><span class=\"lineno\"> 5549</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05550\"></a><span class=\"lineno\"> 5550</span>&#160;                shadedModeFaceCenterItem.setShader(shader, self.sFaceCenterStreamName )</div>\n\
<div class=\"line\"><a name=\"l05551\"></a><span class=\"lineno\"> 5551</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05552\"></a><span class=\"lineno\"> 5552</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05553\"></a><span class=\"lineno\"> 5553</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05554\"></a><span class=\"lineno\"> 5554</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05555\"></a><span class=\"lineno\"> 5555</span>&#160;            shadedModeFaceCenterItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05556\"></a><span class=\"lineno\"> 5556</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05557\"></a><span class=\"lineno\"> 5557</span>&#160;        <span class=\"keywordflow\">if</span> shadedModeFaceCenterItem:</div>\n\
<div class=\"line\"><a name=\"l05558\"></a><span class=\"lineno\"> 5558</span>&#160;            shadedModeFaceCenterItem.setExcludedFromPostEffects(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05559\"></a><span class=\"lineno\"> 5559</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05560\"></a><span class=\"lineno\"> 5560</span>&#160;            shader = shadedModeFaceCenterItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05561\"></a><span class=\"lineno\"> 5561</span>&#160;            wireColor = omr.MGeometryUtilities.wireframeColor(path)</div>\n\
<div class=\"line\"><a name=\"l05562\"></a><span class=\"lineno\"> 5562</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05563\"></a><span class=\"lineno\"> 5563</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05564\"></a><span class=\"lineno\"> 5564</span>&#160;                <span class=\"comment\">## Set face center color in shaded mode</span></div>\n\
<div class=\"line\"><a name=\"l05565\"></a><span class=\"lineno\"> 5565</span>&#160;                self.setSolidColor( shader, wireColor )</div>\n\
<div class=\"line\"><a name=\"l05566\"></a><span class=\"lineno\"> 5566</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05567\"></a><span class=\"lineno\"> 5567</span>&#160;            displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05568\"></a><span class=\"lineno\"> 5568</span>&#160;            <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kActive <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kLead <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kActiveComponent <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kLive <span class=\"keywordflow\">or</span> displayStatus == omr.MGeometryUtilities.kHilite:</div>\n\
<div class=\"line\"><a name=\"l05569\"></a><span class=\"lineno\"> 5569</span>&#160;                shadedModeFaceCenterItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05570\"></a><span class=\"lineno\"> 5570</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05571\"></a><span class=\"lineno\"> 5571</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05572\"></a><span class=\"lineno\"> 5572</span>&#160;                shadedModeFaceCenterItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05573\"></a><span class=\"lineno\"> 5573</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05574\"></a><span class=\"lineno\"> 5574</span>&#160;    <span class=\"keyword\">def </span>updateDormantVerticesItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05575\"></a><span class=\"lineno\"> 5575</span>&#160;        <span class=\"comment\">## Create a render item for dormant vertices if it does not exist. Updating</span></div>\n\
<div class=\"line\"><a name=\"l05576\"></a><span class=\"lineno\"> 5576</span>&#160;        <span class=\"comment\">## shading parameters as necessary.</span></div>\n\
<div class=\"line\"><a name=\"l05577\"></a><span class=\"lineno\"> 5577</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05578\"></a><span class=\"lineno\"> 5578</span>&#160;        vertexItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05579\"></a><span class=\"lineno\"> 5579</span>&#160;        index = list.indexOf(self.sVertexItemName)</div>\n\
<div class=\"line\"><a name=\"l05580\"></a><span class=\"lineno\"> 5580</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05581\"></a><span class=\"lineno\"> 5581</span>&#160;            vertexItem = omr.MRenderItem.create(self.sVertexItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05582\"></a><span class=\"lineno\"> 5582</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05583\"></a><span class=\"lineno\"> 5583</span>&#160;            <span class=\"comment\">## Set draw mode to kAll : the item will be visible in the viewport and also during viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l05584\"></a><span class=\"lineno\"> 5584</span>&#160;            vertexItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05585\"></a><span class=\"lineno\"> 5585</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05586\"></a><span class=\"lineno\"> 5586</span>&#160;            <span class=\"comment\">## Set the selection mask to kSelectMeshVerts : we want the render item to be used for Vertex Components selection</span></div>\n\
<div class=\"line\"><a name=\"l05587\"></a><span class=\"lineno\"> 5587</span>&#160;            mask = om.MSelectionMask(om.MSelectionMask.kSelectMeshVerts)</div>\n\
<div class=\"line\"><a name=\"l05588\"></a><span class=\"lineno\"> 5588</span>&#160;            mask.addMask(om.MSelectionMask.kSelectPointsForGravity)</div>\n\
<div class=\"line\"><a name=\"l05589\"></a><span class=\"lineno\"> 5589</span>&#160;            vertexItem.setSelectionMask( mask )</div>\n\
<div class=\"line\"><a name=\"l05590\"></a><span class=\"lineno\"> 5590</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05591\"></a><span class=\"lineno\"> 5591</span>&#160;            <span class=\"comment\">## Set depth priority higher than wireframe and shaded render items,</span></div>\n\
<div class=\"line\"><a name=\"l05592\"></a><span class=\"lineno\"> 5592</span>&#160;            <span class=\"comment\">## but lower than active points.</span></div>\n\
<div class=\"line\"><a name=\"l05593\"></a><span class=\"lineno\"> 5593</span>&#160;            <span class=\"comment\">## Raising higher than wireframe will make them not seem embedded into the surface</span></div>\n\
<div class=\"line\"><a name=\"l05594\"></a><span class=\"lineno\"> 5594</span>&#160;            vertexItem.setDepthPriority( omr.MRenderItem.sDormantPointDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05595\"></a><span class=\"lineno\"> 5595</span>&#160;            list.append(vertexItem)</div>\n\
<div class=\"line\"><a name=\"l05596\"></a><span class=\"lineno\"> 5596</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05597\"></a><span class=\"lineno\"> 5597</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dFatPointShader )</div>\n\
<div class=\"line\"><a name=\"l05598\"></a><span class=\"lineno\"> 5598</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05599\"></a><span class=\"lineno\"> 5599</span>&#160;                <span class=\"comment\">## Set the point size parameter</span></div>\n\
<div class=\"line\"><a name=\"l05600\"></a><span class=\"lineno\"> 5600</span>&#160;                pointSize = 3.0</div>\n\
<div class=\"line\"><a name=\"l05601\"></a><span class=\"lineno\"> 5601</span>&#160;                self.setSolidPointSize( shader, pointSize )</div>\n\
<div class=\"line\"><a name=\"l05602\"></a><span class=\"lineno\"> 5602</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05603\"></a><span class=\"lineno\"> 5603</span>&#160;                <span class=\"comment\">## assign shader</span></div>\n\
<div class=\"line\"><a name=\"l05604\"></a><span class=\"lineno\"> 5604</span>&#160;                vertexItem.setShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05605\"></a><span class=\"lineno\"> 5605</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05606\"></a><span class=\"lineno\"> 5606</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05607\"></a><span class=\"lineno\"> 5607</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05608\"></a><span class=\"lineno\"> 5608</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05609\"></a><span class=\"lineno\"> 5609</span>&#160;            vertexItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05610\"></a><span class=\"lineno\"> 5610</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05611\"></a><span class=\"lineno\"> 5611</span>&#160;        <span class=\"keywordflow\">if</span> vertexItem:</div>\n\
<div class=\"line\"><a name=\"l05612\"></a><span class=\"lineno\"> 5612</span>&#160;            shader = vertexItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05613\"></a><span class=\"lineno\"> 5613</span>&#160;            <span class=\"comment\">## set color</span></div>\n\
<div class=\"line\"><a name=\"l05614\"></a><span class=\"lineno\"> 5614</span>&#160;            theColor = [ 0.0, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05615\"></a><span class=\"lineno\"> 5615</span>&#160;            self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05616\"></a><span class=\"lineno\"> 5616</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05617\"></a><span class=\"lineno\"> 5617</span>&#160;            displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l05618\"></a><span class=\"lineno\"> 5618</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05619\"></a><span class=\"lineno\"> 5619</span>&#160;            <span class=\"comment\">## Generally if the display status is hilite then we</span></div>\n\
<div class=\"line\"><a name=\"l05620\"></a><span class=\"lineno\"> 5620</span>&#160;            <span class=\"comment\">## draw components.</span></div>\n\
<div class=\"line\"><a name=\"l05621\"></a><span class=\"lineno\"> 5621</span>&#160;            <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kHilite <span class=\"keywordflow\">or</span> omr.MPxGeometryOverride.pointSnappingActive():</div>\n\
<div class=\"line\"><a name=\"l05622\"></a><span class=\"lineno\"> 5622</span>&#160;                <span class=\"comment\">## In case the object is templated</span></div>\n\
<div class=\"line\"><a name=\"l05623\"></a><span class=\"lineno\"> 5623</span>&#160;                <span class=\"comment\">## we will hide the components to be consistent</span></div>\n\
<div class=\"line\"><a name=\"l05624\"></a><span class=\"lineno\"> 5624</span>&#160;                <span class=\"comment\">## with how internal objects behave.</span></div>\n\
<div class=\"line\"><a name=\"l05625\"></a><span class=\"lineno\"> 5625</span>&#160;                <span class=\"keywordflow\">if</span> path.isTemplated():</div>\n\
<div class=\"line\"><a name=\"l05626\"></a><span class=\"lineno\"> 5626</span>&#160;                    vertexItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05627\"></a><span class=\"lineno\"> 5627</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05628\"></a><span class=\"lineno\"> 5628</span>&#160;                    vertexItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05629\"></a><span class=\"lineno\"> 5629</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05630\"></a><span class=\"lineno\"> 5630</span>&#160;                vertexItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05631\"></a><span class=\"lineno\"> 5631</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05632\"></a><span class=\"lineno\"> 5632</span>&#160;            mySelectionData = vertexItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l05633\"></a><span class=\"lineno\"> 5633</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(mySelectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l05634\"></a><span class=\"lineno\"> 5634</span>&#160;                <span class=\"comment\">## create the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05635\"></a><span class=\"lineno\"> 5635</span>&#160;                mySelectionData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l05636\"></a><span class=\"lineno\"> 5636</span>&#160;                vertexItem.setCustomData(mySelectionData)</div>\n\
<div class=\"line\"><a name=\"l05637\"></a><span class=\"lineno\"> 5637</span>&#160;            <span class=\"comment\">## update the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05638\"></a><span class=\"lineno\"> 5638</span>&#160;            mySelectionData.fMeshGeom = self.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l05639\"></a><span class=\"lineno\"> 5639</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05640\"></a><span class=\"lineno\"> 5640</span>&#160;    <span class=\"keyword\">def </span>updateActiveVerticesItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05641\"></a><span class=\"lineno\"> 5641</span>&#160;        <span class=\"comment\">## Create a render item for active vertices if it does not exist. Updating</span></div>\n\
<div class=\"line\"><a name=\"l05642\"></a><span class=\"lineno\"> 5642</span>&#160;        <span class=\"comment\">## shading parameters as necessary.</span></div>\n\
<div class=\"line\"><a name=\"l05643\"></a><span class=\"lineno\"> 5643</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05644\"></a><span class=\"lineno\"> 5644</span>&#160;        activeItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05645\"></a><span class=\"lineno\"> 5645</span>&#160;        index = list.indexOf(self.sActiveVertexItemName)</div>\n\
<div class=\"line\"><a name=\"l05646\"></a><span class=\"lineno\"> 5646</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05647\"></a><span class=\"lineno\"> 5647</span>&#160;            activeItem = omr.MRenderItem.create(self.sActiveVertexItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05648\"></a><span class=\"lineno\"> 5648</span>&#160;            activeItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05649\"></a><span class=\"lineno\"> 5649</span>&#160;            <span class=\"comment\">## Set depth priority to be active point. This should offset it</span></div>\n\
<div class=\"line\"><a name=\"l05650\"></a><span class=\"lineno\"> 5650</span>&#160;            <span class=\"comment\">## to be visible above items with &quot;dormant point&quot; priority.</span></div>\n\
<div class=\"line\"><a name=\"l05651\"></a><span class=\"lineno\"> 5651</span>&#160;            activeItem.setDepthPriority( omr.MRenderItem.sActivePointDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05652\"></a><span class=\"lineno\"> 5652</span>&#160;            list.append(activeItem)</div>\n\
<div class=\"line\"><a name=\"l05653\"></a><span class=\"lineno\"> 5653</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05654\"></a><span class=\"lineno\"> 5654</span>&#160;            shaderId = omr.MShaderManager.k3dFatPointShader</div>\n\
<div class=\"line\"><a name=\"l05655\"></a><span class=\"lineno\"> 5655</span>&#160;            <span class=\"keywordflow\">if</span> self.fDrawActiveVerticesWithRamp:</div>\n\
<div class=\"line\"><a name=\"l05656\"></a><span class=\"lineno\"> 5656</span>&#160;                shaderId = omr.MShaderManager.k3dColorLookupFatPointShader</div>\n\
<div class=\"line\"><a name=\"l05657\"></a><span class=\"lineno\"> 5657</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05658\"></a><span class=\"lineno\"> 5658</span>&#160;            shader = shaderMgr.getStockShader( shaderId )</div>\n\
<div class=\"line\"><a name=\"l05659\"></a><span class=\"lineno\"> 5659</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05660\"></a><span class=\"lineno\"> 5660</span>&#160;                <span class=\"comment\">## Set the point size parameter. Make it slightly larger for active vertices</span></div>\n\
<div class=\"line\"><a name=\"l05661\"></a><span class=\"lineno\"> 5661</span>&#160;                pointSize = 5.0</div>\n\
<div class=\"line\"><a name=\"l05662\"></a><span class=\"lineno\"> 5662</span>&#160;                self.setSolidPointSize( shader, pointSize )</div>\n\
<div class=\"line\"><a name=\"l05663\"></a><span class=\"lineno\"> 5663</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05664\"></a><span class=\"lineno\"> 5664</span>&#160;                <span class=\"comment\">## 1D Ramp color lookup option</span></div>\n\
<div class=\"line\"><a name=\"l05665\"></a><span class=\"lineno\"> 5665</span>&#160;                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05666\"></a><span class=\"lineno\"> 5666</span>&#160;                <span class=\"keywordflow\">if</span> self.fDrawActiveVerticesWithRamp:</div>\n\
<div class=\"line\"><a name=\"l05667\"></a><span class=\"lineno\"> 5667</span>&#160;                    textureMgr = omr.MRenderer.getTextureManager()</div>\n\
<div class=\"line\"><a name=\"l05668\"></a><span class=\"lineno\"> 5668</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05669\"></a><span class=\"lineno\"> 5669</span>&#160;                    <span class=\"comment\">## Assign dummy ramp lookup</span></div>\n\
<div class=\"line\"><a name=\"l05670\"></a><span class=\"lineno\"> 5670</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fColorRemapTexture:</div>\n\
<div class=\"line\"><a name=\"l05671\"></a><span class=\"lineno\"> 5671</span>&#160;                        <span class=\"comment\">## Sample 3 colour ramp</span></div>\n\
<div class=\"line\"><a name=\"l05672\"></a><span class=\"lineno\"> 5672</span>&#160;                        colorArray = [  1.0, 0.0, 0.0, 1.0,</div>\n\
<div class=\"line\"><a name=\"l05673\"></a><span class=\"lineno\"> 5673</span>&#160;                                        0.0, 1.0, 0.0, 1.0,</div>\n\
<div class=\"line\"><a name=\"l05674\"></a><span class=\"lineno\"> 5674</span>&#160;                                        0.0, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05675\"></a><span class=\"lineno\"> 5675</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05676\"></a><span class=\"lineno\"> 5676</span>&#160;                        arrayLen = 3</div>\n\
<div class=\"line\"><a name=\"l05677\"></a><span class=\"lineno\"> 5677</span>&#160;                        textureDesc = omr.MTextureDescription()</div>\n\
<div class=\"line\"><a name=\"l05678\"></a><span class=\"lineno\"> 5678</span>&#160;                        textureDesc.setToDefault2DTexture()</div>\n\
<div class=\"line\"><a name=\"l05679\"></a><span class=\"lineno\"> 5679</span>&#160;                        textureDesc.fWidth = arrayLen</div>\n\
<div class=\"line\"><a name=\"l05680\"></a><span class=\"lineno\"> 5680</span>&#160;                        textureDesc.fHeight = 1</div>\n\
<div class=\"line\"><a name=\"l05681\"></a><span class=\"lineno\"> 5681</span>&#160;                        textureDesc.fDepth = 1</div>\n\
<div class=\"line\"><a name=\"l05682\"></a><span class=\"lineno\"> 5682</span>&#160;                        textureDesc.fBytesPerSlice = textureDesc.fBytesPerRow = 24*arrayLen</div>\n\
<div class=\"line\"><a name=\"l05683\"></a><span class=\"lineno\"> 5683</span>&#160;                        textureDesc.fMipmaps = 1</div>\n\
<div class=\"line\"><a name=\"l05684\"></a><span class=\"lineno\"> 5684</span>&#160;                        textureDesc.fArraySlices = 1</div>\n\
<div class=\"line\"><a name=\"l05685\"></a><span class=\"lineno\"> 5685</span>&#160;                        textureDesc.fTextureType = omr.MRenderer.kImage1D</div>\n\
<div class=\"line\"><a name=\"l05686\"></a><span class=\"lineno\"> 5686</span>&#160;                        textureDesc.fFormat = omr.MRenderer.kR32G32B32A32_FLOAT</div>\n\
<div class=\"line\"><a name=\"l05687\"></a><span class=\"lineno\"> 5687</span>&#160;                        self.fColorRemapTexture = textureMgr.acquireTexture(<span class=\"stringliteral\">&quot;&quot;</span>, textureDesc, colorArray, <span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l05688\"></a><span class=\"lineno\"> 5688</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05689\"></a><span class=\"lineno\"> 5689</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> self.fLinearSampler:</div>\n\
<div class=\"line\"><a name=\"l05690\"></a><span class=\"lineno\"> 5690</span>&#160;                        samplerDesc = omr.MSamplerStateDesc()</div>\n\
<div class=\"line\"><a name=\"l05691\"></a><span class=\"lineno\"> 5691</span>&#160;                        samplerDesc.addressU = omr.MSamplerState.kTexClamp</div>\n\
<div class=\"line\"><a name=\"l05692\"></a><span class=\"lineno\"> 5692</span>&#160;                        samplerDesc.addressV = omr.MSamplerState.kTexClamp</div>\n\
<div class=\"line\"><a name=\"l05693\"></a><span class=\"lineno\"> 5693</span>&#160;                        samplerDesc.addressW = omr.MSamplerState.kTexClamp</div>\n\
<div class=\"line\"><a name=\"l05694\"></a><span class=\"lineno\"> 5694</span>&#160;                        samplerDesc.filter = omr.MSamplerState.kMinMagMipLinear</div>\n\
<div class=\"line\"><a name=\"l05695\"></a><span class=\"lineno\"> 5695</span>&#160;                        fLinearSampler = omr.MStateManager.acquireSamplerState(samplerDesc)</div>\n\
<div class=\"line\"><a name=\"l05696\"></a><span class=\"lineno\"> 5696</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05697\"></a><span class=\"lineno\"> 5697</span>&#160;                    <span class=\"keywordflow\">if</span> self.fColorRemapTexture <span class=\"keywordflow\">and</span> self.fLinearSampler:</div>\n\
<div class=\"line\"><a name=\"l05698\"></a><span class=\"lineno\"> 5698</span>&#160;                        <span class=\"comment\">## Set up the ramp lookup</span></div>\n\
<div class=\"line\"><a name=\"l05699\"></a><span class=\"lineno\"> 5699</span>&#160;                        shader.setParameter(<span class=\"stringliteral\">&quot;map&quot;</span>, self.fColorRemapTexture)</div>\n\
<div class=\"line\"><a name=\"l05700\"></a><span class=\"lineno\"> 5700</span>&#160;                        shader.setParameter(<span class=\"stringliteral\">&quot;samp&quot;</span>, self.fLinearSampler)</div>\n\
<div class=\"line\"><a name=\"l05701\"></a><span class=\"lineno\"> 5701</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05702\"></a><span class=\"lineno\"> 5702</span>&#160;                        <span class=\"comment\">## No remapping. The initial data created in the xrange 0...1</span></div>\n\
<div class=\"line\"><a name=\"l05703\"></a><span class=\"lineno\"> 5703</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05704\"></a><span class=\"lineno\"> 5704</span>&#160;                        rampValueRange = om.MFloatVector(0.0, 1.0)</div>\n\
<div class=\"line\"><a name=\"l05705\"></a><span class=\"lineno\"> 5705</span>&#160;                        shader.setParameter(<span class=\"stringliteral\">&quot;UVRange&quot;</span>, rampValueRange)</div>\n\
<div class=\"line\"><a name=\"l05706\"></a><span class=\"lineno\"> 5706</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05707\"></a><span class=\"lineno\"> 5707</span>&#160;                <span class=\"comment\">## Assign shader. Use a named stream if we want to supply a different</span></div>\n\
<div class=\"line\"><a name=\"l05708\"></a><span class=\"lineno\"> 5708</span>&#160;                <span class=\"comment\">## set of &quot;shared&quot; vertices for drawing active vertices</span></div>\n\
<div class=\"line\"><a name=\"l05709\"></a><span class=\"lineno\"> 5709</span>&#160;                <span class=\"keywordflow\">if</span> self.fDrawSharedActiveVertices:</div>\n\
<div class=\"line\"><a name=\"l05710\"></a><span class=\"lineno\"> 5710</span>&#160;                    activeItem.setShader(shader, self.sActiveVertexStreamName)</div>\n\
<div class=\"line\"><a name=\"l05711\"></a><span class=\"lineno\"> 5711</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05712\"></a><span class=\"lineno\"> 5712</span>&#160;                    activeItem.setShader(shader, <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l05713\"></a><span class=\"lineno\"> 5713</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05714\"></a><span class=\"lineno\"> 5714</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05715\"></a><span class=\"lineno\"> 5715</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05716\"></a><span class=\"lineno\"> 5716</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05717\"></a><span class=\"lineno\"> 5717</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05718\"></a><span class=\"lineno\"> 5718</span>&#160;            activeItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05719\"></a><span class=\"lineno\"> 5719</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05720\"></a><span class=\"lineno\"> 5720</span>&#160;        <span class=\"keywordflow\">if</span> activeItem:</div>\n\
<div class=\"line\"><a name=\"l05721\"></a><span class=\"lineno\"> 5721</span>&#160;            shader = activeItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05722\"></a><span class=\"lineno\"> 5722</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05723\"></a><span class=\"lineno\"> 5723</span>&#160;                <span class=\"comment\">## Set active color</span></div>\n\
<div class=\"line\"><a name=\"l05724\"></a><span class=\"lineno\"> 5724</span>&#160;                theColor = [ 1.0, 1.0, 0.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05725\"></a><span class=\"lineno\"> 5725</span>&#160;                self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05726\"></a><span class=\"lineno\"> 5726</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05727\"></a><span class=\"lineno\"> 5727</span>&#160;            enable = (bool(self.fActiveVerticesSet) <span class=\"keywordflow\">and</span> self.enableActiveComponentDisplay(path))</div>\n\
<div class=\"line\"><a name=\"l05728\"></a><span class=\"lineno\"> 5728</span>&#160;            activeItem.enable( enable )</div>\n\
<div class=\"line\"><a name=\"l05729\"></a><span class=\"lineno\"> 5729</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05730\"></a><span class=\"lineno\"> 5730</span>&#160;    <span class=\"keyword\">def </span>updateVertexNumericItems(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05731\"></a><span class=\"lineno\"> 5731</span>&#160;        <span class=\"comment\">## Create render items for numeric display, and update shaders as necessary</span></div>\n\
<div class=\"line\"><a name=\"l05732\"></a><span class=\"lineno\"> 5732</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05733\"></a><span class=\"lineno\"> 5733</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05734\"></a><span class=\"lineno\"> 5734</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05735\"></a><span class=\"lineno\"> 5735</span>&#160;        <span class=\"comment\">## Vertex id item</span></div>\n\
<div class=\"line\"><a name=\"l05736\"></a><span class=\"lineno\"> 5736</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05737\"></a><span class=\"lineno\"> 5737</span>&#160;        vertexItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05738\"></a><span class=\"lineno\"> 5738</span>&#160;        index = list.indexOf(self.sVertexIdItemName)</div>\n\
<div class=\"line\"><a name=\"l05739\"></a><span class=\"lineno\"> 5739</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05740\"></a><span class=\"lineno\"> 5740</span>&#160;            vertexItem = omr.MRenderItem.create( self.sVertexIdItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05741\"></a><span class=\"lineno\"> 5741</span>&#160;            vertexItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05742\"></a><span class=\"lineno\"> 5742</span>&#160;            vertexItem.setDepthPriority( omr.MRenderItem.sDormantPointDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05743\"></a><span class=\"lineno\"> 5743</span>&#160;            list.append(vertexItem)</div>\n\
<div class=\"line\"><a name=\"l05744\"></a><span class=\"lineno\"> 5744</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05745\"></a><span class=\"lineno\"> 5745</span>&#160;            <span class=\"comment\">## Use single integer numeric shader</span></div>\n\
<div class=\"line\"><a name=\"l05746\"></a><span class=\"lineno\"> 5746</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dIntegerNumericShader )</div>\n\
<div class=\"line\"><a name=\"l05747\"></a><span class=\"lineno\"> 5747</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05748\"></a><span class=\"lineno\"> 5748</span>&#160;                <span class=\"comment\">## Label the fields so that they can be found later on.</span></div>\n\
<div class=\"line\"><a name=\"l05749\"></a><span class=\"lineno\"> 5749</span>&#160;                vertexItem.setShader(shader, self.sVertexIdItemName)</div>\n\
<div class=\"line\"><a name=\"l05750\"></a><span class=\"lineno\"> 5750</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05751\"></a><span class=\"lineno\"> 5751</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05752\"></a><span class=\"lineno\"> 5752</span>&#160;            vertexItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05753\"></a><span class=\"lineno\"> 5753</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05754\"></a><span class=\"lineno\"> 5754</span>&#160;        <span class=\"keywordflow\">if</span> vertexItem:</div>\n\
<div class=\"line\"><a name=\"l05755\"></a><span class=\"lineno\"> 5755</span>&#160;            shader = vertexItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05756\"></a><span class=\"lineno\"> 5756</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05757\"></a><span class=\"lineno\"> 5757</span>&#160;                <span class=\"comment\">## set color</span></div>\n\
<div class=\"line\"><a name=\"l05758\"></a><span class=\"lineno\"> 5758</span>&#160;                theColor = [ 1.0, 1.0, 0.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05759\"></a><span class=\"lineno\"> 5759</span>&#160;                self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05760\"></a><span class=\"lineno\"> 5760</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05761\"></a><span class=\"lineno\"> 5761</span>&#160;            vertexItem.enable(self.fEnableNumericDisplay)</div>\n\
<div class=\"line\"><a name=\"l05762\"></a><span class=\"lineno\"> 5762</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05763\"></a><span class=\"lineno\"> 5763</span>&#160;        <span class=\"comment\">## Vertex position numeric render item</span></div>\n\
<div class=\"line\"><a name=\"l05764\"></a><span class=\"lineno\"> 5764</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05765\"></a><span class=\"lineno\"> 5765</span>&#160;        vertexItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05766\"></a><span class=\"lineno\"> 5766</span>&#160;        index = list.indexOf(self.sVertexPositionItemName)</div>\n\
<div class=\"line\"><a name=\"l05767\"></a><span class=\"lineno\"> 5767</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05768\"></a><span class=\"lineno\"> 5768</span>&#160;            vertexItem = omr.MRenderItem.create( self.sVertexPositionItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kPoints)</div>\n\
<div class=\"line\"><a name=\"l05769\"></a><span class=\"lineno\"> 5769</span>&#160;            vertexItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05770\"></a><span class=\"lineno\"> 5770</span>&#160;            vertexItem.setDepthPriority( omr.MRenderItem.sDormantPointDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05771\"></a><span class=\"lineno\"> 5771</span>&#160;            list.append(vertexItem)</div>\n\
<div class=\"line\"><a name=\"l05772\"></a><span class=\"lineno\"> 5772</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05773\"></a><span class=\"lineno\"> 5773</span>&#160;            <span class=\"comment\">## Use triple float numeric shader</span></div>\n\
<div class=\"line\"><a name=\"l05774\"></a><span class=\"lineno\"> 5774</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dFloat3NumericShader )</div>\n\
<div class=\"line\"><a name=\"l05775\"></a><span class=\"lineno\"> 5775</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05776\"></a><span class=\"lineno\"> 5776</span>&#160;                <span class=\"comment\">##vertexItem.setShader(shader)</span></div>\n\
<div class=\"line\"><a name=\"l05777\"></a><span class=\"lineno\"> 5777</span>&#160;                vertexItem.setShader(shader, self.sVertexPositionItemName)</div>\n\
<div class=\"line\"><a name=\"l05778\"></a><span class=\"lineno\"> 5778</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05779\"></a><span class=\"lineno\"> 5779</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05780\"></a><span class=\"lineno\"> 5780</span>&#160;            vertexItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05781\"></a><span class=\"lineno\"> 5781</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05782\"></a><span class=\"lineno\"> 5782</span>&#160;        <span class=\"keywordflow\">if</span> vertexItem:</div>\n\
<div class=\"line\"><a name=\"l05783\"></a><span class=\"lineno\"> 5783</span>&#160;            shader = vertexItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05784\"></a><span class=\"lineno\"> 5784</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05785\"></a><span class=\"lineno\"> 5785</span>&#160;                <span class=\"comment\">## set color</span></div>\n\
<div class=\"line\"><a name=\"l05786\"></a><span class=\"lineno\"> 5786</span>&#160;                theColor = [ 0.0, 1.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05787\"></a><span class=\"lineno\"> 5787</span>&#160;                self.setSolidColor( shader, theColor)</div>\n\
<div class=\"line\"><a name=\"l05788\"></a><span class=\"lineno\"> 5788</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05789\"></a><span class=\"lineno\"> 5789</span>&#160;            vertexItem.enable(self.fEnableNumericDisplay)</div>\n\
<div class=\"line\"><a name=\"l05790\"></a><span class=\"lineno\"> 5790</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05791\"></a><span class=\"lineno\"> 5791</span>&#160;    <span class=\"keyword\">def </span>updateAffectedComponentItems(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05792\"></a><span class=\"lineno\"> 5792</span>&#160;        <span class=\"comment\">## Example of adding in items to hilite edges and faces. In this</span></div>\n\
<div class=\"line\"><a name=\"l05793\"></a><span class=\"lineno\"> 5793</span>&#160;        <span class=\"comment\">## case these are edges and faces which are connected to vertices</span></div>\n\
<div class=\"line\"><a name=\"l05794\"></a><span class=\"lineno\"> 5794</span>&#160;        <span class=\"comment\">## and we thus call them &quot;affected&quot; components.</span></div>\n\
<div class=\"line\"><a name=\"l05795\"></a><span class=\"lineno\"> 5795</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05796\"></a><span class=\"lineno\"> 5796</span>&#160;        <span class=\"comment\">## Create / update &quot;affected/active&quot; edges component render item.</span></div>\n\
<div class=\"line\"><a name=\"l05797\"></a><span class=\"lineno\"> 5797</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05798\"></a><span class=\"lineno\"> 5798</span>&#160;        componentItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05799\"></a><span class=\"lineno\"> 5799</span>&#160;        index = list.indexOf(self.sAffectedEdgeItemName)</div>\n\
<div class=\"line\"><a name=\"l05800\"></a><span class=\"lineno\"> 5800</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05801\"></a><span class=\"lineno\"> 5801</span>&#160;            componentItem = omr.MRenderItem.create( self.sAffectedEdgeItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l05802\"></a><span class=\"lineno\"> 5802</span>&#160;            componentItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05803\"></a><span class=\"lineno\"> 5803</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05804\"></a><span class=\"lineno\"> 5804</span>&#160;            <span class=\"comment\">## Set depth priority to be active line so that it is above wireframe</span></div>\n\
<div class=\"line\"><a name=\"l05805\"></a><span class=\"lineno\"> 5805</span>&#160;            <span class=\"comment\">## but below dormant and active points.</span></div>\n\
<div class=\"line\"><a name=\"l05806\"></a><span class=\"lineno\"> 5806</span>&#160;            componentItem.setDepthPriority( omr.MRenderItem.sActiveLineDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05807\"></a><span class=\"lineno\"> 5807</span>&#160;            list.append(componentItem)</div>\n\
<div class=\"line\"><a name=\"l05808\"></a><span class=\"lineno\"> 5808</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05809\"></a><span class=\"lineno\"> 5809</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dThickLineShader )</div>\n\
<div class=\"line\"><a name=\"l05810\"></a><span class=\"lineno\"> 5810</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05811\"></a><span class=\"lineno\"> 5811</span>&#160;                <span class=\"comment\">## Set lines a bit thicker to stand out</span></div>\n\
<div class=\"line\"><a name=\"l05812\"></a><span class=\"lineno\"> 5812</span>&#160;                lineSize = 1.0</div>\n\
<div class=\"line\"><a name=\"l05813\"></a><span class=\"lineno\"> 5813</span>&#160;                self.setLineWidth( shader, lineSize )</div>\n\
<div class=\"line\"><a name=\"l05814\"></a><span class=\"lineno\"> 5814</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05815\"></a><span class=\"lineno\"> 5815</span>&#160;                <span class=\"comment\">## Assign shader.</span></div>\n\
<div class=\"line\"><a name=\"l05816\"></a><span class=\"lineno\"> 5816</span>&#160;                componentItem.setShader(shader, <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l05817\"></a><span class=\"lineno\"> 5817</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05818\"></a><span class=\"lineno\"> 5818</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05819\"></a><span class=\"lineno\"> 5819</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05820\"></a><span class=\"lineno\"> 5820</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05821\"></a><span class=\"lineno\"> 5821</span>&#160;            componentItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05822\"></a><span class=\"lineno\"> 5822</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05823\"></a><span class=\"lineno\"> 5823</span>&#160;        <span class=\"keywordflow\">if</span> componentItem:</div>\n\
<div class=\"line\"><a name=\"l05824\"></a><span class=\"lineno\"> 5824</span>&#160;            shader = componentItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05825\"></a><span class=\"lineno\"> 5825</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05826\"></a><span class=\"lineno\"> 5826</span>&#160;                <span class=\"comment\">## Set affected color</span></div>\n\
<div class=\"line\"><a name=\"l05827\"></a><span class=\"lineno\"> 5827</span>&#160;                theColor = [ 1.0, 1.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05828\"></a><span class=\"lineno\"> 5828</span>&#160;                self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05829\"></a><span class=\"lineno\"> 5829</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05830\"></a><span class=\"lineno\"> 5830</span>&#160;            enable = ((bool(self.fActiveVerticesSet) <span class=\"keywordflow\">or</span> bool(self.fActiveEdgesSet)) <span class=\"keywordflow\">and</span> self.enableActiveComponentDisplay(path))</div>\n\
<div class=\"line\"><a name=\"l05831\"></a><span class=\"lineno\"> 5831</span>&#160;            componentItem.enable( enable )</div>\n\
<div class=\"line\"><a name=\"l05832\"></a><span class=\"lineno\"> 5832</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05833\"></a><span class=\"lineno\"> 5833</span>&#160;        <span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l05834\"></a><span class=\"lineno\"> 5834</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05835\"></a><span class=\"lineno\"> 5835</span>&#160;        <span class=\"comment\">## Create / update &quot;affected/active&quot; faces component render item</span></div>\n\
<div class=\"line\"><a name=\"l05836\"></a><span class=\"lineno\"> 5836</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05837\"></a><span class=\"lineno\"> 5837</span>&#160;        componentItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05838\"></a><span class=\"lineno\"> 5838</span>&#160;        index = list.indexOf(self.sAffectedFaceItemName)</div>\n\
<div class=\"line\"><a name=\"l05839\"></a><span class=\"lineno\"> 5839</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05840\"></a><span class=\"lineno\"> 5840</span>&#160;            componentItem = omr.MRenderItem.create( self.sAffectedFaceItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l05841\"></a><span class=\"lineno\"> 5841</span>&#160;            componentItem.setDrawMode(omr.MGeometry.kAll)</div>\n\
<div class=\"line\"><a name=\"l05842\"></a><span class=\"lineno\"> 5842</span>&#160;            <span class=\"comment\">## Set depth priority to be dormant wire so that edge and vertices</span></div>\n\
<div class=\"line\"><a name=\"l05843\"></a><span class=\"lineno\"> 5843</span>&#160;            <span class=\"comment\">## show on top.</span></div>\n\
<div class=\"line\"><a name=\"l05844\"></a><span class=\"lineno\"> 5844</span>&#160;            componentItem.setDepthPriority( omr.MRenderItem.sDormantWireDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05845\"></a><span class=\"lineno\"> 5845</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l05846\"></a><span class=\"lineno\"> 5846</span>&#160;            <span class=\"comment\">## Allow render item copies to be created for isolate selected component</span></div>\n\
<div class=\"line\"><a name=\"l05847\"></a><span class=\"lineno\"> 5847</span>&#160;            componentItem.setAllowIsolateSelectCopy(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05848\"></a><span class=\"lineno\"> 5848</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l05849\"></a><span class=\"lineno\"> 5849</span>&#160;            list.append(componentItem)</div>\n\
<div class=\"line\"><a name=\"l05850\"></a><span class=\"lineno\"> 5850</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05851\"></a><span class=\"lineno\"> 5851</span>&#160;            shader = shaderMgr.getStockShader( omr.MShaderManager.k3dStippleShader )</div>\n\
<div class=\"line\"><a name=\"l05852\"></a><span class=\"lineno\"> 5852</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05853\"></a><span class=\"lineno\"> 5853</span>&#160;                <span class=\"comment\">## Assign shader.</span></div>\n\
<div class=\"line\"><a name=\"l05854\"></a><span class=\"lineno\"> 5854</span>&#160;                componentItem.setShader(shader, <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l05855\"></a><span class=\"lineno\"> 5855</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05856\"></a><span class=\"lineno\"> 5856</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05857\"></a><span class=\"lineno\"> 5857</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05858\"></a><span class=\"lineno\"> 5858</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05859\"></a><span class=\"lineno\"> 5859</span>&#160;            componentItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05860\"></a><span class=\"lineno\"> 5860</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05861\"></a><span class=\"lineno\"> 5861</span>&#160;        <span class=\"keywordflow\">if</span> componentItem:</div>\n\
<div class=\"line\"><a name=\"l05862\"></a><span class=\"lineno\"> 5862</span>&#160;            shader = componentItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l05863\"></a><span class=\"lineno\"> 5863</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05864\"></a><span class=\"lineno\"> 5864</span>&#160;                <span class=\"comment\">## Set affected color</span></div>\n\
<div class=\"line\"><a name=\"l05865\"></a><span class=\"lineno\"> 5865</span>&#160;                theColor = [ 1.0, 1.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05866\"></a><span class=\"lineno\"> 5866</span>&#160;                self.setSolidColor( shader, theColor )</div>\n\
<div class=\"line\"><a name=\"l05867\"></a><span class=\"lineno\"> 5867</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05868\"></a><span class=\"lineno\"> 5868</span>&#160;            enable = ((bool(self.fActiveVerticesSet) <span class=\"keywordflow\">or</span> bool(self.fActiveFacesSet)) <span class=\"keywordflow\">and</span> self.enableActiveComponentDisplay(path))</div>\n\
<div class=\"line\"><a name=\"l05869\"></a><span class=\"lineno\"> 5869</span>&#160;            componentItem.enable( enable )</div>\n\
<div class=\"line\"><a name=\"l05870\"></a><span class=\"lineno\"> 5870</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05871\"></a><span class=\"lineno\"> 5871</span>&#160;    <span class=\"keyword\">def </span>updateSelectionComponentItems(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05872\"></a><span class=\"lineno\"> 5872</span>&#160;        <span class=\"comment\">## Example of adding in items for edges and faces selection.</span></div>\n\
<div class=\"line\"><a name=\"l05873\"></a><span class=\"lineno\"> 5873</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05874\"></a><span class=\"lineno\"> 5874</span>&#160;        <span class=\"comment\">## For the vertex selection, we already have a render item that display all the vertices (sVertexItemName)</span></div>\n\
<div class=\"line\"><a name=\"l05875\"></a><span class=\"lineno\"> 5875</span>&#160;        <span class=\"comment\">## we could use it for the selection as well.</span></div>\n\
<div class=\"line\"><a name=\"l05876\"></a><span class=\"lineno\"> 5876</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l05877\"></a><span class=\"lineno\"> 5877</span>&#160;        <span class=\"comment\">## But we have none that display the complete edges or faces,</span></div>\n\
<div class=\"line\"><a name=\"l05878\"></a><span class=\"lineno\"> 5878</span>&#160;        <span class=\"comment\">## sAffectedEdgeItemName and sAffectedFaceItemName only display a subset of the edges and faces</span></div>\n\
<div class=\"line\"><a name=\"l05879\"></a><span class=\"lineno\"> 5879</span>&#160;        <span class=\"comment\">## that are active or affected (one of their vertices is selected).</span></div>\n\
<div class=\"line\"><a name=\"l05880\"></a><span class=\"lineno\"> 5880</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05881\"></a><span class=\"lineno\"> 5881</span>&#160;        <span class=\"comment\">## In order to be able to perform the selection of this components we&#39;ll create new render items</span></div>\n\
<div class=\"line\"><a name=\"l05882\"></a><span class=\"lineno\"> 5882</span>&#160;        <span class=\"comment\">## that will only be used for the selection (they will not be visible in the viewport)</span></div>\n\
<div class=\"line\"><a name=\"l05883\"></a><span class=\"lineno\"> 5883</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05884\"></a><span class=\"lineno\"> 5884</span>&#160;        <span class=\"comment\">## Create / update selection edges component render item.</span></div>\n\
<div class=\"line\"><a name=\"l05885\"></a><span class=\"lineno\"> 5885</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05886\"></a><span class=\"lineno\"> 5886</span>&#160;        selectionItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l05887\"></a><span class=\"lineno\"> 5887</span>&#160;        index = list.indexOf(self.sEdgeSelectionItemName)</div>\n\
<div class=\"line\"><a name=\"l05888\"></a><span class=\"lineno\"> 5888</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05889\"></a><span class=\"lineno\"> 5889</span>&#160;            selectionItem = omr.MRenderItem.create( self.sEdgeSelectionItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kLines)</div>\n\
<div class=\"line\"><a name=\"l05890\"></a><span class=\"lineno\"> 5890</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05891\"></a><span class=\"lineno\"> 5891</span>&#160;            <span class=\"comment\">## Set draw mode to kSelectionOnly : the item will not be visible in the viewport, but during viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l05892\"></a><span class=\"lineno\"> 5892</span>&#160;            selectionItem.setDrawMode(omr.MGeometry.kSelectionOnly)</div>\n\
<div class=\"line\"><a name=\"l05893\"></a><span class=\"lineno\"> 5893</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05894\"></a><span class=\"lineno\"> 5894</span>&#160;            <span class=\"comment\">## Set the selection mask to kSelectMeshEdges : we want the render item to be used for Edge Components selection</span></div>\n\
<div class=\"line\"><a name=\"l05895\"></a><span class=\"lineno\"> 5895</span>&#160;            selectionItem.setSelectionMask( om.MSelectionMask.kSelectMeshEdges )</div>\n\
<div class=\"line\"><a name=\"l05896\"></a><span class=\"lineno\"> 5896</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05897\"></a><span class=\"lineno\"> 5897</span>&#160;            <span class=\"comment\">## Set depth priority to be selection so that it is above everything</span></div>\n\
<div class=\"line\"><a name=\"l05898\"></a><span class=\"lineno\"> 5898</span>&#160;            selectionItem.setDepthPriority( omr.MRenderItem.sSelectionDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05899\"></a><span class=\"lineno\"> 5899</span>&#160;            list.append(selectionItem)</div>\n\
<div class=\"line\"><a name=\"l05900\"></a><span class=\"lineno\"> 5900</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05901\"></a><span class=\"lineno\"> 5901</span>&#160;            shader = shaderMgr.getStockShader(omr.MShaderManager.k3dThickLineShader)</div>\n\
<div class=\"line\"><a name=\"l05902\"></a><span class=\"lineno\"> 5902</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05903\"></a><span class=\"lineno\"> 5903</span>&#160;                <span class=\"comment\">## Assign shader.</span></div>\n\
<div class=\"line\"><a name=\"l05904\"></a><span class=\"lineno\"> 5904</span>&#160;                selectionItem.setShader(shader, <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l05905\"></a><span class=\"lineno\"> 5905</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05906\"></a><span class=\"lineno\"> 5906</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05907\"></a><span class=\"lineno\"> 5907</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05908\"></a><span class=\"lineno\"> 5908</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05909\"></a><span class=\"lineno\"> 5909</span>&#160;            selectionItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05910\"></a><span class=\"lineno\"> 5910</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05911\"></a><span class=\"lineno\"> 5911</span>&#160;        <span class=\"keywordflow\">if</span> selectionItem:</div>\n\
<div class=\"line\"><a name=\"l05912\"></a><span class=\"lineno\"> 5912</span>&#160;            selectionItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05913\"></a><span class=\"lineno\"> 5913</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05914\"></a><span class=\"lineno\"> 5914</span>&#160;            mySelectionData = selectionItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l05915\"></a><span class=\"lineno\"> 5915</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(mySelectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l05916\"></a><span class=\"lineno\"> 5916</span>&#160;                <span class=\"comment\">## create the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05917\"></a><span class=\"lineno\"> 5917</span>&#160;                mySelectionData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l05918\"></a><span class=\"lineno\"> 5918</span>&#160;                selectionItem.setCustomData(mySelectionData)</div>\n\
<div class=\"line\"><a name=\"l05919\"></a><span class=\"lineno\"> 5919</span>&#160;            <span class=\"comment\">## update the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05920\"></a><span class=\"lineno\"> 5920</span>&#160;            mySelectionData.fMeshGeom = self.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l05921\"></a><span class=\"lineno\"> 5921</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05922\"></a><span class=\"lineno\"> 5922</span>&#160;        <span class=\"comment\">## Create / update selection faces component render item.</span></div>\n\
<div class=\"line\"><a name=\"l05923\"></a><span class=\"lineno\"> 5923</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05924\"></a><span class=\"lineno\"> 5924</span>&#160;        index = list.indexOf(self.sFaceSelectionItemName)</div>\n\
<div class=\"line\"><a name=\"l05925\"></a><span class=\"lineno\"> 5925</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l05926\"></a><span class=\"lineno\"> 5926</span>&#160;            selectionItem = omr.MRenderItem.create( self.sFaceSelectionItemName, omr.MRenderItem.DecorationItem, omr.MGeometry.kTriangles)</div>\n\
<div class=\"line\"><a name=\"l05927\"></a><span class=\"lineno\"> 5927</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05928\"></a><span class=\"lineno\"> 5928</span>&#160;            <span class=\"comment\">## Set draw mode to kSelectionOnly : the item will not be visible in the viewport, but during viewport 2.0 selection</span></div>\n\
<div class=\"line\"><a name=\"l05929\"></a><span class=\"lineno\"> 5929</span>&#160;            selectionItem.setDrawMode(omr.MGeometry.kSelectionOnly)</div>\n\
<div class=\"line\"><a name=\"l05930\"></a><span class=\"lineno\"> 5930</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05931\"></a><span class=\"lineno\"> 5931</span>&#160;            <span class=\"comment\">## Set the selection mask to kSelectMeshFaces : we want the render item to be used for Face Components selection</span></div>\n\
<div class=\"line\"><a name=\"l05932\"></a><span class=\"lineno\"> 5932</span>&#160;            selectionItem.setSelectionMask( om.MSelectionMask.kSelectMeshFaces )</div>\n\
<div class=\"line\"><a name=\"l05933\"></a><span class=\"lineno\"> 5933</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05934\"></a><span class=\"lineno\"> 5934</span>&#160;            <span class=\"comment\">## Set depth priority to be selection so that it is above everything</span></div>\n\
<div class=\"line\"><a name=\"l05935\"></a><span class=\"lineno\"> 5935</span>&#160;            selectionItem.setDepthPriority( omr.MRenderItem.sSelectionDepthPriority )</div>\n\
<div class=\"line\"><a name=\"l05936\"></a><span class=\"lineno\"> 5936</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05937\"></a><span class=\"lineno\"> 5937</span>&#160;            <span class=\"comment\">## Allow render item copies to be created for isolate selected component</span></div>\n\
<div class=\"line\"><a name=\"l05938\"></a><span class=\"lineno\"> 5938</span>&#160;            selectionItem.setAllowIsolateSelectCopy(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05939\"></a><span class=\"lineno\"> 5939</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05940\"></a><span class=\"lineno\"> 5940</span>&#160;            list.append(selectionItem)</div>\n\
<div class=\"line\"><a name=\"l05941\"></a><span class=\"lineno\"> 5941</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05942\"></a><span class=\"lineno\"> 5942</span>&#160;            shader = shaderMgr.getStockShader(omr.MShaderManager.k3dSolidShader)</div>\n\
<div class=\"line\"><a name=\"l05943\"></a><span class=\"lineno\"> 5943</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l05944\"></a><span class=\"lineno\"> 5944</span>&#160;                <span class=\"comment\">## Assign shader.</span></div>\n\
<div class=\"line\"><a name=\"l05945\"></a><span class=\"lineno\"> 5945</span>&#160;                selectionItem.setShader(shader, <span class=\"keywordtype\">None</span>)</div>\n\
<div class=\"line\"><a name=\"l05946\"></a><span class=\"lineno\"> 5946</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05947\"></a><span class=\"lineno\"> 5947</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l05948\"></a><span class=\"lineno\"> 5948</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l05949\"></a><span class=\"lineno\"> 5949</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l05950\"></a><span class=\"lineno\"> 5950</span>&#160;            selectionItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l05951\"></a><span class=\"lineno\"> 5951</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05952\"></a><span class=\"lineno\"> 5952</span>&#160;        <span class=\"keywordflow\">if</span> selectionItem:</div>\n\
<div class=\"line\"><a name=\"l05953\"></a><span class=\"lineno\"> 5953</span>&#160;            selectionItem.enable(<span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l05954\"></a><span class=\"lineno\"> 5954</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05955\"></a><span class=\"lineno\"> 5955</span>&#160;            mySelectionData = selectionItem.getCustomData()</div>\n\
<div class=\"line\"><a name=\"l05956\"></a><span class=\"lineno\"> 5956</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> isinstance(mySelectionData, apiMeshHWSelectionUserData):</div>\n\
<div class=\"line\"><a name=\"l05957\"></a><span class=\"lineno\"> 5957</span>&#160;                <span class=\"comment\">## create the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05958\"></a><span class=\"lineno\"> 5958</span>&#160;                mySelectionData = apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\"><a name=\"l05959\"></a><span class=\"lineno\"> 5959</span>&#160;                selectionItem.setCustomData(mySelectionData)</div>\n\
<div class=\"line\"><a name=\"l05960\"></a><span class=\"lineno\"> 5960</span>&#160;            <span class=\"comment\">## update the custom data</span></div>\n\
<div class=\"line\"><a name=\"l05961\"></a><span class=\"lineno\"> 5961</span>&#160;            mySelectionData.fMeshGeom = self.fMeshGeom</div>\n\
<div class=\"line\"><a name=\"l05962\"></a><span class=\"lineno\"> 5962</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05963\"></a><span class=\"lineno\"> 5963</span>&#160;    <span class=\"keyword\">def </span>updateProxyShadedItem(self, path, list, shaderMgr):</div>\n\
<div class=\"line\"><a name=\"l05964\"></a><span class=\"lineno\"> 5964</span>&#160;        <span class=\"comment\">## In the event there are no shaded items we create a proxy</span></div>\n\
<div class=\"line\"><a name=\"l05965\"></a><span class=\"lineno\"> 5965</span>&#160;        <span class=\"comment\">## render item so we can still see where the object is.</span></div>\n\
<div class=\"line\"><a name=\"l05966\"></a><span class=\"lineno\"> 5966</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05967\"></a><span class=\"lineno\"> 5967</span>&#160;        <span class=\"comment\">## Stock colors</span></div>\n\
<div class=\"line\"><a name=\"l05968\"></a><span class=\"lineno\"> 5968</span>&#160;        dormantColor = [ 0.0, 0.0, 1.0, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05969\"></a><span class=\"lineno\"> 5969</span>&#160;        templateColor = [ 0.45, 0.45, 0.45, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05970\"></a><span class=\"lineno\"> 5970</span>&#160;        activeTemplateColor = [ 1.0, 0.5, 0.5, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l05971\"></a><span class=\"lineno\"> 5971</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05972\"></a><span class=\"lineno\"> 5972</span>&#160;        <span class=\"comment\">## Note that we still want to raise it above shaded even though</span></div>\n\
<div class=\"line\"><a name=\"l05973\"></a><span class=\"lineno\"> 5973</span>&#160;        <span class=\"comment\">## we don&#39;t have a shaded render item for this override.</span></div>\n\
<div class=\"line\"><a name=\"l05974\"></a><span class=\"lineno\"> 5974</span>&#160;        <span class=\"comment\">## This will handle in case where there is another shaded object</span></div>\n\
<div class=\"line\"><a name=\"l05975\"></a><span class=\"lineno\"> 5975</span>&#160;        <span class=\"comment\">## which overlaps this object in depth</span></div>\n\
<div class=\"line\"><a name=\"l05976\"></a><span class=\"lineno\"> 5976</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05977\"></a><span class=\"lineno\"> 5977</span>&#160;        raiseAboveShaded = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l05978\"></a><span class=\"lineno\"> 5978</span>&#160;        shadedDrawMode = omr.MGeometry.kShaded | omr.MGeometry.kTextured</div>\n\
<div class=\"line\"><a name=\"l05979\"></a><span class=\"lineno\"> 5979</span>&#160;        <span class=\"comment\">## Mark proxy item as wireframe if not using a material shader</span></div>\n\
<div class=\"line\"><a name=\"l05980\"></a><span class=\"lineno\"> 5980</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05981\"></a><span class=\"lineno\"> 5981</span>&#160;        useFragmentShader = self.fProxyShader &lt; 0</div>\n\
<div class=\"line\"><a name=\"l05982\"></a><span class=\"lineno\"> 5982</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> useFragmentShader:</div>\n\
<div class=\"line\"><a name=\"l05983\"></a><span class=\"lineno\"> 5983</span>&#160;            shadedDrawMode |= omr.MGeometry.kWireframe</div>\n\
<div class=\"line\"><a name=\"l05984\"></a><span class=\"lineno\"> 5984</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05985\"></a><span class=\"lineno\"> 5985</span>&#160;        <span class=\"comment\">## Fragment + stipple shaders required triangles. All others</span></div>\n\
<div class=\"line\"><a name=\"l05986\"></a><span class=\"lineno\"> 5986</span>&#160;        <span class=\"comment\">## in the possible list requires lines</span></div>\n\
<div class=\"line\"><a name=\"l05987\"></a><span class=\"lineno\"> 5987</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l05988\"></a><span class=\"lineno\"> 5988</span>&#160;        itemType = omr.MRenderItem.NonMaterialSceneItem</div>\n\
<div class=\"line\"><a name=\"l05989\"></a><span class=\"lineno\"> 5989</span>&#160;        primitive = omr.MGeometry.kLines</div>\n\
<div class=\"line\"><a name=\"l05990\"></a><span class=\"lineno\"> 5990</span>&#160;        filledProxy = useFragmentShader <span class=\"keywordflow\">or</span> self.fProxyShader == omr.MShaderManager.k3dStippleShader</div>\n\
<div class=\"line\"><a name=\"l05991\"></a><span class=\"lineno\"> 5991</span>&#160;        <span class=\"keywordflow\">if</span> filledProxy:</div>\n\
<div class=\"line\"><a name=\"l05992\"></a><span class=\"lineno\"> 5992</span>&#160;            itemType = omr.MRenderItem.MaterialSceneItem</div>\n\
<div class=\"line\"><a name=\"l05993\"></a><span class=\"lineno\"> 5993</span>&#160;            primitive = omr.MGeometry.kTriangles</div>\n\
<div class=\"line\"><a name=\"l05994\"></a><span class=\"lineno\"> 5994</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05995\"></a><span class=\"lineno\"> 5995</span>&#160;        depthPriority = omr.MRenderItem.sDormantWireDepthPriority</div>\n\
<div class=\"line\"><a name=\"l05996\"></a><span class=\"lineno\"> 5996</span>&#160;        <span class=\"keywordflow\">if</span> raiseAboveShaded:</div>\n\
<div class=\"line\"><a name=\"l05997\"></a><span class=\"lineno\"> 5997</span>&#160;            depthPriority = omr.MRenderItem.sActiveWireDepthPriority</div>\n\
<div class=\"line\"><a name=\"l05998\"></a><span class=\"lineno\"> 5998</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l05999\"></a><span class=\"lineno\"> 5999</span>&#160;        proxyItem = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06000\"></a><span class=\"lineno\"> 6000</span>&#160;        index = list.indexOf(self.sShadedProxyItemName)</div>\n\
<div class=\"line\"><a name=\"l06001\"></a><span class=\"lineno\"> 6001</span>&#160;        <span class=\"keywordflow\">if</span> index &lt; 0:</div>\n\
<div class=\"line\"><a name=\"l06002\"></a><span class=\"lineno\"> 6002</span>&#160;            proxyItem = omr.MRenderItem.create( self.sShadedProxyItemName, itemType, primitive)</div>\n\
<div class=\"line\"><a name=\"l06003\"></a><span class=\"lineno\"> 6003</span>&#160;            proxyItem.setDrawMode(shadedDrawMode)</div>\n\
<div class=\"line\"><a name=\"l06004\"></a><span class=\"lineno\"> 6004</span>&#160;            proxyItem.setDepthPriority( depthPriority )</div>\n\
<div class=\"line\"><a name=\"l06005\"></a><span class=\"lineno\"> 6005</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06006\"></a><span class=\"lineno\"> 6006</span>&#160;            proxyItem.setCastsShadows( <span class=\"keywordflow\">not</span> self.fExternalItems_NoShadowCast <span class=\"keywordflow\">and</span> self.fCastsShadows )</div>\n\
<div class=\"line\"><a name=\"l06007\"></a><span class=\"lineno\"> 6007</span>&#160;            proxyItem.setReceivesShadows( <span class=\"keywordflow\">not</span> self.fExternalItems_NoShadowReceive <span class=\"keywordflow\">and</span> self.fReceivesShadows )</div>\n\
<div class=\"line\"><a name=\"l06008\"></a><span class=\"lineno\"> 6008</span>&#160;            proxyItem.setExcludedFromPostEffects( self.fExternalItems_NoPostEffects )</div>\n\
<div class=\"line\"><a name=\"l06009\"></a><span class=\"lineno\"> 6009</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06010\"></a><span class=\"lineno\"> 6010</span>&#160;            list.append(proxyItem)</div>\n\
<div class=\"line\"><a name=\"l06011\"></a><span class=\"lineno\"> 6011</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06012\"></a><span class=\"lineno\"> 6012</span>&#160;            <span class=\"comment\">## We&#39;ll draw the proxy with a proxy shader as a visual cue</span></div>\n\
<div class=\"line\"><a name=\"l06013\"></a><span class=\"lineno\"> 6013</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06014\"></a><span class=\"lineno\"> 6014</span>&#160;            shader = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06015\"></a><span class=\"lineno\"> 6015</span>&#160;            <span class=\"keywordflow\">if</span> useFragmentShader:</div>\n\
<div class=\"line\"><a name=\"l06016\"></a><span class=\"lineno\"> 6016</span>&#160;                shader = shaderMgr.getFragmentShader(<span class=\"stringliteral\">&quot;mayaLambertSurface&quot;</span>, <span class=\"stringliteral\">&quot;outSurfaceFinal&quot;</span>, <span class=\"keyword\">True</span>)</div>\n\
<div class=\"line\"><a name=\"l06017\"></a><span class=\"lineno\"> 6017</span>&#160;                sBlue = [ 0.4, 0.4, 1.0 ]</div>\n\
<div class=\"line\"><a name=\"l06018\"></a><span class=\"lineno\"> 6018</span>&#160;                shader.setParameter(<span class=\"stringliteral\">&quot;color&quot;</span>, sBlue)</div>\n\
<div class=\"line\"><a name=\"l06019\"></a><span class=\"lineno\"> 6019</span>&#160;                shader.setIsTransparent(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l06020\"></a><span class=\"lineno\"> 6020</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06021\"></a><span class=\"lineno\"> 6021</span>&#160;                shader = shaderMgr.getStockShader( self.fProxyShader )</div>\n\
<div class=\"line\"><a name=\"l06022\"></a><span class=\"lineno\"> 6022</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06023\"></a><span class=\"lineno\"> 6023</span>&#160;            <span class=\"keywordflow\">if</span> shader:</div>\n\
<div class=\"line\"><a name=\"l06024\"></a><span class=\"lineno\"> 6024</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> filledProxy:</div>\n\
<div class=\"line\"><a name=\"l06025\"></a><span class=\"lineno\"> 6025</span>&#160;                    self.setLineWidth(shader, 10.0)</div>\n\
<div class=\"line\"><a name=\"l06026\"></a><span class=\"lineno\"> 6026</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06027\"></a><span class=\"lineno\"> 6027</span>&#160;                <span class=\"comment\">## assign shader</span></div>\n\
<div class=\"line\"><a name=\"l06028\"></a><span class=\"lineno\"> 6028</span>&#160;                proxyItem.setShader(shader)</div>\n\
<div class=\"line\"><a name=\"l06029\"></a><span class=\"lineno\"> 6029</span>&#160;                <span class=\"comment\">## once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\"><a name=\"l06030\"></a><span class=\"lineno\"> 6030</span>&#160;                shaderMgr.releaseShader(shader)</div>\n\
<div class=\"line\"><a name=\"l06031\"></a><span class=\"lineno\"> 6031</span>&#160;        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06032\"></a><span class=\"lineno\"> 6032</span>&#160;            proxyItem = list[index]</div>\n\
<div class=\"line\"><a name=\"l06033\"></a><span class=\"lineno\"> 6033</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06034\"></a><span class=\"lineno\"> 6034</span>&#160;        <span class=\"comment\">## As this is a shaded item it is up to the plug-in to determine</span></div>\n\
<div class=\"line\"><a name=\"l06035\"></a><span class=\"lineno\"> 6035</span>&#160;        <span class=\"comment\">## on each update how to handle shadowing and effects.</span></div>\n\
<div class=\"line\"><a name=\"l06036\"></a><span class=\"lineno\"> 6036</span>&#160;        <span class=\"comment\">## Especially note that shadowing changes on the DAG object will trigger</span></div>\n\
<div class=\"line\"><a name=\"l06037\"></a><span class=\"lineno\"> 6037</span>&#160;        <span class=\"comment\">## a call to updateRenderItems()</span></div>\n\
<div class=\"line\"><a name=\"l06038\"></a><span class=\"lineno\"> 6038</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06039\"></a><span class=\"lineno\"> 6039</span>&#160;        proxyItem.setCastsShadows( <span class=\"keywordflow\">not</span> self.fExternalItems_NoShadowCast <span class=\"keywordflow\">and</span> self.fCastsShadows )</div>\n\
<div class=\"line\"><a name=\"l06040\"></a><span class=\"lineno\"> 6040</span>&#160;        proxyItem.setReceivesShadows( <span class=\"keywordflow\">not</span> self.fExternalItems_NoShadowReceive <span class=\"keywordflow\">and</span> self.fReceivesShadows )</div>\n\
<div class=\"line\"><a name=\"l06041\"></a><span class=\"lineno\"> 6041</span>&#160;        proxyItem.setExcludedFromPostEffects( self.fExternalItems_NoPostEffects )</div>\n\
<div class=\"line\"><a name=\"l06042\"></a><span class=\"lineno\"> 6042</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06043\"></a><span class=\"lineno\"> 6043</span>&#160;        <span class=\"comment\">## Check for any shaded render items. A lack of one indicates</span></div>\n\
<div class=\"line\"><a name=\"l06044\"></a><span class=\"lineno\"> 6044</span>&#160;        <span class=\"comment\">## there is no shader assigned to the object.</span></div>\n\
<div class=\"line\"><a name=\"l06045\"></a><span class=\"lineno\"> 6045</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06046\"></a><span class=\"lineno\"> 6046</span>&#160;        haveShadedItems = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l06047\"></a><span class=\"lineno\"> 6047</span>&#160;        <span class=\"keywordflow\">for</span> item <span class=\"keywordflow\">in</span> list:</div>\n\
<div class=\"line\"><a name=\"l06048\"></a><span class=\"lineno\"> 6048</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> item:</div>\n\
<div class=\"line\"><a name=\"l06049\"></a><span class=\"lineno\"> 6049</span>&#160;                <span class=\"keywordflow\">continue</span></div>\n\
<div class=\"line\"><a name=\"l06050\"></a><span class=\"lineno\"> 6050</span>&#160;            drawMode = item.drawMode()</div>\n\
<div class=\"line\"><a name=\"l06051\"></a><span class=\"lineno\"> 6051</span>&#160;            <span class=\"keywordflow\">if</span> drawMode == omr.MGeometry.kShaded <span class=\"keywordflow\">or</span> drawMode == omr.MGeometry.kTextured:</div>\n\
<div class=\"line\"><a name=\"l06052\"></a><span class=\"lineno\"> 6052</span>&#160;                <span class=\"keywordflow\">if</span> item.name() != self.sShadedTemplateItemName:</div>\n\
<div class=\"line\"><a name=\"l06053\"></a><span class=\"lineno\"> 6053</span>&#160;                    haveShadedItems = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06054\"></a><span class=\"lineno\"> 6054</span>&#160;                    <span class=\"keywordflow\">break</span></div>\n\
<div class=\"line\"><a name=\"l06055\"></a><span class=\"lineno\"> 6055</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06056\"></a><span class=\"lineno\"> 6056</span>&#160;        displayStatus = omr.MGeometryUtilities.displayStatus(path)</div>\n\
<div class=\"line\"><a name=\"l06057\"></a><span class=\"lineno\"> 6057</span>&#160;        wireColor = omr.MGeometryUtilities.wireframeColor(path)</div>\n\
<div class=\"line\"><a name=\"l06058\"></a><span class=\"lineno\"> 6058</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06059\"></a><span class=\"lineno\"> 6059</span>&#160;        <span class=\"comment\">## Note that we do not toggle the item on and off just based on</span></div>\n\
<div class=\"line\"><a name=\"l06060\"></a><span class=\"lineno\"> 6060</span>&#160;        <span class=\"comment\">## display state. If this was so then call to MRenderer::setLightsAndShadowsDirty()</span></div>\n\
<div class=\"line\"><a name=\"l06061\"></a><span class=\"lineno\"> 6061</span>&#160;        <span class=\"comment\">## would be required as shadow map update does not monitor display state.</span></div>\n\
<div class=\"line\"><a name=\"l06062\"></a><span class=\"lineno\"> 6062</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06063\"></a><span class=\"lineno\"> 6063</span>&#160;        <span class=\"keywordflow\">if</span> proxyItem:</div>\n\
<div class=\"line\"><a name=\"l06064\"></a><span class=\"lineno\"> 6064</span>&#160;            shader = proxyItem.getShader()</div>\n\
<div class=\"line\"><a name=\"l06065\"></a><span class=\"lineno\"> 6065</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06066\"></a><span class=\"lineno\"> 6066</span>&#160;            <span class=\"keywordflow\">if</span> displayStatus == omr.MGeometryUtilities.kTemplate:</div>\n\
<div class=\"line\"><a name=\"l06067\"></a><span class=\"lineno\"> 6067</span>&#160;                self.setSolidColor( shader, wireColor, templateColor )</div>\n\
<div class=\"line\"><a name=\"l06068\"></a><span class=\"lineno\"> 6068</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06069\"></a><span class=\"lineno\"> 6069</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kActiveTemplate:</div>\n\
<div class=\"line\"><a name=\"l06070\"></a><span class=\"lineno\"> 6070</span>&#160;                self.setSolidColor( shader, wireColor, activeTemplateColor )</div>\n\
<div class=\"line\"><a name=\"l06071\"></a><span class=\"lineno\"> 6071</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06072\"></a><span class=\"lineno\"> 6072</span>&#160;            <span class=\"keywordflow\">elif</span> displayStatus == omr.MGeometryUtilities.kDormant:</div>\n\
<div class=\"line\"><a name=\"l06073\"></a><span class=\"lineno\"> 6073</span>&#160;                self.setSolidColor( shader, wireColor, dormantColor )</div>\n\
<div class=\"line\"><a name=\"l06074\"></a><span class=\"lineno\"> 6074</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06075\"></a><span class=\"lineno\"> 6075</span>&#160;            <span class=\"comment\">## If we are missing shaded render items then enable</span></div>\n\
<div class=\"line\"><a name=\"l06076\"></a><span class=\"lineno\"> 6076</span>&#160;            <span class=\"comment\">## the proxy. Otherwise disable it.</span></div>\n\
<div class=\"line\"><a name=\"l06077\"></a><span class=\"lineno\"> 6077</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06078\"></a><span class=\"lineno\"> 6078</span>&#160;            <span class=\"keywordflow\">if</span> filledProxy:</div>\n\
<div class=\"line\"><a name=\"l06079\"></a><span class=\"lineno\"> 6079</span>&#160;                <span class=\"comment\">## If templated then hide filled proxy</span></div>\n\
<div class=\"line\"><a name=\"l06080\"></a><span class=\"lineno\"> 6080</span>&#160;                <span class=\"keywordflow\">if</span> path.isTemplated():</div>\n\
<div class=\"line\"><a name=\"l06081\"></a><span class=\"lineno\"> 6081</span>&#160;                    proxyItem.enable(<span class=\"keyword\">False</span>)</div>\n\
<div class=\"line\"><a name=\"l06082\"></a><span class=\"lineno\"> 6082</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06083\"></a><span class=\"lineno\"> 6083</span>&#160;                    proxyItem.enable(<span class=\"keywordflow\">not</span> haveShadedItems)</div>\n\
<div class=\"line\"><a name=\"l06084\"></a><span class=\"lineno\"> 6084</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06085\"></a><span class=\"lineno\"> 6085</span>&#160;                proxyItem.enable(<span class=\"keywordflow\">not</span> haveShadedItems)</div>\n\
<div class=\"line\"><a name=\"l06086\"></a><span class=\"lineno\"> 6086</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06087\"></a><span class=\"lineno\"> 6087</span>&#160;    <span class=\"comment\">## Data stream (geometry requirements) handling</span></div>\n\
<div class=\"line\"><a name=\"l06088\"></a><span class=\"lineno\"> 6088</span>&#160;    <span class=\"keyword\">def </span>updateGeometryRequirements(self, requirements, data, activeVertexCount, totalVerts, debugPopulateGeometry):</div>\n\
<div class=\"line\"><a name=\"l06089\"></a><span class=\"lineno\"> 6089</span>&#160;        <span class=\"comment\">## Examine the geometry requirements and create / update the</span></div>\n\
<div class=\"line\"><a name=\"l06090\"></a><span class=\"lineno\"> 6090</span>&#160;        <span class=\"comment\">## appropriate data streams. As render items specify both named and</span></div>\n\
<div class=\"line\"><a name=\"l06091\"></a><span class=\"lineno\"> 6091</span>&#160;        <span class=\"comment\">## unnamed data streams, both need to be handled here.</span></div>\n\
<div class=\"line\"><a name=\"l06092\"></a><span class=\"lineno\"> 6092</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06093\"></a><span class=\"lineno\"> 6093</span>&#160;        <span class=\"comment\">## Vertex data</span></div>\n\
<div class=\"line\"><a name=\"l06094\"></a><span class=\"lineno\"> 6094</span>&#160;        positionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06095\"></a><span class=\"lineno\"> 6095</span>&#160;        positionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06096\"></a><span class=\"lineno\"> 6096</span>&#160;        positionData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06097\"></a><span class=\"lineno\"> 6097</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06098\"></a><span class=\"lineno\"> 6098</span>&#160;        vertexNumericIdBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06099\"></a><span class=\"lineno\"> 6099</span>&#160;        vertexNumericIdDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06100\"></a><span class=\"lineno\"> 6100</span>&#160;        vertexNumericIdData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06101\"></a><span class=\"lineno\"> 6101</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06102\"></a><span class=\"lineno\"> 6102</span>&#160;        vertexNumericIdPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06103\"></a><span class=\"lineno\"> 6103</span>&#160;        vertexNumericIdPositionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06104\"></a><span class=\"lineno\"> 6104</span>&#160;        vertexNumericIdPositionData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06105\"></a><span class=\"lineno\"> 6105</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06106\"></a><span class=\"lineno\"> 6106</span>&#160;        vertexNumericLocationBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06107\"></a><span class=\"lineno\"> 6107</span>&#160;        vertexNumericLocationDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06108\"></a><span class=\"lineno\"> 6108</span>&#160;        vertexNumericLocationData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06109\"></a><span class=\"lineno\"> 6109</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06110\"></a><span class=\"lineno\"> 6110</span>&#160;        vertexNumericLocationPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06111\"></a><span class=\"lineno\"> 6111</span>&#160;        vertexNumericLocationPositionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06112\"></a><span class=\"lineno\"> 6112</span>&#160;        vertexNumericLocationPositionData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06113\"></a><span class=\"lineno\"> 6113</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06114\"></a><span class=\"lineno\"> 6114</span>&#160;        activeVertexPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06115\"></a><span class=\"lineno\"> 6115</span>&#160;        activeVertexPositionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06116\"></a><span class=\"lineno\"> 6116</span>&#160;        activeVertexPositionData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06117\"></a><span class=\"lineno\"> 6117</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06118\"></a><span class=\"lineno\"> 6118</span>&#160;        activeVertexUVBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06119\"></a><span class=\"lineno\"> 6119</span>&#160;        activeVertexUVDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06120\"></a><span class=\"lineno\"> 6120</span>&#160;        activeVertexUVData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06121\"></a><span class=\"lineno\"> 6121</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06122\"></a><span class=\"lineno\"> 6122</span>&#160;        faceCenterPositionBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06123\"></a><span class=\"lineno\"> 6123</span>&#160;        faceCenterPositionDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06124\"></a><span class=\"lineno\"> 6124</span>&#160;        faceCenterPositionData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06125\"></a><span class=\"lineno\"> 6125</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06126\"></a><span class=\"lineno\"> 6126</span>&#160;        normalBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06127\"></a><span class=\"lineno\"> 6127</span>&#160;        normalDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06128\"></a><span class=\"lineno\"> 6128</span>&#160;        normalData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06129\"></a><span class=\"lineno\"> 6129</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06130\"></a><span class=\"lineno\"> 6130</span>&#160;        cpvBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06131\"></a><span class=\"lineno\"> 6131</span>&#160;        cpvDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06132\"></a><span class=\"lineno\"> 6132</span>&#160;        cpvData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06133\"></a><span class=\"lineno\"> 6133</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06134\"></a><span class=\"lineno\"> 6134</span>&#160;        uvBuffer = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06135\"></a><span class=\"lineno\"> 6135</span>&#160;        uvDataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06136\"></a><span class=\"lineno\"> 6136</span>&#160;        uvData = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06137\"></a><span class=\"lineno\"> 6137</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06138\"></a><span class=\"lineno\"> 6138</span>&#160;        numUVs = self.fMeshGeom.uvcoords.uvcount()</div>\n\
<div class=\"line\"><a name=\"l06139\"></a><span class=\"lineno\"> 6139</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06140\"></a><span class=\"lineno\"> 6140</span>&#160;        descList = requirements.vertexRequirements()</div>\n\
<div class=\"line\"><a name=\"l06141\"></a><span class=\"lineno\"> 6141</span>&#160;        satisfiedRequirements = [<span class=\"keyword\">False</span>,] * len(descList)</div>\n\
<div class=\"line\"><a name=\"l06142\"></a><span class=\"lineno\"> 6142</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(descList)):</div>\n\
<div class=\"line\"><a name=\"l06143\"></a><span class=\"lineno\"> 6143</span>&#160;            desc = descList[i]</div>\n\
<div class=\"line\"><a name=\"l06144\"></a><span class=\"lineno\"> 6144</span>&#160;            <span class=\"comment\">## Fill in vertex data for drawing active vertex components (if drawSharedActiveVertices=True)</span></div>\n\
<div class=\"line\"><a name=\"l06145\"></a><span class=\"lineno\"> 6145</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06146\"></a><span class=\"lineno\"> 6146</span>&#160;            <span class=\"keywordflow\">if</span> self.fDrawSharedActiveVertices <span class=\"keywordflow\">and</span> (desc.name == self.sActiveVertexStreamName):</div>\n\
<div class=\"line\"><a name=\"l06147\"></a><span class=\"lineno\"> 6147</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06148\"></a><span class=\"lineno\"> 6148</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> activeVertexPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06149\"></a><span class=\"lineno\"> 6149</span>&#160;                        activeVertexPositionBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06150\"></a><span class=\"lineno\"> 6150</span>&#160;                        <span class=\"keywordflow\">if</span> activeVertexPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06151\"></a><span class=\"lineno\"> 6151</span>&#160;                            satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06152\"></a><span class=\"lineno\"> 6152</span>&#160;                            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06153\"></a><span class=\"lineno\"> 6153</span>&#160;                                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for active vertex requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kPosition&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06154\"></a><span class=\"lineno\"> 6154</span>&#160;                            activeVertexPositionDataAddress = activeVertexPositionBuffer.acquire(activeVertexCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06155\"></a><span class=\"lineno\"> 6155</span>&#160;                            <span class=\"keywordflow\">if</span> activeVertexPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06156\"></a><span class=\"lineno\"> 6156</span>&#160;                                activeVertexPositionData = ((ctypes.c_float * 3)*activeVertexCount).from_address(activeVertexPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06157\"></a><span class=\"lineno\"> 6157</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06158\"></a><span class=\"lineno\"> 6158</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kTexture:</div>\n\
<div class=\"line\"><a name=\"l06159\"></a><span class=\"lineno\"> 6159</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> activeVertexUVBuffer:</div>\n\
<div class=\"line\"><a name=\"l06160\"></a><span class=\"lineno\"> 6160</span>&#160;                        activeVertexUVBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06161\"></a><span class=\"lineno\"> 6161</span>&#160;                        <span class=\"keywordflow\">if</span> activeVertexUVBuffer:</div>\n\
<div class=\"line\"><a name=\"l06162\"></a><span class=\"lineno\"> 6162</span>&#160;                            satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06163\"></a><span class=\"lineno\"> 6163</span>&#160;                            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06164\"></a><span class=\"lineno\"> 6164</span>&#160;                                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for active vertex requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kTexture&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06165\"></a><span class=\"lineno\"> 6165</span>&#160;                            activeVertexUVDataAddress = activeVertexUVBuffer.acquire(activeVertexCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06166\"></a><span class=\"lineno\"> 6166</span>&#160;                            <span class=\"keywordflow\">if</span> activeVertexUVDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06167\"></a><span class=\"lineno\"> 6167</span>&#160;                                activeVertexUVData = ((ctypes.c_float * 3)*activeVertexCount).from_address(activeVertexUVDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06168\"></a><span class=\"lineno\"> 6168</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06169\"></a><span class=\"lineno\"> 6169</span>&#160;                    <span class=\"comment\">## do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\"><a name=\"l06170\"></a><span class=\"lineno\"> 6170</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06171\"></a><span class=\"lineno\"> 6171</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06172\"></a><span class=\"lineno\"> 6172</span>&#160;            <span class=\"comment\">## Fill in vertex data for drawing face center components (if fDrawFaceCenters=True)</span></div>\n\
<div class=\"line\"><a name=\"l06173\"></a><span class=\"lineno\"> 6173</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06174\"></a><span class=\"lineno\"> 6174</span>&#160;            <span class=\"keywordflow\">elif</span> self.fDrawFaceCenters <span class=\"keywordflow\">and</span> desc.name == self.sFaceCenterStreamName:</div>\n\
<div class=\"line\"><a name=\"l06175\"></a><span class=\"lineno\"> 6175</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06176\"></a><span class=\"lineno\"> 6176</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> faceCenterPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06177\"></a><span class=\"lineno\"> 6177</span>&#160;                        faceCenterPositionBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06178\"></a><span class=\"lineno\"> 6178</span>&#160;                        <span class=\"keywordflow\">if</span> faceCenterPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06179\"></a><span class=\"lineno\"> 6179</span>&#160;                            satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06180\"></a><span class=\"lineno\"> 6180</span>&#160;                            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06181\"></a><span class=\"lineno\"> 6181</span>&#160;                                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for face center vertex requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kPosition&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06182\"></a><span class=\"lineno\"> 6182</span>&#160;                            faceCenterPositionDataAddress = faceCenterPositionBuffer.acquire(self.fMeshGeom.faceCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06183\"></a><span class=\"lineno\"> 6183</span>&#160;                            <span class=\"keywordflow\">if</span> faceCenterPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06184\"></a><span class=\"lineno\"> 6184</span>&#160;                                faceCenterPositionData = ((ctypes.c_float * 3)*self.fMeshGeom.faceCount).from_address(faceCenterPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06185\"></a><span class=\"lineno\"> 6185</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06186\"></a><span class=\"lineno\"> 6186</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06187\"></a><span class=\"lineno\"> 6187</span>&#160;                    <span class=\"comment\">## do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\"><a name=\"l06188\"></a><span class=\"lineno\"> 6188</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06189\"></a><span class=\"lineno\"> 6189</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06190\"></a><span class=\"lineno\"> 6190</span>&#160;            <span class=\"comment\">## Fill vertex stream data used for dormant vertex, wireframe and shaded drawing.</span></div>\n\
<div class=\"line\"><a name=\"l06191\"></a><span class=\"lineno\"> 6191</span>&#160;            <span class=\"comment\">## Fill also for active vertices if (fDrawSharedActiveVertices=False)</span></div>\n\
<div class=\"line\"><a name=\"l06192\"></a><span class=\"lineno\"> 6192</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06193\"></a><span class=\"lineno\"> 6193</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06194\"></a><span class=\"lineno\"> 6194</span>&#160;                    <span class=\"keywordflow\">if</span> desc.name == self.sVertexIdItemName:</div>\n\
<div class=\"line\"><a name=\"l06195\"></a><span class=\"lineno\"> 6195</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> vertexNumericIdPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06196\"></a><span class=\"lineno\"> 6196</span>&#160;                            vertexNumericIdPositionBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06197\"></a><span class=\"lineno\"> 6197</span>&#160;                            <span class=\"keywordflow\">if</span> vertexNumericIdPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06198\"></a><span class=\"lineno\"> 6198</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06199\"></a><span class=\"lineno\"> 6199</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06200\"></a><span class=\"lineno\"> 6200</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kPosition&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06201\"></a><span class=\"lineno\"> 6201</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire 3loat-numeric position buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06202\"></a><span class=\"lineno\"> 6202</span>&#160;                                vertexNumericIdPositionDataAddress = vertexNumericIdPositionBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06203\"></a><span class=\"lineno\"> 6203</span>&#160;                                <span class=\"keywordflow\">if</span> vertexNumericIdPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06204\"></a><span class=\"lineno\"> 6204</span>&#160;                                    vertexNumericIdPositionData = ((ctypes.c_float * 3)*totalVerts).from_address(vertexNumericIdPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06205\"></a><span class=\"lineno\"> 6205</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06206\"></a><span class=\"lineno\"> 6206</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.name == self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06207\"></a><span class=\"lineno\"> 6207</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> vertexNumericLocationPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06208\"></a><span class=\"lineno\"> 6208</span>&#160;                            vertexNumericLocationPositionBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06209\"></a><span class=\"lineno\"> 6209</span>&#160;                            <span class=\"keywordflow\">if</span> vertexNumericLocationPositionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06210\"></a><span class=\"lineno\"> 6210</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06211\"></a><span class=\"lineno\"> 6211</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06212\"></a><span class=\"lineno\"> 6212</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kPosition&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06213\"></a><span class=\"lineno\"> 6213</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire 3loat-numeric position buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06214\"></a><span class=\"lineno\"> 6214</span>&#160;                                vertexNumericLocationPositionDataAddress = vertexNumericLocationPositionBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06215\"></a><span class=\"lineno\"> 6215</span>&#160;                                <span class=\"keywordflow\">if</span> vertexNumericLocationPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06216\"></a><span class=\"lineno\"> 6216</span>&#160;                                    vertexNumericLocationPositionData = ((ctypes.c_float * 3)*totalVerts).from_address(vertexNumericLocationPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06217\"></a><span class=\"lineno\"> 6217</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06218\"></a><span class=\"lineno\"> 6218</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06219\"></a><span class=\"lineno\"> 6219</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> positionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06220\"></a><span class=\"lineno\"> 6220</span>&#160;                            positionBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06221\"></a><span class=\"lineno\"> 6221</span>&#160;                            <span class=\"keywordflow\">if</span> positionBuffer:</div>\n\
<div class=\"line\"><a name=\"l06222\"></a><span class=\"lineno\"> 6222</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06223\"></a><span class=\"lineno\"> 6223</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06224\"></a><span class=\"lineno\"> 6224</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kPosition&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06225\"></a><span class=\"lineno\"> 6225</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire unnamed position buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06226\"></a><span class=\"lineno\"> 6226</span>&#160;                                positionDataAddress = positionBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06227\"></a><span class=\"lineno\"> 6227</span>&#160;                                <span class=\"keywordflow\">if</span> positionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06228\"></a><span class=\"lineno\"> 6228</span>&#160;                                    positionData = ((ctypes.c_float * 3)*totalVerts).from_address(positionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06229\"></a><span class=\"lineno\"> 6229</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06230\"></a><span class=\"lineno\"> 6230</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kNormal:</div>\n\
<div class=\"line\"><a name=\"l06231\"></a><span class=\"lineno\"> 6231</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> normalBuffer:</div>\n\
<div class=\"line\"><a name=\"l06232\"></a><span class=\"lineno\"> 6232</span>&#160;                        normalBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06233\"></a><span class=\"lineno\"> 6233</span>&#160;                        <span class=\"keywordflow\">if</span> normalBuffer:</div>\n\
<div class=\"line\"><a name=\"l06234\"></a><span class=\"lineno\"> 6234</span>&#160;                            satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06235\"></a><span class=\"lineno\"> 6235</span>&#160;                            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06236\"></a><span class=\"lineno\"> 6236</span>&#160;                                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kNormal&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06237\"></a><span class=\"lineno\"> 6237</span>&#160;                            normalDataAddress = normalBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06238\"></a><span class=\"lineno\"> 6238</span>&#160;                            <span class=\"keywordflow\">if</span> normalDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06239\"></a><span class=\"lineno\"> 6239</span>&#160;                                normalData = ((ctypes.c_float * 3)*totalVerts).from_address(normalDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06240\"></a><span class=\"lineno\"> 6240</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06241\"></a><span class=\"lineno\"> 6241</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kTexture:</div>\n\
<div class=\"line\"><a name=\"l06242\"></a><span class=\"lineno\"> 6242</span>&#160;                    numericValue = <span class=\"stringliteral\">&quot;numericvalue&quot;</span></div>\n\
<div class=\"line\"><a name=\"l06243\"></a><span class=\"lineno\"> 6243</span>&#160;                    numeric3Value =<span class=\"stringliteral\">&quot;numeric3value&quot;</span></div>\n\
<div class=\"line\"><a name=\"l06244\"></a><span class=\"lineno\"> 6244</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06245\"></a><span class=\"lineno\"> 6245</span>&#160;                    <span class=\"comment\">## Fill in single numeric field</span></div>\n\
<div class=\"line\"><a name=\"l06246\"></a><span class=\"lineno\"> 6246</span>&#160;                    <span class=\"keywordflow\">if</span> desc.semanticName.lower() == numericValue <span class=\"keywordflow\">and</span> desc.name == self.sVertexIdItemName:</div>\n\
<div class=\"line\"><a name=\"l06247\"></a><span class=\"lineno\"> 6247</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> vertexNumericIdBuffer:</div>\n\
<div class=\"line\"><a name=\"l06248\"></a><span class=\"lineno\"> 6248</span>&#160;                            vertexNumericIdBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06249\"></a><span class=\"lineno\"> 6249</span>&#160;                            <span class=\"keywordflow\">if</span> vertexNumericIdBuffer:</div>\n\
<div class=\"line\"><a name=\"l06250\"></a><span class=\"lineno\"> 6250</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06251\"></a><span class=\"lineno\"> 6251</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06252\"></a><span class=\"lineno\"> 6252</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kTexture&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06253\"></a><span class=\"lineno\"> 6253</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire 1loat numeric buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06254\"></a><span class=\"lineno\"> 6254</span>&#160;                                vertexNumericIdDataAddress = vertexNumericIdBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06255\"></a><span class=\"lineno\"> 6255</span>&#160;                                <span class=\"keywordflow\">if</span> vertexNumericIdDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06256\"></a><span class=\"lineno\"> 6256</span>&#160;                                    vertexNumericIdData = ((ctypes.c_float * 1)*totalVerts).from_address(vertexNumericIdDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06257\"></a><span class=\"lineno\"> 6257</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06258\"></a><span class=\"lineno\"> 6258</span>&#160;                    <span class=\"comment\">## Fill in triple numeric field</span></div>\n\
<div class=\"line\"><a name=\"l06259\"></a><span class=\"lineno\"> 6259</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.semanticName.lower() == numeric3Value <span class=\"keywordflow\">and</span> desc.name == self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06260\"></a><span class=\"lineno\"> 6260</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> vertexNumericLocationBuffer:</div>\n\
<div class=\"line\"><a name=\"l06261\"></a><span class=\"lineno\"> 6261</span>&#160;                            vertexNumericLocationBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06262\"></a><span class=\"lineno\"> 6262</span>&#160;                            <span class=\"keywordflow\">if</span> vertexNumericLocationBuffer:</div>\n\
<div class=\"line\"><a name=\"l06263\"></a><span class=\"lineno\"> 6263</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06264\"></a><span class=\"lineno\"> 6264</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06265\"></a><span class=\"lineno\"> 6265</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kTexture&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06266\"></a><span class=\"lineno\"> 6266</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire 3loat numeric location buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06267\"></a><span class=\"lineno\"> 6267</span>&#160;                                vertexNumericLocationDataAddress = vertexNumericLocationBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06268\"></a><span class=\"lineno\"> 6268</span>&#160;                                <span class=\"keywordflow\">if</span> vertexNumericLocationDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06269\"></a><span class=\"lineno\"> 6269</span>&#160;                                    vertexNumericLocationData = ((ctypes.c_float * 3)*totalVerts).from_address(vertexNumericLocationDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06270\"></a><span class=\"lineno\"> 6270</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06271\"></a><span class=\"lineno\"> 6271</span>&#160;                    <span class=\"comment\">## Fill in uv values</span></div>\n\
<div class=\"line\"><a name=\"l06272\"></a><span class=\"lineno\"> 6272</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.name != self.sVertexIdItemName <span class=\"keywordflow\">and</span> desc.name != self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06273\"></a><span class=\"lineno\"> 6273</span>&#160;                        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> uvBuffer:</div>\n\
<div class=\"line\"><a name=\"l06274\"></a><span class=\"lineno\"> 6274</span>&#160;                            uvBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06275\"></a><span class=\"lineno\"> 6275</span>&#160;                            <span class=\"keywordflow\">if</span> uvBuffer:</div>\n\
<div class=\"line\"><a name=\"l06276\"></a><span class=\"lineno\"> 6276</span>&#160;                                satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06277\"></a><span class=\"lineno\"> 6277</span>&#160;                                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06278\"></a><span class=\"lineno\"> 6278</span>&#160;                                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kTexture&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06279\"></a><span class=\"lineno\"> 6279</span>&#160;                                    print(<span class=\"stringliteral\">&quot;Acquire a uv buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06280\"></a><span class=\"lineno\"> 6280</span>&#160;                                uvDataAddress = uvBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06281\"></a><span class=\"lineno\"> 6281</span>&#160;                                <span class=\"keywordflow\">if</span> uvDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06282\"></a><span class=\"lineno\"> 6282</span>&#160;                                    uvData = ((ctypes.c_float * 2)*totalVerts).from_address(uvDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06283\"></a><span class=\"lineno\"> 6283</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06284\"></a><span class=\"lineno\"> 6284</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kColor:</div>\n\
<div class=\"line\"><a name=\"l06285\"></a><span class=\"lineno\"> 6285</span>&#160;                    <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> cpvBuffer:</div>\n\
<div class=\"line\"><a name=\"l06286\"></a><span class=\"lineno\"> 6286</span>&#160;                        cpvBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06287\"></a><span class=\"lineno\"> 6287</span>&#160;                        <span class=\"keywordflow\">if</span> cpvBuffer:</div>\n\
<div class=\"line\"><a name=\"l06288\"></a><span class=\"lineno\"> 6288</span>&#160;                            satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06289\"></a><span class=\"lineno\"> 6289</span>&#160;                            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06290\"></a><span class=\"lineno\"> 6290</span>&#160;                                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement &#39;&quot;</span> + desc.name + <span class=\"stringliteral\">&quot;&#39;. Semantic = kColor&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06291\"></a><span class=\"lineno\"> 6291</span>&#160;                            cpvDataAddress = cpvBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06292\"></a><span class=\"lineno\"> 6292</span>&#160;                            <span class=\"keywordflow\">if</span> cpvDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06293\"></a><span class=\"lineno\"> 6293</span>&#160;                                cpvData = ((ctypes.c_float * 4)*totalVerts).from_address(cpvDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06294\"></a><span class=\"lineno\"> 6294</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06295\"></a><span class=\"lineno\"> 6295</span>&#160;                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06296\"></a><span class=\"lineno\"> 6296</span>&#160;                    <span class=\"comment\">## do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\"><a name=\"l06297\"></a><span class=\"lineno\"> 6297</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06298\"></a><span class=\"lineno\"> 6298</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06299\"></a><span class=\"lineno\"> 6299</span>&#160;        vid = 0</div>\n\
<div class=\"line\"><a name=\"l06300\"></a><span class=\"lineno\"> 6300</span>&#160;        pid = 0</div>\n\
<div class=\"line\"><a name=\"l06301\"></a><span class=\"lineno\"> 6301</span>&#160;        nid = 0</div>\n\
<div class=\"line\"><a name=\"l06302\"></a><span class=\"lineno\"> 6302</span>&#160;        uvid = 0</div>\n\
<div class=\"line\"><a name=\"l06303\"></a><span class=\"lineno\"> 6303</span>&#160;        cid = 0</div>\n\
<div class=\"line\"><a name=\"l06304\"></a><span class=\"lineno\"> 6304</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06305\"></a><span class=\"lineno\"> 6305</span>&#160;            <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06306\"></a><span class=\"lineno\"> 6306</span>&#160;            numVerts = self.fMeshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l06307\"></a><span class=\"lineno\"> 6307</span>&#160;            <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06308\"></a><span class=\"lineno\"> 6308</span>&#160;                <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts):</div>\n\
<div class=\"line\"><a name=\"l06309\"></a><span class=\"lineno\"> 6309</span>&#160;                    <span class=\"keywordflow\">if</span> any((positionData, vertexNumericIdPositionData, vertexNumericLocationPositionData, vertexNumericLocationData)):</div>\n\
<div class=\"line\"><a name=\"l06310\"></a><span class=\"lineno\"> 6310</span>&#160;                        position = self.fMeshGeom.vertices[self.fMeshGeom.face_connects[vid]]</div>\n\
<div class=\"line\"><a name=\"l06311\"></a><span class=\"lineno\"> 6311</span>&#160;                        <span class=\"comment\">## Position used as position</span></div>\n\
<div class=\"line\"><a name=\"l06312\"></a><span class=\"lineno\"> 6312</span>&#160;                        <span class=\"keywordflow\">if</span> positionData:</div>\n\
<div class=\"line\"><a name=\"l06313\"></a><span class=\"lineno\"> 6313</span>&#160;                            positionData[pid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06314\"></a><span class=\"lineno\"> 6314</span>&#160;                            positionData[pid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06315\"></a><span class=\"lineno\"> 6315</span>&#160;                            positionData[pid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06316\"></a><span class=\"lineno\"> 6316</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06317\"></a><span class=\"lineno\"> 6317</span>&#160;                        <span class=\"keywordflow\">if</span> vertexNumericIdPositionData:</div>\n\
<div class=\"line\"><a name=\"l06318\"></a><span class=\"lineno\"> 6318</span>&#160;                            vertexNumericIdPositionData[pid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06319\"></a><span class=\"lineno\"> 6319</span>&#160;                            vertexNumericIdPositionData[pid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06320\"></a><span class=\"lineno\"> 6320</span>&#160;                            vertexNumericIdPositionData[pid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06321\"></a><span class=\"lineno\"> 6321</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06322\"></a><span class=\"lineno\"> 6322</span>&#160;                        <span class=\"keywordflow\">if</span> vertexNumericLocationPositionData:</div>\n\
<div class=\"line\"><a name=\"l06323\"></a><span class=\"lineno\"> 6323</span>&#160;                            vertexNumericLocationPositionData[pid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06324\"></a><span class=\"lineno\"> 6324</span>&#160;                            vertexNumericLocationPositionData[pid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06325\"></a><span class=\"lineno\"> 6325</span>&#160;                            vertexNumericLocationPositionData[pid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06326\"></a><span class=\"lineno\"> 6326</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06327\"></a><span class=\"lineno\"> 6327</span>&#160;                        <span class=\"keywordflow\">if</span> vertexNumericLocationData:</div>\n\
<div class=\"line\"><a name=\"l06328\"></a><span class=\"lineno\"> 6328</span>&#160;                            vertexNumericLocationData[pid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06329\"></a><span class=\"lineno\"> 6329</span>&#160;                            vertexNumericLocationData[pid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06330\"></a><span class=\"lineno\"> 6330</span>&#160;                            vertexNumericLocationData[pid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06331\"></a><span class=\"lineno\"> 6331</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06332\"></a><span class=\"lineno\"> 6332</span>&#160;                        pid += 1</div>\n\
<div class=\"line\"><a name=\"l06333\"></a><span class=\"lineno\"> 6333</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06334\"></a><span class=\"lineno\"> 6334</span>&#160;                    <span class=\"keywordflow\">if</span> normalData:</div>\n\
<div class=\"line\"><a name=\"l06335\"></a><span class=\"lineno\"> 6335</span>&#160;                        normal = self.fMeshGeom.normals[self.fMeshGeom.face_connects[vid]]</div>\n\
<div class=\"line\"><a name=\"l06336\"></a><span class=\"lineno\"> 6336</span>&#160;                        normalData[nid][0] = normal[0]</div>\n\
<div class=\"line\"><a name=\"l06337\"></a><span class=\"lineno\"> 6337</span>&#160;                        normalData[nid][1] = normal[1]</div>\n\
<div class=\"line\"><a name=\"l06338\"></a><span class=\"lineno\"> 6338</span>&#160;                        normalData[nid][2] = normal[2]</div>\n\
<div class=\"line\"><a name=\"l06339\"></a><span class=\"lineno\"> 6339</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06340\"></a><span class=\"lineno\"> 6340</span>&#160;                        nid += 1</div>\n\
<div class=\"line\"><a name=\"l06341\"></a><span class=\"lineno\"> 6341</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06342\"></a><span class=\"lineno\"> 6342</span>&#160;                    <span class=\"keywordflow\">if</span> uvData:</div>\n\
<div class=\"line\"><a name=\"l06343\"></a><span class=\"lineno\"> 6343</span>&#160;                        uv = [0, 0]</div>\n\
<div class=\"line\"><a name=\"l06344\"></a><span class=\"lineno\"> 6344</span>&#160;                        <span class=\"keywordflow\">if</span> numUVs &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l06345\"></a><span class=\"lineno\"> 6345</span>&#160;                            uvNum = self.fMeshGeom.uvcoords.uvId(vid)</div>\n\
<div class=\"line\"><a name=\"l06346\"></a><span class=\"lineno\"> 6346</span>&#160;                            uv = self.fMeshGeom.uvcoords.getUV(uvNum)</div>\n\
<div class=\"line\"><a name=\"l06347\"></a><span class=\"lineno\"> 6347</span>&#160;                        uvData[uvid][0] = uv[0]</div>\n\
<div class=\"line\"><a name=\"l06348\"></a><span class=\"lineno\"> 6348</span>&#160;                        uvData[uvid][1] = uv[0]</div>\n\
<div class=\"line\"><a name=\"l06349\"></a><span class=\"lineno\"> 6349</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06350\"></a><span class=\"lineno\"> 6350</span>&#160;                        uvid += 1</div>\n\
<div class=\"line\"><a name=\"l06351\"></a><span class=\"lineno\"> 6351</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06352\"></a><span class=\"lineno\"> 6352</span>&#160;                    <span class=\"comment\">## Just same fake colors to show filling in requirements for</span></div>\n\
<div class=\"line\"><a name=\"l06353\"></a><span class=\"lineno\"> 6353</span>&#160;                    <span class=\"comment\">## color-per-vertex (CPV)</span></div>\n\
<div class=\"line\"><a name=\"l06354\"></a><span class=\"lineno\"> 6354</span>&#160;                    <span class=\"keywordflow\">if</span> cpvData:</div>\n\
<div class=\"line\"><a name=\"l06355\"></a><span class=\"lineno\"> 6355</span>&#160;                        position = self.fMeshGeom.vertices[self.fMeshGeom.face_connects[vid]]</div>\n\
<div class=\"line\"><a name=\"l06356\"></a><span class=\"lineno\"> 6356</span>&#160;                        cpvData[cid][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06357\"></a><span class=\"lineno\"> 6357</span>&#160;                        cpvData[cid][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06358\"></a><span class=\"lineno\"> 6358</span>&#160;                        cpvData[cid][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06359\"></a><span class=\"lineno\"> 6359</span>&#160;                        cpvData[cid][3] = 1.0</div>\n\
<div class=\"line\"><a name=\"l06360\"></a><span class=\"lineno\"> 6360</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06361\"></a><span class=\"lineno\"> 6361</span>&#160;                        cid += 1</div>\n\
<div class=\"line\"><a name=\"l06362\"></a><span class=\"lineno\"> 6362</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06363\"></a><span class=\"lineno\"> 6363</span>&#160;                    <span class=\"comment\">## Vertex id&#39;s used for numeric display</span></div>\n\
<div class=\"line\"><a name=\"l06364\"></a><span class=\"lineno\"> 6364</span>&#160;                    <span class=\"keywordflow\">if</span> vertexNumericIdData:</div>\n\
<div class=\"line\"><a name=\"l06365\"></a><span class=\"lineno\"> 6365</span>&#160;                        vertexNumericIdData[vid] = (ctypes.c_float * 1)(self.fMeshGeom.face_connects[vid])</div>\n\
<div class=\"line\"><a name=\"l06366\"></a><span class=\"lineno\"> 6366</span>&#160;                        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06367\"></a><span class=\"lineno\"> 6367</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06368\"></a><span class=\"lineno\"> 6368</span>&#160;                    vid += 1</div>\n\
<div class=\"line\"><a name=\"l06369\"></a><span class=\"lineno\"> 6369</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06370\"></a><span class=\"lineno\"> 6370</span>&#160;            <span class=\"keywordflow\">elif</span> numVerts &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l06371\"></a><span class=\"lineno\"> 6371</span>&#160;                vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l06372\"></a><span class=\"lineno\"> 6372</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06373\"></a><span class=\"lineno\"> 6373</span>&#160;        <span class=\"keywordflow\">if</span> positionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06374\"></a><span class=\"lineno\"> 6374</span>&#160;            positionBuffer.commit(positionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06375\"></a><span class=\"lineno\"> 6375</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06376\"></a><span class=\"lineno\"> 6376</span>&#160;        <span class=\"keywordflow\">if</span> normalDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06377\"></a><span class=\"lineno\"> 6377</span>&#160;            normalBuffer.commit(normalDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06378\"></a><span class=\"lineno\"> 6378</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06379\"></a><span class=\"lineno\"> 6379</span>&#160;        <span class=\"keywordflow\">if</span> uvDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06380\"></a><span class=\"lineno\"> 6380</span>&#160;            uvBuffer.commit(uvDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06381\"></a><span class=\"lineno\"> 6381</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06382\"></a><span class=\"lineno\"> 6382</span>&#160;        <span class=\"keywordflow\">if</span> cpvDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06383\"></a><span class=\"lineno\"> 6383</span>&#160;            cpvBuffer.commit(cpvDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06384\"></a><span class=\"lineno\"> 6384</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l06385\"></a><span class=\"lineno\"> 6385</span>&#160;        <span class=\"keywordflow\">if</span> vertexNumericIdDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06386\"></a><span class=\"lineno\"> 6386</span>&#160;            vertexNumericIdBuffer.commit(vertexNumericIdDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06387\"></a><span class=\"lineno\"> 6387</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06388\"></a><span class=\"lineno\"> 6388</span>&#160;        <span class=\"keywordflow\">if</span> vertexNumericIdPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06389\"></a><span class=\"lineno\"> 6389</span>&#160;            vertexNumericIdPositionBuffer.commit(vertexNumericIdPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06390\"></a><span class=\"lineno\"> 6390</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06391\"></a><span class=\"lineno\"> 6391</span>&#160;        <span class=\"keywordflow\">if</span> vertexNumericLocationDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06392\"></a><span class=\"lineno\"> 6392</span>&#160;            vertexNumericLocationBuffer.commit(vertexNumericLocationDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06393\"></a><span class=\"lineno\"> 6393</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06394\"></a><span class=\"lineno\"> 6394</span>&#160;        <span class=\"keywordflow\">if</span> vertexNumericLocationPositionDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06395\"></a><span class=\"lineno\"> 6395</span>&#160;            vertexNumericLocationPositionBuffer.commit(vertexNumericLocationPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06396\"></a><span class=\"lineno\"> 6396</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06397\"></a><span class=\"lineno\"> 6397</span>&#160;        <span class=\"comment\">## Fill in active vertex data buffer (only when fDrawSharedActiveVertices=True</span></div>\n\
<div class=\"line\"><a name=\"l06398\"></a><span class=\"lineno\"> 6398</span>&#160;        <span class=\"comment\">## which results in activeVertexPositionDataAddress and activeVertexPositionBuffer being non-NULL)</span></div>\n\
<div class=\"line\"><a name=\"l06399\"></a><span class=\"lineno\"> 6399</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06400\"></a><span class=\"lineno\"> 6400</span>&#160;        <span class=\"keywordflow\">if</span> activeVertexPositionData:</div>\n\
<div class=\"line\"><a name=\"l06401\"></a><span class=\"lineno\"> 6401</span>&#160;            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06402\"></a><span class=\"lineno\"> 6402</span>&#160;                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for active vertex position buffer base on component list&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06403\"></a><span class=\"lineno\"> 6403</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06404\"></a><span class=\"lineno\"> 6404</span>&#160;            <span class=\"comment\">## Fill in position buffer with positions based on active vertex indexing list</span></div>\n\
<div class=\"line\"><a name=\"l06405\"></a><span class=\"lineno\"> 6405</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06406\"></a><span class=\"lineno\"> 6406</span>&#160;            <span class=\"keywordflow\">if</span> activeVertexCount &gt; len(self.fMeshGeom.vertices):</div>\n\
<div class=\"line\"><a name=\"l06407\"></a><span class=\"lineno\"> 6407</span>&#160;                activeVertexCount = len(self.fMeshGeom.vertices)</div>\n\
<div class=\"line\"><a name=\"l06408\"></a><span class=\"lineno\"> 6408</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06409\"></a><span class=\"lineno\"> 6409</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(activeVertexCount):</div>\n\
<div class=\"line\"><a name=\"l06410\"></a><span class=\"lineno\"> 6410</span>&#160;                position = self.fMeshGeom.vertices[ self.fActiveVertices[i] ]</div>\n\
<div class=\"line\"><a name=\"l06411\"></a><span class=\"lineno\"> 6411</span>&#160;                activeVertexPositionData[i][0] = position[0]</div>\n\
<div class=\"line\"><a name=\"l06412\"></a><span class=\"lineno\"> 6412</span>&#160;                activeVertexPositionData[i][1] = position[1]</div>\n\
<div class=\"line\"><a name=\"l06413\"></a><span class=\"lineno\"> 6413</span>&#160;                activeVertexPositionData[i][2] = position[2]</div>\n\
<div class=\"line\"><a name=\"l06414\"></a><span class=\"lineno\"> 6414</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06415\"></a><span class=\"lineno\"> 6415</span>&#160;            activeVertexPositionBuffer.commit(activeVertexPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06416\"></a><span class=\"lineno\"> 6416</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06417\"></a><span class=\"lineno\"> 6417</span>&#160;        <span class=\"keywordflow\">if</span> activeVertexUVData:</div>\n\
<div class=\"line\"><a name=\"l06418\"></a><span class=\"lineno\"> 6418</span>&#160;            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06419\"></a><span class=\"lineno\"> 6419</span>&#160;                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for active vertex uv buffer base on component list&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06420\"></a><span class=\"lineno\"> 6420</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06421\"></a><span class=\"lineno\"> 6421</span>&#160;            <span class=\"comment\">## Fill in position buffer with positions based on active vertex indexing list</span></div>\n\
<div class=\"line\"><a name=\"l06422\"></a><span class=\"lineno\"> 6422</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06423\"></a><span class=\"lineno\"> 6423</span>&#160;            <span class=\"keywordflow\">if</span> activeVertexCount &gt; len(self.fMeshGeom.vertices):</div>\n\
<div class=\"line\"><a name=\"l06424\"></a><span class=\"lineno\"> 6424</span>&#160;                activeVertexCount = len(self.fMeshGeom.vertices)</div>\n\
<div class=\"line\"><a name=\"l06425\"></a><span class=\"lineno\"> 6425</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06426\"></a><span class=\"lineno\"> 6426</span>&#160;            <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(activeVertexCount):</div>\n\
<div class=\"line\"><a name=\"l06427\"></a><span class=\"lineno\"> 6427</span>&#160;                activeVertexUVData[i] = i // activeVertexCount</div>\n\
<div class=\"line\"><a name=\"l06428\"></a><span class=\"lineno\"> 6428</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06429\"></a><span class=\"lineno\"> 6429</span>&#160;            activeVertexUVBuffer.commit(activeVertexUVDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06430\"></a><span class=\"lineno\"> 6430</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06431\"></a><span class=\"lineno\"> 6431</span>&#160;        <span class=\"comment\">## Fill in face center data buffer (only when fDrawFaceCenter=True</span></div>\n\
<div class=\"line\"><a name=\"l06432\"></a><span class=\"lineno\"> 6432</span>&#160;        <span class=\"comment\">## which results in faceCenterPositionDataAddress and faceCenterPositionBuffer being non-NULL)</span></div>\n\
<div class=\"line\"><a name=\"l06433\"></a><span class=\"lineno\"> 6433</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06434\"></a><span class=\"lineno\"> 6434</span>&#160;        <span class=\"keywordflow\">if</span> faceCenterPositionData:</div>\n\
<div class=\"line\"><a name=\"l06435\"></a><span class=\"lineno\"> 6435</span>&#160;            <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06436\"></a><span class=\"lineno\"> 6436</span>&#160;                print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for face center position buffer&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06437\"></a><span class=\"lineno\"> 6437</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06438\"></a><span class=\"lineno\"> 6438</span>&#160;            <span class=\"comment\">## Fill in face center buffer with positions based on realtime calculations.</span></div>\n\
<div class=\"line\"><a name=\"l06439\"></a><span class=\"lineno\"> 6439</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06440\"></a><span class=\"lineno\"> 6440</span>&#160;            pid = 0</div>\n\
<div class=\"line\"><a name=\"l06441\"></a><span class=\"lineno\"> 6441</span>&#160;            vid = 0</div>\n\
<div class=\"line\"><a name=\"l06442\"></a><span class=\"lineno\"> 6442</span>&#160;            <span class=\"keywordflow\">for</span> faceId <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06443\"></a><span class=\"lineno\"> 6443</span>&#160;                <span class=\"comment\">##tmp variables for calculating the face center position.</span></div>\n\
<div class=\"line\"><a name=\"l06444\"></a><span class=\"lineno\"> 6444</span>&#160;                x = 0.0</div>\n\
<div class=\"line\"><a name=\"l06445\"></a><span class=\"lineno\"> 6445</span>&#160;                y = 0.0</div>\n\
<div class=\"line\"><a name=\"l06446\"></a><span class=\"lineno\"> 6446</span>&#160;                z = 0.0</div>\n\
<div class=\"line\"><a name=\"l06447\"></a><span class=\"lineno\"> 6447</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06448\"></a><span class=\"lineno\"> 6448</span>&#160;                faceCenterPosition = om.MPoint()</div>\n\
<div class=\"line\"><a name=\"l06449\"></a><span class=\"lineno\"> 6449</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06450\"></a><span class=\"lineno\"> 6450</span>&#160;                <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06451\"></a><span class=\"lineno\"> 6451</span>&#160;                numVerts = self.fMeshGeom.face_counts[faceId]</div>\n\
<div class=\"line\"><a name=\"l06452\"></a><span class=\"lineno\"> 6452</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06453\"></a><span class=\"lineno\"> 6453</span>&#160;                    <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts):</div>\n\
<div class=\"line\"><a name=\"l06454\"></a><span class=\"lineno\"> 6454</span>&#160;                        face_vertex_position = self.fMeshGeom.vertices[self.fMeshGeom.face_connects[vid]]</div>\n\
<div class=\"line\"><a name=\"l06455\"></a><span class=\"lineno\"> 6455</span>&#160;                        x += face_vertex_position[0]</div>\n\
<div class=\"line\"><a name=\"l06456\"></a><span class=\"lineno\"> 6456</span>&#160;                        y += face_vertex_position[1]</div>\n\
<div class=\"line\"><a name=\"l06457\"></a><span class=\"lineno\"> 6457</span>&#160;                        z += face_vertex_position[2]</div>\n\
<div class=\"line\"><a name=\"l06458\"></a><span class=\"lineno\"> 6458</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06459\"></a><span class=\"lineno\"> 6459</span>&#160;                        vid += 1</div>\n\
<div class=\"line\"><a name=\"l06460\"></a><span class=\"lineno\"> 6460</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06461\"></a><span class=\"lineno\"> 6461</span>&#160;                    faceCenterPosition = om.MPoint(x, y, z) / numVerts</div>\n\
<div class=\"line\"><a name=\"l06462\"></a><span class=\"lineno\"> 6462</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06463\"></a><span class=\"lineno\"> 6463</span>&#160;                <span class=\"keywordflow\">elif</span> numVerts &gt; 0:</div>\n\
<div class=\"line\"><a name=\"l06464\"></a><span class=\"lineno\"> 6464</span>&#160;                    vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l06465\"></a><span class=\"lineno\"> 6465</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06466\"></a><span class=\"lineno\"> 6466</span>&#160;                faceCenterPositionData[faceId][0] = faceCenterPosition[0]</div>\n\
<div class=\"line\"><a name=\"l06467\"></a><span class=\"lineno\"> 6467</span>&#160;                faceCenterPositionData[faceId][1] = faceCenterPosition[1]</div>\n\
<div class=\"line\"><a name=\"l06468\"></a><span class=\"lineno\"> 6468</span>&#160;                faceCenterPositionData[faceId][2] = faceCenterPosition[2]</div>\n\
<div class=\"line\"><a name=\"l06469\"></a><span class=\"lineno\"> 6469</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06470\"></a><span class=\"lineno\"> 6470</span>&#160;            faceCenterPositionBuffer.commit(faceCenterPositionDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06471\"></a><span class=\"lineno\"> 6471</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06472\"></a><span class=\"lineno\"> 6472</span>&#160;        <span class=\"comment\">## Run around a second time and handle duplicate buffers and unknown buffers</span></div>\n\
<div class=\"line\"><a name=\"l06473\"></a><span class=\"lineno\"> 6473</span>&#160;        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06474\"></a><span class=\"lineno\"> 6474</span>&#160;        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(descList)):</div>\n\
<div class=\"line\"><a name=\"l06475\"></a><span class=\"lineno\"> 6475</span>&#160;            <span class=\"keywordflow\">if</span> satisfiedRequirements[i]:</div>\n\
<div class=\"line\"><a name=\"l06476\"></a><span class=\"lineno\"> 6476</span>&#160;                <span class=\"keywordflow\">continue</span></div>\n\
<div class=\"line\"><a name=\"l06477\"></a><span class=\"lineno\"> 6477</span>&#160;            desc = descList[i]</div>\n\
<div class=\"line\"><a name=\"l06478\"></a><span class=\"lineno\"> 6478</span>&#160;            <span class=\"keywordflow\">if</span> self.fDrawSharedActiveVertices <span class=\"keywordflow\">and</span> (desc.name == self.sActiveVertexStreamName):</div>\n\
<div class=\"line\"><a name=\"l06479\"></a><span class=\"lineno\"> 6479</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06480\"></a><span class=\"lineno\"> 6480</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06481\"></a><span class=\"lineno\"> 6481</span>&#160;                    self.cloneVertexBuffer(activeVertexPositionBuffer, data, desc, activeVertexCount, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06482\"></a><span class=\"lineno\"> 6482</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kTexture:</div>\n\
<div class=\"line\"><a name=\"l06483\"></a><span class=\"lineno\"> 6483</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06484\"></a><span class=\"lineno\"> 6484</span>&#160;                    self.cloneVertexBuffer(activeVertexUVBuffer, data, desc, activeVertexCount, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06485\"></a><span class=\"lineno\"> 6485</span>&#160;            <span class=\"keywordflow\">elif</span> self.fDrawFaceCenters <span class=\"keywordflow\">and</span> desc.name == self.sFaceCenterStreamName:</div>\n\
<div class=\"line\"><a name=\"l06486\"></a><span class=\"lineno\"> 6486</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06487\"></a><span class=\"lineno\"> 6487</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06488\"></a><span class=\"lineno\"> 6488</span>&#160;                    self.cloneVertexBuffer(faceCenterPositionBuffer, data, desc, self.fMeshGeom.faceCount, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06489\"></a><span class=\"lineno\"> 6489</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06490\"></a><span class=\"lineno\"> 6490</span>&#160;                <span class=\"keywordflow\">if</span> desc.semantic == omr.MGeometry.kPosition:</div>\n\
<div class=\"line\"><a name=\"l06491\"></a><span class=\"lineno\"> 6491</span>&#160;                    <span class=\"keywordflow\">if</span> desc.name == self.sVertexIdItemName:</div>\n\
<div class=\"line\"><a name=\"l06492\"></a><span class=\"lineno\"> 6492</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06493\"></a><span class=\"lineno\"> 6493</span>&#160;                        self.cloneVertexBuffer(vertexNumericIdPositionBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06494\"></a><span class=\"lineno\"> 6494</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.name == self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06495\"></a><span class=\"lineno\"> 6495</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06496\"></a><span class=\"lineno\"> 6496</span>&#160;                        self.cloneVertexBuffer(vertexNumericLocationPositionBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06497\"></a><span class=\"lineno\"> 6497</span>&#160;                    <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06498\"></a><span class=\"lineno\"> 6498</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06499\"></a><span class=\"lineno\"> 6499</span>&#160;                        self.cloneVertexBuffer(positionBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06500\"></a><span class=\"lineno\"> 6500</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kNormal:</div>\n\
<div class=\"line\"><a name=\"l06501\"></a><span class=\"lineno\"> 6501</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06502\"></a><span class=\"lineno\"> 6502</span>&#160;                    self.cloneVertexBuffer(normalBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06503\"></a><span class=\"lineno\"> 6503</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kTexture:</div>\n\
<div class=\"line\"><a name=\"l06504\"></a><span class=\"lineno\"> 6504</span>&#160;                    numericValue = <span class=\"stringliteral\">&quot;numericvalue&quot;</span></div>\n\
<div class=\"line\"><a name=\"l06505\"></a><span class=\"lineno\"> 6505</span>&#160;                    numeric3Value =<span class=\"stringliteral\">&quot;numeric3value&quot;</span></div>\n\
<div class=\"line\"><a name=\"l06506\"></a><span class=\"lineno\"> 6506</span>&#160;                    <span class=\"keywordflow\">if</span> desc.semanticName.lower() == numericValue <span class=\"keywordflow\">and</span> desc.name == self.sVertexIdItemName:</div>\n\
<div class=\"line\"><a name=\"l06507\"></a><span class=\"lineno\"> 6507</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06508\"></a><span class=\"lineno\"> 6508</span>&#160;                        self.cloneVertexBuffer(vertexNumericIdBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06509\"></a><span class=\"lineno\"> 6509</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.semanticName.lower() == numeric3Value <span class=\"keywordflow\">and</span> desc.name == self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06510\"></a><span class=\"lineno\"> 6510</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06511\"></a><span class=\"lineno\"> 6511</span>&#160;                        self.cloneVertexBuffer(vertexNumericLocationBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06512\"></a><span class=\"lineno\"> 6512</span>&#160;                    <span class=\"keywordflow\">elif</span> desc.name != self.sVertexIdItemName <span class=\"keywordflow\">and</span> desc.name != self.sVertexPositionItemName:</div>\n\
<div class=\"line\"><a name=\"l06513\"></a><span class=\"lineno\"> 6513</span>&#160;                        satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06514\"></a><span class=\"lineno\"> 6514</span>&#160;                        self.cloneVertexBuffer(uvBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06515\"></a><span class=\"lineno\"> 6515</span>&#160;                <span class=\"keywordflow\">elif</span> desc.semantic == omr.MGeometry.kColor:</div>\n\
<div class=\"line\"><a name=\"l06516\"></a><span class=\"lineno\"> 6516</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06517\"></a><span class=\"lineno\"> 6517</span>&#160;                    self.cloneVertexBuffer(cpvBuffer, data, desc, totalVerts, debugPopulateGeometry)</div>\n\
<div class=\"line\"><a name=\"l06518\"></a><span class=\"lineno\"> 6518</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l06519\"></a><span class=\"lineno\"> 6519</span>&#160;            <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> satisfiedRequirements[i]:</div>\n\
<div class=\"line\"><a name=\"l06520\"></a><span class=\"lineno\"> 6520</span>&#160;                <span class=\"comment\">## We have a strange buffer request we do not understand. Provide a set of Zeros sufficient to cover</span></div>\n\
<div class=\"line\"><a name=\"l06521\"></a><span class=\"lineno\"> 6521</span>&#160;                <span class=\"comment\">## totalVerts:</span></div>\n\
<div class=\"line\"><a name=\"l06522\"></a><span class=\"lineno\"> 6522</span>&#160;                destBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06523\"></a><span class=\"lineno\"> 6523</span>&#160;                <span class=\"keywordflow\">if</span> destBuffer:</div>\n\
<div class=\"line\"><a name=\"l06524\"></a><span class=\"lineno\"> 6524</span>&#160;                    satisfiedRequirements[i] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06525\"></a><span class=\"lineno\"> 6525</span>&#160;                    <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06526\"></a><span class=\"lineno\"> 6526</span>&#160;                        print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in dummy requirement &#39;%s&#39;&quot;</span> % (desc.name, ))</div>\n\
<div class=\"line\"><a name=\"l06527\"></a><span class=\"lineno\"> 6527</span>&#160;                    destBufferDataAddress = destBuffer.acquire(totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06528\"></a><span class=\"lineno\"> 6528</span>&#160;                    <span class=\"keywordflow\">if</span> destBufferDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06529\"></a><span class=\"lineno\"> 6529</span>&#160;                        destBufferData = ((ctypes.c_float * desc.dimension)*totalVerts).from_address(destBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06530\"></a><span class=\"lineno\"> 6530</span>&#160;                        <span class=\"keywordflow\">if</span> destBufferData:</div>\n\
<div class=\"line\"><a name=\"l06531\"></a><span class=\"lineno\"> 6531</span>&#160;                            <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(totalVerts):</div>\n\
<div class=\"line\"><a name=\"l06532\"></a><span class=\"lineno\"> 6532</span>&#160;                                <span class=\"keywordflow\">if</span> desc.dimension == 4:</div>\n\
<div class=\"line\"><a name=\"l06533\"></a><span class=\"lineno\"> 6533</span>&#160;                                    destBufferData[j] = (1.0, 0.0, 0.0, 1.0)</div>\n\
<div class=\"line\"><a name=\"l06534\"></a><span class=\"lineno\"> 6534</span>&#160;                                <span class=\"keywordflow\">elif</span> desc.dimension == 3:</div>\n\
<div class=\"line\"><a name=\"l06535\"></a><span class=\"lineno\"> 6535</span>&#160;                                    destBufferData[j] = (1.0, 0.0, 0.0)</div>\n\
<div class=\"line\"><a name=\"l06536\"></a><span class=\"lineno\"> 6536</span>&#160;                                <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06537\"></a><span class=\"lineno\"> 6537</span>&#160;                                    <span class=\"keywordflow\">for</span> k <span class=\"keywordflow\">in</span> range(desc.dimension):</div>\n\
<div class=\"line\"><a name=\"l06538\"></a><span class=\"lineno\"> 6538</span>&#160;                                        destBufferData[j][k] = 0.0</div>\n\
<div class=\"line\"><a name=\"l06539\"></a><span class=\"lineno\"> 6539</span>&#160;                        destBuffer.commit(destBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06540\"></a><span class=\"lineno\"> 6540</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06541\"></a><span class=\"lineno\"> 6541</span>&#160;    <span class=\"comment\">##  Clone a vertex buffer to fulfill a duplicate requirement.</span></div>\n\
<div class=\"line\"><a name=\"l06542\"></a><span class=\"lineno\"> 6542</span>&#160;    <span class=\"comment\">##  Can happen for effects asking for multiple UV streams by</span></div>\n\
<div class=\"line\"><a name=\"l06543\"></a><span class=\"lineno\"> 6543</span>&#160;    <span class=\"comment\">##  name.</span></div>\n\
<div class=\"line\"><a name=\"l06544\"></a><span class=\"lineno\"> 6544</span>&#160;    <span class=\"keyword\">def </span>cloneVertexBuffer(self, srcBuffer, data, desc, dataSize, debugPopulateGeometry):</div>\n\
<div class=\"line\"><a name=\"l06545\"></a><span class=\"lineno\"> 6545</span>&#160;        <span class=\"keywordflow\">if</span> srcBuffer:</div>\n\
<div class=\"line\"><a name=\"l06546\"></a><span class=\"lineno\"> 6546</span>&#160;            destBuffer = data.createVertexBuffer(desc)</div>\n\
<div class=\"line\"><a name=\"l06547\"></a><span class=\"lineno\"> 6547</span>&#160;            <span class=\"keywordflow\">if</span> destBuffer:</div>\n\
<div class=\"line\"><a name=\"l06548\"></a><span class=\"lineno\"> 6548</span>&#160;                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06549\"></a><span class=\"lineno\"> 6549</span>&#160;                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Cloning requirement &#39;%s&#39;&quot;</span> % (desc.name, ))</div>\n\
<div class=\"line\"><a name=\"l06550\"></a><span class=\"lineno\"> 6550</span>&#160;                destBufferDataAddress = destBuffer.acquire(dataSize, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06551\"></a><span class=\"lineno\"> 6551</span>&#160;                srcBufferDataAddress = srcBuffer.map()</div>\n\
<div class=\"line\"><a name=\"l06552\"></a><span class=\"lineno\"> 6552</span>&#160;                <span class=\"keywordflow\">if</span> destBufferDataAddress <span class=\"keywordflow\">and</span> srcBufferDataAddress:</div>\n\
<div class=\"line\"><a name=\"l06553\"></a><span class=\"lineno\"> 6553</span>&#160;                    destBufferData = ((ctypes.c_float * desc.dimension)*dataSize).from_address(destBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06554\"></a><span class=\"lineno\"> 6554</span>&#160;                    srcBufferData = ((ctypes.c_float * desc.dimension)*dataSize).from_address(srcBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06555\"></a><span class=\"lineno\"> 6555</span>&#160;                    <span class=\"keywordflow\">if</span> destBufferData <span class=\"keywordflow\">and</span> srcBufferData:</div>\n\
<div class=\"line\"><a name=\"l06556\"></a><span class=\"lineno\"> 6556</span>&#160;                        <span class=\"keywordflow\">for</span> j <span class=\"keywordflow\">in</span> range(dataSize):</div>\n\
<div class=\"line\"><a name=\"l06557\"></a><span class=\"lineno\"> 6557</span>&#160;                            <span class=\"keywordflow\">for</span> k <span class=\"keywordflow\">in</span> range(desc.dimension):</div>\n\
<div class=\"line\"><a name=\"l06558\"></a><span class=\"lineno\"> 6558</span>&#160;                                destBufferData[j][k] = srcBufferData[j][k]</div>\n\
<div class=\"line\"><a name=\"l06559\"></a><span class=\"lineno\"> 6559</span>&#160;                    destBuffer.commit(destBufferDataAddress)</div>\n\
<div class=\"line\"><a name=\"l06560\"></a><span class=\"lineno\"> 6560</span>&#160;                srcBuffer.unmap()</div>\n\
<div class=\"line\"><a name=\"l06561\"></a><span class=\"lineno\"> 6561</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06562\"></a><span class=\"lineno\"> 6562</span>&#160;    <span class=\"comment\">## Indexing for render item handling methods</span></div>\n\
<div class=\"line\"><a name=\"l06563\"></a><span class=\"lineno\"> 6563</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForWireframeItems(self, wireIndexBuffer, item, data, totalVerts):</div>\n\
<div class=\"line\"><a name=\"l06564\"></a><span class=\"lineno\"> 6564</span>&#160;        <span class=\"comment\">## Create / update indexing required to draw wireframe render items.</span></div>\n\
<div class=\"line\"><a name=\"l06565\"></a><span class=\"lineno\"> 6565</span>&#160;        <span class=\"comment\">## There can be more than one render item using the same wireframe indexing</span></div>\n\
<div class=\"line\"><a name=\"l06566\"></a><span class=\"lineno\"> 6566</span>&#160;        <span class=\"comment\">## so it is passed in as an argument. If it is not null then we can</span></div>\n\
<div class=\"line\"><a name=\"l06567\"></a><span class=\"lineno\"> 6567</span>&#160;        <span class=\"comment\">## reuse it instead of creating new indexing.</span></div>\n\
<div class=\"line\"><a name=\"l06568\"></a><span class=\"lineno\"> 6568</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l06569\"></a><span class=\"lineno\"> 6569</span>&#160;        <span class=\"comment\">## Wireframe index buffer is same for both wireframe and selected render item</span></div>\n\
<div class=\"line\"><a name=\"l06570\"></a><span class=\"lineno\"> 6570</span>&#160;        <span class=\"comment\">## so we only compute and allocate it once, but reuse it for both render items</span></div>\n\
<div class=\"line\"><a name=\"l06571\"></a><span class=\"lineno\"> 6571</span>&#160;        <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> wireIndexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06572\"></a><span class=\"lineno\"> 6572</span>&#160;            wireIndexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06573\"></a><span class=\"lineno\"> 6573</span>&#160;            <span class=\"keywordflow\">if</span> wireIndexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06574\"></a><span class=\"lineno\"> 6574</span>&#160;                dataAddress = wireIndexBuffer.acquire(2*totalVerts, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06575\"></a><span class=\"lineno\"> 6575</span>&#160;                <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06576\"></a><span class=\"lineno\"> 6576</span>&#160;                    data = (ctypes.c_uint * (2*totalVerts)).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06577\"></a><span class=\"lineno\"> 6577</span>&#160;                    vid = 0</div>\n\
<div class=\"line\"><a name=\"l06578\"></a><span class=\"lineno\"> 6578</span>&#160;                    first = 0</div>\n\
<div class=\"line\"><a name=\"l06579\"></a><span class=\"lineno\"> 6579</span>&#160;                    idx = 0</div>\n\
<div class=\"line\"><a name=\"l06580\"></a><span class=\"lineno\"> 6580</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06581\"></a><span class=\"lineno\"> 6581</span>&#160;                        <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06582\"></a><span class=\"lineno\"> 6582</span>&#160;                        numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06583\"></a><span class=\"lineno\"> 6583</span>&#160;                        <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06584\"></a><span class=\"lineno\"> 6584</span>&#160;                            first = vid</div>\n\
<div class=\"line\"><a name=\"l06585\"></a><span class=\"lineno\"> 6585</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06586\"></a><span class=\"lineno\"> 6586</span>&#160;                                data[idx] = vid</div>\n\
<div class=\"line\"><a name=\"l06587\"></a><span class=\"lineno\"> 6587</span>&#160;                                vid += 1</div>\n\
<div class=\"line\"><a name=\"l06588\"></a><span class=\"lineno\"> 6588</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l06589\"></a><span class=\"lineno\"> 6589</span>&#160;                                data[idx] = vid</div>\n\
<div class=\"line\"><a name=\"l06590\"></a><span class=\"lineno\"> 6590</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l06591\"></a><span class=\"lineno\"> 6591</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06592\"></a><span class=\"lineno\"> 6592</span>&#160;                            data[idx] = vid</div>\n\
<div class=\"line\"><a name=\"l06593\"></a><span class=\"lineno\"> 6593</span>&#160;                            vid += 1</div>\n\
<div class=\"line\"><a name=\"l06594\"></a><span class=\"lineno\"> 6594</span>&#160;                            idx += 1</div>\n\
<div class=\"line\"><a name=\"l06595\"></a><span class=\"lineno\"> 6595</span>&#160;                            data[idx] = first</div>\n\
<div class=\"line\"><a name=\"l06596\"></a><span class=\"lineno\"> 6596</span>&#160;                            idx += 1</div>\n\
<div class=\"line\"><a name=\"l06597\"></a><span class=\"lineno\"> 6597</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06598\"></a><span class=\"lineno\"> 6598</span>&#160;                        <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06599\"></a><span class=\"lineno\"> 6599</span>&#160;                            vid += numVerts</div>\n\
<div class=\"line\"><a name=\"l06600\"></a><span class=\"lineno\"> 6600</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06601\"></a><span class=\"lineno\"> 6601</span>&#160;                    wireIndexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06602\"></a><span class=\"lineno\"> 6602</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06603\"></a><span class=\"lineno\"> 6603</span>&#160;        <span class=\"comment\">## Associate same index buffer with either render item</span></div>\n\
<div class=\"line\"><a name=\"l06604\"></a><span class=\"lineno\"> 6604</span>&#160;        <span class=\"keywordflow\">if</span> wireIndexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06605\"></a><span class=\"lineno\"> 6605</span>&#160;            item.associateWithIndexBuffer(wireIndexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06606\"></a><span class=\"lineno\"> 6606</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06607\"></a><span class=\"lineno\"> 6607</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForDormantVertices(self, item, data, numTriangles):</div>\n\
<div class=\"line\"><a name=\"l06608\"></a><span class=\"lineno\"> 6608</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw dormant vertices</span></div>\n\
<div class=\"line\"><a name=\"l06609\"></a><span class=\"lineno\"> 6609</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06610\"></a><span class=\"lineno\"> 6610</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06611\"></a><span class=\"lineno\"> 6611</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06612\"></a><span class=\"lineno\"> 6612</span>&#160;            dataAddress = indexBuffer.acquire(3*numTriangles, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06613\"></a><span class=\"lineno\"> 6613</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06614\"></a><span class=\"lineno\"> 6614</span>&#160;                data = (ctypes.c_uint*(3*numTriangles)).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06615\"></a><span class=\"lineno\"> 6615</span>&#160;                <span class=\"comment\">## compute index data for triangulated convex polygons sharing</span></div>\n\
<div class=\"line\"><a name=\"l06616\"></a><span class=\"lineno\"> 6616</span>&#160;                <span class=\"comment\">## poly vertex data among triangles</span></div>\n\
<div class=\"line\"><a name=\"l06617\"></a><span class=\"lineno\"> 6617</span>&#160;                base = 0</div>\n\
<div class=\"line\"><a name=\"l06618\"></a><span class=\"lineno\"> 6618</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l06619\"></a><span class=\"lineno\"> 6619</span>&#160;                <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06620\"></a><span class=\"lineno\"> 6620</span>&#160;                    <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06621\"></a><span class=\"lineno\"> 6621</span>&#160;                    numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06622\"></a><span class=\"lineno\"> 6622</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06623\"></a><span class=\"lineno\"> 6623</span>&#160;                        <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06624\"></a><span class=\"lineno\"> 6624</span>&#160;                            data[idx] = base</div>\n\
<div class=\"line\"><a name=\"l06625\"></a><span class=\"lineno\"> 6625</span>&#160;                            data[idx+1] = base+v</div>\n\
<div class=\"line\"><a name=\"l06626\"></a><span class=\"lineno\"> 6626</span>&#160;                            data[idx+2] = base+v+1</div>\n\
<div class=\"line\"><a name=\"l06627\"></a><span class=\"lineno\"> 6627</span>&#160;                            idx += 3</div>\n\
<div class=\"line\"><a name=\"l06628\"></a><span class=\"lineno\"> 6628</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06629\"></a><span class=\"lineno\"> 6629</span>&#160;                        base += numVerts</div>\n\
<div class=\"line\"><a name=\"l06630\"></a><span class=\"lineno\"> 6630</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06631\"></a><span class=\"lineno\"> 6631</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06632\"></a><span class=\"lineno\"> 6632</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06633\"></a><span class=\"lineno\"> 6633</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06634\"></a><span class=\"lineno\"> 6634</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06635\"></a><span class=\"lineno\"> 6635</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForFaceCenters(self, item, data, debugPopulateGeometry):</div>\n\
<div class=\"line\"><a name=\"l06636\"></a><span class=\"lineno\"> 6636</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw face centers</span></div>\n\
<div class=\"line\"><a name=\"l06637\"></a><span class=\"lineno\"> 6637</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06638\"></a><span class=\"lineno\"> 6638</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06639\"></a><span class=\"lineno\"> 6639</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06640\"></a><span class=\"lineno\"> 6640</span>&#160;            dataAddress = indexBuffer.acquire(self.fMeshGeom.faceCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06641\"></a><span class=\"lineno\"> 6641</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06642\"></a><span class=\"lineno\"> 6642</span>&#160;                data = (ctypes.c_uint * self.fMeshGeom.faceCount).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06643\"></a><span class=\"lineno\"> 6643</span>&#160;                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06644\"></a><span class=\"lineno\"> 6644</span>&#160;                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for face centers&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06645\"></a><span class=\"lineno\"> 6645</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06646\"></a><span class=\"lineno\"> 6646</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06647\"></a><span class=\"lineno\"> 6647</span>&#160;                    data[i] = 0</div>\n\
<div class=\"line\"><a name=\"l06648\"></a><span class=\"lineno\"> 6648</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06649\"></a><span class=\"lineno\"> 6649</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06650\"></a><span class=\"lineno\"> 6650</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l06651\"></a><span class=\"lineno\"> 6651</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06652\"></a><span class=\"lineno\"> 6652</span>&#160;                    <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06653\"></a><span class=\"lineno\"> 6653</span>&#160;                    numVerts = self.fMeshGeom.face_counts[i]</div>\n\
<div class=\"line\"><a name=\"l06654\"></a><span class=\"lineno\"> 6654</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06655\"></a><span class=\"lineno\"> 6655</span>&#160;                        data[idx] = idx</div>\n\
<div class=\"line\"><a name=\"l06656\"></a><span class=\"lineno\"> 6656</span>&#160;                        idx += 1</div>\n\
<div class=\"line\"><a name=\"l06657\"></a><span class=\"lineno\"> 6657</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06658\"></a><span class=\"lineno\"> 6658</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06659\"></a><span class=\"lineno\"> 6659</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06660\"></a><span class=\"lineno\"> 6660</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06661\"></a><span class=\"lineno\"> 6661</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06662\"></a><span class=\"lineno\"> 6662</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForVertices(self, item, data, numTriangles, activeVertexCount, debugPopulateGeometry):</div>\n\
<div class=\"line\"><a name=\"l06663\"></a><span class=\"lineno\"> 6663</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw active vertices</span></div>\n\
<div class=\"line\"><a name=\"l06664\"></a><span class=\"lineno\"> 6664</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06665\"></a><span class=\"lineno\"> 6665</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06666\"></a><span class=\"lineno\"> 6666</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06667\"></a><span class=\"lineno\"> 6667</span>&#160;            dataAddress = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06668\"></a><span class=\"lineno\"> 6668</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06669\"></a><span class=\"lineno\"> 6669</span>&#160;            <span class=\"comment\">## If drawing shared active vertices then the indexing degenerates into</span></div>\n\
<div class=\"line\"><a name=\"l06670\"></a><span class=\"lineno\"> 6670</span>&#160;            <span class=\"comment\">## a numerically increasing index value. Otherwise a remapping from</span></div>\n\
<div class=\"line\"><a name=\"l06671\"></a><span class=\"lineno\"> 6671</span>&#160;            <span class=\"comment\">## the active vertex list indexing to the unshared position stream is required.</span></div>\n\
<div class=\"line\"><a name=\"l06672\"></a><span class=\"lineno\"> 6672</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06673\"></a><span class=\"lineno\"> 6673</span>&#160;            <span class=\"comment\">## 1. Create indexing for shared positions. In this case it</span></div>\n\
<div class=\"line\"><a name=\"l06674\"></a><span class=\"lineno\"> 6674</span>&#160;            <span class=\"comment\">## is a degenerate list since the position buffer was created</span></div>\n\
<div class=\"line\"><a name=\"l06675\"></a><span class=\"lineno\"> 6675</span>&#160;            <span class=\"comment\">## in linear ascending order.</span></div>\n\
<div class=\"line\"><a name=\"l06676\"></a><span class=\"lineno\"> 6676</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06677\"></a><span class=\"lineno\"> 6677</span>&#160;            <span class=\"keywordflow\">if</span> self.fDrawSharedActiveVertices:</div>\n\
<div class=\"line\"><a name=\"l06678\"></a><span class=\"lineno\"> 6678</span>&#160;                dataAddress = indexBuffer.acquire(activeVertexCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06679\"></a><span class=\"lineno\"> 6679</span>&#160;                <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06680\"></a><span class=\"lineno\"> 6680</span>&#160;                    data = (ctypes.c_uint*activeVertexCount).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06681\"></a><span class=\"lineno\"> 6681</span>&#160;                    <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06682\"></a><span class=\"lineno\"> 6682</span>&#160;                        print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for shared vertices&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06683\"></a><span class=\"lineno\"> 6683</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06684\"></a><span class=\"lineno\"> 6684</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(activeVertexCount):</div>\n\
<div class=\"line\"><a name=\"l06685\"></a><span class=\"lineno\"> 6685</span>&#160;                        data[i] = i</div>\n\
<div class=\"line\"><a name=\"l06686\"></a><span class=\"lineno\"> 6686</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06687\"></a><span class=\"lineno\"> 6687</span>&#160;            <span class=\"comment\">## 2. Create indexing to remap to unshared positions</span></div>\n\
<div class=\"line\"><a name=\"l06688\"></a><span class=\"lineno\"> 6688</span>&#160;            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06689\"></a><span class=\"lineno\"> 6689</span>&#160;            <span class=\"keywordflow\">else</span>:</div>\n\
<div class=\"line\"><a name=\"l06690\"></a><span class=\"lineno\"> 6690</span>&#160;                <span class=\"keywordflow\">if</span> debugPopulateGeometry:</div>\n\
<div class=\"line\"><a name=\"l06691\"></a><span class=\"lineno\"> 6691</span>&#160;                    print(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for unshared vertices&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06692\"></a><span class=\"lineno\"> 6692</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06693\"></a><span class=\"lineno\"> 6693</span>&#160;                vertexCount = 3*numTriangles</div>\n\
<div class=\"line\"><a name=\"l06694\"></a><span class=\"lineno\"> 6694</span>&#160;                dataAddress = indexBuffer.acquire(vertexCount, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06695\"></a><span class=\"lineno\"> 6695</span>&#160;                <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06696\"></a><span class=\"lineno\"> 6696</span>&#160;                    data = (ctypes.c_uint*vertexCount).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06697\"></a><span class=\"lineno\"> 6697</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(vertexCount):</div>\n\
<div class=\"line\"><a name=\"l06698\"></a><span class=\"lineno\"> 6698</span>&#160;                        data[i] = vertexCount+1</div>\n\
<div class=\"line\"><a name=\"l06699\"></a><span class=\"lineno\"> 6699</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06700\"></a><span class=\"lineno\"> 6700</span>&#160;                    selectionIdSet = self.fActiveVerticesSet</div>\n\
<div class=\"line\"><a name=\"l06701\"></a><span class=\"lineno\"> 6701</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06702\"></a><span class=\"lineno\"> 6702</span>&#160;                    <span class=\"comment\">## compute index data for triangulated convex polygons sharing</span></div>\n\
<div class=\"line\"><a name=\"l06703\"></a><span class=\"lineno\"> 6703</span>&#160;                    <span class=\"comment\">## poly vertex data among triangles</span></div>\n\
<div class=\"line\"><a name=\"l06704\"></a><span class=\"lineno\"> 6704</span>&#160;                    base = 0</div>\n\
<div class=\"line\"><a name=\"l06705\"></a><span class=\"lineno\"> 6705</span>&#160;                    lastFound = 0</div>\n\
<div class=\"line\"><a name=\"l06706\"></a><span class=\"lineno\"> 6706</span>&#160;                    idx = 0</div>\n\
<div class=\"line\"><a name=\"l06707\"></a><span class=\"lineno\"> 6707</span>&#160;                    <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06708\"></a><span class=\"lineno\"> 6708</span>&#160;                        <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06709\"></a><span class=\"lineno\"> 6709</span>&#160;                        numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06710\"></a><span class=\"lineno\"> 6710</span>&#160;                        <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06711\"></a><span class=\"lineno\"> 6711</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06712\"></a><span class=\"lineno\"> 6712</span>&#160;                                vertexId = self.fMeshGeom.face_connects[base]</div>\n\
<div class=\"line\"><a name=\"l06713\"></a><span class=\"lineno\"> 6713</span>&#160;                                <span class=\"keywordflow\">if</span> vertexId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06714\"></a><span class=\"lineno\"> 6714</span>&#160;                                    lastFound = base</div>\n\
<div class=\"line\"><a name=\"l06715\"></a><span class=\"lineno\"> 6715</span>&#160;                                    data[idx] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06716\"></a><span class=\"lineno\"> 6716</span>&#160;                                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l06717\"></a><span class=\"lineno\"> 6717</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06718\"></a><span class=\"lineno\"> 6718</span>&#160;                                vertexId = self.fMeshGeom.face_connects[base+v]</div>\n\
<div class=\"line\"><a name=\"l06719\"></a><span class=\"lineno\"> 6719</span>&#160;                                <span class=\"keywordflow\">if</span> vertexId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06720\"></a><span class=\"lineno\"> 6720</span>&#160;                                    lastFound = base+v</div>\n\
<div class=\"line\"><a name=\"l06721\"></a><span class=\"lineno\"> 6721</span>&#160;                                    data[idx] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06722\"></a><span class=\"lineno\"> 6722</span>&#160;                                    idx += 1</div>\n\
<div class=\"line\"><a name=\"l06723\"></a><span class=\"lineno\"> 6723</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06724\"></a><span class=\"lineno\"> 6724</span>&#160;                                vertexId = self.fMeshGeom.face_connects[base+v+1]</div>\n\
<div class=\"line\"><a name=\"l06725\"></a><span class=\"lineno\"> 6725</span>&#160;                                <span class=\"keywordflow\">if</span> vertexId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06726\"></a><span class=\"lineno\"> 6726</span>&#160;                                    lastFound = base+v+1</div>\n\
<div class=\"line\"><a name=\"l06727\"></a><span class=\"lineno\"> 6727</span>&#160;                                    data[idx] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06728\"></a><span class=\"lineno\"> 6728</span>&#160;                                    idx +1</div>\n\
<div class=\"line\"><a name=\"l06729\"></a><span class=\"lineno\"> 6729</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06730\"></a><span class=\"lineno\"> 6730</span>&#160;                            base += numVerts</div>\n\
<div class=\"line\"><a name=\"l06731\"></a><span class=\"lineno\"> 6731</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06732\"></a><span class=\"lineno\"> 6732</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(vertexCount):</div>\n\
<div class=\"line\"><a name=\"l06733\"></a><span class=\"lineno\"> 6733</span>&#160;                        <span class=\"keywordflow\">if</span> data[i] == vertexCount+1:</div>\n\
<div class=\"line\"><a name=\"l06734\"></a><span class=\"lineno\"> 6734</span>&#160;                            data[i] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06735\"></a><span class=\"lineno\"> 6735</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06736\"></a><span class=\"lineno\"> 6736</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06737\"></a><span class=\"lineno\"> 6737</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06738\"></a><span class=\"lineno\"> 6738</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06739\"></a><span class=\"lineno\"> 6739</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06740\"></a><span class=\"lineno\"> 6740</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06741\"></a><span class=\"lineno\"> 6741</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForEdges(self, item, data, totalVerts, fromSelection):</div>\n\
<div class=\"line\"><a name=\"l06742\"></a><span class=\"lineno\"> 6742</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw affected edges</span></div>\n\
<div class=\"line\"><a name=\"l06743\"></a><span class=\"lineno\"> 6743</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06744\"></a><span class=\"lineno\"> 6744</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06745\"></a><span class=\"lineno\"> 6745</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06746\"></a><span class=\"lineno\"> 6746</span>&#160;            totalEdges = 2*totalVerts</div>\n\
<div class=\"line\"><a name=\"l06747\"></a><span class=\"lineno\"> 6747</span>&#160;            totalEdgesP1 = 2*totalVerts+1</div>\n\
<div class=\"line\"><a name=\"l06748\"></a><span class=\"lineno\"> 6748</span>&#160;            dataAddress = indexBuffer.acquire(totalEdges, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06749\"></a><span class=\"lineno\"> 6749</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06750\"></a><span class=\"lineno\"> 6750</span>&#160;                data = (ctypes.c_uint*totalEdges).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06751\"></a><span class=\"lineno\"> 6751</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(totalEdges):</div>\n\
<div class=\"line\"><a name=\"l06752\"></a><span class=\"lineno\"> 6752</span>&#160;                    data[i] = totalEdgesP1</div>\n\
<div class=\"line\"><a name=\"l06753\"></a><span class=\"lineno\"> 6753</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06754\"></a><span class=\"lineno\"> 6754</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06755\"></a><span class=\"lineno\"> 6755</span>&#160;                displayAll = <span class=\"keywordflow\">not</span> fromSelection</div>\n\
<div class=\"line\"><a name=\"l06756\"></a><span class=\"lineno\"> 6756</span>&#160;                displayActives = (<span class=\"keywordflow\">not</span> displayAll <span class=\"keywordflow\">and</span> bool(self.fActiveEdgesSet))</div>\n\
<div class=\"line\"><a name=\"l06757\"></a><span class=\"lineno\"> 6757</span>&#160;                displayAffected = (<span class=\"keywordflow\">not</span> displayAll <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> displayActives)</div>\n\
<div class=\"line\"><a name=\"l06758\"></a><span class=\"lineno\"> 6758</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06759\"></a><span class=\"lineno\"> 6759</span>&#160;                selectionIdSet = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06760\"></a><span class=\"lineno\"> 6760</span>&#160;                <span class=\"keywordflow\">if</span> displayActives:</div>\n\
<div class=\"line\"><a name=\"l06761\"></a><span class=\"lineno\"> 6761</span>&#160;                    selectionIdSet = self.fActiveEdgesSet</div>\n\
<div class=\"line\"><a name=\"l06762\"></a><span class=\"lineno\"> 6762</span>&#160;                <span class=\"keywordflow\">elif</span> displayAffected:</div>\n\
<div class=\"line\"><a name=\"l06763\"></a><span class=\"lineno\"> 6763</span>&#160;                    selectionIdSet = self.fActiveVerticesSet</div>\n\
<div class=\"line\"><a name=\"l06764\"></a><span class=\"lineno\"> 6764</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06765\"></a><span class=\"lineno\"> 6765</span>&#160;                base = 0</div>\n\
<div class=\"line\"><a name=\"l06766\"></a><span class=\"lineno\"> 6766</span>&#160;                lastFound = 0</div>\n\
<div class=\"line\"><a name=\"l06767\"></a><span class=\"lineno\"> 6767</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l06768\"></a><span class=\"lineno\"> 6768</span>&#160;                edgeId = 0</div>\n\
<div class=\"line\"><a name=\"l06769\"></a><span class=\"lineno\"> 6769</span>&#160;                <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06770\"></a><span class=\"lineno\"> 6770</span>&#160;                    <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06771\"></a><span class=\"lineno\"> 6771</span>&#160;                    numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06772\"></a><span class=\"lineno\"> 6772</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06773\"></a><span class=\"lineno\"> 6773</span>&#160;                        <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(numVerts):</div>\n\
<div class=\"line\"><a name=\"l06774\"></a><span class=\"lineno\"> 6774</span>&#160;                            enableEdge = displayAll</div>\n\
<div class=\"line\"><a name=\"l06775\"></a><span class=\"lineno\"> 6775</span>&#160;                            vindex1 = base + (v % numVerts)</div>\n\
<div class=\"line\"><a name=\"l06776\"></a><span class=\"lineno\"> 6776</span>&#160;                            vindex2 = base + ((v+1) % numVerts)</div>\n\
<div class=\"line\"><a name=\"l06777\"></a><span class=\"lineno\"> 6777</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06778\"></a><span class=\"lineno\"> 6778</span>&#160;                            <span class=\"keywordflow\">if</span> displayAffected:</div>\n\
<div class=\"line\"><a name=\"l06779\"></a><span class=\"lineno\"> 6779</span>&#160;                                <span class=\"comment\">## Check either ends of an &quot;edge&quot; to see if the</span></div>\n\
<div class=\"line\"><a name=\"l06780\"></a><span class=\"lineno\"> 6780</span>&#160;                                <span class=\"comment\">## vertex is in the active vertex list</span></div>\n\
<div class=\"line\"><a name=\"l06781\"></a><span class=\"lineno\"> 6781</span>&#160;                                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06782\"></a><span class=\"lineno\"> 6782</span>&#160;                                vertexId = self.fMeshGeom.face_connects[vindex1]</div>\n\
<div class=\"line\"><a name=\"l06783\"></a><span class=\"lineno\"> 6783</span>&#160;                                <span class=\"keywordflow\">if</span> vertexId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06784\"></a><span class=\"lineno\"> 6784</span>&#160;                                    enableEdge = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06785\"></a><span class=\"lineno\"> 6785</span>&#160;                                    lastFound = vindex1</div>\n\
<div class=\"line\"><a name=\"l06786\"></a><span class=\"lineno\"> 6786</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06787\"></a><span class=\"lineno\"> 6787</span>&#160;                                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> enableEdge:</div>\n\
<div class=\"line\"><a name=\"l06788\"></a><span class=\"lineno\"> 6788</span>&#160;                                    vertexId2 = self.fMeshGeom.face_connects[vindex2]</div>\n\
<div class=\"line\"><a name=\"l06789\"></a><span class=\"lineno\"> 6789</span>&#160;                                    <span class=\"keywordflow\">if</span> vertexId2 <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06790\"></a><span class=\"lineno\"> 6790</span>&#160;                                        enableEdge = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06791\"></a><span class=\"lineno\"> 6791</span>&#160;                                        lastFound = vindex2</div>\n\
<div class=\"line\"><a name=\"l06792\"></a><span class=\"lineno\"> 6792</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06793\"></a><span class=\"lineno\"> 6793</span>&#160;                            <span class=\"keywordflow\">elif</span> displayActives:</div>\n\
<div class=\"line\"><a name=\"l06794\"></a><span class=\"lineno\"> 6794</span>&#160;                                <span class=\"comment\">## Check if the edge is active</span></div>\n\
<div class=\"line\"><a name=\"l06795\"></a><span class=\"lineno\"> 6795</span>&#160;                                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06796\"></a><span class=\"lineno\"> 6796</span>&#160;                                <span class=\"keywordflow\">if</span> edgeId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06797\"></a><span class=\"lineno\"> 6797</span>&#160;                                    enableEdge = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06798\"></a><span class=\"lineno\"> 6798</span>&#160;                                    lastFound = vindex1</div>\n\
<div class=\"line\"><a name=\"l06799\"></a><span class=\"lineno\"> 6799</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06800\"></a><span class=\"lineno\"> 6800</span>&#160;                            <span class=\"comment\">## Add indices for &quot;edge&quot;</span></div>\n\
<div class=\"line\"><a name=\"l06801\"></a><span class=\"lineno\"> 6801</span>&#160;                            <span class=\"keywordflow\">if</span> enableEdge:</div>\n\
<div class=\"line\"><a name=\"l06802\"></a><span class=\"lineno\"> 6802</span>&#160;                                data[idx] = vindex1</div>\n\
<div class=\"line\"><a name=\"l06803\"></a><span class=\"lineno\"> 6803</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l06804\"></a><span class=\"lineno\"> 6804</span>&#160;                                data[idx] = vindex2</div>\n\
<div class=\"line\"><a name=\"l06805\"></a><span class=\"lineno\"> 6805</span>&#160;                                idx += 1</div>\n\
<div class=\"line\"><a name=\"l06806\"></a><span class=\"lineno\"> 6806</span>&#160;                            edgeId += 1</div>\n\
<div class=\"line\"><a name=\"l06807\"></a><span class=\"lineno\"> 6807</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06808\"></a><span class=\"lineno\"> 6808</span>&#160;                        base += numVerts</div>\n\
<div class=\"line\"><a name=\"l06809\"></a><span class=\"lineno\"> 6809</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06810\"></a><span class=\"lineno\"> 6810</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> displayAll:</div>\n\
<div class=\"line\"><a name=\"l06811\"></a><span class=\"lineno\"> 6811</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(totalEdges):</div>\n\
<div class=\"line\"><a name=\"l06812\"></a><span class=\"lineno\"> 6812</span>&#160;                        <span class=\"keywordflow\">if</span> data[i] == totalEdgesP1:</div>\n\
<div class=\"line\"><a name=\"l06813\"></a><span class=\"lineno\"> 6813</span>&#160;                            data[i] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06814\"></a><span class=\"lineno\"> 6814</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06815\"></a><span class=\"lineno\"> 6815</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06816\"></a><span class=\"lineno\"> 6816</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06817\"></a><span class=\"lineno\"> 6817</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06818\"></a><span class=\"lineno\"> 6818</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06819\"></a><span class=\"lineno\"> 6819</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForFaces(self, item, data, numTriangles, fromSelection):</div>\n\
<div class=\"line\"><a name=\"l06820\"></a><span class=\"lineno\"> 6820</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw affected/active faces</span></div>\n\
<div class=\"line\"><a name=\"l06821\"></a><span class=\"lineno\"> 6821</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06822\"></a><span class=\"lineno\"> 6822</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06823\"></a><span class=\"lineno\"> 6823</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06824\"></a><span class=\"lineno\"> 6824</span>&#160;            numTriangleVertices = 3*numTriangles</div>\n\
<div class=\"line\"><a name=\"l06825\"></a><span class=\"lineno\"> 6825</span>&#160;            dataAddress = indexBuffer.acquire(numTriangleVertices, <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06826\"></a><span class=\"lineno\"> 6826</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06827\"></a><span class=\"lineno\"> 6827</span>&#160;                data = (ctypes.c_uint*numTriangleVertices).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06828\"></a><span class=\"lineno\"> 6828</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(numTriangleVertices):</div>\n\
<div class=\"line\"><a name=\"l06829\"></a><span class=\"lineno\"> 6829</span>&#160;                    data[i] = numTriangleVertices+1</div>\n\
<div class=\"line\"><a name=\"l06830\"></a><span class=\"lineno\"> 6830</span>&#160;                    <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l06831\"></a><span class=\"lineno\"> 6831</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06832\"></a><span class=\"lineno\"> 6832</span>&#160;                displayAll = <span class=\"keywordflow\">not</span> fromSelection</div>\n\
<div class=\"line\"><a name=\"l06833\"></a><span class=\"lineno\"> 6833</span>&#160;                displayActives = (<span class=\"keywordflow\">not</span> displayAll <span class=\"keywordflow\">and</span> bool(self.fActiveFacesSet))</div>\n\
<div class=\"line\"><a name=\"l06834\"></a><span class=\"lineno\"> 6834</span>&#160;                displayAffected = (<span class=\"keywordflow\">not</span> displayAll <span class=\"keywordflow\">and</span> <span class=\"keywordflow\">not</span> displayActives)</div>\n\
<div class=\"line\"><a name=\"l06835\"></a><span class=\"lineno\"> 6835</span>&#160;                isolateSelect = item.isIsolateSelectCopy()</div>\n\
<div class=\"line\"><a name=\"l06836\"></a><span class=\"lineno\"> 6836</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l06837\"></a><span class=\"lineno\"> 6837</span>&#160;                enableFaces = []</div>\n\
<div class=\"line\"><a name=\"l06838\"></a><span class=\"lineno\"> 6838</span>&#160;                if(isolateSelect):</div>\n\
<div class=\"line\"><a name=\"l06839\"></a><span class=\"lineno\"> 6839</span>&#160;                    enableFaces = [0] * self.fMeshGeom.faceCount</div>\n\
<div class=\"line\"><a name=\"l06840\"></a><span class=\"lineno\"> 6840</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l06841\"></a><span class=\"lineno\"> 6841</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06842\"></a><span class=\"lineno\"> 6842</span>&#160;                        enableFaces[i] = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l06843\"></a><span class=\"lineno\"> 6843</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06844\"></a><span class=\"lineno\"> 6844</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06845\"></a><span class=\"lineno\"> 6845</span>&#160;                    fnComponent = om.MFnSingleIndexedComponent( item.shadingComponent() )</div>\n\
<div class=\"line\"><a name=\"l06846\"></a><span class=\"lineno\"> 6846</span>&#160;                    if(fnComponent.componentType == om.MFn.kMeshPolygonComponent):</div>\n\
<div class=\"line\"><a name=\"l06847\"></a><span class=\"lineno\"> 6847</span>&#160;                        faceIds = fnComponent.getElements()</div>\n\
<div class=\"line\"><a name=\"l06848\"></a><span class=\"lineno\"> 6848</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l06849\"></a><span class=\"lineno\"> 6849</span>&#160;                        <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(faceIds)):</div>\n\
<div class=\"line\"><a name=\"l06850\"></a><span class=\"lineno\"> 6850</span>&#160;                            enableFaces[faceIds[i]] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06851\"></a><span class=\"lineno\"> 6851</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06852\"></a><span class=\"lineno\"> 6852</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06853\"></a><span class=\"lineno\"> 6853</span>&#160;                selectionIdSet = <span class=\"keywordtype\">None</span></div>\n\
<div class=\"line\"><a name=\"l06854\"></a><span class=\"lineno\"> 6854</span>&#160;                <span class=\"keywordflow\">if</span> displayActives:</div>\n\
<div class=\"line\"><a name=\"l06855\"></a><span class=\"lineno\"> 6855</span>&#160;                    selectionIdSet = self.fActiveFacesSet</div>\n\
<div class=\"line\"><a name=\"l06856\"></a><span class=\"lineno\"> 6856</span>&#160;                <span class=\"keywordflow\">elif</span> displayAffected:</div>\n\
<div class=\"line\"><a name=\"l06857\"></a><span class=\"lineno\"> 6857</span>&#160;                    selectionIdSet = self.fActiveVerticesSet</div>\n\
<div class=\"line\"><a name=\"l06858\"></a><span class=\"lineno\"> 6858</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06859\"></a><span class=\"lineno\"> 6859</span>&#160;                base = 0</div>\n\
<div class=\"line\"><a name=\"l06860\"></a><span class=\"lineno\"> 6860</span>&#160;                lastFound = 0</div>\n\
<div class=\"line\"><a name=\"l06861\"></a><span class=\"lineno\"> 6861</span>&#160;                idx = 0</div>\n\
<div class=\"line\"><a name=\"l06862\"></a><span class=\"lineno\"> 6862</span>&#160;                <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06863\"></a><span class=\"lineno\"> 6863</span>&#160;                    <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06864\"></a><span class=\"lineno\"> 6864</span>&#160;                    numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06865\"></a><span class=\"lineno\"> 6865</span>&#160;                    <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06866\"></a><span class=\"lineno\"> 6866</span>&#160;                        enableFace = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l06867\"></a><span class=\"lineno\"> 6867</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06868\"></a><span class=\"lineno\"> 6868</span>&#160;                        <span class=\"keywordflow\">if</span> displayAffected:</div>\n\
<div class=\"line\"><a name=\"l06869\"></a><span class=\"lineno\"> 6869</span>&#160;                            <span class=\"comment\">## Scan for any vertex in the active list</span></div>\n\
<div class=\"line\"><a name=\"l06870\"></a><span class=\"lineno\"> 6870</span>&#160;                            <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06871\"></a><span class=\"lineno\"> 6871</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06872\"></a><span class=\"lineno\"> 6872</span>&#160;                                vertexId = self.fMeshGeom.face_connects[base]</div>\n\
<div class=\"line\"><a name=\"l06873\"></a><span class=\"lineno\"> 6873</span>&#160;                                <span class=\"keywordflow\">if</span> vertexId <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06874\"></a><span class=\"lineno\"> 6874</span>&#160;                                    enableFace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06875\"></a><span class=\"lineno\"> 6875</span>&#160;                                    lastFound = base</div>\n\
<div class=\"line\"><a name=\"l06876\"></a><span class=\"lineno\"> 6876</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06877\"></a><span class=\"lineno\"> 6877</span>&#160;                                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> enableFace:</div>\n\
<div class=\"line\"><a name=\"l06878\"></a><span class=\"lineno\"> 6878</span>&#160;                                    vertexId2 = self.fMeshGeom.face_connects[base+v]</div>\n\
<div class=\"line\"><a name=\"l06879\"></a><span class=\"lineno\"> 6879</span>&#160;                                    <span class=\"keywordflow\">if</span> vertexId2 <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06880\"></a><span class=\"lineno\"> 6880</span>&#160;                                        enableFace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06881\"></a><span class=\"lineno\"> 6881</span>&#160;                                        lastFound = base+v</div>\n\
<div class=\"line\"><a name=\"l06882\"></a><span class=\"lineno\"> 6882</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06883\"></a><span class=\"lineno\"> 6883</span>&#160;                                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> enableFace:</div>\n\
<div class=\"line\"><a name=\"l06884\"></a><span class=\"lineno\"> 6884</span>&#160;                                    vertexId3 = self.fMeshGeom.face_connects[base+v+1]</div>\n\
<div class=\"line\"><a name=\"l06885\"></a><span class=\"lineno\"> 6885</span>&#160;                                    <span class=\"keywordflow\">if</span> vertexId3 <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06886\"></a><span class=\"lineno\"> 6886</span>&#160;                                        enableFace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06887\"></a><span class=\"lineno\"> 6887</span>&#160;                                        lastFound = base+v+1</div>\n\
<div class=\"line\"><a name=\"l06888\"></a><span class=\"lineno\"> 6888</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06889\"></a><span class=\"lineno\"> 6889</span>&#160;                        <span class=\"keywordflow\">elif</span> displayActives:</div>\n\
<div class=\"line\"><a name=\"l06890\"></a><span class=\"lineno\"> 6890</span>&#160;                            <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> isolateSelect <span class=\"keywordflow\">or</span> enableFaces[faceIdx]):</div>\n\
<div class=\"line\"><a name=\"l06891\"></a><span class=\"lineno\"> 6891</span>&#160;                                <span class=\"comment\">## Check if the face is active</span></div>\n\
<div class=\"line\"><a name=\"l06892\"></a><span class=\"lineno\"> 6892</span>&#160;                                <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06893\"></a><span class=\"lineno\"> 6893</span>&#160;                                <span class=\"keywordflow\">if</span> faceIdx <span class=\"keywordflow\">in</span> selectionIdSet:</div>\n\
<div class=\"line\"><a name=\"l06894\"></a><span class=\"lineno\"> 6894</span>&#160;                                    enableFace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06895\"></a><span class=\"lineno\"> 6895</span>&#160;                                    lastFound = base</div>\n\
<div class=\"line\"><a name=\"l06896\"></a><span class=\"lineno\"> 6896</span>&#160;                        <span class=\"keywordflow\">elif</span> (<span class=\"keywordflow\">not</span> isolateSelect <span class=\"keywordflow\">or</span> enableFaces[faceIdx]):</div>\n\
<div class=\"line\"><a name=\"l06897\"></a><span class=\"lineno\"> 6897</span>&#160;                            enableFace = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06898\"></a><span class=\"lineno\"> 6898</span>&#160;                            lastFound  = base</div>\n\
<div class=\"line\"><a name=\"l06899\"></a><span class=\"lineno\"> 6899</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l06900\"></a><span class=\"lineno\"> 6900</span>&#160;                        </div>\n\
<div class=\"line\"><a name=\"l06901\"></a><span class=\"lineno\"> 6901</span>&#160;                        <span class=\"comment\">## Found an active face</span></div>\n\
<div class=\"line\"><a name=\"l06902\"></a><span class=\"lineno\"> 6902</span>&#160;                        <span class=\"comment\">## or one active vertex on the triangle so add indexing for the entire triangle.</span></div>\n\
<div class=\"line\"><a name=\"l06903\"></a><span class=\"lineno\"> 6903</span>&#160;                        <span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06904\"></a><span class=\"lineno\"> 6904</span>&#160;                        <span class=\"keywordflow\">if</span> enableFace:</div>\n\
<div class=\"line\"><a name=\"l06905\"></a><span class=\"lineno\"> 6905</span>&#160;                            <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06906\"></a><span class=\"lineno\"> 6906</span>&#160;                                data[idx] = base</div>\n\
<div class=\"line\"><a name=\"l06907\"></a><span class=\"lineno\"> 6907</span>&#160;                                data[idx+1] = base+v</div>\n\
<div class=\"line\"><a name=\"l06908\"></a><span class=\"lineno\"> 6908</span>&#160;                                data[idx+2] = base+v+1</div>\n\
<div class=\"line\"><a name=\"l06909\"></a><span class=\"lineno\"> 6909</span>&#160;                                idx += 3</div>\n\
<div class=\"line\"><a name=\"l06910\"></a><span class=\"lineno\"> 6910</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06911\"></a><span class=\"lineno\"> 6911</span>&#160;                        base += numVerts</div>\n\
<div class=\"line\"><a name=\"l06912\"></a><span class=\"lineno\"> 6912</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06913\"></a><span class=\"lineno\"> 6913</span>&#160;                <span class=\"keywordflow\">if</span> <span class=\"keywordflow\">not</span> displayAll:</div>\n\
<div class=\"line\"><a name=\"l06914\"></a><span class=\"lineno\"> 6914</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(numTriangleVertices):</div>\n\
<div class=\"line\"><a name=\"l06915\"></a><span class=\"lineno\"> 6915</span>&#160;                        <span class=\"keywordflow\">if</span> data[i] == numTriangleVertices+1:</div>\n\
<div class=\"line\"><a name=\"l06916\"></a><span class=\"lineno\"> 6916</span>&#160;                            data[i] = lastFound</div>\n\
<div class=\"line\"><a name=\"l06917\"></a><span class=\"lineno\"> 6917</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06918\"></a><span class=\"lineno\"> 6918</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06919\"></a><span class=\"lineno\"> 6919</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06920\"></a><span class=\"lineno\"> 6920</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06921\"></a><span class=\"lineno\"> 6921</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06922\"></a><span class=\"lineno\"> 6922</span>&#160;    <span class=\"keyword\">def </span>updateIndexingForShadedTriangles(self, item, data, numTriangles):</div>\n\
<div class=\"line\"><a name=\"l06923\"></a><span class=\"lineno\"> 6923</span>&#160;        <span class=\"comment\">## Create / update indexing for render items which draw filled / shaded</span></div>\n\
<div class=\"line\"><a name=\"l06924\"></a><span class=\"lineno\"> 6924</span>&#160;        <span class=\"comment\">## triangles.</span></div>\n\
<div class=\"line\"><a name=\"l06925\"></a><span class=\"lineno\"> 6925</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l06926\"></a><span class=\"lineno\"> 6926</span>&#160;        indexBuffer = data.createIndexBuffer(omr.MGeometry.kUnsignedInt32)</div>\n\
<div class=\"line\"><a name=\"l06927\"></a><span class=\"lineno\"> 6927</span>&#160;        <span class=\"keywordflow\">if</span> indexBuffer:</div>\n\
<div class=\"line\"><a name=\"l06928\"></a><span class=\"lineno\"> 6928</span>&#160;            isolateSelect = item.isIsolateSelectCopy()</div>\n\
<div class=\"line\"><a name=\"l06929\"></a><span class=\"lineno\"> 6929</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l06930\"></a><span class=\"lineno\"> 6930</span>&#160;            enableFaces = []</div>\n\
<div class=\"line\"><a name=\"l06931\"></a><span class=\"lineno\"> 6931</span>&#160;            <span class=\"keywordflow\">if</span> (isolateSelect):</div>\n\
<div class=\"line\"><a name=\"l06932\"></a><span class=\"lineno\"> 6932</span>&#160;                enableFaces = [0] * self.fMeshGeom.faceCount</div>\n\
<div class=\"line\"><a name=\"l06933\"></a><span class=\"lineno\"> 6933</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l06934\"></a><span class=\"lineno\"> 6934</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06935\"></a><span class=\"lineno\"> 6935</span>&#160;                    enableFaces[i] = <span class=\"keyword\">False</span></div>\n\
<div class=\"line\"><a name=\"l06936\"></a><span class=\"lineno\"> 6936</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06937\"></a><span class=\"lineno\"> 6937</span>&#160;                fnComponent = om.MFnSingleIndexedComponent( item.shadingComponent() )</div>\n\
<div class=\"line\"><a name=\"l06938\"></a><span class=\"lineno\"> 6938</span>&#160;                if(fnComponent.componentType == om.MFn.kMeshPolygonComponent):</div>\n\
<div class=\"line\"><a name=\"l06939\"></a><span class=\"lineno\"> 6939</span>&#160;                    faceIds = fnComponent.getElements()</div>\n\
<div class=\"line\"><a name=\"l06940\"></a><span class=\"lineno\"> 6940</span>&#160;                    </div>\n\
<div class=\"line\"><a name=\"l06941\"></a><span class=\"lineno\"> 6941</span>&#160;                    <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(faceIds)):</div>\n\
<div class=\"line\"><a name=\"l06942\"></a><span class=\"lineno\"> 6942</span>&#160;                        enableFaces[faceIds[i]] = <span class=\"keyword\">True</span></div>\n\
<div class=\"line\"><a name=\"l06943\"></a><span class=\"lineno\"> 6943</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l06944\"></a><span class=\"lineno\"> 6944</span>&#160;            indices = [0] * numTriangles * 3</div>\n\
<div class=\"line\"><a name=\"l06945\"></a><span class=\"lineno\"> 6945</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l06946\"></a><span class=\"lineno\"> 6946</span>&#160;            base = 0</div>\n\
<div class=\"line\"><a name=\"l06947\"></a><span class=\"lineno\"> 6947</span>&#160;            idx = 0</div>\n\
<div class=\"line\"><a name=\"l06948\"></a><span class=\"lineno\"> 6948</span>&#160;            <span class=\"keywordflow\">for</span> faceIdx <span class=\"keywordflow\">in</span> range(self.fMeshGeom.faceCount):</div>\n\
<div class=\"line\"><a name=\"l06949\"></a><span class=\"lineno\"> 6949</span>&#160;                <span class=\"comment\">## ignore degenerate faces</span></div>\n\
<div class=\"line\"><a name=\"l06950\"></a><span class=\"lineno\"> 6950</span>&#160;                numVerts = self.fMeshGeom.face_counts[faceIdx]</div>\n\
<div class=\"line\"><a name=\"l06951\"></a><span class=\"lineno\"> 6951</span>&#160;                <span class=\"keywordflow\">if</span> numVerts &gt; 2:</div>\n\
<div class=\"line\"><a name=\"l06952\"></a><span class=\"lineno\"> 6952</span>&#160;                    <span class=\"keywordflow\">if</span> (<span class=\"keywordflow\">not</span> isolateSelect <span class=\"keywordflow\">or</span> enableFaces[faceIdx]):</div>\n\
<div class=\"line\"><a name=\"l06953\"></a><span class=\"lineno\"> 6953</span>&#160;                        <span class=\"keywordflow\">for</span> v <span class=\"keywordflow\">in</span> range(1, numVerts-1):</div>\n\
<div class=\"line\"><a name=\"l06954\"></a><span class=\"lineno\"> 6954</span>&#160;                            indices[idx] = base</div>\n\
<div class=\"line\"><a name=\"l06955\"></a><span class=\"lineno\"> 6955</span>&#160;                            indices[idx+1] = base+v</div>\n\
<div class=\"line\"><a name=\"l06956\"></a><span class=\"lineno\"> 6956</span>&#160;                            indices[idx+2] = base+v+1</div>\n\
<div class=\"line\"><a name=\"l06957\"></a><span class=\"lineno\"> 6957</span>&#160;                            idx += 3</div>\n\
<div class=\"line\"><a name=\"l06958\"></a><span class=\"lineno\"> 6958</span>&#160;                    base += numVerts</div>\n\
<div class=\"line\"><a name=\"l06959\"></a><span class=\"lineno\"> 6959</span>&#160;            </div>\n\
<div class=\"line\"><a name=\"l06960\"></a><span class=\"lineno\"> 6960</span>&#160;            dataAddress = indexBuffer.acquire(len(indices), <span class=\"keyword\">True</span>) <span class=\"comment\">## writeOnly - we don&#39;t need the current buffer values</span></div>\n\
<div class=\"line\"><a name=\"l06961\"></a><span class=\"lineno\"> 6961</span>&#160;            <span class=\"keywordflow\">if</span> dataAddress:</div>\n\
<div class=\"line\"><a name=\"l06962\"></a><span class=\"lineno\"> 6962</span>&#160;                data = (ctypes.c_uint * len(indices)).from_address(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06963\"></a><span class=\"lineno\"> 6963</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l06964\"></a><span class=\"lineno\"> 6964</span>&#160;                <span class=\"keywordflow\">for</span> i <span class=\"keywordflow\">in</span> range(len(indices)):</div>\n\
<div class=\"line\"><a name=\"l06965\"></a><span class=\"lineno\"> 6965</span>&#160;                    data[i] = indices[i]</div>\n\
<div class=\"line\"><a name=\"l06966\"></a><span class=\"lineno\"> 6966</span>&#160;                </div>\n\
<div class=\"line\"><a name=\"l06967\"></a><span class=\"lineno\"> 6967</span>&#160;                indexBuffer.commit(dataAddress)</div>\n\
<div class=\"line\"><a name=\"l06968\"></a><span class=\"lineno\"> 6968</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06969\"></a><span class=\"lineno\"> 6969</span>&#160;            item.associateWithIndexBuffer(indexBuffer)</div>\n\
<div class=\"line\"><a name=\"l06970\"></a><span class=\"lineno\"> 6970</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06971\"></a><span class=\"lineno\"> 6971</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l06972\"></a><span class=\"lineno\"> 6972</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06973\"></a><span class=\"lineno\"> 6973</span>&#160;<span class=\"comment\">## Node registry</span></div>\n\
<div class=\"line\"><a name=\"l06974\"></a><span class=\"lineno\"> 6974</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06975\"></a><span class=\"lineno\"> 6975</span>&#160;<span class=\"comment\">## Registers/Deregisters apiMeshData geometry data,</span></div>\n\
<div class=\"line\"><a name=\"l06976\"></a><span class=\"lineno\"> 6976</span>&#160;<span class=\"comment\">## apiMeshCreator DG node, and apiMeshShape user defined shape.</span></div>\n\
<div class=\"line\"><a name=\"l06977\"></a><span class=\"lineno\"> 6977</span>&#160;<span class=\"comment\">##</span></div>\n\
<div class=\"line\"><a name=\"l06978\"></a><span class=\"lineno\"> 6978</span>&#160;<span class=\"comment\">################################################################################</span></div>\n\
<div class=\"line\"><a name=\"l06979\"></a><span class=\"lineno\"> 6979</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06980\"></a><span class=\"lineno\"> 6980</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06981\"></a><span class=\"lineno\"> 6981</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06982\"></a><span class=\"lineno\"> 6982</span>&#160;<span class=\"keyword\">def </span>initializePlugin(obj):</div>\n\
<div class=\"line\"><a name=\"l06983\"></a><span class=\"lineno\"> 6983</span>&#160;    plugin = om.MFnPlugin(obj, <span class=\"stringliteral\">&quot;Autodesk&quot;</span>, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06984\"></a><span class=\"lineno\"> 6984</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06985\"></a><span class=\"lineno\"> 6985</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l06986\"></a><span class=\"lineno\"> 6986</span>&#160;        plugin.registerData(<span class=\"stringliteral\">&quot;apiMeshData_py&quot;</span>, apiMeshData.id, apiMeshData.creator, om.MPxData.kGeometryData)</div>\n\
<div class=\"line\"><a name=\"l06987\"></a><span class=\"lineno\"> 6987</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l06988\"></a><span class=\"lineno\"> 6988</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register data\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06989\"></a><span class=\"lineno\"> 6989</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l06990\"></a><span class=\"lineno\"> 6990</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06991\"></a><span class=\"lineno\"> 6991</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l06992\"></a><span class=\"lineno\"> 6992</span>&#160;        plugin.registerShape(<span class=\"stringliteral\">&quot;apiMesh_py&quot;</span>, apiMeshGeometryShape.id, apiMeshGeometryShape.creator, apiMeshGeometryShape.initialize, apiMeshUI.creator, apiMeshGeometryShape.sDrawDbClassification)</div>\n\
<div class=\"line\"><a name=\"l06993\"></a><span class=\"lineno\"> 6993</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l06994\"></a><span class=\"lineno\"> 6994</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l06995\"></a><span class=\"lineno\"> 6995</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l06996\"></a><span class=\"lineno\"> 6996</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l06997\"></a><span class=\"lineno\"> 6997</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l06998\"></a><span class=\"lineno\"> 6998</span>&#160;        plugin.registerShape(<span class=\"stringliteral\">&quot;apiMeshSubscene_py&quot;</span>, apiMeshSubsceneShape.id, apiMeshSubsceneShape.creator, apiMeshSubsceneShape.initialize, apiMeshUI.creator, apiMeshSubsceneShape.sDrawDbClassification)</div>\n\
<div class=\"line\"><a name=\"l06999\"></a><span class=\"lineno\"> 6999</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07000\"></a><span class=\"lineno\"> 7000</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07001\"></a><span class=\"lineno\"> 7001</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07002\"></a><span class=\"lineno\"> 7002</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07003\"></a><span class=\"lineno\"> 7003</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07004\"></a><span class=\"lineno\"> 7004</span>&#160;        plugin.registerNode(<span class=\"stringliteral\">&quot;apiMeshCreator_py&quot;</span>, apiMeshCreator.id, apiMeshCreator.creator, apiMeshCreator.initialize)</div>\n\
<div class=\"line\"><a name=\"l07005\"></a><span class=\"lineno\"> 7005</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07006\"></a><span class=\"lineno\"> 7006</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07007\"></a><span class=\"lineno\"> 7007</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07008\"></a><span class=\"lineno\"> 7008</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07009\"></a><span class=\"lineno\"> 7009</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07010\"></a><span class=\"lineno\"> 7010</span>&#160;        omr.MDrawRegistry.registerGeometryOverrideCreator(apiMeshGeometryShape.sDrawDbClassification, apiMesh.sDrawRegistrantId, apiMeshGeometryOverride.creator)</div>\n\
<div class=\"line\"><a name=\"l07011\"></a><span class=\"lineno\"> 7011</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07012\"></a><span class=\"lineno\"> 7012</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register override\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07013\"></a><span class=\"lineno\"> 7013</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07014\"></a><span class=\"lineno\"> 7014</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07015\"></a><span class=\"lineno\"> 7015</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07016\"></a><span class=\"lineno\"> 7016</span>&#160;        omr.MDrawRegistry.registerSubSceneOverrideCreator(apiMeshSubsceneShape.sDrawDbClassification, apiMesh.sDrawRegistrantId, apiMeshSubSceneOverride.creator)</div>\n\
<div class=\"line\"><a name=\"l07017\"></a><span class=\"lineno\"> 7017</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07018\"></a><span class=\"lineno\"> 7018</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register override\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07019\"></a><span class=\"lineno\"> 7019</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07020\"></a><span class=\"lineno\"> 7020</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07021\"></a><span class=\"lineno\"> 7021</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07022\"></a><span class=\"lineno\"> 7022</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshGeometryOverride.sVertexItemName, meshVertComponentConverterGeometryOverride.creator)</div>\n\
<div class=\"line\"><a name=\"l07023\"></a><span class=\"lineno\"> 7023</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshGeometryOverride.sEdgeSelectionItemName, meshEdgeComponentConverterGeometryOverride.creator)</div>\n\
<div class=\"line\"><a name=\"l07024\"></a><span class=\"lineno\"> 7024</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshGeometryOverride.sFaceSelectionItemName, meshFaceComponentConverterGeometryOverride.creator)</div>\n\
<div class=\"line\"><a name=\"l07025\"></a><span class=\"lineno\"> 7025</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07026\"></a><span class=\"lineno\"> 7026</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register component converters\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07027\"></a><span class=\"lineno\"> 7027</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07028\"></a><span class=\"lineno\"> 7028</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07029\"></a><span class=\"lineno\"> 7029</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07030\"></a><span class=\"lineno\"> 7030</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshSubSceneOverride.sVertexSelectionName, simpleComponentConverterSubsceneOverride.creatorVertexSelection)</div>\n\
<div class=\"line\"><a name=\"l07031\"></a><span class=\"lineno\"> 7031</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshSubSceneOverride.sEdgeSelectionName, simpleComponentConverterSubsceneOverride.creatorEdgeSelection)</div>\n\
<div class=\"line\"><a name=\"l07032\"></a><span class=\"lineno\"> 7032</span>&#160;        omr.MDrawRegistry.registerComponentConverter(apiMeshSubSceneOverride.sFaceSelectionName, simpleComponentConverterSubsceneOverride.creatorFaceSelection)</div>\n\
<div class=\"line\"><a name=\"l07033\"></a><span class=\"lineno\"> 7033</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07034\"></a><span class=\"lineno\"> 7034</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to register component converters\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07035\"></a><span class=\"lineno\"> 7035</span>&#160;        <span class=\"keywordflow\">raise</span></div>\n\
<div class=\"line\"><a name=\"l07036\"></a><span class=\"lineno\"> 7036</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07037\"></a><span class=\"lineno\"> 7037</span>&#160;<span class=\"keyword\">def </span>uninitializePlugin(obj):</div>\n\
<div class=\"line\"><a name=\"l07038\"></a><span class=\"lineno\"> 7038</span>&#160;    plugin = om.MFnPlugin(obj)</div>\n\
<div class=\"line\"><a name=\"l07039\"></a><span class=\"lineno\"> 7039</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07040\"></a><span class=\"lineno\"> 7040</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshSubSceneOverride.sVertexSelectionName)</div>\n\
<div class=\"line\"><a name=\"l07041\"></a><span class=\"lineno\"> 7041</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshSubSceneOverride.sEdgeSelectionName)</div>\n\
<div class=\"line\"><a name=\"l07042\"></a><span class=\"lineno\"> 7042</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshSubSceneOverride.sFaceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l07043\"></a><span class=\"lineno\"> 7043</span>&#160;    </div>\n\
<div class=\"line\"><a name=\"l07044\"></a><span class=\"lineno\"> 7044</span>&#160;    <span class=\"comment\">## Deregister component converter for isolate select render items</span></div>\n\
<div class=\"line\"><a name=\"l07045\"></a><span class=\"lineno\"> 7045</span>&#160;    <span class=\"keywordflow\">for</span> faceSelectionName <span class=\"keywordflow\">in</span> sViewSelectedFaceSelectionNames:</div>\n\
<div class=\"line\"><a name=\"l07046\"></a><span class=\"lineno\"> 7046</span>&#160;        omr.MDrawRegistry.deregisterComponentConverter(faceSelectionName)</div>\n\
<div class=\"line\"><a name=\"l07047\"></a><span class=\"lineno\"> 7047</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07048\"></a><span class=\"lineno\"> 7048</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07049\"></a><span class=\"lineno\"> 7049</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshGeometryOverride.sVertexItemName)</div>\n\
<div class=\"line\"><a name=\"l07050\"></a><span class=\"lineno\"> 7050</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshGeometryOverride.sEdgeSelectionItemName)</div>\n\
<div class=\"line\"><a name=\"l07051\"></a><span class=\"lineno\"> 7051</span>&#160;    omr.MDrawRegistry.deregisterComponentConverter(apiMeshGeometryOverride.sFaceSelectionItemName)</div>\n\
<div class=\"line\"><a name=\"l07052\"></a><span class=\"lineno\"> 7052</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07053\"></a><span class=\"lineno\"> 7053</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07054\"></a><span class=\"lineno\"> 7054</span>&#160;        omr.MDrawRegistry.deregisterGeometryOverrideCreator(apiMeshGeometryShape.sDrawDbClassification, apiMesh.sDrawRegistrantId)</div>\n\
<div class=\"line\"><a name=\"l07055\"></a><span class=\"lineno\"> 7055</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07056\"></a><span class=\"lineno\"> 7056</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister override\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07057\"></a><span class=\"lineno\"> 7057</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07058\"></a><span class=\"lineno\"> 7058</span>&#160;        </div>\n\
<div class=\"line\"><a name=\"l07059\"></a><span class=\"lineno\"> 7059</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07060\"></a><span class=\"lineno\"> 7060</span>&#160;        omr.MDrawRegistry.deregisterSubSceneOverrideCreator(apiMeshSubsceneShape.sDrawDbClassification, apiMesh.sDrawRegistrantId)</div>\n\
<div class=\"line\"><a name=\"l07061\"></a><span class=\"lineno\"> 7061</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07062\"></a><span class=\"lineno\"> 7062</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister override\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07063\"></a><span class=\"lineno\"> 7063</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07064\"></a><span class=\"lineno\"> 7064</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07065\"></a><span class=\"lineno\"> 7065</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07066\"></a><span class=\"lineno\"> 7066</span>&#160;        plugin.deregisterNode(apiMeshCreator.id)</div>\n\
<div class=\"line\"><a name=\"l07067\"></a><span class=\"lineno\"> 7067</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07068\"></a><span class=\"lineno\"> 7068</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07069\"></a><span class=\"lineno\"> 7069</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07070\"></a><span class=\"lineno\"> 7070</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07071\"></a><span class=\"lineno\"> 7071</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07072\"></a><span class=\"lineno\"> 7072</span>&#160;        plugin.deregisterNode(apiMeshSubsceneShape.id)</div>\n\
<div class=\"line\"><a name=\"l07073\"></a><span class=\"lineno\"> 7073</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07074\"></a><span class=\"lineno\"> 7074</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07075\"></a><span class=\"lineno\"> 7075</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07076\"></a><span class=\"lineno\"> 7076</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07077\"></a><span class=\"lineno\"> 7077</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07078\"></a><span class=\"lineno\"> 7078</span>&#160;        plugin.deregisterNode(apiMeshGeometryShape.id)</div>\n\
<div class=\"line\"><a name=\"l07079\"></a><span class=\"lineno\"> 7079</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07080\"></a><span class=\"lineno\"> 7080</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister node\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07081\"></a><span class=\"lineno\"> 7081</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07082\"></a><span class=\"lineno\"> 7082</span>&#160;</div>\n\
<div class=\"line\"><a name=\"l07083\"></a><span class=\"lineno\"> 7083</span>&#160;    <span class=\"keywordflow\">try</span>:</div>\n\
<div class=\"line\"><a name=\"l07084\"></a><span class=\"lineno\"> 7084</span>&#160;        plugin.deregisterData(apiMeshData.id)</div>\n\
<div class=\"line\"><a name=\"l07085\"></a><span class=\"lineno\"> 7085</span>&#160;    <span class=\"keywordflow\">except</span>:</div>\n\
<div class=\"line\"><a name=\"l07086\"></a><span class=\"lineno\"> 7086</span>&#160;        sys.stderr.write(<span class=\"stringliteral\">&quot;Failed to deregister data\\n&quot;</span>)</div>\n\
<div class=\"line\"><a name=\"l07087\"></a><span class=\"lineno\"> 7087</span>&#160;        <span class=\"keywordflow\">pass</span></div>\n\
<div class=\"line\"><a name=\"l07088\"></a><span class=\"lineno\"> 7088</span>&#160;</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";