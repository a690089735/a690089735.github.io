var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: nodeCreatedCBCmd/nodeCreatedCBCmd.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'node_created_c_b_cmd_2node_created_c_b_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: nodeCreatedCBCmd/nodeCreatedCBCmd.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">nodeCreatedCBCmd/nodeCreatedCBCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// MEL Command: nodeCreatedCB</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      A simple plugin to register a mel proc to be called whenever a node is </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      created. Registered Mel procedures should be declared to take a single</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      string argument (the name of the added node).</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Warning: mel procedures registered with this method will be called </span></div>\n\
<div class=\"line\"><span class=\"comment\">//               whenever a node is added to the DG. This may cause problems</span></div>\n\
<div class=\"line\"><span class=\"comment\">//               in certain cases. For example: each time a reference is </span></div>\n\
<div class=\"line\"><span class=\"comment\">//               reloaded, each of its nodes is re-added to the DG.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Flags:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -register/-r string: registers a mel callback. There is no limit</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                           to the number of callbacks that can be registered.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -unregister/-u string: unregister the specified callback.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -filter/-f string: by default all registered callbacks will be called</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         whenever any node is created. Using the filter flag</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         you can indicate that callbacks should only be</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         called when certain node types are created.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         To determine the type of a particular node see the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         &#39;objectType&#39; and &#39;nodeType&#39; commands.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         Note: only one filter can be in affect at a time,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         and it will be applied to all registered callbacks.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -fullDagPath/-fdp: if this flag is specified when registering a </span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         callback, any dag node names passed into the mel</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                         procedure will include the full dag path.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Note:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The -register, -unregister, and -filter flags are mutually exclusive, </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      only one should be used per command invocation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Important:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Do not delete the node in your callback.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Example Usage:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// // Appends the suffix &#39;_ply&#39; to all created mesh nodes</span></div>\n\
<div class=\"line\"><span class=\"comment\">// //</span></div>\n\
<div class=\"line\"><span class=\"comment\">// global proc myCB( string $node )</span></div>\n\
<div class=\"line\"><span class=\"comment\">// {</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      print(&quot;calling polyCB &quot; + $node + &quot;\\n&quot;);</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      string $type = `objectType $node`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      if ( $type == &quot;mesh&quot; ) {</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          rename $node ($node+&quot;_ply&quot;);</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      }   </span></div>\n\
<div class=\"line\"><span class=\"comment\">// }</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// nodeCreatedCB -register &quot;myCB&quot;;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;nodeCreatedCBCmd.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDGMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kRegisterFlagLong       &quot;-register&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kRegisterFlag           &quot;-r&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kUnregisterFlagLong     &quot;-unregister&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kUnregisterFlag         &quot;-u&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kFilterFlagLong         &quot;-filter&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kFilterFlag             &quot;-f&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kFullDagPathFlagLong    &quot;-fullDagPath&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kFullDagPathFlag        &quot;-fdp&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The id of the API callback. The API callback must be removed when this</span></div>\n\
<div class=\"line\"><span class=\"comment\">// plug-in is unloaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">MCallbackId     nodeCreatedCB::sId;</div>\n\
<div class=\"line\"><span class=\"comment\">// The array of all registered Mel procedures.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>    nodeCreatedCB::sMelProcs;</div>\n\
<div class=\"line\"><span class=\"comment\">// Flags to indicate whether or not a mel procedure should be passed the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// short or long names of dag nodes.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>       nodeCreatedCB::sFullDagPath;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> nodeCreatedCB::doIt( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      implements the MEL nodeCreatedCB command.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> argData( syntax(), args );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Parse command flags.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( argData.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kRegisterFlag ) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Register a new procedure.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> proc;</div>\n\
<div class=\"line\">        argData.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>( kRegisterFlag, 0, proc );</div>\n\
<div class=\"line\">        stat = registerMelProc( proc, argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kFullDagPathFlag ) );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kUnregisterFlag ) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Unregister a procedure.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> proc;</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>( kUnregisterFlag, 0, proc );</div>\n\
<div class=\"line\">        stat = unregisterMelProc( proc );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>( kFilterFlag ) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Change the filter being applied.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filter;</div>\n\
<div class=\"line\">        argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html#aa1c9ea1e3dfcbc32469b4a158b236337\">getFlagArgument</a>( kFilterFlag, 0, filter );</div>\n\
<div class=\"line\">        stat = changeFilter( filter );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a38cc0cf6cb8c20b57ae92558f887569e\">error</a>() ) {</div>\n\
<div class=\"line\">        <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>( stat.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#ad57d0c926a6ff0c782bfa67278925863\">errorString</a>() );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> nodeCreatedCB::registerMelProc( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> melProc, <span class=\"keywordtype\">bool</span> fullDagPath )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Register a Mel procedure to be called whenever a node is added.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( melProc.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0 ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Basic error checking. An empty string is not a valid mel procedure</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// name</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        stat = MS::kFailure;</div>\n\
<div class=\"line\">        stat.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;invalid mel callback: &quot;</span> + melProc);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    nodeCreatedCB::sMelProcs.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( melProc );</div>\n\
<div class=\"line\">    nodeCreatedCB::sFullDagPath.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( fullDagPath );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> nodeCreatedCB::unregisterMelProc( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> melProc )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Unregister a Mel procedure.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kFailure;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numProcs = nodeCreatedCB::sMelProcs.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; numProcs; i++ ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Search the array of registered callbacks for melProc and</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// remove it. If melProc exists more than once, only one instance</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// of it will be removed.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( nodeCreatedCB::sMelProcs[i] == melProc ) {</div>\n\
<div class=\"line\">            nodeCreatedCB::sMelProcs.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#af05b9926a5e8e7b8e7a9e98a13c839b6\">remove</a>(i);</div>\n\
<div class=\"line\">            nodeCreatedCB::sFullDagPath.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#af05b9926a5e8e7b8e7a9e98a13c839b6\">remove</a>(i);</div>\n\
<div class=\"line\">            stat = MS::kSuccess;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Report an error if melProc was not found.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(melProc + <span class=\"stringliteral\">&quot; is not a registered callback.&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> nodeCreatedCB::changeFilter( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filter )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Change the node type filter.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = MS::kSuccess;</div>\n\
<div class=\"line\">    <span class=\"comment\">// We don&#39;t want to add sCallbackFunc more than once as that will cause</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// all registered Mel procs to be called multiple times. So we first</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// remove, then re-add the callback.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MDGMessage::removeCallback</a>( nodeCreatedCB::sId );</div>\n\
<div class=\"line\">    nodeCreatedCB::sId = <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_message.html#aef31b6b5f1f5dca4f49c848dfff9e566\">MDGMessage::addNodeAddedCallback</a>( nodeCreatedCB::sCallbackFunc, filter );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> nodeCreatedCB::sCallbackFunc( <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node, <span class=\"keywordtype\">void</span>* clientData )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The API callback called whenever a node is added. This function handles</span></div>\n\
<div class=\"line\"><span class=\"comment\">// calling all registered MEL callbacks and passing them the appropriate</span></div>\n\
<div class=\"line\"><span class=\"comment\">// node name argument.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numProcs = nodeCreatedCB::sMelProcs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; numProcs; i++ ) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> melCmd = nodeCreatedCB::sMelProcs[i];</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> nodeName;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( nodeCreatedCB::sFullDagPath[i] &amp;&amp; </div>\n\
<div class=\"line\">             node.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>( <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a7f6b3e140a92b64ca6c088012cca49af\">MFn::kDagNode</a> ) ) {</div>\n\
<div class=\"line\">            <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagObj( node );</div>\n\
<div class=\"line\">            nodeName = dagObj.fullPathName();</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dn( node );</div>\n\
<div class=\"line\">            nodeName = dn.name();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        melCmd += <span class=\"stringliteral\">&quot; \\&quot;&quot;</span> + nodeName + <span class=\"stringliteral\">&quot;\\&quot;&quot;</span>;</div>\n\
<div class=\"line\">        <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>( melCmd );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> nodeCreatedCB::newSyntax()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Create the syntax object for the nodeCreateCB command.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( kRegisterFlag, kRegisterFlagLong, <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( kUnregisterFlag, kUnregisterFlagLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( kFilterFlag, kFilterFlagLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( kFullDagPathFlag, kFullDagPathFlagLong );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">                                                        </div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* nodeCreatedCB::creator()                                      </div>\n\
<div class=\"line\">{                                                               </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> nodeCreatedCB;                                       </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">                                                            </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )                     </div>\n\
<div class=\"line\">{                                                               </div>\n\
<div class=\"line\">    <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span> );               </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     stat;                                           </div>\n\
<div class=\"line\">    stat = plugin.registerCommand( <span class=\"stringliteral\">&quot;nodeCreatedCB&quot;</span>,                 </div>\n\
<div class=\"line\">                                    nodeCreatedCB::creator,</div>\n\
<div class=\"line\">                                    nodeCreatedCB::newSyntax );     </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )                                                </div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerCommand&quot;</span>); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// add the API callback.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    nodeCreatedCB::sId = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_message.html#aef31b6b5f1f5dca4f49c848dfff9e566\">MDGMessage::addNodeAddedCallback</a>( nodeCreatedCB::sCallbackFunc );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;                                                </div>\n\
<div class=\"line\">}                                                               </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )                       </div>\n\
<div class=\"line\">{                                                               </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj );                                  </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     stat;                                           </div>\n\
<div class=\"line\">    stat = plugin.deregisterCommand( <span class=\"stringliteral\">&quot;nodeCreatedCB&quot;</span> );             </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )                                                </div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterCommand&quot;</span>);                       </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Remove the API callback, necessary to prevent crashes.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MDGMessage::removeCallback</a>( nodeCreatedCB::sId );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    nodeCreatedCB::sMelProcs.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    nodeCreatedCB::sFullDagPath.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;                                                </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";