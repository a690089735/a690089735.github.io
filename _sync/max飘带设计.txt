1.类似magicspring和dynamicbone,基于跟随的方案.
简单快速易实现


2.类似magicacloth,基于点(粒子)的方案.(更便于各种约束的实现,比如碰撞,两端固定,面状约束,挤压拉伸,断裂等)
但是对于轴的处理不太友好,两个方向轴还好,尤其是自转轴很难处理(仅参考父级的话,好像也好处理)
三维点应该在创建时带有方向性,但是如何处理方向和自转轴是个问题.
magicacloth只能使用距离碰撞,我们应该混合一个长方体碰撞,长方体碰撞也能更好的处理自转方向.


最简化参数
刚度(柔软度反义,刚度越小,)
质量(推拉的参考,惯性的参考,变形的参考,重力加速的参考)
重力(有方向的力,这种东西应该可以有多个,应该可以制作动画)
阻尼(停止运动的衰减,如果阻尼是0,则一直进行简谐运动,阻尼可使任何力产生衰减)
塑性(复原力反义,塑性越低,复原力越大,复原力用于控制回到帧姿态,复原力大于其他力,则不断还原,还原也受阻尼影响)
摩擦(一种接触衰减力)
这些参数应当可K帧

功能

选项
拟合(按拟合值,尽量拟合已有的关键帧.)


更简单的方案
可以用pytroch或者tensflow制作一个拟合ai,根据手K的链动画拟合链调动力学(包括部分固定和碰撞体,其实就是基于碰撞体和固定点和自由粒子的拟合.随便用哪个软件调一些随机参数即可创建训练数据,当然,也要有很多手K的飘带,比如草飘等)
提供碰撞体,固定点,粒子序列,所有粒子关键帧状态,碰撞体,固定点的每帧状态.
输出每帧粒子序列状态

应该可拉伸(关键帧存在拉伸时更容易拉伸,不存在拉伸时很难发生拉伸)