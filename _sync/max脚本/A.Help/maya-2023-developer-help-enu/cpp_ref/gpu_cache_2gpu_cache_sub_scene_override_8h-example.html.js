var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: gpuCache/gpuCacheSubSceneOverride.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'gpu_cache_2gpu_cache_sub_scene_override_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: gpuCache/gpuCacheSubSceneOverride.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">gpuCache/gpuCacheSubSceneOverride.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _gpuCacheSubSceneOverride_h_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _gpuCacheSubSceneOverride_h_</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk </span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic </span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//**************************************************************************/</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;gpuCacheShapeNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;CacheReader.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;memory&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;time.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPathArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxSubSceneOverride.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCallbackIdArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMessage.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>GPUCache {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>ShapeNode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * CLASS SubSceneOverride</span></div>\n\
<div class=\"line\"><span class=\"comment\"> *============================================================================*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Handles the drawing of the cached geometry in the viewport 2.0.</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>SubSceneOverride : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\">MHWRender::MPxSubSceneOverride</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Callback method to create a new MPxSubSceneOverride</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\">MHWRender::MPxSubSceneOverride</a>* creator(<span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; <span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Clear all Viewport 2.0 buffers.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the Viewport 2.0 index buffer.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>*  lookup(<span class=\"keyword\">const</span> std::shared_ptr&lt;const IndexBuffer&gt;&amp; indices);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the Viewport 2.0 vertex buffer.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* lookup(<span class=\"keyword\">const</span> std::shared_ptr&lt;const VertexBuffer&gt;&amp; vertices);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Constructor and Destructor</span></div>\n\
<div class=\"line\">    SubSceneOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; <span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\">    ~SubSceneOverride() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Overrides</span></div>\n\
<div class=\"line\">    MHWRender::DrawAPI supportedDrawAPIs() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> requiresUpdate(<span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp; container,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp;      frameContext) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> update(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> getInstancedSelectionPath(<span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; renderItem, <span class=\"keyword\">const</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MHWRender::MIntersection</a>&amp; intersection, <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; dagPath) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateSelectionGranularity(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MHWRender::MSelectionContext</a>&amp; selectionContext) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Dirty methods (called from Callbacks)</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyEverything();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyRenderItems();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyVisibility();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyWorldMatrix();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyStreams();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dirtyMaterials();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> resetDagPaths();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register node dirty callbacks.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> registerNodeDirtyCallbacks();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> clearNodeDirtyCallbacks();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Current state methods</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> SubNode::Ptr&amp;          getGeometry()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fGeometry; }</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> MaterialGraphMap::Ptr&amp; getMaterial()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fMaterial;}</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>                       getTime()<span class=\"keyword\">     const </span>{ <span class=\"keywordflow\">return</span> fTimeInSeconds; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> castsShadows()<span class=\"keyword\">   const </span>{ <span class=\"keywordflow\">return</span> fCastsShadowsPlug.asBool(); }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> receiveShadows()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> fReceiveShadowsPlug.asBool(); }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Hardware instancing</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>HardwareInstanceManager;</div>\n\
<div class=\"line\">    std::shared_ptr&lt;HardwareInstanceManager&gt;&amp; hardwareInstanceManager()</div>\n\
<div class=\"line\">    { <span class=\"keywordflow\">return</span> fHardwareInstanceManager; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update methods</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateRenderItems(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                           <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateVisibility(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                          <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateWorldMatrix(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                           <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateStreams(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                       <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> updateMaterials(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp;  container,</div>\n\
<div class=\"line\">                         <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Pruning non-animated sub-hierarchy.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>HierarchyStat;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>HierarchyStatVisitor;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> std::shared_ptr&lt;const HierarchyStat&gt;&amp; getHierarchyStat()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{ <span class=\"keywordflow\">return</span> fHierarchyStat; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>    fObject;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> ShapeNode* fShapeNode;</div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>            fCastsShadowsPlug;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>            fReceiveShadowsPlug;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CacheFileEntry::BackgroundReadingState fReadingState{CacheFileEntry::kReadingDone};</div>\n\
<div class=\"line\">    SubNode::Ptr                           fGeometry;</div>\n\
<div class=\"line\">    MaterialGraphMap::Ptr                  fMaterial;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>                                 fTimeInSeconds;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clock_t fUpdateTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Callbacks</span></div>\n\
<div class=\"line\">    MCallbackId fInstanceAddedCallback;</div>\n\
<div class=\"line\">    MCallbackId fInstanceRemovedCallback;</div>\n\
<div class=\"line\">    MCallbackId fWorldMatrixChangedCallback;</div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html\">MCallbackIdArray</a> fNodeDirtyCallbacks;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Dirty flags</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fUpdateRenderItemsRequired;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fUpdateVisibilityRequired;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fUpdateWorldMatrixRequired;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fUpdateStreamsRequired;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fUpdateMaterialsRequired;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fOutOfViewFrustum;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> fOutOfViewFrustumUpdated;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Wireframe on Shaded mode: Full/Reduced/None</span></div>\n\
<div class=\"line\">    DisplayPref::WireframeOnShadedMode fWireOnShadedMode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The render items for all instances of this gpuCache node.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>SubNodeRenderItems;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>UpdateRenderItemsVisitor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> DERIVED&gt; <span class=\"keyword\">class </span>UpdateVisitorWithPrune;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>UpdateVisibilityVisitor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>UpdateWorldMatrixVisitor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>UpdateStreamsVisitor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>UpdateDiffuseColorVisitor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>InstanceRenderItems;</div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> std::vector&lt;std::shared_ptr&lt;InstanceRenderItems&gt; &gt; InstanceRenderItemList;</div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> std::vector&lt;std::shared_ptr&lt;SubNodeRenderItems&gt; &gt;  SubNodeRenderItemList;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html\">MDagPathArray</a>          fInstanceDagPaths;</div>\n\
<div class=\"line\">    InstanceRenderItemList fInstanceRenderItems;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The hierarchy status to help pruning.</span></div>\n\
<div class=\"line\">    std::shared_ptr&lt;const HierarchyStat&gt; fHierarchyStat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Manages all hardware instances. NULL if hardware instancing is disabled.</span></div>\n\
<div class=\"line\">    std::shared_ptr&lt;HardwareInstanceManager&gt; fHardwareInstanceManager;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">} <span class=\"comment\">// namespace GPUCache</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";