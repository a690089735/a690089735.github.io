var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: geometryCacheConverter/geometryCacheFile.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'geometry_cache_converter_2geometry_cache_file_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: geometryCacheConverter/geometryCacheFile.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">geometryCacheConverter/geometryCacheFile.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2020 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// File Name: geometryCacheFile.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : An interface used for reading cache file data, storing it </span></div>\n\
<div class=\"line\"><span class=\"comment\">// and converting it to ASCII. See geometryCacheFile.h for file format info.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">// Project includes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheFile.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheBlockBase.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheBlockStringData.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheBlockIntData.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheBlockDVAData.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryCacheBlockFVAData.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Maya includes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/flib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Other includes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;fstream&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined (__APPLE__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;malloc.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Methods</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\">geometryCacheFile::geometryCacheFile( <span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; fileName, <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_file.html\">MIffFile</a>* iffFile )</div>\n\
<div class=\"line\">    :cacheFileName( fileName )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Constructor</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{   </div>\n\
<div class=\"line\">    readStatus = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    iffFilePtr = iffFile;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">geometryCacheFile::~geometryCacheFile()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Destructor</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Free all the pointers in the blockList.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Start from the back of the list, delete the pointer returned then </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// pop it off the stack.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>( blockList.size() )</div>\n\
<div class=\"line\">    {   </div>\n\
<div class=\"line\">        <span class=\"comment\">// Get current pointer</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        geometryCacheBlockBase * block = blockList.back();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> block;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Pop the back item of the stack</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        blockList.pop_back();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Close the cache file</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    iffFilePtr-&gt;<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_file.html#a0a34ca7b49311218db7cf12792d11f2d\">close</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; geometryCacheFile::fileName()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns the file name</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> cacheFileName;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span>&amp; geometryCacheFile::isRead()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Indicates if the file has been read</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> readStatus;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readCacheFiles()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read the cache file</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{   </div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Attempt to open the file</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    status = iffFilePtr-&gt;open( cacheFileName );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !status ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Proceed if the file is open</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( iffFilePtr-&gt;isActive() ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Read the Header</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        readStatus  = readHeaderGroup( status );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Read all the channel groups</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">do</span> {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Read the next channel group</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            readStatus = readChannelGroup( status );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">while</span> ( status == MS::kSuccess );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// If file failed to open</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::convertToAscii()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( public method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Convert the file to Ascii</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Generate an output file name by changing the file name extention to txt</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> loc = cacheFileName.rindex(<span class=\"charliteral\">&#39;.&#39;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> outputFileName = cacheFileName.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(0, loc-1);</div>\n\
<div class=\"line\">    outputFileName += <span class=\"stringliteral\">&quot;.txt&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create an output file steam to flush our data to ascii</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    std::ofstream oFile( outputFileName.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>() );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !oFile.bad() ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Create an iterator to iterate through the blockList</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        cacheBlockIterator blockIt;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Write out all the blocks in the blockList</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( blockIt = blockList.begin();</div>\n\
<div class=\"line\">            blockIt != blockList.end();</div>\n\
<div class=\"line\">            blockIt++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the current block</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            geometryCacheBlockBase* block = *blockIt;</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"comment\">// OutputToAscii</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            block-&gt;outputToAscii( oFile );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// If output file stream could not open the file</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Output a message to indicate that the file has been converted</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>( <span class=\"stringliteral\">&quot;Converted file \\&quot;&quot;</span> +</div>\n\
<div class=\"line\">                            cacheFileName +</div>\n\
<div class=\"line\">                            <span class=\"stringliteral\">&quot;\\&quot; to file \\&quot;&quot;</span> +</div>\n\
<div class=\"line\">                            outputFileName + </div>\n\
<div class=\"line\">                            <span class=\"stringliteral\">&quot;\\&quot;&quot;</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readHeaderGroup( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; status )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read the Header group CACH. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The header of every disk cache file consists of these tags</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      CACH    ( header group )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      VRSN    ( version )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      STIM    ( startTime in ticks )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      ETIM    ( endTime in ticks )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> cachTag;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = iffFilePtr-&gt;beginReadGroup( tmpTag, cachTag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( status ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( cachTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;A&#39;</span>, <span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;H&#39;</span>) ) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Store a &quot;CACH&quot; tag into the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;CACH&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Read the header version</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            readStatus = readHeaderVersion();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Read the Time Range</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            readStatus = readHeaderTimeRange();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Store an ending &quot;/CACH&quot; tag into the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;/CACH&quot;</span> );</div>\n\
<div class=\"line\">        }       </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    iffFilePtr-&gt;endReadGroup();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readHeaderVersion()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the cache file version from the VRSN block.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    status = iffFilePtr-&gt;beginGet( tmpTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !status ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> *tmpName = (<span class=\"keywordtype\">char</span>*)alloca(<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">char</span>)* (byteCount+1));</div>\n\
<div class=\"line\">    <span class=\"comment\">//pointers allocated by alloca are from the stack and automatically freed when</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//the function exits.  Do not free explicitly.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( tmpName &amp;&amp; tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;V&#39;</span>, <span class=\"charliteral\">&#39;R&#39;</span>, <span class=\"charliteral\">&#39;S&#39;</span>, <span class=\"charliteral\">&#39;N&#39;</span>) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// read the data from the block</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        iffFilePtr-&gt;get( tmpName, byteCount, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !status ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Store the cache file version in the blockList</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        storeCacheBlock( <span class=\"stringliteral\">&quot;VRSN&quot;</span>, tmpName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        status = iffFilePtr-&gt;endGet();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !status ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readHeaderTimeRange()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the start and end time from the STIM and ETIM blocks.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The data from these blocks are only used for multiple cache files.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      If the cache file is a single cache file, then the values will only be </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      from 0 to 1.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *startTime = (<span class=\"keywordtype\">int</span> *)iffFilePtr-&gt;getChunk( tmpTag, (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *)&amp;byteCount );  </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( startTime == NULL ||</div>\n\
<div class=\"line\">        <span class=\"comment\">// There is no != operator for MIffTag</span></div>\n\
<div class=\"line\">        !(tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> (<span class=\"charliteral\">&#39;S&#39;</span>, <span class=\"charliteral\">&#39;T&#39;</span>, <span class=\"charliteral\">&#39;I&#39;</span>, <span class=\"charliteral\">&#39;M&#39;</span>)) ||</div>\n\
<div class=\"line\">        byteCount != <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Store the start time in the blockList</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    storeCacheBlock( <span class=\"stringliteral\">&quot;STIM&quot;</span>, FLswapword(*startTime) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *endTime = (<span class=\"keywordtype\">int</span> *)iffFilePtr-&gt;getChunk( tmpTag, (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *)&amp;byteCount );  </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( endTime == NULL ||</div>\n\
<div class=\"line\">        !(tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;E&#39;</span>, <span class=\"charliteral\">&#39;T&#39;</span>, <span class=\"charliteral\">&#39;I&#39;</span>, <span class=\"charliteral\">&#39;M&#39;</span>)) ||</div>\n\
<div class=\"line\">        byteCount != <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Store the end time in the blockList</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    storeCacheBlock( <span class=\"stringliteral\">&quot;ETIM&quot;</span>, FLswapword(*endTime) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readChannelGroup( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; groupStatus )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read the channel group MYCH.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The channel group can consist of these following tags</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MYCH    ( time group )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      TIME    ( time in ticks )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      CHNM    ( channel name )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      SIZE    ( size )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      DVCA    ( geometry point data )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> mychTag;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    groupStatus = iffFilePtr-&gt;beginReadGroup(tmpTag, mychTag);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( groupStatus == MS::kSuccess ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( mychTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;M&#39;</span>, <span class=\"charliteral\">&#39;Y&#39;</span>, <span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;H&#39;</span>)) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Store the &quot;MYCH&quot; group in the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;MYCH&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the next tag</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = iffFilePtr-&gt;beginGet(tmpTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// If the tag is TIME, then this is a single file cache file</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// Read the time chunk before the channel name chunk</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;T&#39;</span>, <span class=\"charliteral\">&#39;I&#39;</span>, <span class=\"charliteral\">&#39;M&#39;</span>, <span class=\"charliteral\">&#39;E&#39;</span>) )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Read channel time</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                readStatus = readChannelTime();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// End Get</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                stat = iffFilePtr-&gt;endGet();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!stat) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Read Channel</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> channelStatus = MS::kSuccess;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">do</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Read channel name, size and data</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                readStatus = readChannel( channelStatus );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">while</span> ( channelStatus == MS::kSuccess );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Store the ending &quot;/MYCH&quot; in the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;/MYCH&quot;</span> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } </div>\n\
<div class=\"line\">    iffFilePtr-&gt;endReadGroup();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> readStatus;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readChannelTime()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the channel time from the TIME block.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *tmpNum = (<span class=\"keywordtype\">int</span>*) iffFilePtr-&gt;getChunk( tmpTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( tmpNum &amp;&amp; </div>\n\
<div class=\"line\">        tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;T&#39;</span>, <span class=\"charliteral\">&#39;I&#39;</span>, <span class=\"charliteral\">&#39;M&#39;</span>, <span class=\"charliteral\">&#39;E&#39;</span>) &amp;&amp; </div>\n\
<div class=\"line\">        byteCount == <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>)) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Store the channel time in the blockList</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        storeCacheBlock( <span class=\"stringliteral\">&quot;TIME&quot;</span>, FLswapword(*tmpNum) );</div>\n\
<div class=\"line\">    } </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readChannel( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; channelStatus )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the channel data.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    readStatus = readChannelName( channelStatus );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If channelStatus is not MS::Success then this means that there is no</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// more channel data to read.  Return from function.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !channelStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    readStatus = readChannelData();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !readStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readChannelName( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&amp; channelStatus )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the channel name from the CHNM block.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> lStatus;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> chnmTag;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    channelStatus = iffFilePtr-&gt;beginGet( chnmTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( channelStatus == MS::kSuccess ) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span> *tmpName = (<span class=\"keywordtype\">char</span>*)alloca(<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">char</span>)* (byteCount+1));</div>\n\
<div class=\"line\">        <span class=\"comment\">//pointers allocated by alloca are from the stack and automatically freed when</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//the function exits.  Do not free explicitly.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( tmpName &amp;&amp; chnmTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;H&#39;</span>, <span class=\"charliteral\">&#39;N&#39;</span>, <span class=\"charliteral\">&#39;M&#39;</span>) ) {</div>\n\
<div class=\"line\">            iffFilePtr-&gt;get( tmpName, byteCount, &amp;lStatus);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( !lStatus ) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> channelName = tmpName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Store the channel name in the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;CHNM&quot;</span>, channelName );</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    } </div>\n\
<div class=\"line\">    iffFilePtr-&gt;endGet();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> geometryCacheFile::readChannelData()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read and store the channel size and geometry point data from the SIZE</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      and DVCA or FVCA blocks.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a> tmpTag;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> byteCount;</div>\n\
<div class=\"line\">    uint size;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read the channel size</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> *tmpNum = (<span class=\"keywordtype\">int</span>*) iffFilePtr-&gt;getChunk(tmpTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( tmpNum &amp;&amp; </div>\n\
<div class=\"line\">        tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;S&#39;</span>, <span class=\"charliteral\">&#39;I&#39;</span>, <span class=\"charliteral\">&#39;Z&#39;</span>, <span class=\"charliteral\">&#39;E&#39;</span>) &amp;&amp; </div>\n\
<div class=\"line\">        byteCount == <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">int</span>)) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        size = FLswapword(*tmpNum);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Store the channel size in the blockList</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        storeCacheBlock( <span class=\"stringliteral\">&quot;SIZE&quot;</span>, size );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read the channel data</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( size ) {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *tmpVec = (<span class=\"keywordtype\">double</span>*) iffFilePtr-&gt;getChunk(tmpTag, (<span class=\"keywordtype\">unsigned</span> *)&amp;byteCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( tmpVec &amp;&amp; </div>\n\
<div class=\"line\">            tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;D&#39;</span>, <span class=\"charliteral\">&#39;V&#39;</span>, <span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;A&#39;</span>) &amp;&amp;</div>\n\
<div class=\"line\">            size * <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">double</span>)*3 == byteCount )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> *tmpVecDbl = (<span class=\"keywordtype\">double</span>*) tmpVec;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> *dataArray = <span class=\"keyword\">new</span> <span class=\"keywordtype\">double</span>[size*3];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; size*3; i++) {</div>\n\
<div class=\"line\">                FLswapdouble(tmpVecDbl[i], &amp;(dataArray[i]));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"comment\">// Store the channel geometry points in the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;DVCA&quot;</span>, dataArray, size );</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> [] dataArray;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( tmpVec &amp;&amp; </div>\n\
<div class=\"line\">                   tmpTag == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_iff_tag.html\">MIffTag</a>(<span class=\"charliteral\">&#39;F&#39;</span>, <span class=\"charliteral\">&#39;V&#39;</span>, <span class=\"charliteral\">&#39;C&#39;</span>, <span class=\"charliteral\">&#39;A&#39;</span>) &amp;&amp;</div>\n\
<div class=\"line\">                   size * <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>)*3 == byteCount ) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> *tmpVecFlt = (<span class=\"keywordtype\">float</span>*) tmpVec;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> *dataArray = <span class=\"keyword\">new</span> <span class=\"keywordtype\">float</span>[size*3];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; size*3; i++) {</div>\n\
<div class=\"line\">                FLswapfloat(tmpVecFlt[i], &amp;(dataArray[i]));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"comment\">// Store the channel geometry points in the blockList</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            storeCacheBlock( <span class=\"stringliteral\">&quot;FVCA&quot;</span>, dataArray, size );</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> [] dataArray;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryCacheFile::storeCacheBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; tag )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Stores the specified data into the blockList.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    blockList.push_back( <span class=\"keyword\">new</span> geometryCacheBlockBase( tag ) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryCacheFile::storeCacheBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; tag, <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span>&amp; value )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Stores the specified data into the blockList.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    blockList.push_back( <span class=\"keyword\">new</span> geometryCacheBlockIntData( tag, value ) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryCacheFile::storeCacheBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; tag, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; value  )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Stores the specified data into the blockList.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    blockList.push_back( <span class=\"keyword\">new</span> geometryCacheBlockStringData( tag, value ) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryCacheFile::storeCacheBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; tag, <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span>* value, <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>&amp; size )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Stores the specified data into the blockList.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    blockList.push_back( <span class=\"keyword\">new</span> geometryCacheBlockDVAData( tag, value, size ) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryCacheFile::storeCacheBlock( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; tag, <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* value, <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>&amp; size )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description : ( private method )</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Stores the specified data into the blockList.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>{</div>\n\
<div class=\"line\">    blockList.push_back( <span class=\"keyword\">new</span> geometryCacheBlockFVAData( tag, value, size ) );</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";