var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MGPUDeformerRegistrationInfo Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_g_p_u_deformer_registration_info.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MGPUDeformerRegistrationInfo Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MGPUDeformerRegistrationInfo Class Reference<span class=\"mlabels\"><span class=\"mlabel\">abstract</span></span><div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_anim.html\">OpenMayaAnim - API module for animation</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2023-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s new in the Maya 2023 devkit</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_g_p_u_deformer_registration_info.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Registration information for an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MGPUDeformerRegistry.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a69ee4850048ea760d9e03f2deaf957e4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\">MPxGPUDeformer</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a69ee4850048ea760d9e03f2deaf957e4\">createGPUDeformer</a> ()=0</td></tr>\n\
<tr class=\"memdesc:a69ee4850048ea760d9e03f2deaf957e4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method allocates an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>.  <a href=\"class_m_g_p_u_deformer_registration_info.html#a69ee4850048ea760d9e03f2deaf957e4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a69ee4850048ea760d9e03f2deaf957e4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af612f89c960cf432dc7be0d3f1be8d93\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#af612f89c960cf432dc7be0d3f1be8d93\">validateNodeInGraph</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;block, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;evaluationNode, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *messages)=0</td></tr>\n\
<tr class=\"memdesc:af612f89c960cf432dc7be0d3f1be8d93\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called once for each instance of the overridden deformation node type in a Maya scene.  <a href=\"class_m_g_p_u_deformer_registration_info.html#af612f89c960cf432dc7be0d3f1be8d93\">More...</a><br></td></tr>\n\
<tr class=\"separator:af612f89c960cf432dc7be0d3f1be8d93\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5211d6842c7677f9730a9c76cb258568\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a5211d6842c7677f9730a9c76cb258568\">validateNodeValues</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;block, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;evaluationNode, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *messages)=0</td></tr>\n\
<tr class=\"memdesc:a5211d6842c7677f9730a9c76cb258568\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called once for each instance of the overridden deformation node type in a Maya scene.  <a href=\"class_m_g_p_u_deformer_registration_info.html#a5211d6842c7677f9730a9c76cb258568\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5211d6842c7677f9730a9c76cb258568\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4c0b70c231ae3362260f85feb518dc5f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a4c0b70c231ae3362260f85feb518dc5f\">outputMeshAttribute</a> ()</td></tr>\n\
<tr class=\"memdesc:a4c0b70c231ae3362260f85feb518dc5f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method returns the output mesh attribute for the node type being overridden.  <a href=\"class_m_g_p_u_deformer_registration_info.html#a4c0b70c231ae3362260f85feb518dc5f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4c0b70c231ae3362260f85feb518dc5f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af2b81cb6c5f4e81488afe71b317e9d79\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#af2b81cb6c5f4e81488afe71b317e9d79\">inputMeshAttribute</a> ()</td></tr>\n\
<tr class=\"memdesc:af2b81cb6c5f4e81488afe71b317e9d79\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is depreciated, please use inputMeshAttributes instead.  <a href=\"class_m_g_p_u_deformer_registration_info.html#af2b81cb6c5f4e81488afe71b317e9d79\">More...</a><br></td></tr>\n\
<tr class=\"separator:af2b81cb6c5f4e81488afe71b317e9d79\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6595070483ca7ff251658d710333d4e3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a6595070483ca7ff251658d710333d4e3\">inputMeshAttributes</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> &amp;inputAttributes)</td></tr>\n\
<tr class=\"memdesc:a6595070483ca7ff251658d710333d4e3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2022.0</b>  <a href=\"class_m_g_p_u_deformer_registration_info.html#a6595070483ca7ff251658d710333d4e3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6595070483ca7ff251658d710333d4e3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaabde9e6b7ed8f4613fc276fcf2d6549\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#aaabde9e6b7ed8f4613fc276fcf2d6549\">matchAncestorLogicalIndices</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;original, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;target)</td></tr>\n\
<tr class=\"memdesc:aaabde9e6b7ed8f4613fc276fcf2d6549\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2022.0</b>  <a href=\"class_m_g_p_u_deformer_registration_info.html#aaabde9e6b7ed8f4613fc276fcf2d6549\">More...</a><br></td></tr>\n\
<tr class=\"separator:aaabde9e6b7ed8f4613fc276fcf2d6549\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a834e3955574bdc1ba06165ed2e991bd4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a834e3955574bdc1ba06165ed2e991bd4\">passThroughInputMeshAttribute</a> ()</td></tr>\n\
<tr class=\"memdesc:a834e3955574bdc1ba06165ed2e991bd4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2022.0</b>  <a href=\"class_m_g_p_u_deformer_registration_info.html#a834e3955574bdc1ba06165ed2e991bd4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a834e3955574bdc1ba06165ed2e991bd4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa90bff21bf6bd202506356e3ea8eb935\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#aa90bff21bf6bd202506356e3ea8eb935\">isGeometryFilter</a> () const </td></tr>\n\
<tr class=\"memdesc:aa90bff21bf6bd202506356e3ea8eb935\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2023.0</b>  <a href=\"class_m_g_p_u_deformer_registration_info.html#aa90bff21bf6bd202506356e3ea8eb935\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa90bff21bf6bd202506356e3ea8eb935\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Registration information for an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>. </p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html\" title=\"Registration information for an MPxGPUDeformer. \">MGPUDeformerRegistrationInfo</a> provides a creator method to allocate <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> objects, validation methods to determine if a given node is supported by the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>, as well as utility methods to tell the deformer evaluator which attributes are the input and output mesh attributes of the deformer node.</p>\n\
<p>You must implement <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a69ee4850048ea760d9e03f2deaf957e4\" title=\"This method allocates an MPxGPUDeformer. \">createGPUDeformer()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#af612f89c960cf432dc7be0d3f1be8d93\" title=\"This method is called once for each instance of the overridden deformation node type in a Maya scene...\">validateNodeInGraph()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a5211d6842c7677f9730a9c76cb258568\" title=\"This method is called once for each instance of the overridden deformation node type in a Maya scene...\">validateNodeValues()</a>. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a4c0b70c231ae3362260f85feb518dc5f\" title=\"This method returns the output mesh attribute for the node type being overridden. ...\">outputMeshAttribute()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a6595070483ca7ff251658d710333d4e3\" title=\"Introduced in 2022.0 \">inputMeshAttributes()</a> and passThroughInputMeshAttribute have default implementations which will work correctly if the node being overridden by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> is an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_deformer_node.html\" title=\"Base class for user defined deformers with per-vertex weights. \">MPxDeformerNode</a>.</p>\n\
<p>If the attribute returned by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#a4c0b70c231ae3362260f85feb518dc5f\" title=\"This method returns the output mesh attribute for the node type being overridden. ...\">outputMeshAttribute()</a> is a multi-attribute or a multi parent, then the attribute returned by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_g_p_u_deformer_registration_info.html#af2b81cb6c5f4e81488afe71b317e9d79\" title=\"This method is depreciated, please use inputMeshAttributes instead. \">inputMeshAttribute()</a> must also be a multi-attribute or have a multi parent. The total number of multi attributes in the hierarchy of the output attribute (including the output attribute itself) must be exactly one. The total number of multi attributes in the hierarchy of the input attribute (including the input attribute itself) must be greater than or equal to the number of multi attributes in the hierarchy of the output attribute.</p>\n\
<p>For example, geometryFilter\'s input geometry attribute is inputGeometry. inputGeometry is not a multi attribute, but it has a single multi parent (input). geometryFilter\'s output geometry attribute is outputGeometry. outputGeometry is a multi attribute. In this case the input and output attribute hierarchies each have a single multi, so the GPU override works.</p>\n\
<p>Maya will match the multi index of each multi attribute in the input and output multi hierarchies for each connected input and output plug, starting from the root plug. In the geometryFilter example we use the multi index of the outputGeometry attribute as the multi index of aInput when attempting to determine if inputGeometry is connected. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#_a39\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#_a15\">identityNode/identityNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#_a53\">offsetNode/offsetNode.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a69ee4850048ea760d9e03f2deaf957e4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OPENMAYA_MAJOR_NAMESPACE_OPENMPxGPUDeformer * createGPUDeformer </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method allocates an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> of the appropriate type. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a46\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a24\">identityNode/identityNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#a60\">offsetNode/offsetNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af612f89c960cf432dc7be0d3f1be8d93\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool validateNodeInGraph </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>block</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>evaluationNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>plug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>messages</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called once for each instance of the overridden deformation node type in a Maya scene. </p>\n\
<p>This method returns True if the specific instance of the node represented by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> is supported by the corresponding <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>. A return value of False from this method prevents the deformation chain that includes this specific instance of the deformer from being included in GPU evaluation. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> documentation for more information about deformation chains.</p>\n\
<p>validateNodeInGraph should test conditions which depend on the topology of Maya\'s dependency graph (connected attributes, global state) or values which can only change when the topology of the graph changes. validateNodeInGraph should not test specific values of attributes in the data block. Attribute value tests should be performed in validateNodeValues.</p>\n\
<p>validateNodeInGraph is only called during evaluation manager graph scheduling and will not be called again until the graph is re-scheduled.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">block</td><td>The data block of the deformer node to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">evaluationNode</td><td>The evaluation node that corresponds to the deformer to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">plug</td><td>The output plug of the deformer to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">messages</td><td>If non-NULL store messages to the user explaining why the node was not validated.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the deformer is supported. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a47\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a25\">identityNode/identityNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#a61\">offsetNode/offsetNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5211d6842c7677f9730a9c76cb258568\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool validateNodeValues </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>block</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>evaluationNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>plug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>messages</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called once for each instance of the overridden deformation node type in a Maya scene. </p>\n\
<p>This method returns True if the specific instance of the node represented by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_data_block.html\" title=\"Dependency node data block. \">MDataBlock</a> is supported by the corresponding <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>. A return value of False from this method prevents the deformation chain that includes this specific instance of the deformer from being included in GPU evaluation. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> documentation for more information about deformation chains.</p>\n\
<p>validateNodeValues should test specific values of attributes in the data block. validateNodeValues should not test conditions which depend on the topology of Maya\'s dependency graph.</p>\n\
<p>validateNodeValues will be called before each call to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html#a070259639bc552fd702c9e8e042f0331\" title=\"This method is deprecated and should no longer be used. \">MPxGPUDeformer::evaluate</a> to ensure that the state of the underlying Maya node has not changed in a way which prevents the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> from supporting it.</p>\n\
<p>validateNodeValues will be called for unsupported nodes each time the value a conditional attribute changes. If the previously unsupported node is now supported, GPU Override will enable for the node.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">block</td><td>The data block of the deformer node to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">evaluationNode</td><td>The evaluation node that corresponds to the deformer to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">plug</td><td>The output plug of the deformer to be validated. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">messages</td><td>If non-NULL store messages to the user explaining why the node was not validated.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the deformer is supported. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a48\">basicMorphNode/basicMorphNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/identity_node_2identity_node_8cpp-example.html#a26\">identityNode/identityNode.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/offset_node_2offset_node_8cpp-example.html#a62\">offsetNode/offsetNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4c0b70c231ae3362260f85feb518dc5f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> outputMeshAttribute </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method returns the output mesh attribute for the node type being overridden. </p>\n\
<p>The number of multi attributes in the input mesh attribute hierarchy must be equal to or greater than the number of multi attributes in the output mesh attribute hierarchy.</p>\n\
<p>This method is optional if and only if the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> is being used to override an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_deformer_node.html\" title=\"Base class for user defined deformers with per-vertex weights. \">MPxDeformerNode</a> or a geometryFilter.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> representing the output mesh attribute. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af2b81cb6c5f4e81488afe71b317e9d79\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> inputMeshAttribute </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is depreciated, please use inputMeshAttributes instead. </p>\n\
<p>This method returns the input mesh attribute for the node type being overridden. The number of multi attributes in the input mesh attribute hierarchy must be equal to or greater than the number of multi attributes in the output mesh attribute hierarchy.</p>\n\
<p>This method is optional if and only if the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> is being used to override an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_deformer_node.html\" title=\"Base class for user defined deformers with per-vertex weights. \">MPxDeformerNode</a> or a geometryFilter.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> representing the input mesh attribute. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6595070483ca7ff251658d710333d4e3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void inputMeshAttributes </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>inputAttributes</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2022.0</b> </p>\n\
<p>This method fills inputAttributes with attributes which should be searched for upstream deformation supported by GPU Override.</p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000041\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>Ownership off the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a>\'s returned in inputAttributes remains with the callee. Maya will not delete the MObjects.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">inputAttributes</td><td>Attributes to search for upstream deformation chains. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/basic_morph_node_2basic_morph_node_8cpp-example.html#a49\">basicMorphNode/basicMorphNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aaabde9e6b7ed8f4613fc276fcf2d6549\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool matchAncestorLogicalIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>outputPlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>inputPlug</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2022.0</b> </p>\n\
<p>This method sets ancestor logical indices of a deformer input plug inputPlug given a specific deformer output plug outputPlug.</p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000042\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>outputPlug is a valid output plug for the deformer. The same value will be passed into <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html#a070259639bc552fd702c9e8e042f0331\" title=\"This method is deprecated and should no longer be used. \">MPxGPUDeformer::evaluate()</a> as the outputPlug parameter in the future. matchAncestorLogicalIndices does not modify outputPlug.</p>\n\
<p>inputPlug is an input plug for the deformer. inputPlug\'s attribute matches one of the attributes returned by inputMeshAttributes. If inputPlug\'s attribute, or any ancestor of inputPlug\'s attribute, is a multi attribute, then the logical index of all the multi attributes stored in inputPlug are invalid when matchAncestorLogicalIndices is called. matchAncestorLogicalIndices may modify the logical indices of inputPlug.</p>\n\
<p>Not all logical indices of an input multi plug need to affect an output multi plug. For example, in a typical deformer has an input multi \"input\" and an output multi \"outputGeometry\" where outputGeometry[i] is only affected by the matching input[i]. This function gives you the ability to override Maya\'s default attribute affects matching with your own logic.</p>\n\
<p>To use Maya\'s default behavior, return false. To use your own custom behavior, return true.</p>\n\
<p>Maya\'s default attribute affects matching works by starting from the root attribute, finding the first multi attribute in outputPlug and copying its logical index into the first multi attribute in inputPlug. Continue until there are no more multi attributes in outputPlug or inputPlug. If inputPlug has more multi attributes than outputPlug then some multi attributes will be left invalid. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> will treat these invalid attributes as matching all valid logical index values.</p>\n\
<p>For example, if the deformer node is a Maya blendShape node where the following are valid array entries: outputGeometry[5] input.inputGeometry[5] inputTarget[5].inputTargetGroup[0].inputTargetItem[6000].inputGeomTarget inputTarget[5].inputTargetGroup[1].inputTargetItem[6000].inputGeomTarget</p>\n\
<p>Then a possible call to matchAncestorLogicalIndices would have: outputPlug = node.outputGeometry[5] intputPlug = node.inputTarget[-1].inputTargetGroup[-1].inputTargetItem[-1].inputGeomTarget where -1 is used to represent an invalid array entry.</p>\n\
<p>If matchAncestorLogicalIndices returns false then Maya\'s default attribute affects matching behavior would be to set inputPlug to be: inputPlug = node.inputTarget[5].inputTargetGroup[-1].inputTargetItem[-1].inputGeomTarget</p>\n\
<p>And then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> would match the following plugs as inputs for outputPlug: node.inputTarget[5].inputTargetGroup[0].inputTargetItem[6000].inputGeomTarget node.inputTarget[5].inputTargetGroup[1].inputTargetItem[6000].inputGeomTarget</p>\n\
<p>When creating your own custom behavior <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a>\'s interpretation of inputPlug is the same as Maya\'s default behavior. An invalid logical index matches all valid logical index values.</p>\n\
<p>By default matchAncestorLogicalIndices returns false and Maya will automatically match logical indices to the best of it\'s ability.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">outputPlug</td><td>an output plug for a deformer node with all ancestor logical indices set </td></tr>\n\
    <tr><td class=\"paramdir\">[in,out]</td><td class=\"paramname\">inputPlug</td><td>an input plug for the deformer node with all ancestor logical indices invalid </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if ancestor logical indices were set, false to use Maya\'s default matching </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a834e3955574bdc1ba06165ed2e991bd4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> passThroughInputMeshAttribute </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2022.0</b> </p>\n\
<p>This method returns the input mesh attribute for the node type being overridden which has a special \"pass through\" relationship with the output mesh attribute.</p>\n\
<dl class=\"changelog_2022_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2022_0.html#_changelog_2022_0000043\">2022.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html#a070259639bc552fd702c9e8e042f0331\" title=\"This method is deprecated and should no longer be used. \">MPxGPUDeformer::evaluate()</a> returns kDeformerPassThrough then all input buffers matching the passThroughInputMeshAttribute plug will be automatically copied to the output mesh data. Additionally, when <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html#a070259639bc552fd702c9e8e042f0331\" title=\"This method is deprecated and should no longer be used. \">MPxGPUDeformer::evaluate()</a> succeeds, any input buffers matching the passThroughInputMeshAttribute and not explicitly set in outputData will be automatically copied in output data. Typically this would be the geometryMatrix and inverseGeometryMatrix.</p>\n\
<p>This method is optional if and only if the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_g_p_u_deformer.html\" title=\"Base class for user defined GPU deformer override evaluators. \">MPxGPUDeformer</a> is being used to override an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_deformer_node.html\" title=\"Base class for user defined deformers with per-vertex weights. \">MPxDeformerNode</a> or a geometryFilter.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\" title=\"Generic Class for Accessing Internal Maya Objects. \">MObject</a> representing the pass through input mesh attribute. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa90bff21bf6bd202506356e3ea8eb935\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isGeometryFilter </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2023.0</b> </p>\n\
<p>This method can be used to override whether the wrapped CPU node is really a deformer.</p>\n\
<dl class=\"changelog_2023_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2023_0.html#_changelog_2023_0000030\">2023.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>In general it is assumed that the node is derived from <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_geometry_filter.html\" title=\"Base class for user-defined deformers. \">MPxGeometryFilter</a> or one of its subclasses. In some cases however it may be desired to use a plain <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_node.html\" title=\"Base class for user defined dependency nodes. \">MPxNode</a> to and then this method should be overriden to return true to let the deformer registration know that this is not a true deformer. </p>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MGPUDeformerRegistry.h</li>\n\
<li>MGPUDeformerRegistry.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";