var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MEvaluationNodeIterator Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_evaluation_node_iterator.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MEvaluationNodeIterator Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MEvaluationNodeIterator Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya.html\">OpenMaya - API module for common classes</a></div></div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_evaluation_node_iterator.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_evaluation_node_iterator.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Provides access to the Evaluation Manager node dirty plug list.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MEvaluationNodeIterator.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a513be94567dc294284f5a2441b1f6fdf\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a513be94567dc294284f5a2441b1f6fdf\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#a513be94567dc294284f5a2441b1f6fdf\">~MEvaluationNodeIterator</a> ()</td></tr>\n\
<tr class=\"memdesc:a513be94567dc294284f5a2441b1f6fdf\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor, frees internal resources. <br></td></tr>\n\
<tr class=\"separator:a513be94567dc294284f5a2441b1f6fdf\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a74f0628b2aade06c4f44a01291c99a1f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#a74f0628b2aade06c4f44a01291c99a1f\">MEvaluationNodeIterator</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;node, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL)</td></tr>\n\
<tr class=\"memdesc:a74f0628b2aade06c4f44a01291c99a1f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Constructor for iterator over evaluation node\'s dirty plugs.  <a href=\"class_m_evaluation_node_iterator.html#a74f0628b2aade06c4f44a01291c99a1f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a74f0628b2aade06c4f44a01291c99a1f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afc71c88e5673d3edc9c5f2e022a1c3dd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#afc71c88e5673d3edc9c5f2e022a1c3dd\">MEvaluationNodeIterator</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp;it)</td></tr>\n\
<tr class=\"memdesc:afc71c88e5673d3edc9c5f2e022a1c3dd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor for iterator over evaluation node\'s dirty plugs.  <a href=\"class_m_evaluation_node_iterator.html#afc71c88e5673d3edc9c5f2e022a1c3dd\">More...</a><br></td></tr>\n\
<tr class=\"separator:afc71c88e5673d3edc9c5f2e022a1c3dd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5f81a0da0238cd8941589b90ebf81c6d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#a5f81a0da0238cd8941589b90ebf81c6d\">operator=</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp;it)</td></tr>\n\
<tr class=\"memdesc:a5f81a0da0238cd8941589b90ebf81c6d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator.  <a href=\"class_m_evaluation_node_iterator.html#a5f81a0da0238cd8941589b90ebf81c6d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5f81a0da0238cd8941589b90ebf81c6d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab73366bc021525556fc8f7eb54187dd9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#ab73366bc021525556fc8f7eb54187dd9\">plug</a> ()</td></tr>\n\
<tr class=\"memdesc:ab73366bc021525556fc8f7eb54187dd9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the dirty plug at the current iterator position.  <a href=\"class_m_evaluation_node_iterator.html#ab73366bc021525556fc8f7eb54187dd9\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab73366bc021525556fc8f7eb54187dd9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:add4bf50abae421d88b5549de6c11fc75\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#add4bf50abae421d88b5549de6c11fc75\">isDone</a> () const </td></tr>\n\
<tr class=\"memdesc:add4bf50abae421d88b5549de6c11fc75\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Checks to see if the iterator has reached the end of the iteration.  <a href=\"class_m_evaluation_node_iterator.html#add4bf50abae421d88b5549de6c11fc75\">More...</a><br></td></tr>\n\
<tr class=\"separator:add4bf50abae421d88b5549de6c11fc75\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a041249f802c5bf4c2deae666610e03c4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a041249f802c5bf4c2deae666610e03c4\"></a>\n\
void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#a041249f802c5bf4c2deae666610e03c4\">next</a> ()</td></tr>\n\
<tr class=\"memdesc:a041249f802c5bf4c2deae666610e03c4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Advances the iterator to the next position in the dirty plug list. <br></td></tr>\n\
<tr class=\"separator:a041249f802c5bf4c2deae666610e03c4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad20897c5c8bd47f5d4005989bead0e55\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ad20897c5c8bd47f5d4005989bead0e55\"></a>\n\
void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#ad20897c5c8bd47f5d4005989bead0e55\">reset</a> ()</td></tr>\n\
<tr class=\"memdesc:ad20897c5c8bd47f5d4005989bead0e55\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Resets the iterator to the first position in the dirty plug list. <br></td></tr>\n\
<tr class=\"separator:ad20897c5c8bd47f5d4005989bead0e55\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_evaluation_node_iterator.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Provides access to the Evaluation Manager node dirty plug list. </p>\n\
<dl class=\"section see\"><dt>See also</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a></dd></dl>\n\
<p>If you need to access the list of dirty plugs in an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\" title=\"Provides access to Evaluation Manager node information. \">MEvaluationNode</a> node then use the internal iterator:</p>\n\
<div class=\"fragment\"><div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> theNode;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> it = theNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#a411e944b3d2bb66b3b8710db05d8501e\">iterator</a>(); !it.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html#add4bf50abae421d88b5549de6c11fc75\">isDone</a>(); it.next() )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    doSomePlugThing( it.plug() );</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a74f0628b2aade06c4f44a01291c99a1f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OPENMAYA_MAJOR_NAMESPACE_OPEN <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>node</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Constructor for iterator over evaluation node\'s dirty plugs. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">node</td><td>Evaluation node over which to iterate </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>Status Code</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kFailure</b> Object error - no evaluation node </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afc71c88e5673d3edc9c5f2e022a1c3dd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor for iterator over evaluation node\'s dirty plugs. </p>\n\
<p>The copied iterator is not const because it becomes empty after the copy.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to copy</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b>MS::kSuccess</b> The operation succeeded </li>\n\
<li><b>MS::kFailure</b> Object error - no evaluation node </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a5f81a0da0238cd8941589b90ebf81c6d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_evaluation_node_iterator.html\">MEvaluationNodeIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator. </p>\n\
<p>The copied iterator is not const because it becomes empty after the assignment.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator from which to copy information</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the assigned iterator </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab73366bc021525556fc8f7eb54187dd9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the dirty plug at the current iterator position. </p>\n\
<p>Returns an empty plug if the iterator is illegal.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>dirty plug at the current iterator index </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"add4bf50abae421d88b5549de6c11fc75\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool isDone </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Checks to see if the iterator has reached the end of the iteration. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the iteration has completed </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MEvaluationNodeIterator.h</li>\n\
<li>MEvaluationNodeIterator.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";