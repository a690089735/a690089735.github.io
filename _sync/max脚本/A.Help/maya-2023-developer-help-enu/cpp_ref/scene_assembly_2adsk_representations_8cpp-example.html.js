var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: sceneAssembly/adskRepresentations.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'scene_assembly_2adsk_representations_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: sceneAssembly/adskRepresentations.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">sceneAssembly/adskRepresentations.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#include &quot;sceneAssemblyStrings.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;adskRepresentations.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;assemblyDefinition.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagModifier.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnContainerNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnAssembly.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MExternalContentInfoTable.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MExternalContentLocationTable.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;cassert&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LOCAL DECLARATIONS</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*----- constants -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> CACHE_TYPE[]          = <span class=\"stringliteral\">&quot;Cache&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> SCENE_TYPE[]          = <span class=\"stringliteral\">&quot;Scene&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> LOCATOR_TYPE[]        = <span class=\"stringliteral\">&quot;Locator&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LOCAL FUNCTIONS</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pathSep(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; path, <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> sep)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (path.<a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a9f0f85031c628ef5111739fe8573003b\">numChars</a>() == 0) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>();</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> components;</div>\n\
<div class=\"line\">   <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = path.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#ac914d138fc96d7065c687a4f8b40c263\">split</a>(sep, components);</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != MS::kSuccess) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>();</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> components[components.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>()-1];</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pathTail(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; path)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> pathSep(path, <span class=\"charliteral\">&#39;/&#39;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS CacheRepresentation::Factory</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* CacheRepresentation::Factory::create(</div>\n\
<div class=\"line\">   <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> CacheRepresentation(assembly, name);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> CacheRepresentation::Factory::creationName(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* <span class=\"comment\">/* assembly */</span>, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> pathTail(input);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> CacheRepresentation::Factory::creationLabel(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> creationName(assembly, input);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> CacheRepresentation::Factory::creationData(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* <span class=\"comment\">/* assembly */</span>, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> input;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS SceneRepresentation::Factory</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* SceneRepresentation::Factory::create(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> SceneRepresentation(assembly, name);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> SceneRepresentation::Factory::creationName(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* <span class=\"comment\">/* assembly */</span>, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> pathTail(input);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> SceneRepresentation::Factory::creationLabel(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> creationName(assembly, input);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> SceneRepresentation::Factory::creationData(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> input;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS LocatorRepresentation::Factory</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* LocatorRepresentation::Factory::create(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> LocatorRepresentation(assembly, name, data);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> LocatorRepresentation::Factory::creationName(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* <span class=\"comment\">/* assembly */</span>, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Locator&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> LocatorRepresentation::Factory::creationLabel(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> creationName(assembly, input);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> LocatorRepresentation::Factory::creationData(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> input;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS CacheRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">CacheRepresentation::CacheRepresentation(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name</div>\n\
<div class=\"line\">) : BaseClass(assembly, name)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   assert( dynamic_cast&lt; AssemblyDefinition* &gt;( getAssembly() ) != 0 );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">CacheRepresentation::~CacheRepresentation()</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> CacheRepresentation::activate()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Create a gpuCache node, and parent it to our container.</span></div>\n\
<div class=\"line\">   <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html\">MDagModifier</a> dagMod;   </div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">   <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> cacheObj = dagMod.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html#ae169eb7f1ddc00f53ba69ac2d1815950\">createNode</a>(</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;gpuCache&quot;</span>), assembly-&gt;thisMObject(), &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">      <span class=\"keywordtype\">int</span>   isLoaded = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      <span class=\"comment\">// Validate that the gpuCache plugin is loaded.</span></div>\n\
<div class=\"line\">      <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>( <span class=\"stringliteral\">&quot;pluginInfo -query -loaded gpuCache&quot;</span>, isLoaded );</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span>(!isLoaded){         </div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(rCreateGPUCacheNodeError, status);         </div>\n\
<div class=\"line\">         <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(errorString);        </div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   status = dagMod.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Set the cache attribute to point to our Alembic file.</span></div>\n\
<div class=\"line\">   <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> cache(cacheObj);</div>\n\
<div class=\"line\">   <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> fileName = cache.findPlug(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;cacheFileName&quot;</span>), <span class=\"keyword\">true</span>, &amp;status);</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   fileName.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>(assembly-&gt;getRepData(getName()));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> CacheRepresentation::type()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> CACHE_TYPE;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> CacheRepresentation::getType()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> type();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CacheRepresentation::getExternalContent(</div>\n\
<div class=\"line\">   <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   table.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html#a02b066d0faa24f55563c607f883d47de\">addUnresolvedEntry</a>( <span class=\"stringliteral\">&quot;Data&quot;</span>, assembly-&gt;getRepData( getName() ), assembly-&gt;name() );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> CacheRepresentation::setExternalContent(</div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> path;</div>\n\
<div class=\"line\">   table.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html#afaca888acb17d3160255da4f65ac5b7f\">getLocation</a>( <span class=\"stringliteral\">&quot;Data&quot;</span>, path );</div>\n\
<div class=\"line\">   assembly-&gt;setRepData( getName(), path );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS SceneRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">SceneRepresentation::SceneRepresentation(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name</div>\n\
<div class=\"line\">) : BaseClass(assembly, name)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   assert( dynamic_cast&lt; AssemblyDefinition* &gt;( getAssembly() ) != 0 );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">SceneRepresentation::~SceneRepresentation()</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> SceneRepresentation::activate()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_assembly.html\">MFnAssembly</a> aFn(assembly-&gt;thisMObject());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span> fileIgnoreVersion = (<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a7b35236b639518320b2885b4fd673bab\">MGlobal::optionVarIntValue</a>(<span class=\"stringliteral\">&quot;fileIgnoreVersion&quot;</span>) == 1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = aFn.importFile(</div>\n\
<div class=\"line\">      assembly-&gt;getRepData(getName()) <span class=\"comment\">/*fileName*/</span>,</div>\n\
<div class=\"line\">      NULL <span class=\"comment\">/*type*/</span>, <span class=\"keyword\">true</span> <span class=\"comment\">/*preserveReferences*/</span>, NULL <span class=\"comment\">/*nameSpace*/</span>,</div>\n\
<div class=\"line\">      fileIgnoreVersion);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> (status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> SceneRepresentation::type()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> SCENE_TYPE;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> SceneRepresentation::getType()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> type();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> SceneRepresentation::canApplyEdits()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SceneRepresentation::getExternalContent(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table</div>\n\
<div class=\"line\">)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   table.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html#a02b066d0faa24f55563c607f883d47de\">addUnresolvedEntry</a>( <span class=\"stringliteral\">&quot;Data&quot;</span>, assembly-&gt;getRepData( getName() ), assembly-&gt;name() );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SceneRepresentation::setExternalContent(</div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   AssemblyDefinition* <span class=\"keyword\">const</span> assembly =</div>\n\
<div class=\"line\">      <span class=\"keyword\">dynamic_cast&lt;</span> AssemblyDefinition* <span class=\"keyword\">&gt;</span>( getAssembly() );</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> ( assembly == 0 ) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> path;</div>\n\
<div class=\"line\">   table.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html#afaca888acb17d3160255da4f65ac5b7f\">getLocation</a>( <span class=\"stringliteral\">&quot;Data&quot;</span>, path );</div>\n\
<div class=\"line\">   assembly-&gt;setRepData( getName(), path );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS LocatorRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">LocatorRepresentation::LocatorRepresentation(</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">) : BaseClass(assembly, name), fAnnotation(data)</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">LocatorRepresentation::~LocatorRepresentation()</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> LocatorRepresentation::activate()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* <span class=\"keyword\">const</span> assembly = getAssembly();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Create a locator node, and parent it to our container.</span></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html\">MDagModifier</a> dagMod;</div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">   dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html#ae169eb7f1ddc00f53ba69ac2d1815950\">createNode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;locator&quot;</span>), assembly-&gt;<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#af668909ce600ca728923762de5b63559\">thisMObject</a>(), &amp;status);   </div>\n\
<div class=\"line\">  </div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   status = dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// If we have annotation text, create an annotation shape, and a</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// transform for it.  Parent the annotation transform to the assembly.</span></div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span> (fAnnotation.numChars() &gt; 0) {</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> transformObj = dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html#ae169eb7f1ddc00f53ba69ac2d1815950\">createNode</a>(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;transform&quot;</span>), assembly-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html#af668909ce600ca728923762de5b63559\">thisMObject</a>(), &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  annotationName =  <span class=\"stringliteral\">&quot;annotation&quot;</span>;</div>\n\
<div class=\"line\">      <span class=\"comment\">// the + &quot;#&quot; forces Maya to rename using integers for unique names</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>  transformName = annotationName + <span class=\"stringliteral\">&quot;#&quot;</span>;</div>\n\
<div class=\"line\">      dagMod.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a1cb9f22e0549ee47f1c8dd92fe7d515e\">renameNode</a>(transformObj, transformName);</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">      status = dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> annotationObj = dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html#ae169eb7f1ddc00f53ba69ac2d1815950\">createNode</a>(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;annotationShape&quot;</span>), transformObj, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\">      status = dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Set the annotation text.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> annotation(annotationObj);</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> text = annotation.findPlug(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;text&quot;</span>), <span class=\"keyword\">true</span>, &amp;status);</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\">      text.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>(fAnnotation);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Get rid of the arrow: our annotation doesn&#39;t need to be</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// offset from the locator for readability, since the locator</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// has no volume.  Therefore, we don&#39;t need an arrow to point</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// from the annotation back to the object.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> displayArrow =</div>\n\
<div class=\"line\">         annotation.findPlug(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;displayArrow&quot;</span>), <span class=\"keyword\">true</span>, &amp;status);</div>\n\
<div class=\"line\">      <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) {</div>\n\
<div class=\"line\">         <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">      }</div>\n\
<div class=\"line\">      displayArrow.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">   }</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> LocatorRepresentation::type()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> LOCATOR_TYPE;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> LocatorRepresentation::getType()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">return</span> type();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy</span></div>\n\
<div class=\"line\"><span class=\"comment\">// form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";