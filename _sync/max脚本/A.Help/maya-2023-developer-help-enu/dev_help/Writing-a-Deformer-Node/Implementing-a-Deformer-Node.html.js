var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head>\n\
<link href=\"../../style/prettify.css\" type=\"text/css\" rel=\"stylesheet\" />\n\
<script type=\"text/javascript\" src=\"../../scripts/prettify.js\"></script><script src=\"../../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><meta http-equiv=\"Content-Style-Type\" content=\"text/css\" /><meta name=\"generator\" content=\"pandoc\" /><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><script type=\"text/javascript\" src=\"../../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>Implementing a Deformer Node</title>\n\
   </head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><style type=\"text/css\">code{white-space: pre;}</style><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/multireflink.js\"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script></script><script></script><div id=\"reflinkdiv\"></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Implementing a Deformer Node</h1>\n\
         </div>\n\
\n\
<div class=\'section\'><a id=\"implementing-a-deformer-node\"></a></div>\n\
<p>You can implement a deformer node that acquires the full benefits of Maya&#39;s internal deformer functionality by deriving from <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span>, or one of its child classes.</p>\n\
<blockquote>\n\
<p><strong>Note:</strong> This has changed in Maya 2016. <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span> is now the base class for implementing deformers.</p>\n\
</blockquote>\n\
<p>Deriving from <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span> allows you to create a simple deformer node. For an illustration, see the next section that walks through the yTwistNode SDK example. There are three child classes you can derive from depending on the deformer you want to create:</p>\n\
<ul>\n\
<li><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxDeformerNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_deformer_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxDeformerNode</a></span> - similar to <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span>, with the addition of per-vertex weights.</li>\n\
<li><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxBlendShape\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_blend_shape.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxBlendShape</a></span> - deformers implemented from this class are treated as Blend Shape deformers in the Maya UI, and users can modify them using tools such as the Blend Shape Editor.</li>\n\
<li><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxSkinCluster\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_skin_cluster.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxSkinCluster</a></span> - deformers implemented from this class are treated as skinClusters in the Maya UI and users can modify them using tools such as the Paint Cluster Weights tool.</li>\n\
</ul>\n\
<p>See the API description of <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span> for additional information.</p>\n\
<p>Deformers often require a helper node such as a locator in order to control the change of deformation. These helper nodes are called Accessories. Accessory nodes are optional and not required for deformers. The input attributes of the <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span> class are sufficient to perform the deformation. You should implement the <span class=\'code\'>accessoryNodeSetup()</span> and <span class=\'code\'>accessoryAttribute()</span> methods only if you want to deform geometry using an accessory.</p>\n\
<p>As <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryFilter\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_geometry_filter.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryFilter</a></span> derives from <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_px_node.html&quot;,&quot;title&quot;:&quot;Python 2.0 API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxNode</a></span>, a <span class=\'code\'>compute()</span> method can be implemented in the class. You do not need to implement the <span class=\'code\'>compute()</span> method for simple deformers. Only implement the <span class=\'code\'>compute()</span> method if the deformation isn&#39;t a simple per-vertex process. See the API descriptions for an example of <span class=\'code\'>compute()</span> method implementation.</p>\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";