var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: OpenMayaUI.MPxHwShaderNode Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'class_open_maya_u_i_1_1_m_px_hw_shader_node.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: OpenMayaUI.MPxHwShaderNode Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenMayaUI.MPxHwShaderNode Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Writing-a-Hardware-Shading-Node/Implementing-a-hardware-shading.html\">Writing a Hardware Shading Node &gt; Implementing a hardware shading node plug-in</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Writing-a-Hardware-Shading-Node/Improving-the-performance-of.html\">Writing a Hardware Shading Node &gt; Improving the performance of hardware shaders</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Scene-Overrides.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Scene Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Transition-Guide.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Transition Guide</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Developer-Kit-Samples.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Developer Kit Samples</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/API-constructs/Shader-Instances.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; API constructs &gt; Shader Instances</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Effect-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Effect Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Geometry-remapping-for-hardware.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Geometry remapping for hardware rendering</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Maya-NET-API/Removal-of-MStatus-return-codes.html\">Maya .NET API &gt; Removal of MStatus return codes from .NET API</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_open_maya_u_i_1_1_m_px_hw_shader_node.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_u_i_1_1_m_px_hw_shader_node.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_u_i_1_1_m_px_hw_shader_node.html#pub-static-attribs\">Static Public Attributes</a> &#124;\n\
<a href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Inheritance diagram for OpenMayaUI.MPxHwShaderNode:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.png\" usemap=\"#OpenMayaUI.MPxHwShaderNode_map\" alt=\"\">\n\
  <map id=\"OpenMayaUI.MPxHwShaderNode_map\" name=\"OpenMayaUI.MPxHwShaderNode_map\">\n\
<area href=\"class_open_maya_1_1_m_px_node.html\" alt=\"OpenMaya.MPxNode\" shape=\"rect\" coords=\"0,56,204,80\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ae4e248b2103c71e0eb7fc0e64925eb42\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ae4e248b2103c71e0eb7fc0e64925eb42\">__init__</a> ()</td></tr>\n\
<tr class=\"separator:ae4e248b2103c71e0eb7fc0e64925eb42\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1beaa04420614bd5805d69a26512ffbc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a1beaa04420614bd5805d69a26512ffbc\">bind</a> ()</td></tr>\n\
<tr class=\"separator:a1beaa04420614bd5805d69a26512ffbc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab1c363b8eec62d8b395201ed6d513595\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ab1c363b8eec62d8b395201ed6d513595\">colorsPerVertex</a> ()</td></tr>\n\
<tr class=\"separator:ab1c363b8eec62d8b395201ed6d513595\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8fbc1469df82ff5cb4e0346522a14036\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a8fbc1469df82ff5cb4e0346522a14036\">currentPath</a> ()</td></tr>\n\
<tr class=\"separator:a8fbc1469df82ff5cb4e0346522a14036\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8b2388b3b216be1d64dba9300c95ee23\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a8b2388b3b216be1d64dba9300c95ee23\">currentShadingEngine</a> ()</td></tr>\n\
<tr class=\"separator:a8b2388b3b216be1d64dba9300c95ee23\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a462e9af66225515633d0e4f5141481f4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a462e9af66225515633d0e4f5141481f4\">dirtyMask</a> ()</td></tr>\n\
<tr class=\"separator:a462e9af66225515633d0e4f5141481f4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af1baeed92db0ea0cbf886dba96bc3ded\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#af1baeed92db0ea0cbf886dba96bc3ded\">geometry</a> ()</td></tr>\n\
<tr class=\"separator:af1baeed92db0ea0cbf886dba96bc3ded\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aae7bcb70f1797a66612df2979a4c0928\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#aae7bcb70f1797a66612df2979a4c0928\">getAvailableImages</a> ()</td></tr>\n\
<tr class=\"separator:aae7bcb70f1797a66612df2979a4c0928\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab01115dc94a597d9f442b3402741e8f6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ab01115dc94a597d9f442b3402741e8f6\">getColorSetNames</a> ()</td></tr>\n\
<tr class=\"separator:ab01115dc94a597d9f442b3402741e8f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9fd419d8e323290d41417be95b529164\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a9fd419d8e323290d41417be95b529164\">getTexCoordSetNames</a> ()</td></tr>\n\
<tr class=\"separator:a9fd419d8e323290d41417be95b529164\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae9c9f9407b45badfe551a4f217ec7ef2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ae9c9f9407b45badfe551a4f217ec7ef2\">glBind</a> ()</td></tr>\n\
<tr class=\"separator:ae9c9f9407b45badfe551a4f217ec7ef2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaad4a5849a82c09fdd362affff51fcf4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#aaad4a5849a82c09fdd362affff51fcf4\">glGeometry</a> ()</td></tr>\n\
<tr class=\"separator:aaad4a5849a82c09fdd362affff51fcf4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3df577a909807440057a6c615703e8c3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a3df577a909807440057a6c615703e8c3\">glUnbind</a> ()</td></tr>\n\
<tr class=\"separator:a3df577a909807440057a6c615703e8c3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1e24e904f9d9d7fc1483d5a9e86efb25\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a1e24e904f9d9d7fc1483d5a9e86efb25\">hasTransparency</a> ()</td></tr>\n\
<tr class=\"separator:a1e24e904f9d9d7fc1483d5a9e86efb25\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad1f7c270ade081688837fd47721df823\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ad1f7c270ade081688837fd47721df823\">invertTexCoords</a> ()</td></tr>\n\
<tr class=\"separator:ad1f7c270ade081688837fd47721df823\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1f0c20a8e6cce74ac93ea2a92769b4ae\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a1f0c20a8e6cce74ac93ea2a92769b4ae\">normalsPerVertex</a> ()</td></tr>\n\
<tr class=\"separator:a1f0c20a8e6cce74ac93ea2a92769b4ae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8f7f3674c24e31185e58db1de5d02074\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a8f7f3674c24e31185e58db1de5d02074\">provideVertexIDs</a> ()</td></tr>\n\
<tr class=\"separator:a8f7f3674c24e31185e58db1de5d02074\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a535c8d9d11b0844c12010c69a8317042\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a535c8d9d11b0844c12010c69a8317042\">renderImage</a> ()</td></tr>\n\
<tr class=\"separator:a535c8d9d11b0844c12010c69a8317042\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adf235728b57474ebf0658e8a497af7ac\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#adf235728b57474ebf0658e8a497af7ac\">renderSwatchImage</a> ()</td></tr>\n\
<tr class=\"separator:adf235728b57474ebf0658e8a497af7ac\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9c6e82c580e61213c1aecac5b28588e0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a9c6e82c580e61213c1aecac5b28588e0\">supportsBatching</a> ()</td></tr>\n\
<tr class=\"separator:a9c6e82c580e61213c1aecac5b28588e0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad783f5b016cb99971561d17ea3bca702\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#ad783f5b016cb99971561d17ea3bca702\">texCoordsPerVertex</a> ()</td></tr>\n\
<tr class=\"separator:ad783f5b016cb99971561d17ea3bca702\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a951ea74e72691889e0f6e64b2f225f1b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a951ea74e72691889e0f6e64b2f225f1b\">transparencyOptions</a> ()</td></tr>\n\
<tr class=\"separator:a951ea74e72691889e0f6e64b2f225f1b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a72fc8fba7474239346f21d01f5cd8979\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a72fc8fba7474239346f21d01f5cd8979\">unbind</a> ()</td></tr>\n\
<tr class=\"separator:a72fc8fba7474239346f21d01f5cd8979\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_class_open_maya_1_1_m_px_node\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_class_open_maya_1_1_m_px_node\')\"><img src=\"py_ref/closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html\">OpenMaya.MPxNode</a></td></tr>\n\
<tr class=\"memitem:a0769ac5b3ecf4060e81dfe4bdc6ed327 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a0769ac5b3ecf4060e81dfe4bdc6ed327\">__init__</a> ()</td></tr>\n\
<tr class=\"separator:a0769ac5b3ecf4060e81dfe4bdc6ed327 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9ace8ad066fca72652a4299eea6688fb inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a9ace8ad066fca72652a4299eea6688fb\">addExternalContentForFileAttr</a> ()</td></tr>\n\
<tr class=\"separator:a9ace8ad066fca72652a4299eea6688fb inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae17c4b226f482e2d77c3f99375d1eea0 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ae17c4b226f482e2d77c3f99375d1eea0\">compute</a> ()</td></tr>\n\
<tr class=\"separator:ae17c4b226f482e2d77c3f99375d1eea0 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a31b3dfe403b93ecd2f549b3f4e2c4f45 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a31b3dfe403b93ecd2f549b3f4e2c4f45\">connectionBroken</a> ()</td></tr>\n\
<tr class=\"separator:a31b3dfe403b93ecd2f549b3f4e2c4f45 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0327be38656e8b52d7354756d1c61158 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a0327be38656e8b52d7354756d1c61158\">connectionMade</a> ()</td></tr>\n\
<tr class=\"separator:a0327be38656e8b52d7354756d1c61158 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a033866d6f5d1d226968e83679647a5a5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a033866d6f5d1d226968e83679647a5a5\">copyInternalData</a> ()</td></tr>\n\
<tr class=\"separator:a033866d6f5d1d226968e83679647a5a5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab56b6136b9d21690af5b324884988079 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ab56b6136b9d21690af5b324884988079\">dependsOn</a> ()</td></tr>\n\
<tr class=\"separator:ab56b6136b9d21690af5b324884988079 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7772cf1126e67f19aff231ed38a5e232 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a7772cf1126e67f19aff231ed38a5e232\">doNotWrite</a> ()</td></tr>\n\
<tr class=\"separator:a7772cf1126e67f19aff231ed38a5e232 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a931cf0bb238c30243c4886c0015e36cc inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a931cf0bb238c30243c4886c0015e36cc\">existWithoutInConnections</a> ()</td></tr>\n\
<tr class=\"separator:a931cf0bb238c30243c4886c0015e36cc inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9e3ccf1092ee2438dc75e642d17764d5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a9e3ccf1092ee2438dc75e642d17764d5\">existWithoutOutConnections</a> ()</td></tr>\n\
<tr class=\"separator:a9e3ccf1092ee2438dc75e642d17764d5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab289c03543a34cc2bd9adaeb52bac5f5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ab289c03543a34cc2bd9adaeb52bac5f5\">forceCache</a> ()</td></tr>\n\
<tr class=\"separator:ab289c03543a34cc2bd9adaeb52bac5f5 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a724d24872285552179e86d8f2010e504 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a724d24872285552179e86d8f2010e504\">getExternalContent</a> ()</td></tr>\n\
<tr class=\"separator:a724d24872285552179e86d8f2010e504 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abab2536d49ede56365c6ff62e9d2b17d inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#abab2536d49ede56365c6ff62e9d2b17d\">getFilesToArchive</a> ()</td></tr>\n\
<tr class=\"separator:abab2536d49ede56365c6ff62e9d2b17d inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af399bb7a559f776326ee12d1365ebdce inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#af399bb7a559f776326ee12d1365ebdce\">getInternalValue</a> ()</td></tr>\n\
<tr class=\"separator:af399bb7a559f776326ee12d1365ebdce inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a691dd26d5e52c04acdcabe079ba73761 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a691dd26d5e52c04acdcabe079ba73761\">getInternalValueInContext</a> ()</td></tr>\n\
<tr class=\"separator:a691dd26d5e52c04acdcabe079ba73761 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa8976e2448a6b17f3d425b6d7e3b66f8 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#aa8976e2448a6b17f3d425b6d7e3b66f8\">internalArrayCount</a> ()</td></tr>\n\
<tr class=\"separator:aa8976e2448a6b17f3d425b6d7e3b66f8 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6bf551c7033e1fabe9b92662f8561375 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a6bf551c7033e1fabe9b92662f8561375\">isAbstractClass</a> ()</td></tr>\n\
<tr class=\"separator:a6bf551c7033e1fabe9b92662f8561375 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aade4aa32bde2c78e0f0b9018de5f283c inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#aade4aa32bde2c78e0f0b9018de5f283c\">isPassiveOutput</a> ()</td></tr>\n\
<tr class=\"separator:aade4aa32bde2c78e0f0b9018de5f283c inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7de591e3cfc79a8e3a88c4d2b9604ea9 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a7de591e3cfc79a8e3a88c4d2b9604ea9\">legalConnection</a> ()</td></tr>\n\
<tr class=\"separator:a7de591e3cfc79a8e3a88c4d2b9604ea9 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7d632f27d3bc19c1e33894e2bfc96ea7 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a7d632f27d3bc19c1e33894e2bfc96ea7\">legalDisconnection</a> ()</td></tr>\n\
<tr class=\"separator:a7d632f27d3bc19c1e33894e2bfc96ea7 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af35e9a723ae6ca48453e7dbe4d1029b8 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#af35e9a723ae6ca48453e7dbe4d1029b8\">name</a> ()</td></tr>\n\
<tr class=\"separator:af35e9a723ae6ca48453e7dbe4d1029b8 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad96b436e8ed4f553b3c1b2c4981d14eb inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ad96b436e8ed4f553b3c1b2c4981d14eb\">passThroughToMany</a> ()</td></tr>\n\
<tr class=\"separator:ad96b436e8ed4f553b3c1b2c4981d14eb inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9843fab516be52bd8ad38fa3f8b04ddd inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a9843fab516be52bd8ad38fa3f8b04ddd\">passThroughToOne</a> ()</td></tr>\n\
<tr class=\"separator:a9843fab516be52bd8ad38fa3f8b04ddd inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae0fa17aafbf8069fd0b4f850c4bcca57 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ae0fa17aafbf8069fd0b4f850c4bcca57\">postConstructor</a> ()</td></tr>\n\
<tr class=\"separator:ae0fa17aafbf8069fd0b4f850c4bcca57 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1bec68dc33fb12c27cdf7fa946b4774d inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a1bec68dc33fb12c27cdf7fa946b4774d\">postEvaluation</a> ()</td></tr>\n\
<tr class=\"separator:a1bec68dc33fb12c27cdf7fa946b4774d inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a05d578044e62c234e15380bae111a154 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a05d578044e62c234e15380bae111a154\">preEvaluation</a> ()</td></tr>\n\
<tr class=\"separator:a05d578044e62c234e15380bae111a154 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acf8282f130c9fdb2761945012b7880ae inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#acf8282f130c9fdb2761945012b7880ae\">setDependentsDirty</a> ()</td></tr>\n\
<tr class=\"separator:acf8282f130c9fdb2761945012b7880ae inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac31cd345dcd043f3e54953f2c7f59f3f inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ac31cd345dcd043f3e54953f2c7f59f3f\">setDoNotWrite</a> ()</td></tr>\n\
<tr class=\"separator:ac31cd345dcd043f3e54953f2c7f59f3f inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6c97e44813f132c7d54578fbfd1da4b1 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a6c97e44813f132c7d54578fbfd1da4b1\">setExistWithoutInConnections</a> ()</td></tr>\n\
<tr class=\"separator:a6c97e44813f132c7d54578fbfd1da4b1 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae4031ac4a045cd2c04709059688746d7 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ae4031ac4a045cd2c04709059688746d7\">setExistWithoutOutConnections</a> ()</td></tr>\n\
<tr class=\"separator:ae4031ac4a045cd2c04709059688746d7 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aea5902b8e9d5a2b6ed64b11986e23b57 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#aea5902b8e9d5a2b6ed64b11986e23b57\">setExternalContent</a> ()</td></tr>\n\
<tr class=\"separator:aea5902b8e9d5a2b6ed64b11986e23b57 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a11ab8bb8032fbd0510bb0c00ad6e3026 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a11ab8bb8032fbd0510bb0c00ad6e3026\">setExternalContentForFileAttr</a> ()</td></tr>\n\
<tr class=\"separator:a11ab8bb8032fbd0510bb0c00ad6e3026 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac1ce6a014e46b855276728f2ed93cb23 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ac1ce6a014e46b855276728f2ed93cb23\">setInternalValue</a> ()</td></tr>\n\
<tr class=\"separator:ac1ce6a014e46b855276728f2ed93cb23 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acdce5b59d3c71e560973ac79be8b6e10 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#acdce5b59d3c71e560973ac79be8b6e10\">setInternalValueInContext</a> ()</td></tr>\n\
<tr class=\"separator:acdce5b59d3c71e560973ac79be8b6e10 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abd413b588b4cbb917ef7f3a7b6522ee6 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#abd413b588b4cbb917ef7f3a7b6522ee6\">setMPSafe</a> ()</td></tr>\n\
<tr class=\"separator:abd413b588b4cbb917ef7f3a7b6522ee6 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a32b1568470daf87f9a1ee2cb6b9f97c9 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a32b1568470daf87f9a1ee2cb6b9f97c9\">shouldSave</a> ()</td></tr>\n\
<tr class=\"separator:a32b1568470daf87f9a1ee2cb6b9f97c9 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab4fb0c447b9223016cace2e16c488eef inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ab4fb0c447b9223016cace2e16c488eef\">thisMObject</a> ()</td></tr>\n\
<tr class=\"separator:ab4fb0c447b9223016cace2e16c488eef inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa014ff9d9800aaf83fc76548d04182e2 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#aa014ff9d9800aaf83fc76548d04182e2\">type</a> ()</td></tr>\n\
<tr class=\"separator:aa014ff9d9800aaf83fc76548d04182e2 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad34b97709625796f508aff7dfbe5c0b2 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ad34b97709625796f508aff7dfbe5c0b2\">typeId</a> ()</td></tr>\n\
<tr class=\"separator:ad34b97709625796f508aff7dfbe5c0b2 inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a074db167de07228d650f072f2dc6786a inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a074db167de07228d650f072f2dc6786a\">typeName</a> ()</td></tr>\n\
<tr class=\"separator:a074db167de07228d650f072f2dc6786a inherit pub_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a0080e1c82e43171e02fb3d8118045b77\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#a0080e1c82e43171e02fb3d8118045b77\">__new__</a> ()</td></tr>\n\
<tr class=\"separator:a0080e1c82e43171e02fb3d8118045b77\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aed76581d08fe91938639a6003b498aea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_u_i_1_1_m_px_hw_shader_node.html#aed76581d08fe91938639a6003b498aea\">getHwShaderNode</a> ()</td></tr>\n\
<tr class=\"separator:aed76581d08fe91938639a6003b498aea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_static_methods_class_open_maya_1_1_m_px_node\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_methods_class_open_maya_1_1_m_px_node\')\"><img src=\"py_ref/closed.png\" alt=\"-\">&#160;Static Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html\">OpenMaya.MPxNode</a></td></tr>\n\
<tr class=\"memitem:ae78c73e62c697fc2db2f48dee5560c57 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ae78c73e62c697fc2db2f48dee5560c57\">__new__</a> ()</td></tr>\n\
<tr class=\"separator:ae78c73e62c697fc2db2f48dee5560c57 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ada4bc68f1df98730aa5074ef87f00716 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#ada4bc68f1df98730aa5074ef87f00716\">addAttribute</a> ()</td></tr>\n\
<tr class=\"separator:ada4bc68f1df98730aa5074ef87f00716 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adf19fe538d775ac2ec0169e6bc300f1c inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#adf19fe538d775ac2ec0169e6bc300f1c\">attributeAffects</a> ()</td></tr>\n\
<tr class=\"separator:adf19fe538d775ac2ec0169e6bc300f1c inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3d620c04b4c4a69b46ea6478e9acada1 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html#a3d620c04b4c4a69b46ea6478e9acada1\">inheritAttributesFrom</a> ()</td></tr>\n\
<tr class=\"separator:a3d620c04b4c4a69b46ea6478e9acada1 inherit pub_static_methods_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-attribs\"></a>\n\
Static Public Attributes</h2></td></tr>\n\
<tr class=\"memitem:a9aa7ecb5c6125ef72fb1aa9b946b4688\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a9aa7ecb5c6125ef72fb1aa9b946b4688\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyAll</b> = 15</td></tr>\n\
<tr class=\"separator:a9aa7ecb5c6125ef72fb1aa9b946b4688\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a646d09c15e28ce563d0469df7267d941\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a646d09c15e28ce563d0469df7267d941\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyColorArrays</b> = 4</td></tr>\n\
<tr class=\"separator:a646d09c15e28ce563d0469df7267d941\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a275db2aa8d1437e04ad83259b81f1b99\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a275db2aa8d1437e04ad83259b81f1b99\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyNone</b> = 0</td></tr>\n\
<tr class=\"separator:a275db2aa8d1437e04ad83259b81f1b99\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7f1f0c26df0bacedeb2a227efdacef10\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a7f1f0c26df0bacedeb2a227efdacef10\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyNormalArray</b> = 2</td></tr>\n\
<tr class=\"separator:a7f1f0c26df0bacedeb2a227efdacef10\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a94cfb27bf9ffbb276eaca03fc1f45f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a94cfb27bf9ffbb276eaca03fc1f45f04\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyTexCoordArrays</b> = 8</td></tr>\n\
<tr class=\"separator:a94cfb27bf9ffbb276eaca03fc1f45f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a76205f4f30a0517ac326ad421e9f0423\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a76205f4f30a0517ac326ad421e9f0423\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDirtyVertexArray</b> = 1</td></tr>\n\
<tr class=\"separator:a76205f4f30a0517ac326ad421e9f0423\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae7c2ca05d30c441e0e0de05ec254e148\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae7c2ca05d30c441e0e0de05ec254e148\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kIsTransparent</b> = 1</td></tr>\n\
<tr class=\"separator:ae7c2ca05d30c441e0e0de05ec254e148\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae90393ddc88701aa711e1ebf07588539\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae90393ddc88701aa711e1ebf07588539\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kNoTransparencyFrontBackCull</b> = 2</td></tr>\n\
<tr class=\"separator:ae90393ddc88701aa711e1ebf07588539\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab7345b50b974da9f7b7586ed604779d6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab7345b50b974da9f7b7586ed604779d6\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kNoTransparencyPolygonSort</b> = 4</td></tr>\n\
<tr class=\"separator:ab7345b50b974da9f7b7586ed604779d6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abc2632fac946395bd7cfa0577697fc0b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"abc2632fac946395bd7cfa0577697fc0b\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteAll</b> = 15</td></tr>\n\
<tr class=\"separator:abc2632fac946395bd7cfa0577697fc0b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac2bf84beadbbabe0a779612790e3b4e6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ac2bf84beadbbabe0a779612790e3b4e6\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteColorArrays</b> = 4</td></tr>\n\
<tr class=\"separator:ac2bf84beadbbabe0a779612790e3b4e6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae70d146a014b09e9411fbca2b77a8599\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae70d146a014b09e9411fbca2b77a8599\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteNone</b> = 0</td></tr>\n\
<tr class=\"separator:ae70d146a014b09e9411fbca2b77a8599\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0925741744616a205c93333158e4ae62\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a0925741744616a205c93333158e4ae62\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteNormalArray</b> = 2</td></tr>\n\
<tr class=\"separator:a0925741744616a205c93333158e4ae62\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3ec27befd260c1b176a67e2bd921c152\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a3ec27befd260c1b176a67e2bd921c152\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteTexCoordArrays</b> = 8</td></tr>\n\
<tr class=\"separator:a3ec27befd260c1b176a67e2bd921c152\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae8e6be6e334131c60d7633aa3c95376e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae8e6be6e334131c60d7633aa3c95376e\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kWriteVertexArray</b> = 1</td></tr>\n\
<tr class=\"separator:ae8e6be6e334131c60d7633aa3c95376e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a05df4e126fcecf6ea9cfd8f06e3b2942\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a05df4e126fcecf6ea9cfd8f06e3b2942\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outColor</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a05df4e126fcecf6ea9cfd8f06e3b2942\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abe725370482610bd5aacbb88ed8e96b0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"abe725370482610bd5aacbb88ed8e96b0\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outColorB</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:abe725370482610bd5aacbb88ed8e96b0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaf1a9d606d11517364c9aa12fbff5019\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aaf1a9d606d11517364c9aa12fbff5019\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outColorG</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:aaf1a9d606d11517364c9aa12fbff5019\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acceb93ec30e2212ecced40136177e1c6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"acceb93ec30e2212ecced40136177e1c6\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outColorR</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:acceb93ec30e2212ecced40136177e1c6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab9107cff39a0e9adae4047397b500f3d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab9107cff39a0e9adae4047397b500f3d\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outGlowColor</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:ab9107cff39a0e9adae4047397b500f3d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4f2639c1714b6dd1d1c4d4d1d4454fac\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a4f2639c1714b6dd1d1c4d4d1d4454fac\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outGlowColorB</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a4f2639c1714b6dd1d1c4d4d1d4454fac\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2d8aa46343af4bf5b26dcf10bbf29ca7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a2d8aa46343af4bf5b26dcf10bbf29ca7\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outGlowColorG</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a2d8aa46343af4bf5b26dcf10bbf29ca7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9f20974f5eee92535218b3e4a838c108\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a9f20974f5eee92535218b3e4a838c108\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outGlowColorR</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a9f20974f5eee92535218b3e4a838c108\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa4c9eb10e1bb60dba6992bb5d44364d6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aa4c9eb10e1bb60dba6992bb5d44364d6\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outMatteOpacity</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:aa4c9eb10e1bb60dba6992bb5d44364d6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae4525e1880f66189408a53d15f2e9ca9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae4525e1880f66189408a53d15f2e9ca9\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outMatteOpacityB</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:ae4525e1880f66189408a53d15f2e9ca9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0e763b33fc3f6e41e9f23866fd8d2e2d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a0e763b33fc3f6e41e9f23866fd8d2e2d\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outMatteOpacityG</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a0e763b33fc3f6e41e9f23866fd8d2e2d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8724b4a4b14064e77e41659569dc85f0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a8724b4a4b14064e77e41659569dc85f0\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outMatteOpacityR</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a8724b4a4b14064e77e41659569dc85f0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af4d894e65c8962f950475e143faff249\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af4d894e65c8962f950475e143faff249\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outTransparency</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:af4d894e65c8962f950475e143faff249\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3f60760790dd380162bc18605d8a96d4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a3f60760790dd380162bc18605d8a96d4\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outTransparencyB</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a3f60760790dd380162bc18605d8a96d4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6ac6ce686667163f0a23fbb9b7c8c67c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a6ac6ce686667163f0a23fbb9b7c8c67c\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outTransparencyG</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a6ac6ce686667163f0a23fbb9b7c8c67c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a677946f78c9b96271f6a7f2f38f90304\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a677946f78c9b96271f6a7f2f38f90304\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>outTransparencyR</b> = &lt;OpenMaya.MObjectobject&gt;</td></tr>\n\
<tr class=\"separator:a677946f78c9b96271f6a7f2f38f90304\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_static_attribs_class_open_maya_1_1_m_px_node\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_attribs_class_open_maya_1_1_m_px_node\')\"><img src=\"py_ref/closed.png\" alt=\"-\">&#160;Static Public Attributes inherited from <a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_px_node.html\">OpenMaya.MPxNode</a></td></tr>\n\
<tr class=\"memitem:afbc9c0e9b548f43edad36e7107424d51 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"afbc9c0e9b548f43edad36e7107424d51\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kAssembly</b> = 22</td></tr>\n\
<tr class=\"separator:afbc9c0e9b548f43edad36e7107424d51 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa2ddb6eebdc8eb14958319e89f95f7f1 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aa2ddb6eebdc8eb14958319e89f95f7f1\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kBlendShape</b> = 25</td></tr>\n\
<tr class=\"separator:aa2ddb6eebdc8eb14958319e89f95f7f1 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1e7320e3dab31e19ebd7f8d1c5a1ab65 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a1e7320e3dab31e19ebd7f8d1c5a1ab65\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kCameraSetNode</b> = 16</td></tr>\n\
<tr class=\"separator:a1e7320e3dab31e19ebd7f8d1c5a1ab65 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a96486002a2e1e5c5db720171c35d9a20 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a96486002a2e1e5c5db720171c35d9a20\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kClientDeviceNode</b> = 20</td></tr>\n\
<tr class=\"separator:a96486002a2e1e5c5db720171c35d9a20 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6215f4a1337ff16057b2156aacfa6a39 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a6215f4a1337ff16057b2156aacfa6a39\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kConstraintNode</b> = 17</td></tr>\n\
<tr class=\"separator:a6215f4a1337ff16057b2156aacfa6a39 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1eda2e7b04dd386503d4bfb26528c60d inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a1eda2e7b04dd386503d4bfb26528c60d\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDeformerNode</b> = 2</td></tr>\n\
<tr class=\"separator:a1eda2e7b04dd386503d4bfb26528c60d inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a72cec8639034a7fbf4e8cbea190b5270 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a72cec8639034a7fbf4e8cbea190b5270\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDependNode</b> = 0</td></tr>\n\
<tr class=\"separator:a72cec8639034a7fbf4e8cbea190b5270 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3c5469fb0f01c3d15937bbe9f2e9465e inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a3c5469fb0f01c3d15937bbe9f2e9465e\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kEmitterNode</b> = 6</td></tr>\n\
<tr class=\"separator:a3c5469fb0f01c3d15937bbe9f2e9465e inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af4e13b147d6bf1eecacbc2718d7d8e03 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af4e13b147d6bf1eecacbc2718d7d8e03\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kEvaluatedDirectly</b> = 1</td></tr>\n\
<tr class=\"separator:af4e13b147d6bf1eecacbc2718d7d8e03 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9c4314b3c4a41422e2fc9665b9cd5338 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a9c4314b3c4a41422e2fc9665b9cd5338\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kEvaluatedIndirectly</b> = 0</td></tr>\n\
<tr class=\"separator:a9c4314b3c4a41422e2fc9665b9cd5338 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af9eaee1bd90b35ac804e9298cfa108d3 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af9eaee1bd90b35ac804e9298cfa108d3\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kFieldNode</b> = 5</td></tr>\n\
<tr class=\"separator:af9eaee1bd90b35ac804e9298cfa108d3 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a457ec60a3e8263f994ca7d1f7d2c351c inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a457ec60a3e8263f994ca7d1f7d2c351c\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kFluidEmitterNode</b> = 13</td></tr>\n\
<tr class=\"separator:a457ec60a3e8263f994ca7d1f7d2c351c inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a70920d33db1560aa5943f4d631d9dad0 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a70920d33db1560aa5943f4d631d9dad0\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kGeometryFilter</b> = 24</td></tr>\n\
<tr class=\"separator:a70920d33db1560aa5943f4d631d9dad0 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c48ed5696e2fcef6f952d419cf0208f inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a7c48ed5696e2fcef6f952d419cf0208f\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kHardwareShader</b> = 9</td></tr>\n\
<tr class=\"separator:a7c48ed5696e2fcef6f952d419cf0208f inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac5e6d116e27bc282a87eb46f2623753b inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ac5e6d116e27bc282a87eb46f2623753b\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kHwShaderNode</b> = 10</td></tr>\n\
<tr class=\"separator:ac5e6d116e27bc282a87eb46f2623753b inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5e7bf5b9c6ef96fe65e3c4f295eabe70 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a5e7bf5b9c6ef96fe65e3c4f295eabe70\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kIkSolverNode</b> = 8</td></tr>\n\
<tr class=\"separator:a5e7bf5b9c6ef96fe65e3c4f295eabe70 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a499391fd9e719e81cc8cb26f2364b6fd inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a499391fd9e719e81cc8cb26f2364b6fd\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kImagePlaneNode</b> = 14</td></tr>\n\
<tr class=\"separator:a499391fd9e719e81cc8cb26f2364b6fd inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3b7ed7a1afb9bc74a12c7a6f3a3464ef inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a3b7ed7a1afb9bc74a12c7a6f3a3464ef\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kLast</b> = 26</td></tr>\n\
<tr class=\"separator:a3b7ed7a1afb9bc74a12c7a6f3a3464ef inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adc26a4fba16472cb4b34599778de5edb inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"adc26a4fba16472cb4b34599778de5edb\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kLeaveDirty</b> = 2</td></tr>\n\
<tr class=\"separator:adc26a4fba16472cb4b34599778de5edb inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af9584b07bee7758e8f9f85e82a8af2a7 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af9584b07bee7758e8f9f85e82a8af2a7\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kLocatorNode</b> = 1</td></tr>\n\
<tr class=\"separator:af9584b07bee7758e8f9f85e82a8af2a7 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adf3108761c35eabae6fe7b05810d5925 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"adf3108761c35eabae6fe7b05810d5925\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kManipContainer</b> = 3</td></tr>\n\
<tr class=\"separator:adf3108761c35eabae6fe7b05810d5925 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a87602f4dff351b8778a1dc195e50ecc0 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a87602f4dff351b8778a1dc195e50ecc0\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kManipulatorNode</b> = 18</td></tr>\n\
<tr class=\"separator:a87602f4dff351b8778a1dc195e50ecc0 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab38a1ef8f549c71926eb11177cf72957 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab38a1ef8f549c71926eb11177cf72957\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kMotionPathNode</b> = 19</td></tr>\n\
<tr class=\"separator:ab38a1ef8f549c71926eb11177cf72957 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acc96706d883817c6e19e4d8e5daff089 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"acc96706d883817c6e19e4d8e5daff089\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kObjectSet</b> = 12</td></tr>\n\
<tr class=\"separator:acc96706d883817c6e19e4d8e5daff089 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a04c846590475d29397443284637ba7d4 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a04c846590475d29397443284637ba7d4\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kParticleAttributeMapperNode</b> = 15</td></tr>\n\
<tr class=\"separator:a04c846590475d29397443284637ba7d4 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a356d0401e933a01019be8a8513abf862 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a356d0401e933a01019be8a8513abf862\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kPostEvaluationTypeLast</b> = 3</td></tr>\n\
<tr class=\"separator:a356d0401e933a01019be8a8513abf862 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac4bdf9d01f520cda0ff2300ad04be580 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ac4bdf9d01f520cda0ff2300ad04be580\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kSkinCluster</b> = 23</td></tr>\n\
<tr class=\"separator:ac4bdf9d01f520cda0ff2300ad04be580 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa9e8e92a78d537f4fffd124dd3b9a23c inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aa9e8e92a78d537f4fffd124dd3b9a23c\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kSpringNode</b> = 7</td></tr>\n\
<tr class=\"separator:aa9e8e92a78d537f4fffd124dd3b9a23c inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8c0c5e2d603f8c0a7a4869936a62bcdd inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a8c0c5e2d603f8c0a7a4869936a62bcdd\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kSurfaceShape</b> = 4</td></tr>\n\
<tr class=\"separator:a8c0c5e2d603f8c0a7a4869936a62bcdd inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab33b084fe205d87a11bd6f8928d02361 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab33b084fe205d87a11bd6f8928d02361\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kThreadedDeviceNode</b> = 21</td></tr>\n\
<tr class=\"separator:ab33b084fe205d87a11bd6f8928d02361 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab43c4ce82053fb25e58a2ee5a00d7576 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab43c4ce82053fb25e58a2ee5a00d7576\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kTransformNode</b> = 11</td></tr>\n\
<tr class=\"separator:ab43c4ce82053fb25e58a2ee5a00d7576 inherit pub_static_attribs_class_open_maya_1_1_m_px_node\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><pre class=\"fragment\">Base class for user defined hardware shaders.\n\
\n\
Method resolution order:\n\
-   MPxHwShaderNode\n\
-   OpenMaya.MPxNode\n\
-   builtins.object</pre> </div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"ae4e248b2103c71e0eb7fc0e64925eb42\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.__init__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Initialize self.  See help(type(self)) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a0080e1c82e43171e02fb3d8118045b77\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.__new__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Create and return a new object.  See help(type) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1beaa04420614bd5805d69a26512ffbc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.bind </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">bind(request, view) -&gt; self\n\
\n\
This method is invoked for hardware rendering to Maya\'s 3D view.\n\
\n\
This is the preferred method of interactive feedback and performance. the \"gl\" version should be used for batch hardware rendering.\n\
\n\
This method is called to set up the OpenGL state.  It would typically ensure that textures were bound and that any specific OpenGL extensions are enabled.  A status code of MS::kSuccess should be returned unless there was a problem during the display, such as insufficient memory or required input data is missing or invalid.\n\
\n\
* request (MDrawRequest) - the draw request.\n\
* view (M3dView) - the view in which to draw.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab1c363b8eec62d8b395201ed6d513595\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.colorsPerVertex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">colorsPerVertex() -&gt; int\n\
\n\
This method returns the number of color values per vertex that the hw shader node would like to receive from Maya.  Maya will attempt to provide all the color data that the shader would like but it will never provide more data that is actually available in the shape.  The color sets returned by getColorSetNames() will override the number of color sets specified by colorsPerVertex(). If you do not override this method or getColorSetNames(), Maya will provide no colors per vertex.\n\
\n\
Returns the number of color values desired</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8fbc1469df82ff5cb4e0346522a14036\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.currentPath </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentPath() -&gt; MDagPath\n\
\n\
This method returns a reference to the current path that the shader is invoked for.\n\
\n\
The path is only valid before a call to any of the attribute specifying routines:\n\
\n\
   normalsPerVertex()\n\
   colorsPerVertex()\n\
   getColorSetNames()\n\
   texCoordsPerVertex()\n\
   getTexCoordSetNames()\n\
   hasTransparency()\n\
   provideVertexIDs()\n\
\n\
The path is not guaranteed to be valid at any other time.\n\
\n\
This method allows the plugin to return attribute queries which are relative to a specific path or object.\n\
\n\
For example, the plugin can retrieve the MObject from the path, then use the MFnMesh class on the MObject, assuming the object is a polygonal surface. Through MFnMesh the code can query the actual number of texture coordinate sets on the surface and return appropriate values for the getTexCoordSetNames() routine.\n\
\n\
The [gl]bind(), [gl]unbind() and [gl]geometry() routines already have access to a dag path which is the same path as the one which can be retrieved via this method.\n\
\n\
For performance reasons, it is recommended that for those methods the MDagPath passed in as an argument should be used.\n\
\n\
Returns an MDagPath. Note that this path can be invalid\n\
Use MDagPath.isValid() to confirm the validity of the path.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8b2388b3b216be1d64dba9300c95ee23\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.currentShadingEngine </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentShadingEngine() -&gt; MObject\n\
\n\
This method returns an MObject to the shading engine that is currently being rendered. This method will only return a valid MObject during the following calls:\n\
\n\
  normalsPerVertex()\n\
  colorsPerVertex()\n\
  getColorSetNames()\n\
  texCoordsPerVertex()\n\
  getTexCoordSetNames()\n\
  hasTransparency()\n\
  provideVertexIDs()\n\
  getAvailableImages()\n\
  bind(), glBind()\n\
  geometry(), glGeometry()\n\
  unbind(), glUnbind()</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a462e9af66225515633d0e4f5141481f4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.dirtyMask </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">dirtyMask() -&gt; int\n\
\n\
This method returns a \"dirty\" mask that indicates which geometry items have changed from the last invocation of the plugin to draw. The mask is valid at the time that geometry() or glGeometry() is called and at no other time.\n\
\n\
Note that this mask is relative to the geometry for the current object (path) being drawn by the shader. The current path is the MDagPath argument passed in via the geometry routines.\n\
\n\
In general the mask will mark the geometry as not being dirty.\n\
\n\
Scenarios where the geometry will be marked dirty include:\n\
\n\
  Whenever a geometry attribute changes. For example positions or normals are modified.\n\
  Whenever the attributes being requested changes from the previous invocation of the shader. For example, if in the previous invocation the plugin asks for position only, and in the current invocation asks for position and normals, then the geometry attributes returned will have changed and thus be marked \"dirty\".\n\
\n\
Returns the dirty mask which can be bit \'AND\'ed against the values:\n\
  kDirtyNone\n\
  kDirtyVertexArray\n\
  kDirtyNormalArray\n\
  kDirtyColorArrays\n\
  kDirtyTexCoordArrays\n\
  kDirtyAll</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af1baeed92db0ea0cbf886dba96bc3ded\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.geometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">geometry(request, view, prim, writable, indexCount, indexArray, vertexCount, vertexIDs, vertexArray, normalCount, normalArrays, colorCount, colorArrays, texCoordCount, texCoordArrays) -&gt; self\n\
\n\
This method is invoked for hardware rendering to Maya\'s 3D view.\n\
\n\
This is the preferred method of interactive feedback and performance. the \"gl\" version should be used for batch hardware rendering.\n\
\n\
This method does all the actual OpenGL drawing.  The arguments contain all the data to successfully call glDrawElements or glDrawRangeElements.  It is possible that there will be multiple calls to this method surrounded by a single call to bind() and unbind().\n\
\n\
Note 1.\n\
The array of vertex IDs returned corresponds to each triangle\'s vertex. This allows access to associated blind data per vertex. The vertexIDs array allows querying of information such as color per vertex etc.\n\
\n\
Note 2.\n\
The arrays passed to this method can contain sparse information.  Check array positions against None to ensure that the array information item is valid.\n\
\n\
It is necessary to use the indexArray to access information contained in the data arrays.\n\
\n\
* request (MDrawRequest) - the draw request.\n\
* view (M3dView) - the view in which to draw.\n\
* prim (int) - the type of primitive to draw.  This is one of the values accepted by glBegin().  Typically it will be GL_TRIANGLES but it could be any of the others.\n\
* writable (int) this is a mask which indicates which of the various array arguments can be modified in place.  If a bit in writable is set then you can modify corresponding data array (after casting it to a non-const type).  If the bit is not set in writable then you must not&gt; modify the data since it points to internal Maya storage.  You can test the bits in writeable against the values\n\
:  kWriteNone\n\
  kWriteVertexArray\n\
  kWriteNormalArray\n\
  kWriteColorArrays\n\
  kWriteTexCoordArrays\n\
  kWriteAll\n\
* indexCount (int) - specifies both the number of indices to draw and the size of the indexArray argument.\n\
* indexArray (buffer of int values) - the array of index values.  This array is in a format suitable for passing as the indices argument to glDrawElements() or glDrawRangeElements().  See the OpenGL documentation for details on calling these routines.\n\
* vertexCount (int) - the number of elements in the vertexArray, the normalArray, each of the colorArrays, and each of the texCoordArrays.\n\
* vertexIDs (buffer - int values) - the component IDs of the vertices in vertexArray. This array is only provided if it was requested by overriding the provideVertexIDs() method to return True.\n\
* vertexArray (buffer - float values) - the array of vertex data.  Currently, this is always 3 element floating point values.  This data is in a format suitable for passing to glVertexPointer().  See the OpenGL documentation for details.\n\
* normalCount (int) - the number of individual \"normal\" arrays that are being provided in normalArrays.  See the description of normalsPerVertex method below for details.\n\
* normalArrays (array of buffer - float values) - the normal (and tangent) data suitable. There may be 0, 1, 2, or 3 \"normal\" arrays.  See the description of the normalsPerVertex method below for details.\n\
* colorCount (int) - the number of individual color arrays.\n\
* colorArrays (array of buffer - float values) - the arrays of color data.  The first set of color data is pointed to by colorArrays[0].  Each color array contains vertexCount color values, each of which is 4 floating point values long and represents the red, green, blue, and alph values on a 0 to 1 scale.  Each individual array is suitable for passing to glColorPointer().\n\
* texCoordCount (int) - the number of texture coordinate arrays. Each array contains one set of UV texture coordinates.\n\
* texCoordArrays (array of buffer - float values) - the arrays of texture coordinate data. The first set of texture coordinate data is pointed to by texCoordArrays[0].  Each array contains vertexCount coordinate values, each of which is 2 floating point values long.  Each individual array is suitable for passing to glTexCoordPointer().</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aae7bcb70f1797a66612df2979a4c0928\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.getAvailableImages </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getAvailableImages(uvSetName) -&gt; list of strings/None\n\
\n\
Maya will call this method to get your shader\'s list of images which are available for use in the UV texture editor for the UV set specified. Typically, this list will include one entry for each texture using the specified UV set, however, your shader is free to return as many images as you wish (for example, blending between two textures, texture alpha masks, artificially shaded views of bump/normal maps, etc). Your shader\'s renderImage() method will be used to render the images themselves.\n\
\n\
* uvSetName (string) - Name of a UV set the channel list should be filtered against.\n\
\n\
Returns the names of the images this shader defines which are valid for the uvSetName specified.\n\
Returns None if method is not implemented : Use the default behaviour.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab01115dc94a597d9f442b3402741e8f6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.getColorSetNames </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getColorSetNames(names) -&gt; int\n\
\n\
This method returns an array of color per vertex set names. Maya will attempt to provide color per vertex data from these maps in the corresponding array element in the colorArrays argument to the geometry method.  For example, if the names[2] is \"cpv56\" then colorArrays[2] will be the array of values from cpv56, or None if the shape being rendered does not have a color set of that name. Ifthis method is not overridden an empty list of names will be returned,and Maya will use colorsPerVertex() to determine how many color setsto provide.\n\
\n\
* names [IN/OUT] (list of string) - a string array holding the names of the color per vertex sets from which color data should be extracted.\n\
\n\
Returns the number of elements in the names array.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aed76581d08fe91938639a6003b498aea\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.getHwShaderNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getHwShaderNode(object) -&gt; MPxHwShaderNode\n\
\n\
This is a static convenience method to be able to get an MPxHwShaderNode from an MObject provided by a swatch generator class (Class derived from MSwatchRenderRegister).\n\
\n\
* object (MObject) - The object to examine.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9fd419d8e323290d41417be95b529164\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.getTexCoordSetNames </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getTexCoordSetNames(names) -&gt; int\n\
\n\
This method returns an array of texture coordinate set names. Maya will attempt to provide texture coordinates from these maps in the corresponding array element in the texCoordArrays argument to the geometry method.  For example, if the names[2] is \"uvSet3\" then texCoordArrays[2] will be the array of values from uvSet3. If this method is not overridden an empty list of names will be returned, and Maya will use texCoordsPerVertex() to determine how many uv sets to provide.\n\
\n\
* names [IN/OUT] (list of string) - a string array holding the names of the uvSets from which texture coordinate data should be extracted.\n\
\n\
Returns the number of elements in the names array.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae9c9f9407b45badfe551a4f217ec7ef2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.glBind </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">glBind(shapePath) -&gt; self\n\
\n\
This method should only be overridden for hardware rendering.\n\
\n\
The implementation can assume the graphics context and model view projection matrix have already been set.\n\
\n\
This method will be invoked once per frame and should be overridden to allocate any resources needed for the draw. For example, binding vertex programs, fragment programs, or allocating textures. A status code of MS::kSuccess should be returned unless there was a problem such as insufficient memory or required input data is missing or        invalid.\n\
\n\
* shapePath (MDagPath) - Path to the surface being drawn.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aaad4a5849a82c09fdd362affff51fcf4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.glGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">glGeometry(shapePath, prim, writable, indexCount, indexArray, vertexCount, vertexIDs, vertexArray, normalCount, normalArrays, colorCount, colorArrays, texCoordCount, texCoordArrays) -&gt; self\n\
\n\
This method should only be overridden for hardware rendering.\n\
\n\
The implementation can assume graphics context and model view projection matrix have already been set.\n\
\n\
This method does all the actual OpenGL drawing.  The arguments contain all the data to successfully call glDrawElements or glDrawRangeElements.  It is possible that there will be multiple calls to this method surrounded by a single call to bind() and unbind().\n\
\n\
Note 1.\n\
The array of vertex IDs returned corresponds to each triangle\'s vertex. This allows access to associated blind data per vertex. The vertexIDs array allows querying of information such as color per vertex etc.\n\
\n\
Note 2.\n\
The arrays passed to this method can contain sparse information.  Check array positions against None to ensure that the array information item is valid.\n\
\n\
It is necessary to use the indexArray to access information contained in the data arrays.\n\
\n\
* shapePath (MDagPath) - Path to the surface being drawn.\n\
See geometry() description for detail on the other parameters.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3df577a909807440057a6c615703e8c3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.glUnbind </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">glUnbind(shapePath) -&gt; self\n\
\n\
This method should only be overridden for hardware rendering.\n\
\n\
The implementation can assume the graphics context and model view projection matrix have already been set.\n\
\n\
This method will be invoked once per frame and should be overridden to deallocate any resources used to draw. It\'s important that all resources be released when a batch hardware render has occured because the graphics context will be deleted. It may be desireable to override the other version of bind/unbind to keep track of whether the draw is for the 3D view or the batch hardware renderer. This information could then be used to better track the reuse of resources and optimize performance.\n\
\n\
A status code of MS::kSuccess should be returned unless there was a problem.\n\
\n\
* shapePath (MDagPath) - Path to the surface being drawn.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1e24e904f9d9d7fc1483d5a9e86efb25\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.hasTransparency </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">hasTransparency() -&gt; bool\n\
\n\
This method returns a boolean value that indicates whether the object will be drawn transparently or not.  Transparent objects must be drawn after all the opaque objects in the scene or they will not display correctly.  Maya uses the return value to determine when it can draw this shape.\n\
\n\
Note : The functionality in this method has been subsumed by the transparencyOptions() method. It is recommended that shader node writers use this newer method as it provides greater control over how transparency is interpreted by Maya\'s refresh mechanism.\n\
\n\
For backward compatibility, if this method is specified and returns True, it will override the transparencyOptions() method.\n\
\n\
Returns True if the object will be transparent or False if it will not.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad1f7c270ade081688837fd47721df823\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.invertTexCoords </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">invertTexCoords() -&gt; bool\n\
\n\
Specifies whether this shader requires inverted texture coordinates. (i.e. where the top-left hand corner of UV space is (0,0) instead of the bottom-left corner).\n\
\n\
By default, this method will return False to ensure compatibility with existing shader code.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1f0c20a8e6cce74ac93ea2a92769b4ae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.normalsPerVertex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">normalsPerVertex() -&gt; int\n\
\n\
Specifies how many normals per vertex the HW shader would like Maya to provide.  This can range from 0 to 3.  The first normal is the surface normal.  The second \"normal\" is the primary tangent (generally the \"u\" direction).  The third \"normal\" is the secondary tangent or the binormal (generally the \"v\" direction). Together, the normal, tangent and binormal form an orthogonal basis frequently named \"tangent space basis\".\n\
\n\
The tangent and binormal vectors are guaranteed to be normalized and orthogonal to the surface normal. Please note that extracting the tangent and/or binormal requires expensive calculations, that will slow down refresh time substantially. In a future version, Maya may cache the resulting tangent space basis; in the meantime, only ask for more than one normal per vertex if they are absolutely required.\n\
\n\
Also note that the tangent and binormal calculation requires a uv map. Currently, they are always computed from the first available uv map; if there is no uv mapping on the surface, Maya will only provide surface normals in the geometry call, regardless of the value returned by normalsPerVertex().\n\
\n\
If you do not override this method, Maya will provide 1 normal per vertex.\n\
\n\
Maya will automatically and silently clamp the result of this function to the [0,3] range.\n\
\n\
COMPATIBILITY NOTE: Automatic tangent space basis calculation is only supported starting with Maya 4.0.1. Maya 4.0 supported a different scheme that was much more complicated and no longer supported.\n\
\n\
Returns the number of normal values desired. (0 = none, 1 = surface normal only, 2 = surface normal + tangent, 3 = surface normal + tangent + binormal)</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8f7f3674c24e31185e58db1de5d02074\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.provideVertexIDs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">provideVertexIDs() -&gt; bool\n\
\n\
This method returns a boolean value that indicates whether a map of the vertex IDs will be provided to the geometry method.\n\
\n\
Returns True if vertex IDs should be provided to the geometry method.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a535c8d9d11b0844c12010c69a8317042\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.renderImage </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">renderImage(imageName, region, parameters) -&gt; [int, int]/None\n\
renderImage(uiDrawManager, imageName, region, parameters) -&gt; [int, int]/None\n\
\n\
This method allows you to to render the background image used for this shader in the UV texture editor. The image requested will be one of the image names returned by your shader\'s getAvailableImages() method.\n\
\n\
The implementation must return the dimensions of the image in the \'imageWidth\' and \'imageHeight\' parameters so that Maya can perform pixel snapping and other resolution-dependent operations.\n\
\n\
The implementation can assume OpenGL context, model view projection matrix, and texture transformations have already been set. A default color of white will be set, however you are free to change this. The magnification filter will be set to either point or bilinear based on user configuration and should not be modified. The values of GL_TEXTURE_WRAP_S and GL_TEXTURE_WRAP_T are undefined on entry, and your implementation is responsible for setting them to appropriate values (e.g. GL_REPEAT).\n\
\n\
The arguments contain the name of the image to render, and the vertex and texture coordinate values to use at each corner of the rectangular image being rendered. Your implementation is responsible for restoring the original the value of any OpenGL state that is modified.\n\
\n\
* imageName (string) - Name of the image to render. This corresponds to one of the image names returned by your shader\'s getAvailableImages() method.\n\
* region (float[2][2]) - Rectangular region to be rendered. The values of this parameter should be used to populate the vertex and texture coordinates of the rectangle being rendered.\n\
* parameters (RenderParamters) - Additional parameters on how to render the image. The values reflect the image settings of the UV editor.\n\
\n\
A second version with the uiDrawManager parameter allows you to to render the background image used for this shader in the UV texture editor in viewport 2.0.\n\
\n\
* uiDrawManager (MUIDrawManager) - The UI draw manager, it can be used to draw some simple geometry\n\
\n\
Returns None if method is not implemented : No rendering will occur.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adf235728b57474ebf0658e8a497af7ac\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.renderSwatchImage </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">renderSwatchImage(image) -&gt; self/None\n\
\n\
If the shader specifies to override swatch rendering, then this method must be overridden in order to draw anything into a swatch.\n\
\n\
The shader will only draw a swatch if it has been registered to do so, by providing a valid classification during MFnPlugin::registerNode(). The shader should provide a classification that defines a swatch rendering node such as : \"shader/surface/utility/:drawdb/shader/surface/myCustomShader:swatch/myCustomShaderSwatchGenerator\" and have \"myCustomShaderSwatchGenerator\" registered has a swatch renderer : MSwatchRenderRegister.registerSwatchRender(\"myCustomShaderSwatchGenerator\", MHWShaderSwatchGenerator.createObj );\n\
\n\
The default implementation is to draw nothing. The basic logic to draw a swatch is as follows:\n\
\n\
  Determine the size of the swatch required. This is the dimensions of the MImage passed in as an argument. The pixels for the MImage will have been pre-allocated. The format of the pixels is 32-bit R,G,B,A, with 8-bits per channel.\n\
  Either use an offscreen \"swatch context\" provided to you or use your own offscreen context. The provided context is available via the MHardwareRenderer class method makeSwatchContextCurrent(). Note that the swatch context may be smaller than the desired image size. In this case the rendering dimensions will be clamped.\n\
  Either use swatch geometry provided to you, or use your own swatch geometry. The provided geometry is available via the method MHardwareRenderer::referenceDefaultGeometry(). The possible \"default\" geometries are either a sphere, cube or plane.\n\
  Either use the provided \"default\" light and \"default\" camera or set up your own. Use the methods (getSwatchOrthoCameraSetting(), getSwatchLightDirection()) on MHardwareRenderer to get these defaults.\n\
  Read back the swatch context into the provided MImage. The convenience method MHardwareRenderer::readSwatchContextPixels() can be used. By default the format of the MImage and the swatch context are the same, so the user does not need to worry about this. The context will read into the pre-allocated MImage pixels.\n\
  Unreference any swatch geometry used for rendering using MHardwareRenderer::dereferenceGeometry().\n\
\n\
* image [IN/OUT] (MImage) - Image object to which this method must write the rendered swatch. On input the image\'s dimensions are already set and pixel storage already allocated.\n\
\n\
Returns None if method is not implemented : No rendering will occur.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9c6e82c580e61213c1aecac5b28588e0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.supportsBatching </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">supportsBatching() -&gt; bool\n\
\n\
Specifies whether or not this shader supports batched rendering of shapes.\n\
\n\
In normal rendering, a shader is invoked using bind/geometry/unbind (or glBind/glGeometry/glUnbind) once for each shape being rendered. When a shader is used in batched rendering mode however, bind is called once, a series of geometry calls are made for each shape being rendered, followed by a single call to unbind (and similarly for glBind, glGeometry and glUnbind). As shader binding/unbinding can be expensive, batched rendering can significantly improve rendering performance. The more (particularly expensive) operations that can be moved out of the geometry/glGeometry methods the greater the performance improvement is. Ideally, only shape specific operations (such as binding geometry arrays and shape matrices) should be left in the geometry methods.\n\
\n\
It is important to note that your shader can only use batched rendering mode if there is no shape (i.e. dag path) specific code in bind, glBind, unbind, or glUnbind. If any of these methods perform shape specific processing, this code must either be moved into geometry/glGeometry, or you must return False in this method to indicate batching should be disabled for this shader.\n\
\n\
By default, this method will return False to ensure compatibility with existing shader code.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad783f5b016cb99971561d17ea3bca702\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.texCoordsPerVertex </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">texCoordsPerVertex() -&gt; int\n\
\n\
This method returns the number of texture coordinate values per vertex that the hw shader node would like to receive from Maya. Maya will attempt to provide all the texture coordinate data that the shader would like but it will never provide more data than is actually available in the shape.  The uv sets returned by getTexCoordSetNames() will override the number of uv sets specified by texCoordsPerVertex(). If you do not override this method or getTexCoordSetNames(), Maya will provide no texture coordinates per vertex.\n\
\n\
Note: Currently, Maya only retains 2 dimensional texture coordinate data but this may change in a future release.\n\
\n\
Returns the number of texture coordinate values desired</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a951ea74e72691889e0f6e64b2f225f1b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.transparencyOptions </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">transparencyOptions() -&gt; int\n\
\n\
This method returns transparency options for usage as hints for Maya\'s internal draw during a given rendering pass. Parameters are returned via an integer containing masked out bits. By default the mask is set to 0, meaning that the drawing should be treated as regular opaque object drawing. This will generally mean one call per draw pass.\n\
\n\
Options to control transparency are specified by returning one or more masks specified by the values\n\
:\n\
\n\
  kIsTransparent : Draw as a transparent object. If no transparency overrides are specified, then control of how to draw during a given pass is determined internally by Maya\'s refresh algorithm, and options the user can set per modelling viewport.\n\
  kNoTransparencyFrontBackCull : When kisTransparent is set and this flag is set, do not perform transparency drawing using the internal 2-pass front-face + back-face culling algorithm.\n\
  kNoTransparencyPolygonSort : When kisTransparent is set and this flag is set, do not perform transparency drawing using the internal 2-pass drawing of back-to-front sorted triangles.\n\
\n\
Note : Setting the \"hasTransparency()\" method to True will override this method. This is for backward compatibility with behaviour on existing hardware shader nodes. It is recommended that shaders use the \"transparencyOptions()\" override, and not longer use the older \"hasTransparency()\" override from their shader classes.\n\
\n\
Retuns an integer containing the appropriate options set via masks.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a72fc8fba7474239346f21d01f5cd8979\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaUI.MPxHwShaderNode.unbind </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">unbind(request, view) -&gt; self\n\
\n\
This method is invoked for hardware rendering to Maya\'s 3D view.\n\
\n\
This is the preferred method of interactive feedback and performance. the \"gl\" version should be used for batch hardware rendering.\n\
\n\
This method is called to restore the OpenGL state.  Specifically, it must disable any OpenGL extensions that the matching bind() method may have enabled.  This is necessary to ensure that the rest of Maya\'s drawing code continues to work correctly.  A status code of MS::kSuccess should be returned unless there was a problem such as insufficient memory or required input data is missing or invalid.\n\
\n\
The arguments passed to this method are the same ones that were passed to the bind() method.\n\
\n\
* request (MDrawRequest) - the draw request.\n\
* view (M3dView) - the view in which to draw.</pre> \n\
</div>\n\
</div>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";