var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: helixTool/helixTool.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'helix_tool_2helix_tool_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: helixTool/helixTool.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">helixTool/helixTool.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Interactive tool to draw a helix. Uses OpenGL to draw a guideline for the helix.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Produces the MEL commands: helixToolCmd and helixToolContext.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This example takes the helix example one large step forward by wrapping the command in a context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This allows you to drag out the region in which you want the helix drawn.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To use it, you must first execute the command &quot;source helixTool&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This will create a new entry in the &quot;Shelf1&quot; tab of the tool shelf called &quot;Helix Tool&quot;.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Click on the new icon, then move the cursor into the perspective window and drag out a cylinder</span></div>\n\
<div class=\"line\"><span class=\"comment\">// which defines the volume in which the helix will be generated.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in is an example of building a context around a command. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To create a tool command:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (1) Create a tool command class. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Same process as an MPxCommand except define 2 methods</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      for interactive use: cancel and finalize.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      There is also an addition constructor MPxToolCommand(), which </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      is called from your context when the command needs to be invoked.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (2) Define your context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This is accomplished by deriving off of MPxContext and overriding</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      whatever methods you need.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (3) Create a command class to create your context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      You will call this command in Maya to create and name a context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEvent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDoubleArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContextCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxToolCommand.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MToolsInfo.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsCurve.h&gt;</span> </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgParser.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCursor.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGL.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kPitchFlag          &quot;-p&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kPitchFlagLong      &quot;-pitch&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kRadiusFlag         &quot;-r&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kRadiusFlagLong     &quot;-radius&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kNumberCVsFlag      &quot;-ncv&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kNumberCVsFlagLong  &quot;-numCVs&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kUpsideDownFlag     &quot;-ud&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kUpsideDownFlagLong &quot;-upsideDown&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The users tool command</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     NUMBER_OF_CVS       20</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>helixTool : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html\">MPxToolCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    helixTool(); </div>\n\
<div class=\"line\">                ~helixTool() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*    creator();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#a61d0dcce095a079921bcc5807e7da5bd\">doIt</a>(<span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         parseArgs(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a3b583cbc082553f11853db459b2f7795\">redoIt</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a0789a8d51244cad0495abb2b811c39db\">undoIt</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a2f6c567cc02d575ab14006d9c5e37761\">isUndoable</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#ad85f49d154d3b6ef4899d0a1e80d73e5\">finalize</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a>  newSyntax();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setRadius(<span class=\"keywordtype\">double</span> newRadius);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setPitch(<span class=\"keywordtype\">double</span> newPitch);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setNumCVs(<span class=\"keywordtype\">unsigned</span> newNumCVs);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setUpsideDown(<span class=\"keywordtype\">bool</span> newUpsideDown);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>          radius;         <span class=\"comment\">// Helix radius</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>          pitch;          <span class=\"comment\">// Helix pitch</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>        numCV;          <span class=\"comment\">// Helix number of CVs</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            upDown;         <span class=\"comment\">// Helix upsideDown</span></div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>        path;           <span class=\"comment\">// The dag path to the curve.</span></div>\n\
<div class=\"line\">                                    <span class=\"comment\">// Don&#39;t save the pointer!</span></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* helixTool::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> helixTool;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">helixTool::~helixTool() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">helixTool::helixTool()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    numCV = 20;</div>\n\
<div class=\"line\">    upDown = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    setCommandString(<span class=\"stringliteral\">&quot;helixToolCmd&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> helixTool::newSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kPitchFlag, kPitchFlagLong, <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kRadiusFlag, kRadiusFlagLong, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adacd70f5d2b5e8c1bb8e83b0482a33e518\">MSyntax::kDouble</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kNumberCVsFlag, kNumberCVsFlagLong, <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada499591c04ccb62ab4f6fc3a5450afd4c\">MSyntax::kUnsigned</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kUpsideDownFlag, kUpsideDownFlagLong, <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8cfc0ab572a96edfc9db7c02f0d025d7\">MSyntax::kBoolean</a>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixTool::doIt(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a> &amp;args)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Sets up the helix parameters from arguments passed to the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     MEL command.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = parseArgs(args);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess != status)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> redoIt();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixTool::parseArgs(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a> &amp;args)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> argData(syntax(), args);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kPitchFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> tmp;</div>\n\
<div class=\"line\">        status = argData.getFlagArgument(kPitchFlag, 0, tmp);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;pitch flag parsing failed&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        pitch = tmp;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kRadiusFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> tmp;</div>\n\
<div class=\"line\">        status = argData.getFlagArgument(kRadiusFlag, 0, tmp);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;radius flag parsing failed&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        radius = tmp;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kNumberCVsFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> tmp;</div>\n\
<div class=\"line\">        status = argData.getFlagArgument(kNumberCVsFlag, 0, tmp);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;numCVs flag parsing failed&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        numCV = tmp;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kUpsideDownFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> tmp;</div>\n\
<div class=\"line\">        status = argData.getFlagArgument(kUpsideDownFlag, 0, tmp);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;upside down flag parsing failed&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        upDown = tmp;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixTool::redoIt()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method creates the helix curve from the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     pitch and radius values</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span>  deg     = 3;            <span class=\"comment\">// Curve Degree</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span>  ncvs    = numCV;        <span class=\"comment\">// Number of CVs</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span>  spans   = ncvs - deg;   <span class=\"comment\">// Number of spans</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span>  nknots  = spans+2*deg-1;<span class=\"comment\">// Number of knots</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>        i;</div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a>     controlVertices;</div>\n\
<div class=\"line\">    <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a>    knotSequences;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> upFactor;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (upDown) upFactor = -1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> upFactor = 1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up cvs and knots for the helix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; ncvs; i++)</div>\n\
<div class=\"line\">        controlVertices.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>(<a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(radius * cos((<span class=\"keywordtype\">double</span>) i),</div>\n\
<div class=\"line\">                                      upFactor * pitch * (<span class=\"keywordtype\">double</span>) i, </div>\n\
<div class=\"line\">                                      radius * sin((<span class=\"keywordtype\">double</span>) i)));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; nknots; i++)</div>\n\
<div class=\"line\">        knotSequences.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html#aafcfe8ff7afecc2dee4defccbdfb8e55\">append</a>((<span class=\"keywordtype\">double</span>) i);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Now create the curve</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html\">MFnNurbsCurve</a> curveFn;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    curveFn.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a4b11e346021c91845e781e9d7d06859f\">create</a>(controlVertices, knotSequences, deg, </div>\n\
<div class=\"line\">                   <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_curve.html#a99f5203c7742378941e34926280c8e66a7fb3bf49ba349ca1a266be41df447b5b\">MFnNurbsCurve::kOpen</a>, <span class=\"keyword\">false</span>, <span class=\"keyword\">false</span>, </div>\n\
<div class=\"line\">                   <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;Error creating curve&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = curveFn.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html#adfb40b1f56af23ad94c4ca77c9a147b5\">getPath</a>( path );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixTool::undoIt()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Removes the helix curve from the model.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat; </div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> transform = path.transform();</div>\n\
<div class=\"line\">    stat = <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d83d29ca400045849d777aecafda70c\">MGlobal::deleteNode</a>( transform );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> helixTool::isUndoable() const</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Set this command to be undoable.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;    </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixTool::finalize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Command is finished, construct a string for the command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     for journaling.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a> command;</div>\n\
<div class=\"line\">    command.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(commandString());</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(<a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(kRadiusFlag));</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(radius);</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(kPitchFlag));</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(pitch);</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(kNumberCVsFlag));</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>((<span class=\"keywordtype\">int</span>) numCV);</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(kUpsideDownFlag));</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>(upDown);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#a453a8fb7a2285d97888cf2a60fa64712\">MPxToolCommand::doFinalize</a>( command );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixTool::setRadius(<span class=\"keywordtype\">double</span> newRadius)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    radius = newRadius;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixTool::setPitch(<span class=\"keywordtype\">double</span> newPitch)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    pitch = newPitch;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixTool::setNumCVs(<span class=\"keywordtype\">unsigned</span> newNumCVs)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    numCV = newNumCVs;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixTool::setUpsideDown(<span class=\"keywordtype\">bool</span> newUpsideDown)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    upDown = newUpsideDown;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The user Context</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   Contexts give the user the ability to write functions</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   for handling events.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   Contexts aren&#39;t registered in the plugin, instead a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   command class (MPxContextCommand) is registered and is used</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   to create instances of the context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> helpString[] = <span class=\"stringliteral\">&quot;Click and drag to draw helix&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>helixContext : <span class=\"keyword\">public</span> <a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    helixContext();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a658f83d3a196c6c8e77e7ed2655eb6d7\">toolOnSetup</a>(<a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a0207c206f23f9ed9ba2cd52afd01cd0f\">doPress</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a531f370c5c8612e10b504a4858c44c60\">doDrag</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a560e1136f32f260f7de42b579ad1f27b\">doRelease</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a9ebb2318cad8a10a9756c226faf17481\">doEnterRegion</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span>    <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a79eb9c170168f8755d68c3147d6c1676\">getClassName</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; name) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setNumCVs(<span class=\"keywordtype\">unsigned</span> newNumCVs);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setUpsideDown(<span class=\"keywordtype\">bool</span> newUpsideDown);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>        numCVs();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            upsideDown();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            drawGuide();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            firstDraw;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span>           startPos_x, startPos_y;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span>           endPos_x, endPos_y;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span>        numCV;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            upDown;</div>\n\
<div class=\"line\">    <a name=\"_a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>         view;</div>\n\
<div class=\"line\">    GLdouble        height,radius;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">helixContext::helixContext() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    numCV = 20;</div>\n\
<div class=\"line\">    upDown = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    setTitleString(<span class=\"stringliteral\">&quot;Helix Tool&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    setCursor( <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cursor.html#a7cda9fbf606764ffb275514392d57d82\">MCursor::defaultCursor</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Tell the context which XPM to use so the tool can properly</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// be a candidate for the 6th position on the mini-bar.</span></div>\n\
<div class=\"line\">    setImage(<span class=\"stringliteral\">&quot;helixTool.xpm&quot;</span>, <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a5680fcec77b562f3c18fbd3001f4f29dab537113dbc917348d5d70fe16eaba09b\">MPxContext::kImage1</a> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixContext::toolOnSetup(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setHelpString(helpString);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContext::doPress(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">event</span>.getPosition(startPos_x, startPos_y);</div>\n\
<div class=\"line\">    view = <a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a3cda809eff914b04ff47de958c365f09\">M3dView::active3dView</a>();</div>\n\
<div class=\"line\">    firstDraw = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixContext::drawGuide()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> upFactor;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (upDown) upFactor = 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> upFactor = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the guide cylinder</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">    glPushMatrix();</div>\n\
<div class=\"line\">        glRotatef(upFactor*90.0f, 1.0f, 0.0f, 0.0f);</div>\n\
<div class=\"line\">        GLUquadricObj *qobj = gluNewQuadric();</div>\n\
<div class=\"line\">        gluQuadricDrawStyle(qobj, GLU_LINE);</div>\n\
<div class=\"line\">        GLdouble factor = (GLdouble)numCV;</div>\n\
<div class=\"line\">        radius = double(abs(endPos_x - startPos_x))/factor + 0.1;</div>\n\
<div class=\"line\">        height = double(abs(endPos_y - startPos_y))/factor + 0.1;</div>\n\
<div class=\"line\">        gluCylinder( qobj, radius, radius, height, 8, 1 );</div>\n\
<div class=\"line\">    glPopMatrix();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContext::doDrag(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.beginXorDrawing(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!firstDraw) {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  Clear the guide from the old position.</span></div>\n\
<div class=\"line\">        drawGuide();</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        firstDraw = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">event</span>.getPosition(endPos_x, endPos_y);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Draw the guide at the new position.</span></div>\n\
<div class=\"line\">    drawGuide();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.endXorDrawing();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContext::doRelease( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//  Clear the guide from its last position.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!firstDraw) {</div>\n\
<div class=\"line\">        view.beginXorDrawing(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        drawGuide();</div>\n\
<div class=\"line\">        view.endXorDrawing();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    helixTool * cmd = (helixTool*)newToolCommand();</div>\n\
<div class=\"line\">    cmd-&gt;setPitch( height/numCV );</div>\n\
<div class=\"line\">    cmd-&gt;setRadius( radius );</div>\n\
<div class=\"line\">    cmd-&gt;setNumCVs( numCV );</div>\n\
<div class=\"line\">    cmd-&gt;setUpsideDown( upDown );</div>\n\
<div class=\"line\">    cmd-&gt;redoIt();</div>\n\
<div class=\"line\">    cmd-&gt;finalize();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContext::doEnterRegion( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> setHelpString( helpString );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixContext::getClassName( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; name )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    name.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(<span class=\"stringliteral\">&quot;helix&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixContext::setNumCVs( <span class=\"keywordtype\">unsigned</span> newNumCVs )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    numCV = newNumCVs;</div>\n\
<div class=\"line\">    <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_tools_info.html#a5f1bc27778c881159a7e486934261015\">MToolsInfo::setDirtyFlag</a>(*<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> helixContext::setUpsideDown( <span class=\"keywordtype\">bool</span> newUpsideDown )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    upDown = newUpsideDown;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_tools_info.html#a5f1bc27778c881159a7e486934261015\">MToolsInfo::setDirtyFlag</a>(*<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> helixContext::numCVs()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> numCV;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> helixContext::upsideDown()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> upDown;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Context creation command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This is the command that will be used to create instances</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  of our context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>helixContextCmd : <span class=\"keyword\">public</span> <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html\">MPxContextCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\">                        helixContextCmd();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#a8398b14f3ec13c9f7b12ff06b7b5bc60\">doEditFlags</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#aac27812cb6ea1797b391dde62d2a6359\">doQueryFlags</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a>* <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#a69d6fc56205518e4be6c0ced911e6523\">makeObj</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#aebce411ed7652b491d2b7c1938b8042c\">appendSyntax</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*        creator();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    helixContext*       fHelixContext;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">helixContextCmd::helixContextCmd() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a>* helixContextCmd::makeObj()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    When the context command is executed in maya, this method</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    be used to create a context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fHelixContext = <span class=\"keyword\">new</span> helixContext();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fHelixContext;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* helixContextCmd::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    This method creates the context command.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> helixContextCmd;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContextCmd::doEditFlags()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"_a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html\">MArgParser</a> argData = parser();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(kNumberCVsFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> numCVs;</div>\n\
<div class=\"line\">        status = argData.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#a74bdc5edb84381a46ce3a0de74230938\">getFlagArgument</a>(kNumberCVsFlag, 0, numCVs);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;numCVs flag parsing failed.&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        fHelixContext-&gt;setNumCVs(numCVs);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(kUpsideDownFlag)) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> upsideDown;</div>\n\
<div class=\"line\">        status = argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#a74bdc5edb84381a46ce3a0de74230938\">getFlagArgument</a>(kUpsideDownFlag, 0, upsideDown);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;upsideDown flag parsing failed.&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        fHelixContext-&gt;setUpsideDown(upsideDown);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContextCmd::doQueryFlags()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html\">MArgParser</a> argData = parser();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(kNumberCVsFlag)) {</div>\n\
<div class=\"line\">        setResult((<span class=\"keywordtype\">int</span>) fHelixContext-&gt;numCVs());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html#aa38abc6623182dacee0fcb4136e403b8\">isFlagSet</a>(kUpsideDownFlag)) {</div>\n\
<div class=\"line\">        setResult(fHelixContext-&gt;upsideDown());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> helixContextCmd::appendSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> mySyntax = syntax();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess != mySyntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kNumberCVsFlag, kNumberCVsFlagLong,</div>\n\
<div class=\"line\">                                         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada499591c04ccb62ab4f6fc3a5450afd4c\">MSyntax::kUnsigned</a>)) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess != </div>\n\
<div class=\"line\">        mySyntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kUpsideDownFlag, kUpsideDownFlagLong,</div>\n\
<div class=\"line\">                         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8cfc0ab572a96edfc9db7c02f0d025d7\">MSyntax::kBoolean</a>)) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The following routines are used to register/unregister</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the commands we are creating within Maya</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register the context creation command and the tool command </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// that the helixContext will use.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    status = plugin.registerContextCommand(<span class=\"stringliteral\">&quot;helixToolContext&quot;</span>,</div>\n\
<div class=\"line\">                                           helixContextCmd::creator,</div>\n\
<div class=\"line\">                                           <span class=\"stringliteral\">&quot;helixToolCmd&quot;</span>,</div>\n\
<div class=\"line\">                                           helixTool::creator,</div>\n\
<div class=\"line\">                                           helixTool::newSyntax);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Deregister the tool command and the context creation command</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    status = plugin.deregisterContextCommand( <span class=\"stringliteral\">&quot;helixToolContext&quot;</span>,</div>\n\
<div class=\"line\">                                              <span class=\"stringliteral\">&quot;helixToolCmd&quot;</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";