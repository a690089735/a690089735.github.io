var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: StreamIterator Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_stream_iterator.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: StreamIterator Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">StreamIterator Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Maya-NET-API/Meta-Data.html\">Maya .NET API &gt; Meta Data</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_stream_iterator.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_stream_iterator.html#pro-methods\">Protected Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_stream_iterator.html#friends\">Friends</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Class handling iteration over <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> members.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;adskDataStreamIterator.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a64a0d4a977e9fe372a9a6113e7829cbb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a64a0d4a977e9fe372a9a6113e7829cbb\">StreamIterator</a> ()</td></tr>\n\
<tr class=\"memdesc:a64a0d4a977e9fe372a9a6113e7829cbb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a64a0d4a977e9fe372a9a6113e7829cbb\">More...</a><br></td></tr>\n\
<tr class=\"separator:a64a0d4a977e9fe372a9a6113e7829cbb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0f4ef8cdc4f394882ad04595804e1e1d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a0f4ef8cdc4f394882ad04595804e1e1d\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a0f4ef8cdc4f394882ad04595804e1e1d\">~StreamIterator</a> ()</td></tr>\n\
<tr class=\"memdesc:a0f4ef8cdc4f394882ad04595804e1e1d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor, does nothing. <br></td></tr>\n\
<tr class=\"separator:a0f4ef8cdc4f394882ad04595804e1e1d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2fd88e0895f5cf4b91479226a293c292\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a2fd88e0895f5cf4b91479226a293c292\">StreamIterator</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a2fd88e0895f5cf4b91479226a293c292\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a2fd88e0895f5cf4b91479226a293c292\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2fd88e0895f5cf4b91479226a293c292\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a57748d810b2a982c843f90d7734b6e74\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a57748d810b2a982c843f90d7734b6e74\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a57748d810b2a982c843f90d7734b6e74\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a57748d810b2a982c843f90d7734b6e74\">More...</a><br></td></tr>\n\
<tr class=\"separator:a57748d810b2a982c843f90d7734b6e74\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5f1d14eb688a8c344c27461d42f290c7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a5f1d14eb688a8c344c27461d42f290c7\">operator!=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;) const </td></tr>\n\
<tr class=\"memdesc:a5f1d14eb688a8c344c27461d42f290c7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if this iterator is not equal to the given one.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a5f1d14eb688a8c344c27461d42f290c7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5f1d14eb688a8c344c27461d42f290c7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a27084a1dfe8209a213193e5d7259a684\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a27084a1dfe8209a213193e5d7259a684\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;) const </td></tr>\n\
<tr class=\"memdesc:a27084a1dfe8209a213193e5d7259a684\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if this iterator is equal to the given one.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a27084a1dfe8209a213193e5d7259a684\">More...</a><br></td></tr>\n\
<tr class=\"separator:a27084a1dfe8209a213193e5d7259a684\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a51aa6823e14229244cf58a02bd96c408\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a51aa6823e14229244cf58a02bd96c408\">operator*</a> ()</td></tr>\n\
<tr class=\"memdesc:a51aa6823e14229244cf58a02bd96c408\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a reference to the data at the current location of the iterator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a51aa6823e14229244cf58a02bd96c408\">More...</a><br></td></tr>\n\
<tr class=\"separator:a51aa6823e14229244cf58a02bd96c408\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8a5a343a3ca715f886adf1114f70e9f9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a8a5a343a3ca715f886adf1114f70e9f9\">operator*</a> () const </td></tr>\n\
<tr class=\"memdesc:a8a5a343a3ca715f886adf1114f70e9f9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a reference to the data at the current location of the iterator (const version)  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a8a5a343a3ca715f886adf1114f70e9f9\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8a5a343a3ca715f886adf1114f70e9f9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a36ee3996e5b23c5bd0ef459a0b668fb6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a36ee3996e5b23c5bd0ef459a0b668fb6\">operator-&gt;</a> ()</td></tr>\n\
<tr class=\"memdesc:a36ee3996e5b23c5bd0ef459a0b668fb6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the data at the current location of the iterator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a36ee3996e5b23c5bd0ef459a0b668fb6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a36ee3996e5b23c5bd0ef459a0b668fb6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a26322e8b1072be95e9daa234098ddea8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a26322e8b1072be95e9daa234098ddea8\">operator-&gt;</a> () const </td></tr>\n\
<tr class=\"memdesc:a26322e8b1072be95e9daa234098ddea8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the data at the current location of the iterator (const version)  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a26322e8b1072be95e9daa234098ddea8\">More...</a><br></td></tr>\n\
<tr class=\"separator:a26322e8b1072be95e9daa234098ddea8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af6c0ee73c88d00d63d659992dc47e2eb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#af6c0ee73c88d00d63d659992dc47e2eb\">operator++</a> ()</td></tr>\n\
<tr class=\"memdesc:af6c0ee73c88d00d63d659992dc47e2eb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Pre-increment operator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#af6c0ee73c88d00d63d659992dc47e2eb\">More...</a><br></td></tr>\n\
<tr class=\"separator:af6c0ee73c88d00d63d659992dc47e2eb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acf943a40db80004d273875a308d5490b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#acf943a40db80004d273875a308d5490b\">operator++</a> (int)</td></tr>\n\
<tr class=\"memdesc:acf943a40db80004d273875a308d5490b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Post-increment operator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#acf943a40db80004d273875a308d5490b\">More...</a><br></td></tr>\n\
<tr class=\"separator:acf943a40db80004d273875a308d5490b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8d985300b138b6c5556ab17ed4df3b38\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a8d985300b138b6c5556ab17ed4df3b38\">valid</a> () const </td></tr>\n\
<tr class=\"memdesc:a8d985300b138b6c5556ab17ed4df3b38\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Determine if the iterator is currently pointing to a valid Member.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a8d985300b138b6c5556ab17ed4df3b38\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8d985300b138b6c5556ab17ed4df3b38\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ace9af4d767e83188de8b07ca02d38604\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#ace9af4d767e83188de8b07ca02d38604\">index</a> () const </td></tr>\n\
<tr class=\"memdesc:ace9af4d767e83188de8b07ca02d38604\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> for the current iteration position.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#ace9af4d767e83188de8b07ca02d38604\">More...</a><br></td></tr>\n\
<tr class=\"separator:ace9af4d767e83188de8b07ca02d38604\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-methods\"></a>\n\
Protected Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a9626e628f9cff5161cbb2c06f95726e7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">StreamIteratorImpl const &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a9626e628f9cff5161cbb2c06f95726e7\">impl</a> () const </td></tr>\n\
<tr class=\"memdesc:a9626e628f9cff5161cbb2c06f95726e7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the implementation class in const form.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a9626e628f9cff5161cbb2c06f95726e7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9626e628f9cff5161cbb2c06f95726e7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0b7e0c6f0ca6400286a5d72a406192f7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">StreamIteratorImpl &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a0b7e0c6f0ca6400286a5d72a406192f7\">impl</a> ()</td></tr>\n\
<tr class=\"memdesc:a0b7e0c6f0ca6400286a5d72a406192f7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the implementation class.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a0b7e0c6f0ca6400286a5d72a406192f7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0b7e0c6f0ca6400286a5d72a406192f7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3df0d504913b39cbc9eb36a9496647ed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#a3df0d504913b39cbc9eb36a9496647ed\">StreamIterator</a> (StreamIteratorImpl *)</td></tr>\n\
<tr class=\"memdesc:a3df0d504913b39cbc9eb36a9496647ed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Usual constructor, uses an implementation-specific iterator as the actual implementaton of this iterator.  <a href=\"classadsk_1_1_data_1_1_stream_iterator.html#a3df0d504913b39cbc9eb36a9496647ed\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3df0d504913b39cbc9eb36a9496647ed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"friends\"></a>\n\
Friends</h2></td></tr>\n\
<tr class=\"memitem:ad8c01c67eaeefab6268f2f0872b47035\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ad8c01c67eaeefab6268f2f0872b47035\"></a>\n\
class&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html#ad8c01c67eaeefab6268f2f0872b47035\">Stream</a></td></tr>\n\
<tr class=\"memdesc:ad8c01c67eaeefab6268f2f0872b47035\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Real implementation of the iterator. <br></td></tr>\n\
<tr class=\"separator:ad8c01c67eaeefab6268f2f0872b47035\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Class handling iteration over <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> members. </p>\n\
<p>The <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> data is not necessarily stored sequentially or as a packed array so this iterator is necessary in order to provide a consistent way to access all <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> elements.</p>\n\
<p>By default the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> pointed to by the iterator will be positioned at the first <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> member. If you wish a different member you should reposition it after retrieval. (It\'s recommended for efficiency that you position by Member index rather than by name since that works faster.)</p>\n\
<p>For technical reasons this class lives outside the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> though really it is part of it. A typedef is set up inside the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> so that you can use it like a standard iterator:</p>\n\
<p>for( Stream::iterator iterator = myStream.begin(); iterator != myStream.end(); ++iterator ) { processMember( *iterator ); }</p>\n\
<p>If you are processing multiple independent values in your <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> it\'s most efficient to run multiple loops repositioning the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> between each loop:</p>\n\
<p>Stream::iterator idIterator = myStream.begin(); colorIterator-&gt;setPositionByMemberName( \"ID\" ); for( ; iterator != myStream.end(); ++iterator ) { processIDMember( iterator-&gt;asInt32() ); } Stream::iterator colorIterator = myStream.begin(); colorIterator-&gt;setPositionByMemberName( \"Color\" ); for( ; iterator != myStream.end(); ++iterator ) { processColorMember( iterator-&gt;asFloat() ); }</p>\n\
<p>If the values are not independent and are needed at the same time you can still access both values within the same loop by repositioning the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> each time through the loop:</p>\n\
<p>for( Stream::iterator iterator = myStream.begin(); iterator != myStream.end(); ++iterator ) { iterator-&gt;setPositionByMemberIndex( 0 ); int* idValue = iterator-&gt;asInt32(); iterator-&gt;setPositionByMemberIndex( 1 ); float* colorValues = iterator-&gt;asFloat(); processData( idValue, colorValues ); } </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#_a18\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a64a0d4a977e9fe372a9a6113e7829cbb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Default constructor. </p>\n\
<p>Should only be used as a temporary object before an assignment operator.</p>\n\
<p>Any access operations called on an iterator with no implementaiton will throw an exception. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2fd88e0895f5cf4b91479226a293c292\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to copy </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3df0d504913b39cbc9eb36a9496647ed\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">StreamIteratorImpl *&#160;</td>\n\
          <td class=\"paramname\"><em>myImpl</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">protected</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Usual constructor, uses an implementation-specific iterator as the actual implementaton of this iterator. </p>\n\
<p>Calls are all forwarded.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">myImpl</td><td>Implementation of the iterator </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a57748d810b2a982c843f90d7734b6e74\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator. </p>\n\
<p>Copy the members, as pointers.</p>\n\
<p>This copy means that any two iterators constructed or copied from one another will actually point to the same spot in the iteration</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to copy </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5f1d14eb688a8c344c27461d42f290c7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if this iterator is not equal to the given one. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to compare against</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the two iterators are not the same </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a27084a1dfe8209a213193e5d7259a684\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if this iterator is equal to the given one. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>Iterator to compare against</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the two iterators are equivalent </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a51aa6823e14229244cf58a02bd96c408\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp; operator* </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a reference to the data at the current location of the iterator. </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end. </td></tr>\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the current element <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a>, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8a5a343a3ca715f886adf1114f70e9f9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> &amp; operator* </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a reference to the data at the current location of the iterator (const version) </p>\n\
<p>The value returned is the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> element <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a>. The <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> containing the actual value is always accessible through the handle() method.</p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end. </td></tr>\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to the current element <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a>, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a36ee3996e5b23c5bd0ef459a0b668fb6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> * operator-&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the data at the current location of the iterator. </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end. </td></tr>\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the current element <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a>, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a26322e8b1072be95e9daa234098ddea8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> * operator-&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the data at the current location of the iterator (const version) </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::out_of_range</td><td>iterator is past the end. </td></tr>\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the current element <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a>, throws if iteration is done </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af6c0ee73c88d00d63d659992dc47e2eb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> &amp; operator++ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Pre-increment operator. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this iterator, to allow use as a lhs </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acf943a40db80004d273875a308d5490b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream_iterator.html\">StreamIterator</a> operator++ </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int&#160;</td>\n\
          <td class=\"paramname\"><em>value</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Post-increment operator. </p>\n\
<p>Makes a copy - use pre-increment where possible</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">value</td><td>Ignored</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Copy of the iterator before the advance </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8d985300b138b6c5556ab17ed4df3b38\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool valid </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Determine if the iterator is currently pointing to a valid Member. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the iterator position is legal (i.e. not done) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ace9af4d767e83188de8b07ca02d38604\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\">Index</a> index </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> for the current iteration position. </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> where this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> Iterator is pointed </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9626e628f9cff5161cbb2c06f95726e7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">StreamIteratorImpl const &amp; impl </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">protected</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the implementation class in const form. </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Const reference to this class\'s implementation object </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0b7e0c6f0ca6400286a5d72a406192f7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">StreamIteratorImpl &amp; impl </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">protected</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the implementation class. </p>\n\
<dl class=\"exception\"><dt>Exceptions</dt><dd>\n\
  <table class=\"exception\">\n\
    <tr><td class=\"paramname\">std::runtime_error</td><td>Thrown when no implementation is present</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this class\'s implementation object </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>adskDataStreamIterator.h</li>\n\
<li>adskDataStreamIterator.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";