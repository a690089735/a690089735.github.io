var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: slopeShader/slopeShaderBehavior.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'slope_shader_2slope_shader_behavior_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: slopeShader/slopeShaderBehavior.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">slopeShader/slopeShaderBehavior.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;slopeShaderBehavior.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlugArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObjectArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">slopeShaderBehavior::slopeShaderBehavior()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Constructor</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">slopeShaderBehavior::~slopeShaderBehavior()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Destructor</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *slopeShaderBehavior::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a new instance of this class</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> slopeShaderBehavior;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> slopeShaderBehavior::shouldBeUsedFor( <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;destinationNode,</div>\n\
<div class=\"line\">                                           <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;sourcePlug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;destinationPlug)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  this method will return true if it is going to handle the connection</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  between the two nodes given.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> result = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(sourceNode.<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a2af9af308555c50cf68e2c14595b680b\">MFn::kLambert</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">//if the source node was a lambert</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//than we will check the downstream connections to see </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//if a slope shader is assigned to it.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shaderNode;</div>\n\
<div class=\"line\">        <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> src(sourceNode);</div>\n\
<div class=\"line\">        <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> connections;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        src.getConnections(connections);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> i = 0; i &lt; connections.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//check the incoming connections to this plug</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> connectedPlugs;</div>\n\
<div class=\"line\">            connections[i].connectedTo(connectedPlugs, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> j = 0; j &lt; connectedPlugs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//if the incoming node is a slope shader than </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//set shaderNode equal to it and break out of the inner </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//loop</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>(connectedPlugs[j].node()).<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#a895d4516a7ad8b46fabddf057865ae94\">typeName</a>() == <span class=\"stringliteral\">&quot;slopeShader&quot;</span>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    shaderNode = connectedPlugs[j].node();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//if the shaderNode is not null</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//than we have found a slopeShader</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!shaderNode.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//if the destination node is a mesh than we will take</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//care of this connection so set the result to true</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//and break out of the outer loop</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(destinationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">                    result = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>(sourceNode).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#a895d4516a7ad8b46fabddf057865ae94\">typeName</a>() == <span class=\"stringliteral\">&quot;slopeShader&quot;</span>)</div>\n\
<div class=\"line\">    <span class=\"comment\">//if the sourceNode is a slope shader than check what we</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//are dropping on to</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(destinationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a2af9af308555c50cf68e2c14595b680b\">MFn::kLambert</a>))</div>\n\
<div class=\"line\">            result = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(destinationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">            result = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> result;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> slopeShaderBehavior::connectNodeToNode( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;destinationNode, <span class=\"keywordtype\">bool</span> force )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  this method will handle the connection between the slopeShader and the shader it is</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  assigned to as well as any meshes that it is assigned to. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> result = MS::kFailure;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> src(sourceNode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//if we are dragging from a lambert</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//we want to check what we are dragging</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//onto.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(sourceNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a2af9af308555c50cf68e2c14595b680b\">MFn::kLambert</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shaderNode;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> connections;</div>\n\
<div class=\"line\">        <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> shaderNodes;</div>\n\
<div class=\"line\">        shaderNodes.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//if the source node was a lambert</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//than we will check the downstream connections to see </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//if a slope shader is assigned to it.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        src.getConnections(connections);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> i;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(i = 0; i &lt; connections.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//check the incoming connections to this plug</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> connectedPlugs;</div>\n\
<div class=\"line\">            connections[i].connectedTo(connectedPlugs, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> j = 0; j &lt; connectedPlugs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//if the incoming node is a slope shader than </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//append the node to the shaderNodes array</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> currentnode = connectedPlugs[j].node();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>(currentnode).typeName() == <span class=\"stringliteral\">&quot;slopeShader&quot;</span>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    shaderNodes.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a3694392863ba632bca5d76cbbf190ef5\">append</a>(currentnode);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//if we found a shading node</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//than check the destination node </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//type to see if it is a mesh</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(shaderNodes.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dest(destinationNode);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(destinationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//if the node is a mesh than for each slopeShader</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//connect the worldMesh attribute to the dirtyShaderPlug</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//attribute to force an evaluation of the node when the mesh</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//changes</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(i = 0; i &lt; shaderNodes.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> srcPlug = dest.findPlug(<span class=\"stringliteral\">&quot;worldMesh&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> destPlug = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>(shaderNodes[i]).<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#aac29b4a3b51c9d236175e955638f7153\">findPlug</a>(<span class=\"stringliteral\">&quot;dirtyShaderPlug&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span>(!srcPlug.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>() &amp;&amp; !destPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> cmd = <span class=\"stringliteral\">&quot;connectAttr -na &quot;</span>;</div>\n\
<div class=\"line\">                        cmd += srcPlug.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>() + <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">                        cmd += destPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>();</div>\n\
<div class=\"line\">                        <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(cmd);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//get the shading engine so we can assign the shader</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//to the mesh after doing the connection</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shadingEngine = findShadingEngine(sourceNode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//if there is a valid shading engine than make</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//the connection</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(!shadingEngine.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>())</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> cmd = <span class=\"stringliteral\">&quot;sets -edit -forceElement &quot;</span>;</div>\n\
<div class=\"line\">                    cmd += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>(shadingEngine).<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#a049384adbea0396ea2f03d1ad4d69df1\">name</a>() + <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">                    cmd += <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a>(destinationNode).<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>();</div>\n\
<div class=\"line\">                    result = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(cmd);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(src.typeName() == <span class=\"stringliteral\">&quot;slopeShader&quot;</span>)</div>\n\
<div class=\"line\">    <span class=\"comment\">//if we are dragging from a slope shader</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//than we want to see what we are dragging onto</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(destinationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//if the user is dragging onto a mesh</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//than make the connection from the worldMesh</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//to the dirtyShader plug on the slopeShader</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dest(destinationNode);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> srcPlug = dest.findPlug(<span class=\"stringliteral\">&quot;worldMesh&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> destPlug = src.findPlug(<span class=\"stringliteral\">&quot;dirtyShaderPlug&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!srcPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>() &amp;&amp; !destPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> cmd = <span class=\"stringliteral\">&quot;connectAttr -na &quot;</span>;</div>\n\
<div class=\"line\">                cmd += srcPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>() + <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">                cmd += destPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>();</div>\n\
<div class=\"line\">                result = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(cmd);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> result;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> slopeShaderBehavior::connectNodeToAttr( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;destinationPlug, <span class=\"keywordtype\">bool</span> force )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Overloaded function from MPxDragAndDropBehavior</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  this method will assign the correct output from the slope shader </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  onto the given attribute.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> result = MS::kFailure;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> src(sourceNode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//if we are dragging from a slopeShader</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//to a shader than connect the outColor</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//plug to the plug being passed in</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(destinationPlug.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ae024049dad815f2f186e6a4fead8be51\">node</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a2af9af308555c50cf68e2c14595b680b\">MFn::kLambert</a>)) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(src.typeName() == <span class=\"stringliteral\">&quot;slopeShader&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> srcPlug = src.findPlug(<span class=\"stringliteral\">&quot;outColor&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!srcPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>() &amp;&amp; !destinationPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab7ec149d38b7c29ca55c5aa7b407d8f9\">isNull</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> cmd = <span class=\"stringliteral\">&quot;connectAttr &quot;</span>;</div>\n\
<div class=\"line\">                cmd += srcPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>() + <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">                cmd += destinationPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a58e7cf126b4fe51e9705cee4faaf59fc\">name</a>();</div>\n\
<div class=\"line\">                result = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(cmd);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">//in all of the other cases we do not need the plug just the node</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//that it is on</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> destinationNode = destinationPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ae024049dad815f2f186e6a4fead8be51\">node</a>();</div>\n\
<div class=\"line\">        result = connectNodeToNode(sourceNode, destinationNode, force);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> result;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> slopeShaderBehavior::findShadingEngine(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Given the material MObject this method will</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  return the shading group that it is assigned to.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  if there is no shading group associated with</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  the material than a null MObject is apssed back.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> nodeFn(node);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> srcPlug = nodeFn.findPlug(<span class=\"stringliteral\">&quot;outColor&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> nodeConnections;</div>\n\
<div class=\"line\">    srcPlug.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#acf1340576a4a0a78a0045e67ee4155bf\">connectedTo</a>(nodeConnections, <span class=\"keyword\">false</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    <span class=\"comment\">//loop through the connections</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//and find the shading engine node that</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//it is connected to</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> i = 0; i &lt; nodeConnections.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(nodeConnections[i].node().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>(<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a1fe410ba33fcc24e08a319ee3db38896\">MFn::kShadingEngine</a>))</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> nodeConnections[i].node();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//no shading engine associated so return a</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//null MObject</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";