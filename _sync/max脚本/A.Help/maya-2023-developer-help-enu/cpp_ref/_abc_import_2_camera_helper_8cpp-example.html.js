var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: AbcImport/CameraHelper.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_abc_import_2_camera_helper_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: AbcImport/CameraHelper.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">AbcImport/CameraHelper.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2009-2011,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Sony Pictures Imageworks, Inc. and</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Industrial Light &amp; Magic, a division of Lucasfilm Entertainment Company Ltd.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Redistribution and use in source and binary forms, with or without</span></div>\n\
<div class=\"line\"><span class=\"comment\">// modification, are permitted provided that the following conditions are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// met:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions of source code must retain the above copyright</span></div>\n\
<div class=\"line\"><span class=\"comment\">// notice, this list of conditions and the following disclaimer.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions in binary form must reproduce the above</span></div>\n\
<div class=\"line\"><span class=\"comment\">// copyright notice, this list of conditions and the following disclaimer</span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the documentation and/or other materials provided with the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// distribution.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Neither the name of Sony Pictures Imageworks, nor</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Industrial Light &amp; Magic nor the names of their contributors may be used</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to endorse or promote products derived from this software without specific</span></div>\n\
<div class=\"line\"><span class=\"comment\">// prior written permission.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></div>\n\
<div class=\"line\"><span class=\"comment\">// &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></div>\n\
<div class=\"line\"><span class=\"comment\">// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;util.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;CameraHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;NodeIteratorVisitorHelper.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagModifier.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> read(<span class=\"keywordtype\">double</span> iFrame, Alembic::AbcGeom::ICamera &amp; iCamera,</div>\n\
<div class=\"line\">    std::vector&lt;double&gt; &amp; oArray)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    oArray.resize(18);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set some optional scale values</span></div>\n\
<div class=\"line\">    oArray[13] = 1.0;</div>\n\
<div class=\"line\">    oArray[16] = 1.0;</div>\n\
<div class=\"line\">    oArray[17] = 1.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Alembic::AbcGeom::ICameraSchema schema = iCamera.getSchema();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Alembic::AbcCoreAbstract::index_t index, ceilIndex;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> alpha = getWeightAndIndex(iFrame,</div>\n\
<div class=\"line\">        schema.getTimeSampling(), schema.getNumSamples(), index, ceilIndex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (alpha != 0.0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Alembic::AbcGeom::CameraSample samp, ceilSamp;</div>\n\
<div class=\"line\">        schema.get(samp, index);</div>\n\
<div class=\"line\">        schema.get(ceilSamp, ceilIndex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[0] = simpleLerp&lt;double&gt;(alpha, samp.getFocalLength(),</div>\n\
<div class=\"line\">            ceilSamp.getFocalLength());</div>\n\
<div class=\"line\">        oArray[1] = simpleLerp&lt;double&gt;(alpha, samp.getLensSqueezeRatio(),</div>\n\
<div class=\"line\">            ceilSamp.getLensSqueezeRatio());</div>\n\
<div class=\"line\">        oArray[2] = simpleLerp&lt;double&gt;(alpha, samp.getHorizontalAperture(),</div>\n\
<div class=\"line\">            ceilSamp.getHorizontalAperture()) / 2.54;</div>\n\
<div class=\"line\">        oArray[3] = simpleLerp&lt;double&gt;(alpha, samp.getVerticalAperture(),</div>\n\
<div class=\"line\">            ceilSamp.getVerticalAperture()) / 2.54;</div>\n\
<div class=\"line\">        oArray[4] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">            samp.getHorizontalFilmOffset(),</div>\n\
<div class=\"line\">            ceilSamp.getHorizontalFilmOffset()) / 2.54;</div>\n\
<div class=\"line\">        oArray[5] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">            samp.getVerticalFilmOffset(),</div>\n\
<div class=\"line\">            ceilSamp.getVerticalFilmOffset()) / 2.54;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (samp.getOverScanLeft() == samp.getOverScanRight() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanTop() == samp.getOverScanBottom() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanLeft() == samp.getOverScanTop() &amp;&amp;</div>\n\
<div class=\"line\">            ceilSamp.getOverScanLeft() == ceilSamp.getOverScanRight() &amp;&amp;</div>\n\
<div class=\"line\">            ceilSamp.getOverScanTop() == ceilSamp.getOverScanBottom() &amp;&amp;</div>\n\
<div class=\"line\">            ceilSamp.getOverScanLeft() == ceilSamp.getOverScanTop())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            oArray[6] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                samp.getOverScanLeft() + 1.0,</div>\n\
<div class=\"line\">                ceilSamp.getOverScanLeft() + 1.0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            oArray[6] = 1.0;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[7] = simpleLerp&lt;double&gt;(alpha, samp.getNearClippingPlane(),</div>\n\
<div class=\"line\">            ceilSamp.getNearClippingPlane());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[8] = simpleLerp&lt;double&gt;(alpha, samp.getFarClippingPlane(),</div>\n\
<div class=\"line\">            ceilSamp.getFarClippingPlane());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[9] = simpleLerp&lt;double&gt;(alpha, samp.getFStop(),</div>\n\
<div class=\"line\">            ceilSamp.getFStop());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[10] = simpleLerp&lt;double&gt;(alpha, samp.getFocusDistance(),</div>\n\
<div class=\"line\">            ceilSamp.getFocusDistance());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> shutterClose = simpleLerp&lt;double&gt;(alpha, samp.getShutterClose(),</div>\n\
<div class=\"line\">            ceilSamp.getShutterClose());</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> shutterOpen = simpleLerp&lt;double&gt;(alpha, samp.getShutterOpen(),</div>\n\
<div class=\"line\">            ceilSamp.getShutterOpen());</div>\n\
<div class=\"line\">        <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> sec(1.0, <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">        oArray[11] =</div>\n\
<div class=\"line\">            360.0 * (shutterClose - shutterOpen) * sec.as(<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        std::size_t numOps = samp.getNumOps();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (std::size_t i = 0; i &lt; numOps; ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Alembic::AbcGeom::FilmBackXformOp &amp; op = samp[i];</div>\n\
<div class=\"line\">            Alembic::AbcGeom::FilmBackXformOp &amp; ceilOp = ceilSamp[i];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmFitOffs&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span> val = op.getChannelValue(0) *</div>\n\
<div class=\"line\">                    samp.getHorizontalAperture();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span> ceilVal = ceilOp.getChannelValue(0) *</div>\n\
<div class=\"line\">                    ceilSamp.getHorizontalAperture();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (val != 0.0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// chanValue(0) * 0.5 * horiz aper / 2.54</span></div>\n\
<div class=\"line\">                    oArray[12] = simpleLerp&lt;double&gt;(alpha, val, ceilVal) / 5.08;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    val = op.getChannelValue(1) * samp.getHorizontalAperture();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    ceilVal = ceilOp.getChannelValue(1) *</div>\n\
<div class=\"line\">                        ceilSamp.getHorizontalAperture();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// chanValue(1)* 0.5 * horiz aper / 2.54</span></div>\n\
<div class=\"line\">                    oArray[12] = simpleLerp&lt;double&gt;(alpha, val, ceilVal) / 5.08;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;preScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[13] = 1.0 / simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                    op.getChannelValue(0), ceilOp.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmTranslate&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[14] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                    op.getChannelValue(0), ceilOp.getChannelValue(0));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                oArray[15] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                    op.getChannelValue(1), ceilOp.getChannelValue(1));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;postScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[16] = 1.0 / simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                    op.getChannelValue(0), ceilOp.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;cameraScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[17] = simpleLerp&lt;double&gt;(alpha,</div>\n\
<div class=\"line\">                    op.getChannelValue(0), ceilOp.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Alembic::AbcGeom::CameraSample samp;</div>\n\
<div class=\"line\">        schema.get(samp, index);</div>\n\
<div class=\"line\">        oArray[0] = samp.getFocalLength();</div>\n\
<div class=\"line\">        oArray[1] = samp.getLensSqueezeRatio();</div>\n\
<div class=\"line\">        oArray[2] = samp.getHorizontalAperture()/2.54;</div>\n\
<div class=\"line\">        oArray[3] = samp.getVerticalAperture()/2.54;</div>\n\
<div class=\"line\">        oArray[4] = samp.getHorizontalFilmOffset()/2.54;</div>\n\
<div class=\"line\">        oArray[5] = samp.getVerticalFilmOffset()/2.54;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (samp.getOverScanLeft() == samp.getOverScanRight() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanTop() == samp.getOverScanBottom() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanLeft() == samp.getOverScanTop())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            oArray[6] = samp.getOverScanLeft() + 1.0;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            oArray[6] = 1.0;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[7] = samp.getNearClippingPlane();</div>\n\
<div class=\"line\">        oArray[8] = samp.getFarClippingPlane();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        oArray[9] = samp.getFStop();</div>\n\
<div class=\"line\">        oArray[10] = samp.getFocusDistance();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> sec(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">        oArray[11] = 360.0 * (samp.getShutterClose()-samp.getShutterOpen()) *</div>\n\
<div class=\"line\">            sec.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// prescale, film translate H, V, roll pivot H,V, film roll value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// post scale might be in the 3x3</span></div>\n\
<div class=\"line\">        std::size_t numOps = samp.getNumOps();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (std::size_t i = 0; i &lt; numOps; ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Alembic::AbcGeom::FilmBackXformOp &amp; op = samp[i];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmFitOffs&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (op.getChannelValue(0) != 0.0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    oArray[12] = op.getChannelValue(0) *</div>\n\
<div class=\"line\">                        samp.getHorizontalAperture() / 5.08;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    oArray[12] = op.getChannelValue(1) *</div>\n\
<div class=\"line\">                        samp.getHorizontalAperture() / 5.08;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;preScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[13] = 1.0 / op.getChannelValue(0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmTranslate&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[14] = op.getChannelValue(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                oArray[15] = op.getChannelValue(1);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;postScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[16] = 1.0 / op.getChannelValue(0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;cameraScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                oArray[17] = op.getChannelValue(0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> create(Alembic::AbcGeom::ICamera &amp; iNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp; iParent)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    Alembic::AbcGeom::ICameraSchema schema = iNode.getSchema();</div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> name(iNode.getName().c_str());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> fnCamera;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj = fnCamera.create(iParent);</div>\n\
<div class=\"line\">    fnCamera.setName(name);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// we need to read this to determine the film fit</span></div>\n\
<div class=\"line\">    Alembic::AbcGeom::CameraSample samp;</div>\n\
<div class=\"line\">    iNode.getSchema().get(samp);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    std::size_t numOps = samp.getNumOps();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numOps &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        std::string hint = samp[0].getHint();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (hint == <span class=\"stringliteral\">&quot;filmFitFill&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fnCamera.setFilmFit(<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html#a9592271f00503127bbc8abe266dc4b04abff88c2f32861c79b4558fe686eacda4\">MFnCamera::kFillFilmFit</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (hint == <span class=\"stringliteral\">&quot;filmFitHorz&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fnCamera.setFilmFit(<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html#a9592271f00503127bbc8abe266dc4b04abde3282d1a502ae5699452709d6edfe1\">MFnCamera::kHorizontalFilmFit</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (hint == <span class=\"stringliteral\">&quot;filmFitVert&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fnCamera.setFilmFit(<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html#a9592271f00503127bbc8abe266dc4b04a5bfb37b7089c17ed6c662937bfb7c61d\">MFnCamera::kVerticalFilmFit</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (hint == <span class=\"stringliteral\">&quot;filmFitOver&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fnCamera.setFilmFit(<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html#a9592271f00503127bbc8abe266dc4b04a0e9631c93f31c8bf379d19059f7b157f\">MFnCamera::kOverscanFilmFit</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (schema.isConstant())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// no center of interest</span></div>\n\
<div class=\"line\">        fnCamera.setFocalLength(samp.getFocalLength());</div>\n\
<div class=\"line\">        fnCamera.setLensSqueezeRatio(samp.getLensSqueezeRatio());</div>\n\
<div class=\"line\">        <span class=\"comment\">// camera scale might be in the 3x3</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// weirdo attrs that are in inches</span></div>\n\
<div class=\"line\">        fnCamera.setHorizontalFilmAperture(samp.getHorizontalAperture()/2.54);</div>\n\
<div class=\"line\">        fnCamera.setVerticalFilmAperture(samp.getVerticalAperture()/2.54);</div>\n\
<div class=\"line\">        fnCamera.setHorizontalFilmOffset(samp.getHorizontalFilmOffset()/2.54);</div>\n\
<div class=\"line\">        fnCamera.setVerticalFilmOffset(samp.getVerticalFilmOffset()/2.54);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// film fit offset might be in the 3x3</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (samp.getOverScanLeft() == samp.getOverScanRight() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanTop() == samp.getOverScanBottom() &amp;&amp;</div>\n\
<div class=\"line\">            samp.getOverScanLeft() == samp.getOverScanTop())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fnCamera.setOverscan(samp.getOverScanLeft() + 1.0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> warn = iNode.getName().c_str();</div>\n\
<div class=\"line\">            warn += <span class=\"stringliteral\">&quot; has unsupported overscan values.&quot;</span>;</div>\n\
<div class=\"line\">            <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(warn);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        fnCamera.setNearClippingPlane(samp.getNearClippingPlane());</div>\n\
<div class=\"line\">        fnCamera.setFarClippingPlane(samp.getFarClippingPlane());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// prescale, film translate H, V, roll pivot H,V, film roll value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// post scale might be in the 3x3</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        fnCamera.setFStop(samp.getFStop());</div>\n\
<div class=\"line\">        fnCamera.setFocusDistance(samp.getFocusDistance());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> sec(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">        fnCamera.setShutterAngle(Alembic::AbcGeom::DegreesToRadians(</div>\n\
<div class=\"line\">            360.0 * (samp.getShutterClose()-samp.getShutterOpen()) *</div>\n\
<div class=\"line\">            sec.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>()) ));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (std::size_t i = 0; i &lt; numOps; ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Alembic::AbcGeom::FilmBackXformOp &amp; op = samp[i];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmFitOffs&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">double</span> val = op.getChannelValue(0) *</div>\n\
<div class=\"line\">                    samp.getHorizontalAperture() / 5.08;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (val != 0.0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    fnCamera.setFilmFitOffset(val);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    fnCamera.setFilmFitOffset(op.getChannelValue(1) *</div>\n\
<div class=\"line\">                        samp.getHorizontalAperture() / 5.08);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;preScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fnCamera.setPreScale(1.0/op.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;filmTranslate&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fnCamera.setFilmTranslateH(op.getChannelValue(0));</div>\n\
<div class=\"line\">                fnCamera.setFilmTranslateV(op.getChannelValue(1));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;postScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fnCamera.setPostScale(1.0/op.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (op.getHint() == <span class=\"stringliteral\">&quot;cameraScale&quot;</span>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fnCamera.setCameraScale(op.getChannelValue(0));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// extra transform node is unfortuneatly automatically created above the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// camera, let&#39;s do some reparenting and delete that extra transform</span></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path;</div>\n\
<div class=\"line\">    fnCamera.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a45d0e6118fefc8c6e0b86b50234da810\">getPath</a>(path);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> camObj = path.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html\">MDagModifier</a> dagMod;</div>\n\
<div class=\"line\">    dagMod.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_modifier.html#affc9ef47290b580946a43278f35eb8bc\">reparentNode</a>(camObj, iParent);</div>\n\
<div class=\"line\">    dagMod.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\">    dagMod.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a9e6962659554cd09e71b3d4ef2244404\">deleteNode</a>(obj);</div>\n\
<div class=\"line\">    dagMod.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html#a984345cd272bc1a32a9fc2e93a6678b2\">doIt</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> camObj;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";