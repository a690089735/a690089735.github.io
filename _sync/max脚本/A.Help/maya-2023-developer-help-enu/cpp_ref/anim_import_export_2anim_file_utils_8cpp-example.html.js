var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: animImportExport/animFileUtils.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'anim_import_export_2anim_file_utils_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: animImportExport/animFileUtils.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">animImportExport/animFileUtils.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All </span></div>\n\
<div class=\"line\"><span class=\"comment\">// rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The coded instructions, statements, computer programs, and/or related </span></div>\n\
<div class=\"line\"><span class=\"comment\">// material (collectively the &quot;Data&quot;) in these files contain unpublished </span></div>\n\
<div class=\"line\"><span class=\"comment\">// information proprietary to Autodesk, Inc. (&quot;Autodesk&quot;) and/or its </span></div>\n\
<div class=\"line\"><span class=\"comment\">// licensors, which is protected by U.S. and Canadian federal copyright </span></div>\n\
<div class=\"line\"><span class=\"comment\">// law and by international treaties.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The Data is provided for use exclusively by You. You have the right </span></div>\n\
<div class=\"line\"><span class=\"comment\">// to use, modify, and incorporate this Data into other products for </span></div>\n\
<div class=\"line\"><span class=\"comment\">// purposes authorized by the Autodesk software license agreement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// without fee.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The copyright notices in the Software and this entire statement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// including the above license grant, this restriction and the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// following disclaimer, must be included in all copies of the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Software, in whole or in part, and all derivative works of </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the Software, unless such copies or derivative works are solely </span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the form of machine-executable object code generated by a </span></div>\n\
<div class=\"line\"><span class=\"comment\">// source language processor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED </span></div>\n\
<div class=\"line\"><span class=\"comment\">// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF </span></div>\n\
<div class=\"line\"><span class=\"comment\">// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS </span></div>\n\
<div class=\"line\"><span class=\"comment\">// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY </span></div>\n\
<div class=\"line\"><span class=\"comment\">// OR PROBABILITY OF SUCH DAMAGES.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  File Name: animFileUtils.cc</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Utility classes to read and write .anim files.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;animFileUtils.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;animImportExportStrings.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnAnimCurve.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimCurveClipboard.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimCurveClipboardItem.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimCurveClipboardItemArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;string.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;limits.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;fstream&gt;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Class animUnitNames</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  String names for units.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMmString =         <span class=\"stringliteral\">&quot;mm&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kCmString =         <span class=\"stringliteral\">&quot;cm&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMString =          <span class=\"stringliteral\">&quot;m&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kKmString =         <span class=\"stringliteral\">&quot;km&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kInString =         <span class=\"stringliteral\">&quot;in&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kFtString =         <span class=\"stringliteral\">&quot;ft&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kYdString =         <span class=\"stringliteral\">&quot;yd&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMiString =         <span class=\"stringliteral\">&quot;mi&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMmLString =        <span class=\"stringliteral\">&quot;millimeter&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kCmLString =        <span class=\"stringliteral\">&quot;centimeter&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMLString =         <span class=\"stringliteral\">&quot;meter&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kKmLString =        <span class=\"stringliteral\">&quot;kilometer&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kInLString =        <span class=\"stringliteral\">&quot;inch&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kFtLString =        <span class=\"stringliteral\">&quot;foot&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kYdLString =        <span class=\"stringliteral\">&quot;yard&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMiLString =        <span class=\"stringliteral\">&quot;mile&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRadString =        <span class=\"stringliteral\">&quot;rad&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kDegString =        <span class=\"stringliteral\">&quot;deg&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMinString =        <span class=\"stringliteral\">&quot;min&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSecString =        <span class=\"stringliteral\">&quot;sec&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kRadLString =       <span class=\"stringliteral\">&quot;radian&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kDegLString =       <span class=\"stringliteral\">&quot;degree&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMinLString =       <span class=\"stringliteral\">&quot;minute&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSecLString =       <span class=\"stringliteral\">&quot;second&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kHourTString =      <span class=\"stringliteral\">&quot;hour&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMinTString =       <span class=\"stringliteral\">&quot;min&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kSecTString =       <span class=\"stringliteral\">&quot;sec&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMillisecTString =  <span class=\"stringliteral\">&quot;millisec&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kGameTString =      <span class=\"stringliteral\">&quot;game&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kFileTString =      <span class=\"stringliteral\">&quot;film&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPalTString =       <span class=\"stringliteral\">&quot;pal&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kNtscTString =      <span class=\"stringliteral\">&quot;ntsc&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kShowTString =      <span class=\"stringliteral\">&quot;show&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPalFTString =      <span class=\"stringliteral\">&quot;palf&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kNtscFTString =     <span class=\"stringliteral\">&quot;ntscf&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUnitlessString = <span class=\"stringliteral\">&quot;unitless&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUnknownTimeString =    <span class=\"stringliteral\">&quot;Unknown Time Unit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUnknownAngularString = <span class=\"stringliteral\">&quot;Unknown Angular Unit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kUnknownLinearString =  <span class=\"stringliteral\">&quot;Unknown Linear Unit&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animUnitNames::animUnitNames()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class constructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animUnitNames::~animUnitNames()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class destructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToLongName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49ed\">MAngle::Unit</a>&amp; unit, <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the long text name of the angle unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>(unit) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edae77f5ca99dc21b7dfd533074906e0a67\">MAngle::kDegrees</a>:</div>\n\
<div class=\"line\">            name.<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kDegLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kRadLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda8cb6112ac030d68e2fabddce0f095da7\">MAngle::kAngMinutes</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMinLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda555d442ed85c4175176cc6c1f1a9dad6\">MAngle::kAngSeconds</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kSecLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kUnknownAngularString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToShortName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49ed\">MAngle::Unit</a>&amp; unit, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the short text name of the angle unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>(unit) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edae77f5ca99dc21b7dfd533074906e0a67\">MAngle::kDegrees</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kDegString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kRadString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda8cb6112ac030d68e2fabddce0f095da7\">MAngle::kAngMinutes</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMinString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda555d442ed85c4175176cc6c1f1a9dad6\">MAngle::kAngSeconds</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kSecString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kUnknownAngularString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToLongName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a>&amp; unit, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the long text name of the distance unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>(unit) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda30a33c2e169c9e6115692eda1c173f30\">MDistance::kInches</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kInLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaedebe6dc6efd5df379da89064414ac43\">MDistance::kFeet</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kFtLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaf2f6037d43bc87078b310f919b832330\">MDistance::kYards</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kYdLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edab1c96b8257a6332e1506915a34d8a47f\">MDistance::kMiles</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMiLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda86e73f520eca40e3e3d4a08a43ddbffb\">MDistance::kMillimeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMmLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda0603f671fbadde0729a2e79a80fb9a0e\">MDistance::kCentimeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kCmLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edadc4fd556c40d608a34d8c2246ad6e4a5\">MDistance::kKilometers</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kKmLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda803a162c123bbe61a9d63d7f406e2b7c\">MDistance::kMeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMLString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kUnknownLinearString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToShortName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a>&amp; unit, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the short text name of the distance unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>(unit) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda30a33c2e169c9e6115692eda1c173f30\">MDistance::kInches</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kInString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaedebe6dc6efd5df379da89064414ac43\">MDistance::kFeet</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kFtString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaf2f6037d43bc87078b310f919b832330\">MDistance::kYards</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kYdString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edab1c96b8257a6332e1506915a34d8a47f\">MDistance::kMiles</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMiString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda86e73f520eca40e3e3d4a08a43ddbffb\">MDistance::kMillimeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMmString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda0603f671fbadde0729a2e79a80fb9a0e\">MDistance::kCentimeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kCmString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edadc4fd556c40d608a34d8c2246ad6e4a5\">MDistance::kKilometers</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kKmString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda803a162c123bbe61a9d63d7f406e2b7c\">MDistance::kMeters</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kUnknownLinearString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToLongName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> &amp;unit, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the long text name of the time unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>(unit) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda192ff56706b76686ae965da88e53ed4d\">MTime::kHours</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kHourTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda1468d73292d8131a0b832b826f7b33a9\">MTime::kMinutes</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMinTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kSecTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda02e69a6c6c9c097ead05674b06acae9c\">MTime::kMilliseconds</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kMillisecTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edaa627bc0742d58cfc3af228c7fd9850fb\">MTime::kGames</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kGameTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda28ce0398d2e7274904c6359ef92ed94a\">MTime::kFilm</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kFileTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edad2d3f87255e35c2d0f27ac7a82df484f\">MTime::kPALFrame</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kPalTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edaf29bf945a4446d53d8b2e4a9354cdc28\">MTime::kNTSCFrame</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kNtscTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda71ab57a47bcb5be4395cac52e875e622\">MTime::kShowScan</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kShowTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda8645b6eb0e97c43419ab404a9a58bfa1\">MTime::kPALField</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kPalFTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edafe7d3de18f1f918448371211cc5f3d33\">MTime::kNTSCField</a>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kNtscFTString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            name.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(kUnknownTimeString);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animUnitNames::setToShortName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> &amp;unit, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sets the string with the short text name of the time unit.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setToLongName(unit, name);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animUnitNames::setFromName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;str, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49ed\">MAngle::Unit</a> &amp;unit)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The angle unit is set based on the passed string. If the string</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      is not recognized, the angle unit is set to MAngle::kInvalid.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> state = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *name = str.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((strcmp(name, kDegString) == 0) || </div>\n\
<div class=\"line\">        (strcmp(name, kDegLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edae77f5ca99dc21b7dfd533074906e0a67\">MAngle::kDegrees</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kRadString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kRadLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kMinString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kMinLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda8cb6112ac030d68e2fabddce0f095da7\">MAngle::kAngMinutes</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kSecString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kSecLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda555d442ed85c4175176cc6c1f1a9dad6\">MAngle::kAngSeconds</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  This is not a recognized angular unit.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        unit = <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49eda94dd08feda7b2cf0ff8262312c4fcc09\">MAngle::kInvalid</a>;</div>\n\
<div class=\"line\">        <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kInvalidAngleUnits, stat);</div>\n\
<div class=\"line\">        msg.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, str);</div>\n\
<div class=\"line\">        <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        state = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> state;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animUnitNames::setFromName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;str, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a> &amp;unit)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The distance unit is set based on the passed string. If the string</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      is not recognized, the distance unit is set to MDistance::kInvalid.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> state = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *name = str.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((strcmp(name, kInString) == 0) ||</div>\n\
<div class=\"line\">        (strcmp(name, kInLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda30a33c2e169c9e6115692eda1c173f30\">MDistance::kInches</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kFtString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kFtLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaedebe6dc6efd5df379da89064414ac43\">MDistance::kFeet</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kYdString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kYdLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edaf2f6037d43bc87078b310f919b832330\">MDistance::kYards</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kMiString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kMiLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edab1c96b8257a6332e1506915a34d8a47f\">MDistance::kMiles</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kMmString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kMmLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda86e73f520eca40e3e3d4a08a43ddbffb\">MDistance::kMillimeters</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kCmString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kCmLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda0603f671fbadde0729a2e79a80fb9a0e\">MDistance::kCentimeters</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kKmString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kKmLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49edadc4fd556c40d608a34d8c2246ad6e4a5\">MDistance::kKilometers</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( (strcmp(name, kMString) == 0) ||</div>\n\
<div class=\"line\">                (strcmp(name, kMLString) == 0)) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda803a162c123bbe61a9d63d7f406e2b7c\">MDistance::kMeters</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  This is not a recognized distance unit.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        state = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kInvalidLinearUnits, stat);</div>\n\
<div class=\"line\">        msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, str);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        unit = MDistance::kInvalid;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> state;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* static */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animUnitNames::setFromName(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;str, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> &amp;unit)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The time unit is set based on the passed string. If the string</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      is not recognized, the time unit is set to MTime::kInvalid.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> state = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *name = str.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(name, kHourTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda192ff56706b76686ae965da88e53ed4d\">MTime::kHours</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kMinTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda1468d73292d8131a0b832b826f7b33a9\">MTime::kMinutes</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kSecTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kMillisecTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda02e69a6c6c9c097ead05674b06acae9c\">MTime::kMilliseconds</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kGameTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edaa627bc0742d58cfc3af228c7fd9850fb\">MTime::kGames</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kFileTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda28ce0398d2e7274904c6359ef92ed94a\">MTime::kFilm</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kPalTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edad2d3f87255e35c2d0f27ac7a82df484f\">MTime::kPALFrame</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kNtscTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edaf29bf945a4446d53d8b2e4a9354cdc28\">MTime::kNTSCFrame</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kShowTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda71ab57a47bcb5be4395cac52e875e622\">MTime::kShowScan</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kPalFTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda8645b6eb0e97c43419ab404a9a58bfa1\">MTime::kPALField</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(name, kNtscFTString) == 0) {</div>\n\
<div class=\"line\">        unit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49edafe7d3de18f1f918448371211cc5f3d33\">MTime::kNTSCField</a>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  This is not a recognized time unit.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        unit = <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda94dd08feda7b2cf0ff8262312c4fcc09\">MTime::kInvalid</a>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kInvalidTimeUnits, stat);</div>\n\
<div class=\"line\">        msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, str);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        state = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> state;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Class animBase</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Tangent type words</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentGlobal = <span class=\"stringliteral\">&quot;global&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentFixed = <span class=\"stringliteral\">&quot;fixed&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentLinear = <span class=\"stringliteral\">&quot;linear&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentFlat = <span class=\"stringliteral\">&quot;flat&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentSmooth = <span class=\"stringliteral\">&quot;spline&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentStep = <span class=\"stringliteral\">&quot;step&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentSlow = <span class=\"stringliteral\">&quot;slow&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentFast = <span class=\"stringliteral\">&quot;fast&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentClamped = <span class=\"stringliteral\">&quot;clamped&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentPlateau = <span class=\"stringliteral\">&quot;plateau&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentStepNext = <span class=\"stringliteral\">&quot;stepnext&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentAuto = <span class=\"stringliteral\">&quot;auto&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentAutoEase= <span class=\"stringliteral\">&quot;autoease&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentAutoMix = <span class=\"stringliteral\">&quot;automix&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTangentAutoCustom = <span class=\"stringliteral\">&quot;autocustom&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Infinity type words</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordConstant = <span class=\"stringliteral\">&quot;constant&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordLinear = <span class=\"stringliteral\">&quot;linear&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordCycle = <span class=\"stringliteral\">&quot;cycle&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordCycleRelative = <span class=\"stringliteral\">&quot;cycleRelative&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordOscillate = <span class=\"stringliteral\">&quot;oscillate&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  Param Curve types</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTypeUnknown = <span class=\"stringliteral\">&quot;unknown&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTypeLinear = <span class=\"stringliteral\">&quot;linear&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTypeAngular = <span class=\"stringliteral\">&quot;angular&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTypeTime = <span class=\"stringliteral\">&quot;time&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWordTypeUnitless = <span class=\"stringliteral\">&quot;unitless&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  Keywords</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kAnim = <span class=\"stringliteral\">&quot;anim&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kAnimData = <span class=\"stringliteral\">&quot;animData&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMovData = <span class=\"stringliteral\">&quot;movData&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kMayaVersion = <span class=\"stringliteral\">&quot;mayaVersion&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kAnimVersion = <span class=\"stringliteral\">&quot;animVersion&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kTimeUnit = <span class=\"stringliteral\">&quot;timeUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kLinearUnit = <span class=\"stringliteral\">&quot;linearUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kAngularUnit = <span class=\"stringliteral\">&quot;angularUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kStartTime = <span class=\"stringliteral\">&quot;startTime&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kEndTime = <span class=\"stringliteral\">&quot;endTime&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kStartUnitless = <span class=\"stringliteral\">&quot;startUnitless&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kEndUnitless = <span class=\"stringliteral\">&quot;endUnitless&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// animVersions:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kAnimVersionString = <span class=\"stringliteral\">&quot;1.1&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"comment\">// const double kVersion1 = 1.0;                        // initial release</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> kVersionNonWeightedAndBreakdowns = 1.1;    <span class=\"comment\">// added support for non-weighted curves and breakdowns</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kTwoSpace = <span class=\"stringliteral\">&quot;  &quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  animData keywords</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kInputString = <span class=\"stringliteral\">&quot;input&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kOutputString = <span class=\"stringliteral\">&quot;output&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kWeightedString = <span class=\"stringliteral\">&quot;weighted&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPreInfinityString = <span class=\"stringliteral\">&quot;preInfinity&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kPostInfinityString = <span class=\"stringliteral\">&quot;postInfinity&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kInputUnitString = <span class=\"stringliteral\">&quot;inputUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kOutputUnitString = <span class=\"stringliteral\">&quot;outputUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kTanAngleUnitString = <span class=\"stringliteral\">&quot;tangentAngleUnit&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *kKeysString = <span class=\"stringliteral\">&quot;keys&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  special characters</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kSemiColonChar   = <span class=\"charliteral\">&#39;;&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kSpaceChar       = <span class=\"charliteral\">&#39; &#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kTabChar         = <span class=\"charliteral\">&#39;\\t&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kHashChar        = <span class=\"charliteral\">&#39;#&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kNewLineChar     = <span class=\"charliteral\">&#39;\\n&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kSlashChar       = <span class=\"charliteral\">&#39;/&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kBraceLeftChar   = <span class=\"charliteral\">&#39;{&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kBraceRightChar  = <span class=\"charliteral\">&#39;}&#39;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> kDoubleQuoteChar = <span class=\"charliteral\">&#39;&quot;&#39;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animBase::animBase ()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The constructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    resetUnits();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">animBase::~animBase()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The destructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animBase::resetUnits()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Reset the units used by this class to the ui units.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    timeUnit = <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>();</div>\n\
<div class=\"line\">    linearUnit = <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#ad7868b7deab93de1213d816364e634cc\">MDistance::uiUnit</a>();</div>\n\
<div class=\"line\">    angularUnit = <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abc881d829b53f0f3871fcf9a8ab173b1\">MAngle::uiUnit</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *</div>\n\
<div class=\"line\">animBase::tangentTypeAsWord(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51\">MFnAnimCurve::TangentType</a> type)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a string with a test based desription of the passed</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MFnAnimCurve::TangentType. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a69422abb7643db5fafec8a31dd93701f\">MFnAnimCurve::kTangentGlobal</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentGlobal);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentFixed);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a98dcf18df98d9c7b24030f3a7c7ce031\">MFnAnimCurve::kTangentLinear</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentLinear);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a38feb2e999f3c995fe0f20d4bc39c856\">MFnAnimCurve::kTangentFlat</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentFlat);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a914bea85807fe02265b98502dfd2ccd1\">MFnAnimCurve::kTangentSmooth</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentSmooth);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a0864d7d4282e85df2de1637298a0c9df\">MFnAnimCurve::kTangentStep</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentStep);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a93e0d2f773741649f41708eaba24f39b\">MFnAnimCurve::kTangentStepNext</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentStepNext);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aae0f0a943c3148a41921f154e251de4a\">MFnAnimCurve::kTangentSlow</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentSlow);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aac05380220ff1612c7520971464c1cb4\">MFnAnimCurve::kTangentFast</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentFast);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2e37de9db871b6325f3d464a3d10d8b7\">MFnAnimCurve::kTangentClamped</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentClamped);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aa19b2b2b1ba22cadb593d7472d0dc44b\">MFnAnimCurve::kTangentPlateau</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentPlateau);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a762f4e22e8411542a85e4454e0ac76b1\">MFnAnimCurve::kTangentAutoEase</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentAutoEase);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a57c65dfa75af8df3dc8710ee9a710e98\">MFnAnimCurve::kTangentAutoMix</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentAutoMix);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a392160445d17b60e0defa92058e8e235\">MFnAnimCurve::kTangentAutoCustom</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentAutoCustom);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a28c7d0a58ef27b533c554050062a59df\">MFnAnimCurve::kTangentAuto</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTangentAuto);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (kWordTangentGlobal);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51\">MFnAnimCurve::TangentType</a></div>\n\
<div class=\"line\">animBase::wordAsTangentType (<span class=\"keywordtype\">char</span> *type)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a MFnAnimCurve::TangentType based on the passed string.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      If the string is not a recognized tangent type, tnen</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MFnAnimCurve::kTangentGlobal is returned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentGlobal) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a69422abb7643db5fafec8a31dd93701f\">MFnAnimCurve::kTangentGlobal</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentFixed) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentLinear) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a98dcf18df98d9c7b24030f3a7c7ce031\">MFnAnimCurve::kTangentLinear</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentFlat) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a38feb2e999f3c995fe0f20d4bc39c856\">MFnAnimCurve::kTangentFlat</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentSmooth) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a914bea85807fe02265b98502dfd2ccd1\">MFnAnimCurve::kTangentSmooth</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentStep) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a0864d7d4282e85df2de1637298a0c9df\">MFnAnimCurve::kTangentStep</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentStepNext) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a93e0d2f773741649f41708eaba24f39b\">MFnAnimCurve::kTangentStepNext</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentSlow) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aae0f0a943c3148a41921f154e251de4a\">MFnAnimCurve::kTangentSlow</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentFast) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aac05380220ff1612c7520971464c1cb4\">MFnAnimCurve::kTangentFast</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentClamped) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2e37de9db871b6325f3d464a3d10d8b7\">MFnAnimCurve::kTangentClamped</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentPlateau) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51aa19b2b2b1ba22cadb593d7472d0dc44b\">MFnAnimCurve::kTangentPlateau</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentAutoEase) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a762f4e22e8411542a85e4454e0ac76b1\">MFnAnimCurve::kTangentAutoEase</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentAutoMix) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a57c65dfa75af8df3dc8710ee9a710e98\">MFnAnimCurve::kTangentAutoMix</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentAutoCustom) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a392160445d17b60e0defa92058e8e235\">MFnAnimCurve::kTangentAutoCustom</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordTangentAuto) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a28c7d0a58ef27b533c554050062a59df\">MFnAnimCurve::kTangentAuto</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a69422abb7643db5fafec8a31dd93701f\">MFnAnimCurve::kTangentGlobal</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *</div>\n\
<div class=\"line\">animBase::infinityTypeAsWord(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4\">MFnAnimCurve::InfinityType</a> type)</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a string containing the name of the passed </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MFnAnimCurve::InfinityType type.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a36166171fc24611fa107afffd2befa79\">MFnAnimCurve::kConstant</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordConstant);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4ac188c019178783e5be55110601309d7d\">MFnAnimCurve::kLinear</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordLinear);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a76754d966b75c53b513890fd9daceced\">MFnAnimCurve::kCycle</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordCycle);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a72962132060841776e5723b9fbb318ae\">MFnAnimCurve::kCycleRelative</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordCycleRelative);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a47da0483b10ba75371052e6f1d5cd278\">MFnAnimCurve::kOscillate</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordOscillate);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (kWordConstant);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4\">MFnAnimCurve::InfinityType</a></div>\n\
<div class=\"line\">animBase::wordAsInfinityType(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *type)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a MFnAnimCurve::InfinityType from the passed string.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      If the string does not match a recognized infinity type,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MFnAnimCurve::kConstant is returned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(type, kWordConstant) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a36166171fc24611fa107afffd2befa79\">MFnAnimCurve::kConstant</a>);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(type, kWordLinear) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4ac188c019178783e5be55110601309d7d\">MFnAnimCurve::kLinear</a>);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(type, kWordCycle) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a76754d966b75c53b513890fd9daceced\">MFnAnimCurve::kCycle</a>);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(type, kWordCycleRelative) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a72962132060841776e5723b9fbb318ae\">MFnAnimCurve::kCycleRelative</a>);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(type, kWordOscillate) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a47da0483b10ba75371052e6f1d5cd278\">MFnAnimCurve::kOscillate</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4a36166171fc24611fa107afffd2befa79\">MFnAnimCurve::kConstant</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *</div>\n\
<div class=\"line\">animBase::outputTypeAsWord (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a string identifying the output type of the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      passed MFnAnimCurve::AnimCurveType.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTypeLinear);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTypeAngular);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTypeTime);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a6ca1a4be447fa5aa7e76b4af3cfff9f5\">MFnAnimCurve::kAnimCurveUU</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTypeUnitless);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27abce3a22a99b65c7359d6ea9d883ad830\">MFnAnimCurve::kAnimCurveUnknown</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> (kWordTypeUnitless);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (kWordTypeUnknown);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animBase::AnimBaseType</div>\n\
<div class=\"line\">animBase::wordAsInputType(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *input)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns an input type based on the passed string.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(input, kWordTypeTime) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseTime;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseUnitless;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animBase::AnimBaseType</div>\n\
<div class=\"line\">animBase::wordAsOutputType(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *output) </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a output type based on the passed string.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (strcmp(output, kWordTypeLinear) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseLinear;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(output, kWordTypeAngular) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseAngular;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(output, kWordTypeTime) == 0) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseTime;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> animBase::kAnimBaseUnitless;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *</div>\n\
<div class=\"line\">animBase::boolInputTypeAsWord(<span class=\"keywordtype\">bool</span> isUnitless) </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a string based on a bool. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (isUnitless) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (kWordTypeUnitless);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (kWordTypeTime);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a></div>\n\
<div class=\"line\">animBase::typeAsAnimCurveType(  animBase::AnimBaseType input, </div>\n\
<div class=\"line\">                                animBase::AnimBaseType output)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns a MFnAnimCurve::AnimCurveType based on the passed</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      input and output types. If the input and output types do</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      not create a valid MFnAnimCurve::AnimCurveType, then a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MFnAnimCurve::kAnimCurveUnknown is returned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27abce3a22a99b65c7359d6ea9d883ad830\">MFnAnimCurve::kAnimCurveUnknown</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (output) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kAnimBaseLinear:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (kAnimBaseUnitless == input) {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>;</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kAnimBaseAngular:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (kAnimBaseUnitless == input) {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>;</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kAnimBaseTime:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (kAnimBaseUnitless == input) {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>;</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kAnimBaseUnitless:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (kAnimBaseUnitless == input) {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a6ca1a4be447fa5aa7e76b4af3cfff9f5\">MFnAnimCurve::kAnimCurveUU</a>;</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                type = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"comment\">//  An unknown anim curve type.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> type;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">double</span> animBase::asDouble (std::ifstream &amp;clipFile)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Reads the next bit of valid data as a double.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> value;</div>\n\
<div class=\"line\">    clipFile &gt;&gt; value;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (value);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animBase::isNextNumeric(std::ifstream &amp;clipFile)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The method skips past whitespace and comments and checks if</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      the next character is numeric.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      true is returned if the character is numeric.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> numeric = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> next = clipFile.peek();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (next &gt;= <span class=\"charliteral\">&#39;0&#39;</span> &amp;&amp; next &lt;= <span class=\"charliteral\">&#39;9&#39;</span>) {</div>\n\
<div class=\"line\">        numeric = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> numeric;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animBase::advance (std::ifstream &amp;clipFile)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The method skips past all of the whitespace and commented lines</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      in the ifstream. It will also ignore semi-colons.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (clipFile) {</div>\n\
<div class=\"line\">        clipFile &gt;&gt; std::ws;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span> next = clipFile.peek();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (next == kSemiColonChar) {</div>\n\
<div class=\"line\">            clipFile.ignore(1, kSemiColonChar);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (next == kSlashChar || next == kHashChar) {</div>\n\
<div class=\"line\">            clipFile.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span>* animBase::asWord (std::ifstream &amp;clipFile, <span class=\"keywordtype\">bool</span> includeWS <span class=\"comment\">/* false */</span>)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns the next string of characters in an ifstream. The string</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      ends when whitespace or a semi-colon is encountered. If the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      includeWS argument is true, the string will not end if a white</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      space character is encountered.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      If a double quote is detected &#39;&quot;&#39;, then verything up to the next </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      double quote will be returned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This method returns a pointer to a static variable, so its contents</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      should be used immediately.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      </span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">size_t</span> kBufLength = 1024;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">char</span> *<span class=\"keywordtype\">string</span> = <span class=\"keyword\">nullptr</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!<span class=\"keywordtype\">string</span>) <span class=\"keywordtype\">string</span> = (<span class=\"keywordtype\">char</span> *)malloc(kBufLength*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">char</span>)+1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> *c = string;</div>\n\
<div class=\"line\">    clipFile.read (c, 1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (*c == kDoubleQuoteChar) {</div>\n\
<div class=\"line\">        clipFile.read(c, 1);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span>(!clipFile.eof() &amp;&amp; (*c != kDoubleQuoteChar)) {</div>\n\
<div class=\"line\">            c++;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">size_t</span> len = c-string;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (len &gt;= kBufLength) {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">size_t</span> newLen = 2*kBufLength;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">string</span> = (<span class=\"keywordtype\">char</span> *)realloc(<span class=\"keywordtype\">string</span>, newLen*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">char</span>)+1);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!<span class=\"keywordtype\">string</span>)</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                c = <span class=\"keywordtype\">string</span> + len;</div>\n\
<div class=\"line\">                kBufLength = newLen;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            clipFile.read(c, 1);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">//  Get the case of the &#39;{&#39; or &#39;}&#39; character</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (*c == kBraceLeftChar || *c == kBraceRightChar) {</div>\n\
<div class=\"line\">            c++;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span>(!clipFile.eof() &amp;&amp; (*c != kSemiColonChar)) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!includeWS &amp;&amp; ((*c == kSpaceChar) || (*c == kTabChar))) {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                c++;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">size_t</span> len = c-string;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (len &gt;= kBufLength) {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">size_t</span> newLen = 2*kBufLength;</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">string</span> = (<span class=\"keywordtype\">char</span> *)realloc(<span class=\"keywordtype\">string</span>, newLen*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">char</span>)+1);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!<span class=\"keywordtype\">string</span>)</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    c = <span class=\"keywordtype\">string</span> + len;</div>\n\
<div class=\"line\">                    kBufLength = newLen;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                clipFile.read(c, 1);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    *c = 0x00;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<span class=\"keywordtype\">string</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> animBase::asChar (std::ifstream &amp;clipFile)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns the next character of interest in the ifstream. All </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      whitespace and commented lines are ignored.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> clipFile.get();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animBase::isEquivalent(<span class=\"keywordtype\">double</span> a, <span class=\"keywordtype\">double</span> b)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Returns true if the doubles are within the tolerance.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> tolerance = 1.0e-10;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ((a &gt; b) ? (a - b &lt;= tolerance) : (b - a &lt;= tolerance));</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-----------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Class animReader</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-----------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animReader::animReader ()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class constructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">:   animVersion (1.0)</div>\n\
<div class=\"line\">,   convertAnglesFromV2To3(false)</div>\n\
<div class=\"line\">,   convertAnglesFromV3To2(false)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">animReader::~animReader()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class destructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> </div>\n\
<div class=\"line\">animReader::readClipboard(std::ifstream &amp;readAnim, <a name=\"_a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html\">MAnimCurveClipboard</a>&amp; cb)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Given a clipboard and an ifstream, read the ifstream and add</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      all of the anim curves described in ther stream into the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      API clipboard.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//  Set the default values for the start and end of the clipboard.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  The MAnimCurveClipboard::set() method will examine all of the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  anim curves are determine the proper start and end values, if the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  start time is greater than the end value.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  By default, the start values are greater than the end values to </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  ensure correct behavior if the file does not specify the start and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  end values.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> startTime = 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> endTime = 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> startUnitless = 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> endUnitless = 0.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    resetUnits();</div>\n\
<div class=\"line\">    convertAnglesFromV2To3 = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    convertAnglesFromV3To2 = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Read the header. The header officially ends when the first non-header</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  keyword is found. The header contains clipboard specific information</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  where the body is anim curve specific.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> *dataType = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hasVersionString = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (!readAnim.eof()) {</div>\n\
<div class=\"line\">        advance(readAnim);</div>\n\
<div class=\"line\">        dataType = asWord(readAnim);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (strcmp(dataType, kAnimVersion) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> version(asWord(readAnim));</div>\n\
<div class=\"line\">            animVersion = version.asDouble();</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> thisVersion(kAnimVersionString);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            hasVersionString = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  Add versioning control here.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (version != thisVersion) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kInvalidVersion,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, version, thisVersion);</div>\n\
<div class=\"line\">                <a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kMayaVersion) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> version(asWord(readAnim, <span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> currentVersion = <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5e267b7212f8651514c21ca82566e412\">MGlobal::mayaVersion</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (currentVersion.<a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(0,1) == <span class=\"stringliteral\">&quot;2.&quot;</span>) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> vCheck = version.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(0, 1);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (vCheck != <span class=\"stringliteral\">&quot;2.&quot;</span>) {</div>\n\
<div class=\"line\">                    convertAnglesFromV3To2 = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">//  If this is a pre-Maya 3.0 file, then the tangent angles </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//  will need to be converted to work in Maya 3.0+</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> vCheck = version.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a41ba57372bc1082383b4f1929a8030fa\">substring</a>(0, 1);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (vCheck == <span class=\"stringliteral\">&quot;2.&quot;</span>) {</div>\n\
<div class=\"line\">                    convertAnglesFromV2To3 = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kTimeUnit) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> timeUnitString(asWord(readAnim));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(timeUnitString, timeUnit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                timeUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>();</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(timeUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kTimeUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kLinearUnit) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> linearUnitString(asWord(readAnim));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(linearUnitString, linearUnit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                linearUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#ad7868b7deab93de1213d816364e634cc\">MDistance::uiUnit</a>();</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(linearUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kLinearUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kAngularUnit) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> angularUnitString(asWord(readAnim));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(angularUnitString, angularUnit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                angularUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abc881d829b53f0f3871fcf9a8ab173b1\">MAngle::uiUnit</a>();</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(angularUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kAngularUnit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kStartTime) == 0) {</div>\n\
<div class=\"line\">            startTime = asDouble(readAnim);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kEndTime) == 0) {</div>\n\
<div class=\"line\">            endTime = asDouble(readAnim);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kStartUnitless) == 0) {</div>\n\
<div class=\"line\">            startUnitless = asDouble(readAnim);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kEndUnitless) == 0) {</div>\n\
<div class=\"line\">            endUnitless = asDouble(readAnim);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {    </div>\n\
<div class=\"line\">            <span class=\"comment\">//  The header should be finished. Begin to parse the body.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  The animVersion string is required.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!hasVersionString) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kMissingKeyword, stat);</div>\n\
<div class=\"line\">        msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kAnimVersion);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (MS::kFailure);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Set the linear and angular units to be the same as the file</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  being read. This will allow fixed tangent data to be read</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  in properly if the scene has different units than the .anim file.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a> oldDistanceUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#ad7868b7deab93de1213d816364e634cc\">MDistance::uiUnit</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> oldTimeUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#a0619e077e1d24cfc947c6844ec8dcfe3\">MDistance::setUIUnit</a>(linearUnit);</div>\n\
<div class=\"line\">    <a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#ad9406cfa93f3a9c96b962db36d126909\">MTime::setUIUnit</a>(timeUnit);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item_array.html\">MAnimCurveClipboardItemArray</a> clipboardArray;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (!readAnim.eof()) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (NULL == dataType) {</div>\n\
<div class=\"line\">            dataType = asWord(readAnim);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (strcmp(dataType, kAnim) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fullAttributeName, leafAttributeName, nodeName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  If this is from an unconnected anim curve, then there</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  will not be an attribute name.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!isNextNumeric(readAnim)) {</div>\n\
<div class=\"line\">                fullAttributeName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(asWord(readAnim));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//  If the node names were specified, then the next two</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//  words should be the leaf attribute and the node name.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!isNextNumeric(readAnim)) {</div>\n\
<div class=\"line\">                    leafAttributeName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(asWord(readAnim));</div>\n\
<div class=\"line\">                    nodeName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(asWord(readAnim));</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> rowCount, childCount, attrCount;</div>\n\
<div class=\"line\">            rowCount = (unsigned)asDouble(readAnim);</div>\n\
<div class=\"line\">            childCount = (unsigned)asDouble(readAnim);</div>\n\
<div class=\"line\">            attrCount = (unsigned)asDouble(readAnim);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  If the next keyword is not an animData, then this is </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  a place holder for the API clipboard.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            dataType = asWord(readAnim);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (strcmp(dataType, kAnimData) == 0) {</div>\n\
<div class=\"line\">                <a name=\"_a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html\">MAnimCurveClipboardItem</a> clipboardItem;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (readAnimCurve(readAnim, clipboardItem)) {</div>\n\
<div class=\"line\">                    clipboardItem.<a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a4c44c3ba32dc4a44eaf1e6b0c3dd8809\">setAddressingInfo</a>(rowCount, </div>\n\
<div class=\"line\">                                                    childCount, attrCount);</div>\n\
<div class=\"line\">                    clipboardItem.<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a6919636bc3a3405a920ee33c5aedf609\">setNameInfo</a>(  nodeName, </div>\n\
<div class=\"line\">                                                fullAttributeName, </div>\n\
<div class=\"line\">                                                leafAttributeName);</div>\n\
<div class=\"line\">                    clipboardArray.<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item_array.html#a23bf02447a622dc24bd636dc5708391f\">append</a>(clipboardItem);</div>\n\
<div class=\"line\">                } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                    <span class=\"comment\">//  Could not read the anim curve.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stringStat;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kCouldNotReadAnim,</div>\n\
<div class=\"line\">                                                             stringStat);</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">//  This must be a place holder object for the clipboard.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html\">MAnimCurveClipboardItem</a> clipboardItem;</div>\n\
<div class=\"line\">                clipboardItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a4c44c3ba32dc4a44eaf1e6b0c3dd8809\">setAddressingInfo</a>(rowCount, </div>\n\
<div class=\"line\">                                                childCount, attrCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//  Since there is no anim curve specified, what is </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//  in the fullAttributeName string is really the node </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//  name.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                clipboardItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a6919636bc3a3405a920ee33c5aedf609\">setNameInfo</a>(  fullAttributeName, </div>\n\
<div class=\"line\">                                            nodeName, </div>\n\
<div class=\"line\">                                            leafAttributeName);</div>\n\
<div class=\"line\">                clipboardArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item_array.html#a23bf02447a622dc24bd636dc5708391f\">append</a>(clipboardItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//  dataType already contains the next keyword. </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//  </span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!readAnim.eof()) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> warnStr(dataType);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kUnknownKeyword,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, warnStr);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">//  Skip to the next line, this one is invalid.</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                readAnim.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">//  The end of the file was reached. </span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  Skip any whitespace.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        dataType = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess != cb.<a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a1906f08886d751ecbe2b6f89ab8fc174\">set</a>( clipboardArray, </div>\n\
<div class=\"line\">                        <a name=\"_a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(startTime, timeUnit), <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(endTime, timeUnit), </div>\n\
<div class=\"line\">                        (<span class=\"keywordtype\">float</span>) startUnitless, (<span class=\"keywordtype\">float</span>) endUnitless)) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stringStat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kClipboardFailure,</div>\n\
<div class=\"line\">                                                 stringStat);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Restore the old units.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#a0619e077e1d24cfc947c6844ec8dcfe3\">MDistance::setUIUnit</a>(oldDistanceUnit);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#ad9406cfa93f3a9c96b962db36d126909\">MTime::setUIUnit</a>(oldTimeUnit);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MS::kSuccess);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animReader::convertAnglesAndWeights3To2(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type, </div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">bool</span> isWeighted, <a name=\"_a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> &amp;angle, <span class=\"keywordtype\">double</span> &amp;weight)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Converts the tangent angles from Maya 3.0 to Maya2.* formats.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> oldAngle = angle.<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#ad8bd60c05e3ae72f081af07bfeb519ac\">as</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> newAngle = oldAngle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Calculate the scale values for the conversion.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> xScale = 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> yScale = 1.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> tOne(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        xScale = tOne.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>:</div>\n\
<div class=\"line\">            yScale = tOne.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> dOne(1.0, <a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#a2a3077e91bb7ba19bade3cae7e4604a6\">MDistance::internalUnit</a>());</div>\n\
<div class=\"line\">                yScale = dOne.as(linearUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> aOne(1.0, <a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#aa58fcacd3e0ed41bf20c81c3b9e5ac05\">MAngle::internalUnit</a>());</div>\n\
<div class=\"line\">                yScale = aOne.as(angularUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a6ca1a4be447fa5aa7e76b4af3cfff9f5\">MFnAnimCurve::kAnimCurveUU</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> tanAngle = tan(oldAngle);</div>\n\
<div class=\"line\">    newAngle = atan((xScale*tanAngle)/yScale);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (isWeighted) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> sinAngle = sin(oldAngle);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> cosAngle = cos(oldAngle);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> denominator = (yScale*yScale*sinAngle*sinAngle) +</div>\n\
<div class=\"line\">                                (xScale*xScale*cosAngle*cosAngle);</div>\n\
<div class=\"line\">        weight = sqrtl(weight/denominator);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> finalAngle(newAngle, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>);</div>\n\
<div class=\"line\">    angle = finalAngle;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> animReader::convertAnglesAndWeights2To3(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type, </div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">bool</span> isWeighted, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> &amp;angle, <span class=\"keywordtype\">double</span> &amp;weight)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Converts the tangent angles from Maya 2.* to Maya3.0+ formats.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> oldAngle = angle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#ad8bd60c05e3ae72f081af07bfeb519ac\">as</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> newAngle = oldAngle;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> newWeight = weight;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Calculate the scale values for the conversion.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> xScale = 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> yScale = 1.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> tOne(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a> ||</div>\n\
<div class=\"line\">        type == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        xScale = tOne.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>:</div>\n\
<div class=\"line\">            yScale = tOne.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> dOne(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#a2a3077e91bb7ba19bade3cae7e4604a6\">MDistance::internalUnit</a>());</div>\n\
<div class=\"line\">                yScale = dOne.as(linearUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>:</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> aOne(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#aa58fcacd3e0ed41bf20c81c3b9e5ac05\">MAngle::internalUnit</a>());</div>\n\
<div class=\"line\">                yScale = aOne.as(angularUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a6ca1a4be447fa5aa7e76b4af3cfff9f5\">MFnAnimCurve::kAnimCurveUU</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> quarter = M_PI/2;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (isEquivalent(oldAngle, 0.0) ||</div>\n\
<div class=\"line\">        isEquivalent(oldAngle, quarter) ||</div>\n\
<div class=\"line\">        isEquivalent(oldAngle, -quarter)) {</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        newAngle = oldAngle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (isWeighted) {</div>\n\
<div class=\"line\">            newWeight = yScale*oldAngle;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> tanAngle = tan(oldAngle);</div>\n\
<div class=\"line\">        newAngle = atan((yScale*tanAngle)/xScale);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (isWeighted) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> cosAngle = cos(oldAngle);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> cosSq = cosAngle*cosAngle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> wSq = (weight*weight) * </div>\n\
<div class=\"line\">                    (((xScale*xScale - yScale*yScale)*cosSq) + (yScale*yScale));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            newWeight = sqrtl(wSq);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    weight = newWeight;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> finalAngle(newAngle, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>);</div>\n\
<div class=\"line\">    angle = finalAngle;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animReader::readAnimCurve(std::ifstream &amp;clipFile, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html\">MAnimCurveClipboardItem</a> &amp;item)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Read a block of the ifstream that should contain anim curve</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      data in the format determined by the animData keyword.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html\">MFnAnimCurve</a> animCurve;</div>\n\
<div class=\"line\">    <a name=\"_a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCurveObj; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Anim curve defaults.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    animBase::AnimBaseType input = wordAsInputType(kWordTypeTime);</div>\n\
<div class=\"line\">    animBase::AnimBaseType output = wordAsOutputType(kWordTypeLinear);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4\">MFnAnimCurve::InfinityType</a> preInf = wordAsInfinityType(kWordConstant);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aca9c5942b5d67122821becf05ef739a4\">MFnAnimCurve::InfinityType</a> postInf = wordAsInfinityType(kWordConstant);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> inputUnitName;</div>\n\
<div class=\"line\">    animUnitNames::setToShortName(timeUnit, inputUnitName);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> outputUnitName;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49ed\">MAngle::Unit</a> tanAngleUnit = angularUnit;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isWeighted (<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> *dataType;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (!clipFile.eof()) {</div>\n\
<div class=\"line\">        advance(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        dataType = asWord(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (strcmp(dataType, kInputString) == 0) {</div>\n\
<div class=\"line\">            input = wordAsInputType(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kOutputString) == 0) {</div>\n\
<div class=\"line\">            output = wordAsOutputType(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kWeightedString) == 0) {</div>\n\
<div class=\"line\">            isWeighted = (asDouble(clipFile) == 1.0);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kPreInfinityString) == 0) {</div>\n\
<div class=\"line\">            preInf = wordAsInfinityType(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kPostInfinityString) == 0) {</div>\n\
<div class=\"line\">            postInf = wordAsInfinityType(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kInputUnitString) == 0) {</div>\n\
<div class=\"line\">            inputUnitName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kOutputUnitString) == 0) {</div>\n\
<div class=\"line\">            outputUnitName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#acee761fe098fc30a5ac1437e3aca5bc0\">set</a>(asWord(clipFile));</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kTanAngleUnitString) == 0) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> tUnit(asWord(clipFile));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(tUnit, tanAngleUnit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                tanAngleUnit = angularUnit;</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(tanAngleUnit, unitName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingTanAngleUnit, stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, kKeysString) == 0) {</div>\n\
<div class=\"line\">            <span class=\"comment\">//  Ignore the rest of this line.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            clipFile.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (strcmp(dataType, <span class=\"stringliteral\">&quot;{&quot;</span>) == 0) {</div>\n\
<div class=\"line\">            <span class=\"comment\">//  Skippping the &#39;{&#39; character. Just ignore it.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"comment\">//  An unrecogized keyword was found.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> warnStr(dataType);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">            <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kUnknownKeyword,</div>\n\
<div class=\"line\">                                                        stat);</div>\n\
<div class=\"line\">            msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, warnStr);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read the animCurve</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type = typeAsAnimCurveType(input, output);</div>\n\
<div class=\"line\">    animCurveObj = animCurve.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#ac6f5d067bd54ad9dc9f51badf0d632bf\">create</a>(type, NULL, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status != MS::kSuccess) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kCouldNotCreateAnim, status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    animCurve.<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#ac61b1bb1724f20367a6cb9b6abbe6320\">setIsWeighted</a>(isWeighted);</div>\n\
<div class=\"line\">    animCurve.<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a5a02fb53240bf78c80738bc4233d4efb\">setPreInfinityType</a>(preInf);</div>\n\
<div class=\"line\">    animCurve.<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a76d9f8b9583719aba9caf509296757c2\">setPostInfinityType</a>(postInf);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Set the appropriate units.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> inputTimeUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda94dd08feda7b2cf0ff8262312c4fcc09\">MTime::kInvalid</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (input == kAnimBaseTime) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(inputUnitName, inputTimeUnit)) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">            inputTimeUnit = timeUnit;</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(inputTimeUnit, unitName);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">            <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                        stat);</div>\n\
<div class=\"line\">            msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kInputUnitString, unitName);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49ed\">MTime::Unit</a> outputTimeUnit = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda94dd08feda7b2cf0ff8262312c4fcc09\">MTime::kInvalid</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (output == kAnimBaseTime) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(outputUnitName, outputTimeUnit)) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">            outputTimeUnit = timeUnit;</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(outputTimeUnit, unitName);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">            <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                        stat);</div>\n\
<div class=\"line\">            msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kOutputUnitString, unitName);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> conversion = 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (output == kAnimBaseLinear) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a> unit;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (outputUnitName.<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != 0) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(outputUnitName, unit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                unit = linearUnit;</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(unit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kOutputUnitString, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            unit = linearUnit;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (unit != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda0603f671fbadde0729a2e79a80fb9a0e\">MDistance::kCentimeters</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> one(1.0, unit);</div>\n\
<div class=\"line\">            conversion = one.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49eda0603f671fbadde0729a2e79a80fb9a0e\">MDistance::kCentimeters</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (output == kAnimBaseAngular) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49ed\">MAngle::Unit</a> unit;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (outputUnitName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() != 0) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!animUnitNames::setFromName(outputUnitName, unit)) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">                unit = angularUnit;</div>\n\
<div class=\"line\">                animUnitNames::setToShortName(unit, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg; </div>\n\
<div class=\"line\">                <span class=\"comment\">// Use format to place variable string into message</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msgFmt = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kSettingToUnit,</div>\n\
<div class=\"line\">                                                            stat);</div>\n\
<div class=\"line\">                msg.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(msgFmt, kOutputUnitString, unitName);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            unit = angularUnit;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (unit != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> one(1.0, unit);</div>\n\
<div class=\"line\">            conversion = one.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#abceb2331ad056e3c5ad27894199a49edacbf42b42e59efcda5e100ade7d4df2f5\">MAngle::kRadians</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Now read each keyframe</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> c = clipFile.peek();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (clipFile &amp;&amp; c != kBraceRightChar) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> t = asDouble (clipFile);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> val = asDouble (clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51\">MFnAnimCurve::TangentType</a> tanIn = wordAsTangentType(asWord(clipFile));</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51\">MFnAnimCurve::TangentType</a> tanOut = wordAsTangentType(asWord(clipFile));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>:</div>\n\
<div class=\"line\">                index = animCurve.<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#afc236831cc5b62acad082b9658c7d6a0\">addKey</a>(   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(val, inputTimeUnit),</div>\n\
<div class=\"line\">                                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(val, outputTimeUnit),</div>\n\
<div class=\"line\">                                            tanIn, tanOut, NULL, &amp;status);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a59856725f46f0fad7404558871aa9a5d\">MFnAnimCurve::kAnimCurveTU</a>:</div>\n\
<div class=\"line\">                index = animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#afc236831cc5b62acad082b9658c7d6a0\">addKey</a>(   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(t, inputTimeUnit),</div>\n\
<div class=\"line\">                                            val*conversion, tanIn, tanOut,</div>\n\
<div class=\"line\">                                            NULL, &amp;status);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a6ca1a4be447fa5aa7e76b4af3cfff9f5\">MFnAnimCurve::kAnimCurveUU</a>:</div>\n\
<div class=\"line\">                index = animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#afc236831cc5b62acad082b9658c7d6a0\">addKey</a>(   t, val*conversion, </div>\n\
<div class=\"line\">                                            tanIn, tanOut,</div>\n\
<div class=\"line\">                                            NULL, &amp;status);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>:</div>\n\
<div class=\"line\">                index = animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#afc236831cc5b62acad082b9658c7d6a0\">addKey</a>(   t, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a>(val, outputTimeUnit),</div>\n\
<div class=\"line\">                                            tanIn, tanOut,</div>\n\
<div class=\"line\">                                            NULL, &amp;status);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kUnknownNode, status);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (status != MS::kSuccess) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stringStat;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kCouldNotKey, stringStat);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  Tangent locking needs to be called after the weights and </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  angles are set for the fixed tangents.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> tLocked = bool(asDouble(clipFile) == 1.0);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> swLocked = bool(asDouble(clipFile) == 1.0);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> isBreakdown (<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animVersion &gt;= kVersionNonWeightedAndBreakdowns) {</div>\n\
<div class=\"line\">            isBreakdown = (asDouble(clipFile) == 1.0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  Only fixed tangents need additional information.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (tanIn == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> inAngle(asDouble(clipFile), tanAngleUnit);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> inWeight = asDouble(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  If this is from a pre-Maya3.0 file, the tangent angles will </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  need to be converted.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (convertAnglesFromV2To3) {</div>\n\
<div class=\"line\">                convertAnglesAndWeights2To3(type,isWeighted,inAngle,inWeight);</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (convertAnglesFromV3To2) {</div>\n\
<div class=\"line\">                convertAnglesAndWeights3To2(type,isWeighted,inAngle,inWeight);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  By default, the tangents are locked. When the tangents</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  are locked, setting the angle and weight of a fixed in</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  tangent may change the tangent type of the out tangent.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            animCurve.<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a2044ea503203161a35bc2a07afe663fb\">setTangentsLocked</a>(index, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            animCurve.<a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a7832d85597922310b7e82ec60b74569a\">setTangent</a>(index, inAngle, inWeight, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  Only fixed tangents need additional information.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (tanOut == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> outAngle(asDouble(clipFile), tanAngleUnit);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> outWeight = asDouble(clipFile);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  If this is from a pre-Maya3.0 file, the tangent angles will </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  need to be converted.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (convertAnglesFromV2To3) {</div>\n\
<div class=\"line\">                convertAnglesAndWeights2To3(type,isWeighted,outAngle,outWeight);</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (convertAnglesFromV3To2) {</div>\n\
<div class=\"line\">                convertAnglesAndWeights3To2(type,isWeighted,outAngle,outWeight);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"comment\">//  By default, the tangents are locked. When the tangents</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  are locked, setting the angle and weight of a fixed out </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  tangent may change the tangent type of the in tangent.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a2044ea503203161a35bc2a07afe663fb\">setTangentsLocked</a>(index, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a7832d85597922310b7e82ec60b74569a\">setTangent</a>(index, outAngle, outWeight, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  To prevent tangent types from unexpectedly changing, tangent </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  locking should be the last operation. See the above comments</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  about fixed tangent types for more information.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        animCurve.<a name=\"a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#ab0b50ef1323a8aa9086d2546a625feca\">setWeightsLocked</a>(index, swLocked);</div>\n\
<div class=\"line\">        animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a2044ea503203161a35bc2a07afe663fb\">setTangentsLocked</a>(index, tLocked);</div>\n\
<div class=\"line\">        animCurve.<a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a2928619982a83d88dee1bb0b2e9fb316\">setIsBreakdown</a> (index, isBreakdown);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  There should be no additional data on this line. Go to the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  next line of data.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        clipFile.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//  Skip any comments.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        advance(clipFile);</div>\n\
<div class=\"line\">        c = clipFile.peek();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Ignore the brace that marks the end of the keys block.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (c == kBraceRightChar) {</div>\n\
<div class=\"line\">        clipFile.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Ignore the brace that marks the end of the animData block.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    advance(clipFile);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (clipFile.peek() == kBraceRightChar) {</div>\n\
<div class=\"line\">        clipFile.ignore(INT_MAX, kNewLineChar);</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">//  Something is wrong.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stringStat;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kMissingBrace, stringStat);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Do not set the clipboard with an empty clipboard item.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!animCurveObj.<a name=\"a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>()) {</div>\n\
<div class=\"line\">        item.<a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a7dceeb98eeaff79e7d1606e6ed8b1efd\">setAnimCurve</a>(animCurveObj);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Delete the copy of the anim curve.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d83d29ca400045849d777aecafda70c\">MGlobal::deleteNode</a>(animCurveObj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Class animWriter</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animWriter::animWriter()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class constructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">animWriter::~animWriter()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Class destructor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> </div>\n\
<div class=\"line\">animWriter::writeClipboard(std::ofstream&amp; animFile,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html\">MAnimCurveClipboard</a> &amp;cb, </div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">bool</span> nodeNames <span class=\"comment\">/* false */</span>,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">bool</span> verboseUnits <span class=\"comment\">/* false */</span>)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Write the contents of the clipboard to the ofstream.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check to see if there is anything on the clipboard at all</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cb.<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a8174b25717a6f860d40f2ca259442df5\">isEmpty</a>()) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    resetUnits();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Write out the clipboard information</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!writeHeader(animFile)) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> (MS::kFailure);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Now write out each animCurve</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item_array.html\">MAnimCurveClipboardItemArray</a>  &amp;clipboardArray = </div>\n\
<div class=\"line\">                                            cb.<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a1da733f06135a2cab5f3cc2c7c08f570\">clipboardItems</a>(&amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (MS::kSuccess != status) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; clipboardArray.<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++) {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html\">MAnimCurveClipboardItem</a> &amp;clipboardItem = clipboardArray[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> statusInLoop = MS::kSuccess;</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> animCurveObj = clipboardItem.<a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a011adb3ceeca89e8723f4c7c79990514\">animCurve</a>(&amp;statusInLoop);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  The clipboard may contain Null anim curves. If a Null anim </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  curve is returned, it is safe to ignore the error message</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  and continue to the next anim curve in the list.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> placeHolder = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (MS::kSuccess != statusInLoop || animCurveObj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>()) {</div>\n\
<div class=\"line\">                placeHolder = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Write out animCurve information</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!writeAnim(animFile, clipboardItem, placeHolder, nodeNames)) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> (MS::kFailure);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (placeHolder) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">//  Write out each curve in its specified format.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  For now, only the anim curve format.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!writeAnimCurve(animFile, &amp;animCurveObj, </div>\n\
<div class=\"line\">                                clipboardItem.<a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#acd1e166bac2d7cfd822656fcb11d7110\">animCurveType</a>(),</div>\n\
<div class=\"line\">                                verboseUnits)) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> (MS::kFailure);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MS::kSuccess);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animWriter::writeHeader(std::ofstream&amp; clip)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Writes the header for the file. The header contains the clipboard</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      specific data. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!clip) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kAnimVersion &lt;&lt; kSpaceChar &lt;&lt; kAnimVersionString &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">    clip &lt;&lt; kMayaVersion &lt;&lt; kSpaceChar &lt;&lt; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5e267b7212f8651514c21ca82566e412\">MGlobal::mayaVersion</a>() &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html\">MAnimCurveClipboard</a> &amp;clipboard = </div>\n\
<div class=\"line\">        <a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#af34c0cc340b8211738e45087a7d17672\">MAnimCurveClipboard::theAPIClipboard</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> startTime = clipboard.<a name=\"a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a0c219d38580479d27e25858b7e0a7a93\">startTime</a>().<a name=\"a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>(timeUnit);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> endTime = clipboard.<a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a50ed55f78ebcd59a272b1a44a2d20aa5\">endTime</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>(timeUnit);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (startTime != endTime) {</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unit;</div>\n\
<div class=\"line\">    animUnitNames::setToShortName(timeUnit, unit);</div>\n\
<div class=\"line\">    clip &lt;&lt; kTimeUnit &lt;&lt; kSpaceChar &lt;&lt; unit &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">    animUnitNames::setToShortName(linearUnit, unit);</div>\n\
<div class=\"line\">    clip &lt;&lt; kLinearUnit &lt;&lt; kSpaceChar &lt;&lt; unit &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">    animUnitNames::setToShortName(angularUnit, unit);</div>\n\
<div class=\"line\">    clip &lt;&lt; kAngularUnit &lt;&lt; kSpaceChar &lt;&lt; unit &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">            clip &lt;&lt; kStartTime &lt;&lt; kSpaceChar &lt;&lt; startTime &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">            clip &lt;&lt; kEndTime &lt;&lt; kSpaceChar &lt;&lt; endTime &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> startUnitless = clipboard.<a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a840e4e411b88d13cfbe597cd95af3462\">startUnitlessInput</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> endUnitless = clipboard.<a name=\"a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard.html#a4e7fb342d0cb61bf74a1e96bb6f5b350\">endUnitlessInput</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (startUnitless != endUnitless) {</div>\n\
<div class=\"line\">            clip &lt;&lt; kStartUnitless &lt;&lt; kSpaceChar &lt;&lt; startUnitless &lt;&lt; </div>\n\
<div class=\"line\">                    kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">            clip &lt;&lt; kEndUnitless &lt;&lt; kSpaceChar &lt;&lt; endUnitless &lt;&lt; </div>\n\
<div class=\"line\">                    kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animWriter::writeAnim(std::ofstream &amp;clip,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html\">MAnimCurveClipboardItem</a> &amp;clipboardItem,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">bool</span> placeHolder <span class=\"comment\">/* false */</span>,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">bool</span> nodeNames <span class=\"comment\">/* false */</span>)</div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Write out the anim curve from the clipboard item into the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      ofstream. The position of the anim curve in the clipboard</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      and the attribute to which it is attached is written out in this</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      method.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This method returns true if the write was successful.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!clip) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kAnim;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  If this is a clipboard place holder then there will be no full</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  or leaf attribute names.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (placeHolder) {</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; clipboardItem.<a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a85027d1b009e3bb3e50f080bbaaf10e2\">nodeName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; clipboardItem.<a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a6f47917e66ecaf181087bd514c23388c\">fullAttributeName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (nodeNames) {</div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; clipboardItem.<a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#adbc4fce3278697f47ff328b6497833df\">leafAttributeName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; clipboardItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#a85027d1b009e3bb3e50f080bbaaf10e2\">nodeName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> rowCount, childCount, attrCount;</div>\n\
<div class=\"line\">    clipboardItem.<a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_curve_clipboard_item.html#afe9f5bf8b944abfa62b0e8c0bdb734cc\">getAddressingInfo</a>(rowCount, childCount, attrCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kSpaceChar &lt;&lt; rowCount;</div>\n\
<div class=\"line\">    clip &lt;&lt; kSpaceChar &lt;&lt; childCount;</div>\n\
<div class=\"line\">    clip &lt;&lt; kSpaceChar &lt;&lt; attrCount;</div>\n\
<div class=\"line\">    clip &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> animWriter::writeAnimCurve(std::ofstream &amp;clip,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> *animCurveObj,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27\">MFnAnimCurve::AnimCurveType</a> type,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">bool</span> verboseUnits <span class=\"comment\">/* false */</span>)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Write out the anim curve from the clipboard item into the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      ofstream. The actual anim curve data is written out.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This method returns true if the write was successful.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (NULL == animCurveObj || animCurveObj-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>() || !clip) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html\">MFnAnimCurve</a> animCurve(*animCurveObj, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess != status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>(kCouldNotExport, status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a4ddbe97e58a90e1ab05d45a62c006cf0\">MGlobal::displayError</a>(msg);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kAnimData &lt;&lt; kSpaceChar &lt;&lt; kBraceLeftChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kInputString &lt;&lt; kSpaceChar &lt;&lt;</div>\n\
<div class=\"line\">            boolInputTypeAsWord(animCurve.<a name=\"a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a9c12542ca640c682074bb8db022f9eb0\">isUnitlessInput</a>()) &lt;&lt; </div>\n\
<div class=\"line\">            kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kOutputString &lt;&lt; kSpaceChar &lt;&lt;</div>\n\
<div class=\"line\">            outputTypeAsWord(type) &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kWeightedString &lt;&lt; kSpaceChar &lt;&lt;</div>\n\
<div class=\"line\">            (animCurve.<a name=\"a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a39ee5f89bd48376bc77a278169d4e158\">isWeighted</a>() ? 1 : 0) &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  These units default to the units in the header of the file.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  </span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (verboseUnits) {</div>\n\
<div class=\"line\">        clip &lt;&lt; kTwoSpace &lt;&lt; kInputUnitString &lt;&lt; kSpaceChar;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animCurve.<a name=\"a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#af94edf40f82e9b48f334506415933394\">isTimeInput</a>()) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(timeUnit, unitName);</div>\n\
<div class=\"line\">            clip &lt;&lt; unitName;</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"comment\">//  The anim curve has unitless input.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            clip &lt;&lt; kUnitlessString;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        clip &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        clip &lt;&lt; kTwoSpace &lt;&lt; kOutputUnitString &lt;&lt; kSpaceChar;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> conversion = 1.0;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> unitName;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (type) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a56ecd2b0aa8e7db9d2a22312d638ccf5\">MFnAnimCurve::kAnimCurveTA</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27acc34181e08612a4adb67f03265602ebd\">MFnAnimCurve::kAnimCurveUA</a>:</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(angularUnit, unitName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (verboseUnits) clip &lt;&lt; unitName;</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> angle(1.0);</div>\n\
<div class=\"line\">                conversion = angle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#ad8bd60c05e3ae72f081af07bfeb519ac\">as</a>(angularUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a8031129808b47b18cc4121aa7c517757\">MFnAnimCurve::kAnimCurveTL</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27aabaf584b29a77ebed42037fc5eef28b0\">MFnAnimCurve::kAnimCurveUL</a>:</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(linearUnit, unitName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (verboseUnits) clip &lt;&lt; unitName;</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> distance(1.0);</div>\n\
<div class=\"line\">                conversion = distance.as(linearUnit);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a146ba4df19c880340f2c9b3c65a90e2c\">MFnAnimCurve::kAnimCurveTT</a>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a93c9cae782f401790431a8f034193f27a9f0fdf939faa43375d8869e0d9c460f7\">MFnAnimCurve::kAnimCurveUT</a>:</div>\n\
<div class=\"line\">            animUnitNames::setToShortName(timeUnit, unitName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (verboseUnits) clip &lt;&lt; unitName;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (verboseUnits) clip &lt;&lt; kUnitlessString;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (verboseUnits) clip &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (verboseUnits) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> angleUnitName;</div>\n\
<div class=\"line\">        animUnitNames::setToShortName(angularUnit, angleUnitName);</div>\n\
<div class=\"line\">        clip &lt;&lt; kTwoSpace &lt;&lt; kTanAngleUnitString &lt;&lt; </div>\n\
<div class=\"line\">                kSpaceChar &lt;&lt; angleUnitName &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kPreInfinityString &lt;&lt; kSpaceChar &lt;&lt;</div>\n\
<div class=\"line\">            infinityTypeAsWord(animCurve.<a name=\"a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a88b8b1c452c4d2d1c5714d2599e485a4\">preInfinityType</a>()) &lt;&lt; </div>\n\
<div class=\"line\">            kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kPostInfinityString &lt;&lt; kSpaceChar &lt;&lt;</div>\n\
<div class=\"line\">            infinityTypeAsWord(animCurve.<a name=\"a116\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#ad107bf0173bf1f8018b414dbae7bc06f\">postInfinityType</a>()) &lt;&lt; </div>\n\
<div class=\"line\">            kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kKeysString &lt;&lt; kSpaceChar &lt;&lt; kBraceLeftChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// And then write out each keyframe</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> numKeys = animCurve.<a name=\"a117\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a5c05175c33425e77658aa0a257bf3996\">numKeys</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> i = 0; i &lt; numKeys; i++) {</div>\n\
<div class=\"line\">        clip &lt;&lt; kTwoSpace &lt;&lt; kTwoSpace;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a9c12542ca640c682074bb8db022f9eb0\">isUnitlessInput</a>()) {</div>\n\
<div class=\"line\">            clip &lt;&lt; animCurve.<a name=\"a118\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a509a5e48fcff509378d856494ca58f1b\">unitlessInput</a>(i);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            clip &lt;&lt; animCurve.<a name=\"a119\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a65183908b74de022172ba65dbcc57a4c\">time</a>(i).<a name=\"a120\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a324b14b7506c6e4f47912161956974ed\">value</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// clamp tiny values so that it isn&#39;t so small it can&#39;t be read in</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> animValue = (conversion*animCurve.<a name=\"a121\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a97dd3da7fd2ad2e846278ac58cac033a\">value</a>(i));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animBase::isEquivalent(animValue,0.0)) animValue = 0.0;</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; animValue;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; tangentTypeAsWord(animCurve.<a name=\"a122\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aee5bcfb44261590c1fbd193fd8a9e272\">inTangentType</a>(i));</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; tangentTypeAsWord(animCurve.<a name=\"a123\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a7f396a0646a6a8ec95fcf6fa39d666fa\">outTangentType</a>(i));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; (animCurve.<a name=\"a124\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a70c26b7e4508da8f9e4327988c8a4a52\">tangentsLocked</a>(i) ? 1 : 0);</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; (animCurve.<a name=\"a125\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a9687680a0340102d75027852143519a8\">weightsLocked</a>(i) ? 1 : 0);</div>\n\
<div class=\"line\">        clip &lt;&lt; kSpaceChar &lt;&lt; (animCurve.<a name=\"a126\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a2f206aa604bae4b561529bb42abe3152\">isBreakdown</a>(i) ? 1 : 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#aee5bcfb44261590c1fbd193fd8a9e272\">inTangentType</a>(i) == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> angle;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> weight;</div>\n\
<div class=\"line\">            animCurve.<a name=\"a127\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a72b4a68c26b0902e7be1e860611bfac2\">getTangent</a>(i, angle, weight, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; angle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#ad8bd60c05e3ae72f081af07bfeb519ac\">as</a>(angularUnit);</div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; weight;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a7f396a0646a6a8ec95fcf6fa39d666fa\">outTangentType</a>(i) == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a6b26eee66e19b558a138d0c009653e51a2d897d42a876b83b49878d3a5b6c5516\">MFnAnimCurve::kTangentFixed</a>) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a> angle;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> weight;</div>\n\
<div class=\"line\">            animCurve.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_anim_curve.html#a72b4a68c26b0902e7be1e860611bfac2\">getTangent</a>(i, angle, weight, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; angle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html#ad8bd60c05e3ae72f081af07bfeb519ac\">as</a>(angularUnit);</div>\n\
<div class=\"line\">            clip &lt;&lt; kSpaceChar &lt;&lt; weight;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        clip &lt;&lt; kSemiColonChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    clip &lt;&lt; kTwoSpace &lt;&lt; kBraceRightChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    clip &lt;&lt; kBraceRightChar &lt;&lt; std::endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";