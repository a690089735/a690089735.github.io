var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: apiMeshShape/apiMeshGeometryOverride.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'api_mesh_shape_2api_mesh_geometry_override_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: apiMeshShape/apiMeshGeometryOverride.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">apiMeshShape/apiMeshGeometryOverride.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// apiMeshGeometryOverride.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshGeometryOverride.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshShape.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshGeom.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUserData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxComponentConverter.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MShaderManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometryUtilities.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObjectArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;set&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;vector&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;memory&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Custom user data class to attach to render items</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>apiMeshUserData : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    apiMeshUserData()</div>\n\
<div class=\"line\">    : fMessage(<span class=\"stringliteral\">&quot;&quot;</span>)</div>\n\
<div class=\"line\">    , fNumModifications(0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~apiMeshUserData()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fMessage;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> fNumModifications;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Custom user data class to attach to render items</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to help with viewport 2.0 selection</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>apiMeshHWSelectionUserData : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\">    : fMeshGeom(NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~apiMeshHWSelectionUserData()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    apiMeshGeom* fMeshGeom;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using</span> ApiMeshUserDataPtr = <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_shared_ptr.html\">MSharedPtr&lt;apiMeshUserData&gt;</a>;</div>\n\
<div class=\"line\"><span class=\"keyword\">using</span> ApiMeshHWSelectionUserDataPtr = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_shared_ptr.html\">MSharedPtr&lt;apiMeshHWSelectionUserData&gt;</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Pre/Post callback helper</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> callbackDataPrint(</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numItems = renderItemList.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;numItems; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        item = renderItemList.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(i);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path = item-&gt;<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a9452c2cfed46b5c1977568eb5b225930\">sourceDagPath</a>();</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;\\tITEM: &#39;%s&#39; -- SOURCE: &#39;%s&#39;\\n&quot;</span>, item-&gt;<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), path.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a7cffb69661adc6ae7ac9e03c297caf01\">fullPathName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html\">MHWRender::MPassContext</a> &amp; passCtx = context.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ad3f9422688a9ffbe815c374ece46c1ea\">getPassContext</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; passId = passCtx.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ae90d4b4c8175e81800d8eb16ee126e1f\">passIdentifier</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp; passSem = passCtx.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a9737189d5cfffd795336d711a678d627\">passSemantics</a>();</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;tAPI mesh drawing in pass[%s], semantic[&quot;</span>, passId.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;passSem.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot; %s&quot;</span>, passSem[i].asChar());</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"comment\">// Custom pre-draw callback</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> apiMeshPreDrawCallback(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList,</div>\n\
<div class=\"line\">    <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *shaderInstance)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;PRE-draw callback triggered for render item list with data:\\n&quot;</span>);</div>\n\
<div class=\"line\">    callbackDataPrint(context, renderItemList);</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"comment\">// Custom post-draw callback</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> apiMeshPostDrawCallback(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a> *shaderInstance)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;POST-draw callback triggered for render item list with data:\\n&quot;</span>);</div>\n\
<div class=\"line\">    callbackDataPrint(context, renderItemList);</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Custom component converter to select vertices</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Attached to the dormant vertices render item (sVertexItemName)</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>meshVertComponentConverter : <span class=\"keyword\">public</span> <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html\">MHWRender::MPxComponentConverter</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    meshVertComponentConverter() : <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxComponentConverter() {}</div>\n\
<div class=\"line\">    ~meshVertComponentConverter()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#a43bd59f98902213604a9dfb5471c40d4\">initialize</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; renderItem)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Create the component selection object .. here we are selecting vertex component</span></div>\n\
<div class=\"line\">        fComponentObject = fComponent.create( <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to the correponding vertex component of the object</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use same algorithm as in updateIndexingForDormantVertices</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> selectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast&lt;&gt;(renderItem.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(selectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            apiMeshGeom* meshGeom = selectionData-&gt;fMeshGeom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Allocate vertices lookup table</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        numTriangles += numVerts - 2;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                fVertices.resize(3*numTriangles);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Fill vertices lookup table</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        fVertices[idx++] = meshGeom-&gt;face_connects[base];</div>\n\
<div class=\"line\">                        fVertices[idx++] = meshGeom-&gt;face_connects[base+v];</div>\n\
<div class=\"line\">                        fVertices[idx++] = meshGeom-&gt;face_connects[base+v+1];</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    base += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aeb25b60515cb3943231004fe1e363df3\">addIntersection</a>(<a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MHWRender::MIntersection</a>&amp; intersection)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// index buffer, to the correct vertex component</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> rawIdx = intersection.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#a9e17f5cf2ecb7faad99d1d6fd2856dbc\">index</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(rawIdx &gt;= 0 &amp;&amp; rawIdx &lt; (<span class=\"keywordtype\">int</span>)fVertices.size())</div>\n\
<div class=\"line\">            idx = fVertices[rawIdx];</div>\n\
<div class=\"line\">        fComponent.addElement(idx);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#ad506603f129f6876b4f8c03ffe0b0b36\">component</a>()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Return the component object that contains the ids of the selected vertices</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> fComponentObject;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aaa36eb1ffbfba344bcbcf291834e0c7f\">selectionMask</a>()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// This converter is only valid for vertex selection or snapping</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> retVal;</div>\n\
<div class=\"line\">        retVal.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#a786c24d1df83aa7a454c3a9b305f225c\">setMask</a>(<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">        retVal.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#ab2205ed8ba273131fea652a106524bda\">addMask</a>(<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> retVal;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> MPxComponentConverter* creator()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> meshVertComponentConverter();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fComponent;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fComponentObject;</div>\n\
<div class=\"line\">    std::vector&lt;int&gt; fVertices;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Custom component converter to select edges</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Attached to the edge selection render item (sEdgeSelectionItemName)</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>meshEdgeComponentConverter : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html\">MHWRender::MPxComponentConverter</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    meshEdgeComponentConverter() : <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxComponentConverter() {}</div>\n\
<div class=\"line\">    ~meshEdgeComponentConverter()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#a43bd59f98902213604a9dfb5471c40d4\">initialize</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; renderItem)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Create the component selection object .. here we are selecting edge component</span></div>\n\
<div class=\"line\">        fComponentObject = fComponent.create( <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to the correponding edge component of the object</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use same algorithm as in updateIndexingForEdges</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// in updateIndexingForEdges the index buffer is allocated with &quot;totalEdges = 2*totalVerts&quot;</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// but since we are drawing lines, we&#39;ll get only half of the data as primitive positions :</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// indices 0 &amp; 1 : primitive #0</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// indices 2 &amp; 3 : primitive #1</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ...</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> selectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast&lt;&gt;(renderItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(selectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            apiMeshGeom* meshGeom = selectionData-&gt;fMeshGeom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Allocate edges lookup table</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        totalVerts += numVerts;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                fEdges.resize(totalVerts);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Fill edges lookup table</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> edgeId = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts; v++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        fEdges[idx++] = edgeId;</div>\n\
<div class=\"line\">                        ++edgeId;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aeb25b60515cb3943231004fe1e363df3\">addIntersection</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MHWRender::MIntersection</a>&amp; intersection)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// index buffer, to the correct edge component</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> rawIdx = intersection.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#a9e17f5cf2ecb7faad99d1d6fd2856dbc\">index</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(rawIdx &gt;= 0 &amp;&amp; rawIdx &lt; (<span class=\"keywordtype\">int</span>)fEdges.size())</div>\n\
<div class=\"line\">            idx = fEdges[rawIdx];</div>\n\
<div class=\"line\">        fComponent.addElement(idx);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#ad506603f129f6876b4f8c03ffe0b0b36\">component</a>()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Return the component object that contains the ids of the selected edges</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> fComponentObject;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aaa36eb1ffbfba344bcbcf291834e0c7f\">selectionMask</a>()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// This converter is only valid for edge selection</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> MPxComponentConverter* creator()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> meshEdgeComponentConverter();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fComponent;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fComponentObject;</div>\n\
<div class=\"line\">    std::vector&lt;int&gt; fEdges;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Custom component converter to select faces</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Attached to the face selection render item (sFaceSelectionItemName)</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>meshFaceComponentConverter : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html\">MHWRender::MPxComponentConverter</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    meshFaceComponentConverter() : <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxComponentConverter() {}</div>\n\
<div class=\"line\">    ~meshFaceComponentConverter()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#a43bd59f98902213604a9dfb5471c40d4\">initialize</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; renderItem)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Create the component selection object .. here we are selecting face component</span></div>\n\
<div class=\"line\">        fComponentObject = fComponent.create( <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Build a lookup table to match each primitive position in the index buffer of the render item geometry</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to the correponding face component of the object</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use same algorithm as in updateIndexingForFaces</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// in updateIndexingForFaces the index buffer is allocated with &quot;numTriangleVertices = 3*numTriangles&quot;</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// but since we are drawing triangles, we&#39;ll get only a third of the data as primitive positions :</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// indices 0, 1 &amp; 2 : primitive #0</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// indices 3, 4 &amp; 5 : primitive #1</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ...</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> selectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast&lt;&gt;(renderItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(selectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            apiMeshGeom* meshGeom = selectionData-&gt;fMeshGeom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// isolate selection</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> isolateSelect = renderItem.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca74a11ff6a5082cd01e8a952a7cf198\">isIsolateSelectCopy</a>();</div>\n\
<div class=\"line\">            std::unique_ptr&lt;bool[]&gt; enableFaces(<span class=\"keyword\">nullptr</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (isolateSelect)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                enableFaces.reset(<span class=\"keyword\">new</span> <span class=\"keywordtype\">bool</span>[meshGeom-&gt;faceCount]);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; meshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    enableFaces[i] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent(renderItem.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#af2cf56c078dcc016695e00ffad239238\">shadingComponent</a>());</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceIds;</div>\n\
<div class=\"line\">                    fnComponent.getElements(faceIds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; faceIds.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">int</span> faceId = faceIds[i];</div>\n\
<div class=\"line\">                        enableFaces[faceId] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Allocate faces lookup table</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!isolateSelect || enableFaces[i])</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            numTriangles += numVerts - 2;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                fFaces.resize(numTriangles);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Fill faces lookup table</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!isolateSelect || enableFaces[faceIdx])</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            fFaces[idx++] = faceIdx;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aeb25b60515cb3943231004fe1e363df3\">addIntersection</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MHWRender::MIntersection</a>&amp; intersection)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// index buffer, to the correct face component</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> rawIdx = intersection.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#a9e17f5cf2ecb7faad99d1d6fd2856dbc\">index</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(rawIdx &gt;= 0 &amp;&amp; rawIdx &lt; (<span class=\"keywordtype\">int</span>)fFaces.size())</div>\n\
<div class=\"line\">            idx = fFaces[rawIdx];</div>\n\
<div class=\"line\">        fComponent.addElement(idx);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#ad506603f129f6876b4f8c03ffe0b0b36\">component</a>()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Return the component object that contains the ids of the selected faces</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> fComponentObject;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html#aaa36eb1ffbfba344bcbcf291834e0c7f\">selectionMask</a>()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// This converter is only valid for face selection</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> MPxComponentConverter* creator()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> meshFaceComponentConverter();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fComponent;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fComponentObject;</div>\n\
<div class=\"line\">    std::vector&lt;int&gt; fFaces;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sWireframeItemName = <span class=\"stringliteral\">&quot;apiMeshWire&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sShadedTemplateItemName = <span class=\"stringliteral\">&quot;apiMeshShadedTemplateWire&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sSelectedWireframeItemName = <span class=\"stringliteral\">&quot;apiMeshSelectedWireFrame&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sVertexItemName = <span class=\"stringliteral\">&quot;apiMeshVertices&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sActiveVertexItemName = <span class=\"stringliteral\">&quot;apiMeshActiveVertices&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sVertexIdItemName = <span class=\"stringliteral\">&quot;apiMeshVertexIds&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sVertexPositionItemName = <span class=\"stringliteral\">&quot;apiMeshVertexPositions&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sShadedModeFaceCenterItemName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterInShadedMode&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sWireframeModeFaceCenterItemName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterInWireframeMode&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sShadedProxyItemName = <span class=\"stringliteral\">&quot;apiShadedProxy&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sAffectedEdgeItemName = <span class=\"stringliteral\">&quot;apiMeshAffectedEdges&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sAffectedFaceItemName = <span class=\"stringliteral\">&quot;apiMeshAffectedFaces&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sEdgeSelectionItemName = <span class=\"stringliteral\">&quot;apiMeshEdgeSelection&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sFaceSelectionItemName = <span class=\"stringliteral\">&quot;apiMeshFaceSelection&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sActiveVertexStreamName = <span class=\"stringliteral\">&quot;apiMeshSharedVertexStream&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshGeometryOverride::sFaceCenterStreamName = <span class=\"stringliteral\">&quot;apiMeshFaceCenterStream&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiMeshGeometryOverride::apiMeshGeometryOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">: MPxGeometryOverride(obj)</div>\n\
<div class=\"line\">, fMesh(NULL)</div>\n\
<div class=\"line\">, fMeshGeom(NULL)</div>\n\
<div class=\"line\">, fColorRemapTexture(NULL)</div>\n\
<div class=\"line\">, fLinearSampler(NULL)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// get the real apiMesh object from the MObject</span></div>\n\
<div class=\"line\">    <a name=\"_a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> node(obj, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fMesh = <span class=\"keyword\">dynamic_cast&lt;</span>apiMesh*<span class=\"keyword\">&gt;</span>(node.userNode());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fDrawSharedActiveVertices = <span class=\"keyword\">true</span>; <span class=\"comment\">// false;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fDrawFaceCenters = <span class=\"keyword\">true</span>; <span class=\"comment\">// false;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Turn on to view active vertices with colours lookedup from a 1D texture.</span></div>\n\
<div class=\"line\">    fDrawActiveVerticesWithRamp = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fDrawActiveVerticesWithRamp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fDrawFaceCenters = <span class=\"keyword\">false</span>; <span class=\"comment\">// Too cluttered showing the face centers at the same time.</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Can set the following to true, but then the logic to</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// determine what color to set is the responsibility of the plugin.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    fUseCustomColors = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Can change this to choose a different shader to use when</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// no shader node is assigned to the object.</span></div>\n\
<div class=\"line\">    fProxyShader = </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Uncommenting one of the following will result in a different line</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// shader to be used. Note that color-per-vertex (CPV) is provided in populateGeometry()</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to handle shaders which have this geometry requirement.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// -1 // Use this to indicate to later code that we want to use a built in fragment shader</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dSolidShader // - Basic line shader</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dStippleShader // - For filled stipple faces (triangles)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dThickLineShader // For thick solid colored lines</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dCPVThickLineShader // For thick colored lines. Black if no CPV</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dDashLineShader // - For dashed solid color lines</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dCPVDashLineShader //- For dashed coloured lines. Black if no CPV</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MHWRender::MShaderManager::k3dThickDashLineShader // For thick dashed solid color lines. black if no cpv</span></div>\n\
<div class=\"line\">        <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a676c4699276c331bad328795d29dfef7\">MHWRender::MShaderManager::k3dCPVThickDashLineShader</a> <span class=\"comment\">//- For thick, dashed and coloured lines</span></div>\n\
<div class=\"line\">    ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set to true to test that overriding internal items has no effect</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for shadows and effects overrides</span></div>\n\
<div class=\"line\">    fInternalItems_NoShadowCast = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fInternalItems_NoShadowReceive = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fInternalItems_NoPostEffects = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Use the existing shadow casts / receives flags on the shape</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to drive settings for applicable render items.</span></div>\n\
<div class=\"line\">    fExternalItems_NoShadowCast = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fExternalItems_NoShadowReceive = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fExternalItemsNonTri_NoShadowCast = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fExternalItemsNonTri_NoShadowReceive = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set to true to ignore post-effects for wireframe items.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Shaded items will still have effects applied.</span></div>\n\
<div class=\"line\">    fExternalItems_NoPostEffects = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    fExternalItemsNonTri_NoPostEffects = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiMeshGeometryOverride::~apiMeshGeometryOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fMesh = NULL;</div>\n\
<div class=\"line\">    fMeshGeom = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fColorRemapTexture)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">        <a name=\"_a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html\">MHWRender::MTextureManager</a>* textureMgr = renderer ? renderer-&gt;<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aa3f2ec2984800e2cd8ea09b4ad9f072e\">getTextureManager</a>() : NULL;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (textureMgr) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            textureMgr-&gt;<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html#a82d198d9b895a67d774077d67073d22a\">releaseTexture</a>(fColorRemapTexture);</div>\n\
<div class=\"line\">            fColorRemapTexture = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fLinearSampler)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a1024724a856ce82cecfaf79bc0c6d6c4\">MHWRender::MStateManager::releaseSamplerState</a>(fLinearSampler);</div>\n\
<div class=\"line\">        fLinearSampler = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MHWRender::DrawAPI apiMeshGeometryOverride::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// this plugin supports both GL and DX</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MHWRender::kOpenGL | MHWRender::kDirectX11 | MHWRender::kOpenGLCoreProfile);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateDG()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Pull the actual outMesh from the shape, as well</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// as any active components</span></div>\n\
<div class=\"line\">    fActiveVertices.clear();</div>\n\
<div class=\"line\">    fActiveVerticesSet.clear();</div>\n\
<div class=\"line\">    fActiveEdgesSet.clear();</div>\n\
<div class=\"line\">    fActiveFacesSet.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fMesh)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fMeshGeom = fMesh-&gt;meshGeomToUse();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fMesh-&gt;hasActiveComponents())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> activeComponents = fMesh-&gt;activeComponents();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeComponents.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent( activeComponents[0] );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fnComponent.elementCount())</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> activeIds;</div>\n\
<div class=\"line\">                    fnComponent.getElements( activeIds );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        fActiveVertices = activeIds;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                            fActiveVerticesSet.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a95aaff2c93e48e4da000d79e8324c714\">insert</a>( activeIds[i] );</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a>)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                            fActiveEdgesSet.insert( activeIds[i] );</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                            fActiveFacesSet.insert( activeIds[i] );</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Some example code to print out shader parameters</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::printShader(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shader)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//writeEffectSourceToFile supports all platforms. This demo is only windows, so the filePath should be modified on other platforms such as MaxOS and Linux.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filePath = <span class=\"stringliteral\">&quot;d:\\\\dumpshader.fx&quot;</span>;</div>\n\
<div class=\"line\">    shader-&gt;<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#afcbf6a45dfeef2b89b6017448c1309ac\">writeEffectSourceToFile</a>(filePath);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> params;</div>\n\
<div class=\"line\">    shader-&gt;<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aec00be694fc8d654f1f7a8ea823a7cea\">parameterList</a>(params);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numParams = params.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;DEBUGGING SHADER, BEGIN PARAM LIST OF LENGTH %d\\n&quot;</span>, numParams);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;numParams; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;ParamName=&#39;%s&#39;, ParamType=&quot;</span>, params[i].asChar());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (shader-&gt;<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a53412fe64ba3d9d8434c09e6e07b6011\">parameterType</a>(params[i]))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a94dd08feda7b2cf0ff8262312c4fcc09\">MHWRender::MShaderInstance::kInvalid</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Invalid&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a8cfc0ab572a96edfc9db7c02f0d025d7\">MHWRender::MShaderInstance::kBoolean</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Boolean&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0aa1acc5720dd4e85ceea5578a6cf14ae6\">MHWRender::MShaderInstance::kInteger</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Integer&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a5686197bafb177bdc82550848416a1ad\">MHWRender::MShaderInstance::kFloat</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a615a014b3454583f793180280757d285\">MHWRender::MShaderInstance::kFloat2</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float2&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a2f329aadf08637405a63cee5369fd28d\">MHWRender::MShaderInstance::kFloat3</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float3&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0af21770dc86a3877076e2d58842291ca4\">MHWRender::MShaderInstance::kFloat4</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float4&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a2242133aaee8fd15dbb632825bc4226e\">MHWRender::MShaderInstance::kFloat4x4Row</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float4x4Row&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a706b60512c7f5ba8200df461b672d905\">MHWRender::MShaderInstance::kFloat4x4Col</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Float4x4Col&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a0211e7902fa531fb032e5b40a4b31666\">MHWRender::MShaderInstance::kTexture1</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;1D Texture&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a9f41a2c609a9a7104e4d0c869d8fd2e7\">MHWRender::MShaderInstance::kTexture2</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;2D Texture&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a96966e9616f0f92c86a62f9ef1cf7640\">MHWRender::MShaderInstance::kTexture3</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;3D Texture&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0ada96c2ae4db83bf803b3e75731d574b3\">MHWRender::MShaderInstance::kTextureCube</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Cube Texture&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a4d63980e4031b0fc366e623868b27ed0a754585b88bea58243b903b023e1594f0\">MHWRender::MShaderInstance::kSampler</a>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Sampler&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&#39;Unknown&#39;, &quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;IsArrayParameter=&#39;%s&#39;\\n&quot;</span>, shader-&gt;<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a5986e0e2979770ecb23a3ed60f1d3a3e\">isArrayParameter</a>(params[i]) ? <span class=\"stringliteral\">&quot;YES&quot;</span> : <span class=\"stringliteral\">&quot;NO&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    printf(<span class=\"stringliteral\">&quot;END PARAM LIST\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Set the solid color for solid color shaders</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::setSolidColor(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shaderInstance, <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *value)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> colorParameterName = <span class=\"stringliteral\">&quot;solidColor&quot;</span>;</div>\n\
<div class=\"line\">    shaderInstance-&gt;<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(colorParameterName, value);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Set the point size for solid color shaders</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::setSolidPointSize(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shaderInstance, <span class=\"keywordtype\">float</span> pointSize)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSizeArray[2] = {pointSize, pointSize};</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pointSizeParameterName = <span class=\"stringliteral\">&quot;pointSize&quot;</span>;</div>\n\
<div class=\"line\">    shaderInstance-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>( pointSizeParameterName, pointSizeArray );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Set the line width for solid color shaders</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::setLineWidth(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shaderInstance, <span class=\"keywordtype\">float</span> lineWidth)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderInstance)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> lineWidthArray[2] = {lineWidth, lineWidth};</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> lineWidthParameterName = <span class=\"stringliteral\">&quot;lineWidth&quot;</span>;</div>\n\
<div class=\"line\">    shaderInstance-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>( lineWidthParameterName, lineWidthArray );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Update render items for dormant and template wireframe drawing.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    1) If the object is dormant and not templated then we require</span></div>\n\
<div class=\"line\"><span class=\"comment\">    a render item to display when wireframe drawing is required (display modes</span></div>\n\
<div class=\"line\"><span class=\"comment\">    is wire or wire-on-shaded)</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    2a) If the object is templated then we use the same render item as in 1)</span></div>\n\
<div class=\"line\"><span class=\"comment\">    when in wireframe drawing is required.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    2b) However we also require a render item to display when in shaded mode.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateDormantAndTemplateWireframeItems(</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a name=\"_a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Stock colors</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> dormantColor[] = { 0.0f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> templateColor[] = { 0.45f, 0.45f, 0.45f, 1.0f };</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> activeTemplateColor[] = { 1.0f, 0.5f, 0.5f, 1.0f };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Some local options to show debug interface</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> debugShader = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> shadedDrawMode = <a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1e\">MHWRender::MGeometry::Primitive</a> primitive = <a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get render item used for draw in wireframe mode</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// (Mode to draw in is MHWRender::MGeometry::kWireframe)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* wireframeItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sWireframeItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireframeItem = <a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sWireframeItemName,</div>\n\
<div class=\"line\">            <a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            primitive);</div>\n\
<div class=\"line\">        wireframeItem-&gt;<a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a62a997a862929eb62b0273d1db9e8e0d\">MHWRender::MGeometry::kWireframe</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set dormant wireframe with appropriate priority to not clash with</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// any active wireframe which may overlap in depth.</span></div>\n\
<div class=\"line\">        wireframeItem-&gt;<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6915079c9389d5b9354d5b40fb8112ca\">MHWRender::MRenderItem::sDormantWireDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(wireframeItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MHWRender::MShaderManager::k3dSolidShader</a>,</div>\n\
<div class=\"line\">            debugShader ? apiMeshPreDrawCallback : NULL,</div>\n\
<div class=\"line\">            debugShader ? apiMeshPostDrawCallback : NULL);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// assign shader</span></div>\n\
<div class=\"line\">            wireframeItem-&gt;<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// sample debug code</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugShader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printShader( shader );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireframeItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get render item for handling mode shaded template drawing</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* shadedTemplateItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index2 = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sShadedTemplateItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index2 &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shadedTemplateItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sShadedTemplateItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            primitive);</div>\n\
<div class=\"line\">        shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MHWRender::MGeometry::DrawMode</a>) shadedDrawMode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set shaded item as being dormant wire since it should still be raised</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// above any shaded items, but not as high as active items.</span></div>\n\
<div class=\"line\">        shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6915079c9389d5b9354d5b40fb8112ca\">MHWRender::MRenderItem::sDormantWireDepthPriority</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(shadedTemplateItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MHWRender::MShaderManager::k3dSolidShader</a>,</div>\n\
<div class=\"line\">            NULL, NULL);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// assign shader</span></div>\n\
<div class=\"line\">            shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// sample debug code</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugShader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printShader( shader );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shadedTemplateItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index2);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Sample code to disable cast, receives shadows, and post effects.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItemsNonTri_NoShadowCast)</div>\n\
<div class=\"line\">        shadedTemplateItem-&gt;<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItemsNonTri_NoShadowReceive)</div>\n\
<div class=\"line\">        shadedTemplateItem-&gt;<a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItemsNonTri_NoPostEffects)</div>\n\
<div class=\"line\">        shadedTemplateItem-&gt;<a name=\"a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">        <a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor = <a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable / disable wireframe item and update the shader parameters</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (wireframeItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = wireframeItem-&gt;<a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (displayStatus) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : templateColor);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            wireframeItem-&gt;<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActiveTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : activeTemplateColor );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            wireframeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kDormant:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : dormantColor);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            wireframeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActiveAffected:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.5f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : theColor );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            wireframeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            wireframeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable / disable shaded/template item and update the shader parameters</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isTemplate = path.<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a807efb9e75b38618cc1e7a4feb91f8c3\">isTemplated</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (shadedTemplateItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (displayStatus) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : templateColor );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(isTemplate);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActiveTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : activeTemplateColor );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(isTemplate);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kDormant:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : dormantColor);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(isTemplate);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            shadedTemplateItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create a render item for active wireframe if it does not exist. Updating</span></div>\n\
<div class=\"line\"><span class=\"comment\">    shading parameters as necessary.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateActiveWireframeItem(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list,</div>\n\
<div class=\"line\">                                                        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* selectItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sSelectedWireframeItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sSelectedWireframeItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// This is the same as setting the argument raiseAboveShaded = true,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// since it sets the priority value to be the same. This line is just</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// an example of another way to do the same thing after creation of</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the render item.</span></div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MHWRender::MRenderItem::sActiveWireDepthPriority</a>);</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(selectItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// For active wireframe we will use a shader which allows us to draw thick lines</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> drawThick = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader =</div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>( drawThick ? <a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MHWRender::MShaderManager::k3dThickLineShader</a> : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MHWRender::MShaderManager::k3dSolidShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// assign shader</span></div>\n\
<div class=\"line\">            selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader);</div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shader = selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (displayStatus) {</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> MHWRender::kLead:</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.0f, 0.8f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : theColor );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> MHWRender::kActive:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 1.0f, 1.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : theColor );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> MHWRender::kHilite:</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> MHWRender::kActiveComponent:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.0f, 0.5f, 0.7f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : theColor );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add custom user data to selection item</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">auto</span> myCustomData = ApiMeshUserDataPtr::dynamic_pointer_cast&lt;&gt;(selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!myCustomData)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// create the custom data</span></div>\n\
<div class=\"line\">        myCustomData = ApiMeshUserDataPtr(<span class=\"keyword\">new</span> apiMeshUserData());</div>\n\
<div class=\"line\">        myCustomData-&gt;fMessage = <span class=\"stringliteral\">&quot;I&#39;m custom data!&quot;</span>;</div>\n\
<div class=\"line\">        selectItem-&gt;<a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1c029ea3297c266381dce0c7b042b793\">setCustomData</a>(myCustomData);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// modify the custom data</span></div>\n\
<div class=\"line\">        myCustomData-&gt;fNumModifications++;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create render items for numeric display, and update shaders as necessary</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateVertexNumericItems(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Vertex id item</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* vertexItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sVertexIdItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sVertexIdItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a name=\"a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6a97d386c939e58a3904100bab115700\">MHWRender::MRenderItem::sDormantPointDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(vertexItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use single integer numeric shader</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a0a90693e07c2a229c9a20e03ec0434c5\">MHWRender::MShaderManager::k3dIntegerNumericShader</a> ); <span class=\"comment\">// k3dFloatNumericShader );</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Label the fields so that they can be found later on.</span></div>\n\
<div class=\"line\">            vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, &amp;sVertexIdItemName);</div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 1.0f, 1.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(fEnableNumericDisplay);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Vertex position numeric render item</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* vertexItem2 = NULL;</div>\n\
<div class=\"line\">    index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sVertexPositionItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem2 = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sVertexPositionItemName,</div>\n\
<div class=\"line\">            <a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea9990000c1137c9606135fe45d6b0ef50\">MHWRender::MRenderItem::MaterialSceneItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        vertexItem2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        vertexItem2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6a97d386c939e58a3904100bab115700\">MHWRender::MRenderItem::sDormantPointDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(vertexItem2);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Use triple float numeric shader</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a3675e7b6abbdff83ef97aabd17b0b8af\">MHWRender::MShaderManager::k3dFloat3NumericShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//vertexItem2-&gt;setShader(shader);</span></div>\n\
<div class=\"line\">            vertexItem2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, &amp;sVertexPositionItemName);</div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem2 = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexItem2)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = vertexItem2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.0f, 1.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        vertexItem2-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(fEnableNumericDisplay);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create a render item for dormant vertices if it does not exist. Updating</span></div>\n\
<div class=\"line\"><span class=\"comment\">    shading parameters as necessary.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateDormantVerticesItem(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* vertexItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sVertexItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sVertexItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set draw mode to kAll : the item will be visible in the viewport and also during viewport 2.0 selection</span></div>\n\
<div class=\"line\">        vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the selection mask to kSelectMeshVerts : we want the render item to be used for Vertex Components selection</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> vertexAndGravity(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">        vertexAndGravity.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\">        vertexItem-&gt;<a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( vertexAndGravity );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority higher than wireframe and shaded render items,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// but lower than active points.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Raising higher than wireframe will make them not seem embedded into the surface</span></div>\n\
<div class=\"line\">        vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6a97d386c939e58a3904100bab115700\">MHWRender::MRenderItem::sDormantPointDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(vertexItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a6790e2efa2fa44e937ae5f9986c27e38\">MHWRender::MShaderManager::k3dFatPointShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set the point size parameter</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSize = 3.0f;</div>\n\
<div class=\"line\">            setSolidPointSize( shader, pointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// assign shader</span></div>\n\
<div class=\"line\">            vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.0f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Generally if the display status is hilite then we</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// draw components.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStatus == MHWRender::kHilite || pointSnappingActive())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// In case the object is templated</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// we will hide the components to be consistent</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// with how internal objects behave.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a807efb9e75b38618cc1e7a4feb91f8c3\">isTemplated</a>())</div>\n\
<div class=\"line\">                vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> mySelectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast&lt;&gt;(vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!mySelectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// create the custom data</span></div>\n\
<div class=\"line\">            mySelectionData = ApiMeshHWSelectionUserDataPtr(<span class=\"keyword\">new</span> apiMeshHWSelectionUserData());</div>\n\
<div class=\"line\">            vertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1c029ea3297c266381dce0c7b042b793\">setCustomData</a>(mySelectionData);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// update the custom data</span></div>\n\
<div class=\"line\">        mySelectionData-&gt;fMeshGeom = fMeshGeom;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create a render item for active vertices if it does not exist. Updating</span></div>\n\
<div class=\"line\"><span class=\"comment\">    shading parameters as necessary.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateActiveVerticesItem(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* activeItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sActiveVertexItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        activeItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sActiveVertexItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority to be active point. This should offset it</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to be visible above items with &quot;dormant point&quot; priority.</span></div>\n\
<div class=\"line\">        activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac0ade2503ccc47f3bd487b9ae7bf53e4\">MHWRender::MRenderItem::sActivePointDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(activeItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            fDrawActiveVerticesWithRamp ? <a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8aadfedf6774f59a11bb6f52b8e9cb98e9\">MHWRender::MShaderManager::k3dColorLookupFatPointShader</a> </div>\n\
<div class=\"line\">            : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a6790e2efa2fa44e937ae5f9986c27e38\">MHWRender::MShaderManager::k3dFatPointShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set the point size parameter. Make it slightly larger for active vertices</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSize = 5.0f;</div>\n\
<div class=\"line\">            setSolidPointSize( shader, pointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// 1D Ramp color lookup option</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fDrawActiveVerticesWithRamp )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html\">MHWRender::MTextureManager</a>* textureMgr = renderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aa3f2ec2984800e2cd8ea09b4ad9f072e\">getTextureManager</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Assign dummy ramp lookup</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!fColorRemapTexture)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Sample 3 colour ramp</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> colorArray[12];</div>\n\
<div class=\"line\">                    colorArray[0] = 1.0f; colorArray[1] = 0.0f; colorArray[2] = 0.0f; colorArray[3] = 1.0f;</div>\n\
<div class=\"line\">                    colorArray[4] = 0.0f; colorArray[5] = 1.0f; colorArray[6] = 0.0f; colorArray[7] = 1.0f;</div>\n\
<div class=\"line\">                    colorArray[8] = 0.0f; colorArray[9] = 0.0f; colorArray[10] = 1.0f; colorArray[11] = 1.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> arrayLen = 3;</div>\n\
<div class=\"line\">                    <a name=\"_a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html\">MHWRender::MTextureDescription</a> textureDesc;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#ad1381bd49c9b737ad9e4755ba31fc9fb\">setToDefault2DTexture</a>();</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#a2582291699b63f6ddc938c371b54344e\">fWidth</a> = arrayLen;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#aa3b84951e55674788c9ae0f404a8ee17\">fHeight</a> = 1;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a116\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#accfe55705bc42a1e0375259fdfb5ab15\">fDepth</a> = 1;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a117\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#a45f9eb1cc1e6bf34ccd9839c6ac64b8b\">fBytesPerSlice</a> = textureDesc.<a name=\"a118\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#af5f44f019f03059d0b50fca4b0500c0c\">fBytesPerRow</a> = 24*arrayLen;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a119\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#a943c843873579cb41682ad4befe52a4c\">fMipmaps</a> = 1;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a120\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#ac7f01de9d9624dfac51f8b3f9de86781\">fArraySlices</a> = 1;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a121\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#ad905f7a59df4f73faa690967c4d48bdd\">fTextureType</a> = MHWRender::kImage1D;</div>\n\
<div class=\"line\">                    textureDesc.<a name=\"a122\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_description.html#a970a52e15a6db4682fede9dead7982cc\">fFormat</a> = MHWRender::kR32G32B32A32_FLOAT;;</div>\n\
<div class=\"line\">                    fColorRemapTexture =</div>\n\
<div class=\"line\">                        textureMgr-&gt;<a name=\"a123\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html#a04aa3cfef217948abc8edd0f19565f95\">acquireTexture</a>(<span class=\"stringliteral\">&quot;&quot;</span>, textureDesc, &amp;( colorArray[0] ), <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!fLinearSampler)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a124\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state_desc.html\">MHWRender::MSamplerStateDesc</a> samplerDesc;</div>\n\
<div class=\"line\">                    samplerDesc.<a name=\"a125\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state_desc.html#ac29858bdb9a4bcfb0bc83f6ba10bf77e\">addressU</a> = <a name=\"a126\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state.html#ac06d679b414bf6ad84118e6e9712fd58a6f6620cda8602399b533161e40c15fc3\">MHWRender::MSamplerState::kTexClamp</a>;</div>\n\
<div class=\"line\">                    samplerDesc.<a name=\"a127\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state_desc.html#a84050ce870bec08011b645ee249aa845\">addressV</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state.html#ac06d679b414bf6ad84118e6e9712fd58a6f6620cda8602399b533161e40c15fc3\">MHWRender::MSamplerState::kTexClamp</a>;</div>\n\
<div class=\"line\">                    samplerDesc.<a name=\"a128\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state_desc.html#a7644f0579397d01aaf922218f129983f\">addressW</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state.html#ac06d679b414bf6ad84118e6e9712fd58a6f6620cda8602399b533161e40c15fc3\">MHWRender::MSamplerState::kTexClamp</a>;</div>\n\
<div class=\"line\">                    samplerDesc.<a name=\"a129\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state_desc.html#a0280d6ae8821c595d0300d0e65ca5adf\">filter</a> = <a name=\"a130\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sampler_state.html#ac4b92e6b8c820ded95490092f8bfff74acfbcff8a89a15e685607e83819784d80\">MHWRender::MSamplerState::kMinMagMipLinear</a>;</div>\n\
<div class=\"line\">                    fLinearSampler = <a name=\"a131\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a6277961291d22bd82a852c0b9c905570\">MHWRender::MStateManager::acquireSamplerState</a>(samplerDesc);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fColorRemapTexture &amp;&amp; fLinearSampler)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Set up the ramp lookup</span></div>\n\
<div class=\"line\">                    <a name=\"_a132\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_texture_assignment.html\">MHWRender::MTextureAssignment</a> texAssignment;</div>\n\
<div class=\"line\">                    texAssignment.<a name=\"a133\"></a>texture = fColorRemapTexture;</div>\n\
<div class=\"line\">                    shader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;map&quot;</span>, texAssignment);</div>\n\
<div class=\"line\">                    shader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;samp&quot;</span>, *fLinearSampler);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// No remapping. The initial data created in the range 0...1</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <a name=\"_a134\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> rampValueRange(0.0f, 1.0f);</div>\n\
<div class=\"line\">                    shader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;UVRange&quot;</span>, (<span class=\"keywordtype\">float</span>*)&amp;rampValueRange);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Assign shader. Use a named stream if we want to supply a different</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// set of &quot;shared&quot; vertices for drawing active vertices</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fDrawSharedActiveVertices)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, &amp;sActiveVertexStreamName );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, NULL);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        activeItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (activeItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set active color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 1.0f, 1.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> enable = (fActiveVerticesSet.size() &gt; 0 &amp;&amp; enableActiveComponentDisplay(path));</div>\n\
<div class=\"line\">        activeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>( enable );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//Add render item for face centers in wireframe mode, always show face centers in wireframe mode except it is drawn as template.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateWireframeModeFaceCenterItem(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* wireframeModeFaceCenterItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sWireframeModeFaceCenterItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireframeModeFaceCenterItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sWireframeModeFaceCenterItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        wireframeModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a62a997a862929eb62b0273d1db9e8e0d\">MHWRender::MGeometry::kWireframe</a>);</div>\n\
<div class=\"line\">        wireframeModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MHWRender::MRenderItem::sActiveWireDepthPriority</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(wireframeModeFaceCenterItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            MHWRender::MShaderManager::k3dFatPointShader );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set the point size parameter. Make it slightly larger for face centers</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSize = 5.0f;</div>\n\
<div class=\"line\">            setSolidPointSize( shader, pointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            wireframeModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, &amp;sFaceCenterStreamName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireframeModeFaceCenterItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (wireframeModeFaceCenterItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = wireframeModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set face center color in wireframe mode</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 0.0f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">//disable the face center item when template</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> isTemplate = path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a807efb9e75b38618cc1e7a4feb91f8c3\">isTemplated</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(isTemplate)</div>\n\
<div class=\"line\">            wireframeModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//Add render item for face centers in shaded mode. If the geometry is not selected, face centers are not drawn.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateShadedModeFaceCenterItem(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> shadedDrawMode =</div>\n\
<div class=\"line\">        <a name=\"a135\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MHWRender::MGeometry::kShaded</a> | <a name=\"a136\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MHWRender::MGeometry::kTextured</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* shadedModeFaceCenterItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sShadedModeFaceCenterItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shadedModeFaceCenterItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sShadedModeFaceCenterItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MHWRender::MGeometry::DrawMode</a>)shadedDrawMode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac0ade2503ccc47f3bd487b9ae7bf53e4\">MHWRender::MRenderItem::sActivePointDepthPriority</a>);</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(shadedModeFaceCenterItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            MHWRender::MShaderManager::k3dFatPointShader );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set the point size parameter. Make it slightly larger for face centers</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSize = 5.0f;</div>\n\
<div class=\"line\">            setSolidPointSize( shader, pointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, &amp;sFaceCenterStreamName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shadedModeFaceCenterItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (shadedModeFaceCenterItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        MHWRender::DisplayStatus displayStatus = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(path);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set face center color in shaded mode</span></div>\n\
<div class=\"line\">            setSolidColor( shader, &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>(displayStatus){</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActive:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kLead:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActiveComponent:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kLive:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kHilite:</div>\n\
<div class=\"line\">            shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            shadedModeFaceCenterItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Test to see if active components should be enabled.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Based on active vertices + non-template state</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshGeometryOverride::enableActiveComponentDisplay(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> enable = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If there are components then we need to check</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// either the display status of the object, or</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// in the case of a templated object make sure</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to hide components to be consistent with how</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// internal objects behave</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((displayStatus != MHWRender::kHilite) &amp;&amp;</div>\n\
<div class=\"line\">        (displayStatus != MHWRender::kActiveComponent))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        enable = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Do an explicit path test for templated</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// since display status does not indicate this.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a807efb9e75b38618cc1e7a4feb91f8c3\">isTemplated</a>())</div>\n\
<div class=\"line\">            enable = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> enable;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Example of adding in items to hilite edges and faces. In this</span></div>\n\
<div class=\"line\"><span class=\"comment\">    case these are edges and faces which are connected to vertices</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and we thus call them &quot;affected&quot; components.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateAffectedComponentItems(</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Create / update &quot;affected/active&quot; edges component render item.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* componentItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sAffectedEdgeItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        componentItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sAffectedEdgeItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority to be active line so that it is above wireframe</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// but below dormant and active points.</span></div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a137\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2ef0afa87b031ef0f0091e79eb81313a\">MHWRender::MRenderItem::sActiveLineDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(componentItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MHWRender::MShaderManager::k3dThickLineShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Assign shader.</span></div>\n\
<div class=\"line\">            componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, NULL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        componentItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (componentItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set lines a bit thicker to stand out</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> lineSize = 1.0f;</div>\n\
<div class=\"line\">            setLineWidth( shader, lineSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Set affected color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 1.0f, 1.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> enable = ((fActiveVerticesSet.size() &gt; 0 || fActiveEdgesSet.size() &gt; 0) &amp;&amp; enableActiveComponentDisplay(path));</div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>( enable );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create / update &quot;affected/active&quot; faces component render item</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    componentItem = NULL;</div>\n\
<div class=\"line\">    index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sAffectedFaceItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        componentItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sAffectedFaceItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a name=\"a138\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a>);</div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority to be dormant wire so that edge and vertices</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// show on top.</span></div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6915079c9389d5b9354d5b40fb8112ca\">MHWRender::MRenderItem::sDormantWireDepthPriority</a> );</div>\n\
<div class=\"line\">        <span class=\"comment\">// Allow render item copies to be created for isolate selected component</span></div>\n\
<div class=\"line\">        componentItem-&gt;<a name=\"a139\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a38237a165d430cd9685af1fbff4e20a6\">setAllowIsolateSelectCopy</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(componentItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a140\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a518e62fcc2b4a0aa90d47a436b245905\">MHWRender::MShaderManager::k3dStippleShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Assign shader.</span></div>\n\
<div class=\"line\">            componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, NULL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        componentItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (componentItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set affected color</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> theColor[] = { 1.0f, 1.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">            setSolidColor( shader, theColor);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> enable = ((fActiveVerticesSet.size() &gt; 0 || fActiveFacesSet.size() &gt; 0) &amp;&amp; enableActiveComponentDisplay(path));</div>\n\
<div class=\"line\">        componentItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>( enable );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Example of adding in items for edges and faces selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    For the vertex selection, we already have a render item that display all the vertices (sVertexItemName)</span></div>\n\
<div class=\"line\"><span class=\"comment\">    we could use it for the selection as well.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    </span></div>\n\
<div class=\"line\"><span class=\"comment\">    But we have none that display the complete edges or faces,</span></div>\n\
<div class=\"line\"><span class=\"comment\">    sAffectedEdgeItemName and sAffectedFaceItemName only display a subset of the edges and faces</span></div>\n\
<div class=\"line\"><span class=\"comment\">    that are active or affected (one of their vertices is selected).</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    In order to be able to perform the selection of this components we&#39;ll create new render items</span></div>\n\
<div class=\"line\"><span class=\"comment\">    that will only be used for the selection (they will not be visible in the viewport)</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateSelectionComponentItems(</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Create / update selection edges component render item.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* selectionItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sEdgeSelectionItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sEdgeSelectionItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set draw mode to kSelectionOnly: </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//    - the item will only be visible in viewport 2.0 selection</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a name=\"a141\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3b28d66a728ec358f3aae323b2c24fa9\">MHWRender::MGeometry::kSelectionOnly</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the selection mask to kSelectMeshEdges : we want the render item to be used for Edge Components selection</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority to be selection so that it is above everything</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a name=\"a142\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#abf0686a71845159b7a473312fe05044a\">MHWRender::MRenderItem::sSelectionDepthPriority</a> );</div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(selectionItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MHWRender::MShaderManager::k3dThickLineShader</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Assign shader.</span></div>\n\
<div class=\"line\">            selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, NULL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (selectionItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> mySelectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast&lt;&gt;(selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!mySelectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// create the custom data</span></div>\n\
<div class=\"line\">            mySelectionData = ApiMeshHWSelectionUserDataPtr(<span class=\"keyword\">new</span> apiMeshHWSelectionUserData());</div>\n\
<div class=\"line\">            selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1c029ea3297c266381dce0c7b042b793\">setCustomData</a>(mySelectionData);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// update the custom data</span></div>\n\
<div class=\"line\">        mySelectionData-&gt;fMeshGeom = fMeshGeom;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create / update selection faces component render item.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sFaceSelectionItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sFaceSelectionItemName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MHWRender::MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set draw mode to kSelectionOnly: </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//    - the item will only be visible in viewport 2.0 selection</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3b28d66a728ec358f3aae323b2c24fa9\">MHWRender::MGeometry::kSelectionOnly</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the selection mask to kSelectMeshFaces : we want the render item to be used for Face Components selection</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set depth priority to be selection so that it is above everything</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#abf0686a71845159b7a473312fe05044a\">MHWRender::MRenderItem::sSelectionDepthPriority</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Allow render item copies to be created for isolate selected component</span></div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a38237a165d430cd9685af1fbff4e20a6\">setAllowIsolateSelectCopy</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(selectionItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            MHWRender::MShaderManager::k3dSolidShader );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Assign shader.</span></div>\n\
<div class=\"line\">            selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader, NULL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (selectionItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">auto</span> mySelectionData = ApiMeshHWSelectionUserDataPtr::dynamic_pointer_cast(selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!mySelectionData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// create the custom data</span></div>\n\
<div class=\"line\">            mySelectionData = ApiMeshHWSelectionUserDataPtr(<span class=\"keyword\">new</span> apiMeshHWSelectionUserData());</div>\n\
<div class=\"line\">            selectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1c029ea3297c266381dce0c7b042b793\">setCustomData</a>(mySelectionData);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// update the custom data</span></div>\n\
<div class=\"line\">        mySelectionData-&gt;fMeshGeom = fMeshGeom;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    In the event there are no shaded items we create a proxy</span></div>\n\
<div class=\"line\"><span class=\"comment\">    render item so we can still see where the object is.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateProxyShadedItem(</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Stock colors</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> dormantColor[] = { 0.0f, 0.0f, 1.0f, 1.0f };</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> templateColor[] = { 0.45f, 0.45f, 0.45f, 1.0f };</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> activeTemplateColor[] = { 1.0f, 0.5f, 0.5f, 1.0f };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note that we still want to raise it above shaded even though</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// we don&#39;t have a shaded render item for this override.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This will handle in case where there is another shaded object</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// which overlaps this object in depth</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> raiseAboveShaded = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> shadedDrawMode =</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MHWRender::MGeometry::kShaded</a> | <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MHWRender::MGeometry::kTextured</a>;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Mark proxy item as wireframe if not using a material shader</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> useFragmentShader = fProxyShader &lt; 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !useFragmentShader )</div>\n\
<div class=\"line\">        shadedDrawMode |= <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a62a997a862929eb62b0273d1db9e8e0d\">MHWRender::MGeometry::kWireframe</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fragment + stipple shaders required triangles. All others</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// in the possible list requires lines</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1e\">MHWRender::MGeometry::Primitive</a> primitive = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> filledProxy = ( useFragmentShader</div>\n\
<div class=\"line\">                        ||</div>\n\
<div class=\"line\">                        ( fProxyShader == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a518e62fcc2b4a0aa90d47a436b245905\">MHWRender::MShaderManager::k3dStippleShader</a> ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (filledProxy)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        primitive = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* proxyItem = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> index = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a4cfe9fc51a24bca06d2619a55542f689\">indexOf</a>(sShadedProxyItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (index &lt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        proxyItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MHWRender::MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sShadedProxyItemName,</div>\n\
<div class=\"line\">            filledProxy ? <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea9990000c1137c9606135fe45d6b0ef50\">MHWRender::MRenderItem::MaterialSceneItem</a> : <a name=\"a143\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea051cc5c371043b627d1d7bee0d06e030\">MHWRender::MRenderItem::NonMaterialSceneItem</a>,</div>\n\
<div class=\"line\">            primitive);</div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MHWRender::MGeometry::DrawMode</a>) shadedDrawMode);</div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>( raiseAboveShaded</div>\n\
<div class=\"line\">            ? <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MHWRender::MRenderItem::sActiveWireDepthPriority</a></div>\n\
<div class=\"line\">            : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6915079c9389d5b9354d5b40fb8112ca\">MHWRender::MRenderItem::sDormantWireDepthPriority</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fExternalItems_NoShadowCast)</div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( fCastsShadows );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fExternalItems_NoShadowReceive)</div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( fReceivesShadows );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fExternalItems_NoPostEffects)</div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a238f55e85f694b4f74535aaedc6ebe01\">append</a>(proxyItem);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// We&#39;ll draw the proxy with a proxy shader as a visual cue</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = NULL;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (useFragmentShader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            shader = shaderMgr-&gt;<a name=\"a144\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a75e397b8d02f3da09024156fe70eed44\">getFragmentShader</a>(<span class=\"stringliteral\">&quot;mayaLambertSurface&quot;</span>, <span class=\"stringliteral\">&quot;outSurfaceFinal&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> sBlue[] = {0.4f, 0.4f, 1.0f};</div>\n\
<div class=\"line\">            shader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;color&quot;</span>, sBlue);</div>\n\
<div class=\"line\">            shader-&gt;<a name=\"a145\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#a6b65d9b284fc376f7f3458b36c29d8a0\">setIsTransparent</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            shader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>( (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8\">MHWRender::MShaderManager::MStockShader</a>)fProxyShader );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!filledProxy)</div>\n\
<div class=\"line\">                setLineWidth(shader, 10.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// assign shader</span></div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(shader);</div>\n\
<div class=\"line\">            <span class=\"comment\">// once assigned, no need to hold on to shader instance</span></div>\n\
<div class=\"line\">            shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        proxyItem = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(index);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// As this is a shaded item it is up to the plug-in to determine</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// on each update how to handle shadowing and effects.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Especially note that shadowing changes on the DAG object will trigger</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// a call to updateRenderItems()</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItems_NoShadowCast)</div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( fCastsShadows );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItems_NoShadowReceive)</div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( fReceivesShadows );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExternalItems_NoPostEffects)</div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check for any shaded render items. A lack of one indicates</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// there is no shader assigned to the object.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> haveShadedItems = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>(); i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a> *item = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(i);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!item)</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MHWRender::MGeometry::DrawMode</a> drawMode = item-&gt;<a name=\"a146\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8992ce85b3fbe5f2df227cb43a20866e\">drawMode</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawMode == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MHWRender::MGeometry::kShaded</a></div>\n\
<div class=\"line\">            || drawMode == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MHWRender::MGeometry::kTextured</a></div>\n\
<div class=\"line\">            )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sShadedTemplateItemName)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                haveShadedItems = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If we are missing shaded render items then enable</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the proxy. Otherwise disable it.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (filledProxy)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If templated then hide filled proxy</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a807efb9e75b38618cc1e7a4feb91f8c3\">isTemplated</a>())</div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(!haveShadedItems);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1e9d2a5708b2231a8e72d22dc3be53fe\">enable</a>(!haveShadedItems);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note that we do not toggle the item on and off just based on</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// display state. If this was so then call to MRenderer::setLightsAndShadowsDirty()</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// would be required as shadow map update does not monitor display state.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (proxyItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* shader = proxyItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa606047c9ccc32d66b93d07327b65be9\">getShader</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span> (displayStatus) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : templateColor);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kActiveTemplate:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : activeTemplateColor );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> MHWRender::kDormant:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (shader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setSolidColor( shader, !fUseCustomColors ? &amp;(wireColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>) : dormantColor);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Update render items. Shaded render item is provided so this</span></div>\n\
<div class=\"line\"><span class=\"comment\">    method will be adding and updating UI render items only.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateRenderItems(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; list)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!renderer) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr = renderer-&gt;<a name=\"a147\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderMgr) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a148\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNode(path);</div>\n\
<div class=\"line\">    <a name=\"_a149\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> castsShadowsPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;castsShadows&quot;</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    fCastsShadows = castsShadowsPlug.<a name=\"a150\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a69b4092a85b4edf58b7d50f331cc38cf\">asBool</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> receiveShadowsPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;receiveShadows&quot;</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    fReceivesShadows = receiveShadowsPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a69b4092a85b4edf58b7d50f331cc38cf\">asBool</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> enableNumericDisplayPlug = dagNode.findPlug(<span class=\"stringliteral\">&quot;enableNumericDisplay&quot;</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    fEnableNumericDisplay = enableNumericDisplayPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a69b4092a85b4edf58b7d50f331cc38cf\">asBool</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update wireframe render items</span></div>\n\
<div class=\"line\">    updateDormantAndTemplateWireframeItems(path, list, shaderMgr);</div>\n\
<div class=\"line\">    updateActiveWireframeItem(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update vertex render items</span></div>\n\
<div class=\"line\">    updateDormantVerticesItem(path, list, shaderMgr);</div>\n\
<div class=\"line\">    updateActiveVerticesItem(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update vertex numeric render items</span></div>\n\
<div class=\"line\">    updateVertexNumericItems(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update face center item</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(fDrawFaceCenters)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        updateWireframeModeFaceCenterItem(path, list, shaderMgr);</div>\n\
<div class=\"line\">        updateShadedModeFaceCenterItem(path, list, shaderMgr);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update &quot;affected&quot; edge and face render items</span></div>\n\
<div class=\"line\">    updateAffectedComponentItems(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update faces and edges selection items</span></div>\n\
<div class=\"line\">    updateSelectionComponentItems(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update proxy shaded render item</span></div>\n\
<div class=\"line\">    updateProxyShadedItem(path, list, shaderMgr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Test overrides on existing shaded items.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// In this case it is not valid to override these states</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so there should be no change in behaviour.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> testShadedOverrides = fInternalItems_NoShadowCast || fInternalItems_NoShadowReceive || fInternalItems_NoPostEffects;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (testShadedOverrides)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a> *item = list.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(i);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!item)</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MHWRender::MGeometry::DrawMode</a> drawMode = item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8992ce85b3fbe5f2df227cb43a20866e\">drawMode</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (drawMode == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MHWRender::MGeometry::kShaded</a></div>\n\
<div class=\"line\">                || drawMode == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MHWRender::MGeometry::kTextured</a></div>\n\
<div class=\"line\">                )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sShadedTemplateItemName</div>\n\
<div class=\"line\">                    <span class=\"comment\">//&amp;&amp; item-&gt;name() != sShadedProxyItemName</span></div>\n\
<div class=\"line\">                    )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fInternalItems_NoShadowCast)</div>\n\
<div class=\"line\">                        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>( fCastsShadows );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fInternalItems_NoShadowReceive)</div>\n\
<div class=\"line\">                        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>( fReceivesShadows );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fInternalItems_NoPostEffects)</div>\n\
<div class=\"line\">                        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Clone a vertex buffer to fulfill a duplicate requirement.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Can happen for effects asking for multiple UV streams by</span></div>\n\
<div class=\"line\"><span class=\"comment\">    name.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::cloneVertexBuffer(</div>\n\
<div class=\"line\">        <a name=\"_a151\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* srcBuffer,</div>\n\
<div class=\"line\">        <a name=\"_a152\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">        <a name=\"_a153\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>&amp; desc,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> bufferSize,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> debugPopulateGeometry)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!srcBuffer)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* destBuffer = data.<a name=\"a154\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (destBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Clone data for active vertex requirement with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                    desc.<a name=\"a155\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                    <a name=\"a156\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a name=\"a157\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span>* destDataBuffer = destBuffer-&gt;<a name=\"a158\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(bufferSize, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span>* srcDataBuffer = srcBuffer-&gt;<a name=\"a159\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#abc9e783c4d7826700a6a6824451f8230\">map</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (srcDataBuffer &amp;&amp; destDataBuffer)</div>\n\
<div class=\"line\">            memcpy(destDataBuffer, srcDataBuffer, bufferSize * desc.<a name=\"a160\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#a064b0aed53f7aa48d27145b41f9590aa\">dataTypeSize</a>() * desc.<a name=\"a161\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#ae5acbe47d704ceb866e3717e2ac9422f\">dimension</a>());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (destDataBuffer)</div>\n\
<div class=\"line\">            destBuffer-&gt;<a name=\"a162\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(destDataBuffer);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        srcBuffer-&gt;<a name=\"a163\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#a1ffeb3b5abb3d61f62b58a391816201c\">unmap</a>(); </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Examine the geometry requirements and create / update the</span></div>\n\
<div class=\"line\"><span class=\"comment\">    appropriate data streams. As render items specify both named and</span></div>\n\
<div class=\"line\"><span class=\"comment\">    unnamed data streams, both need to be handled here.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateGeometryRequirements(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a164\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MHWRender::MGeometryRequirements</a>&amp; requirements,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> activeVertexCount,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> debugPopulateGeometry)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Vertex data</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* positionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* positions = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* vertexNumericIdBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* vertexNumericIds = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* vertexNumericIdPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* vertexNumericIdPositions = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* vertexNumericLocationBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* vertexNumericLocations = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* vertexNumericLocationPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* vertexNumericLocationPositions = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* activeVertexPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* activeVertexPositions = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* activeVertexUVBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* activeVertexUVs = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* faceCenterPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* faceCenterPositions = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* normalBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* normals = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* cpvBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* cpv = NULL;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* uvBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* uvs = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numUVs = fMeshGeom-&gt;uvcoords.uvcount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a165\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html\">MHWRender::MVertexBufferDescriptorList</a>&amp; descList =</div>\n\
<div class=\"line\">        requirements.<a name=\"a166\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html#a960f411f65fde2d97da465a6b276d774\">vertexRequirements</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numVertexReqs = descList.<a name=\"a167\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a> desc;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>* satisfiedRequirements = <span class=\"keyword\">new</span> <span class=\"keywordtype\">bool</span>[numVertexReqs];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> reqNum=0; reqNum&lt;numVertexReqs; reqNum++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        satisfiedRequirements[reqNum] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!descList.<a name=\"a168\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#ab5970217cd80acac6aa900cc1daec6b8\">getDescriptor</a>(reqNum, desc))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill in vertex data for drawing active vertex components (if drawSharedActiveVertices=true)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fDrawSharedActiveVertices &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sActiveVertexStreamName))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a name=\"a169\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!activeVertexPositionBuffer)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        activeVertexPositionBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (activeVertexPositionBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for active vertex requirement[%d] with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                                        reqNum, desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                            activeVertexPositions = (<span class=\"keywordtype\">float</span>*)activeVertexPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(activeVertexCount, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a name=\"a170\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a6de4261b95102b5402b425d62e1bda93\">MHWRender::MGeometry::kTexture</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!activeVertexUVBuffer)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        activeVertexUVBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (activeVertexUVBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for active vertex requirement[%d] with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                                        reqNum, desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                            activeVertexUVs = (<span class=\"keywordtype\">float</span>*)activeVertexUVBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(activeVertexCount, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"comment\">// do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill in vertex data for drawing face center components (if fDrawFaceCenters=true)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (fDrawFaceCenters &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sFaceCenterStreamName))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!faceCenterPositionBuffer)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        faceCenterPositionBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (faceCenterPositionBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for face center requirement[%d] with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                                        reqNum, desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                            faceCenterPositions = (<span class=\"keywordtype\">float</span>*)faceCenterPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(fMeshGeom-&gt;faceCount, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"comment\">// do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill vertex stream data used for dormant vertex, wireframe and shaded drawing.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill also for active vertices if (fDrawSharedActiveVertices=false)</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in data for requirement[%d] with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                    reqNum, desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexIdItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!vertexNumericIdPositionBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            vertexNumericIdPositionBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (vertexNumericIdPositionBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire 1float-numeric position buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                vertexNumericIdPositions = (<span class=\"keywordtype\">float</span>*)vertexNumericIdPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexPositionItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!vertexNumericLocationPositionBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            vertexNumericLocationPositionBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (vertexNumericLocationPositionBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire 3float-numeric position buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                vertexNumericLocationPositions = (<span class=\"keywordtype\">float</span>*)vertexNumericLocationPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly */</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!positionBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            positionBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (positionBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire unnamed position buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                positions = (<span class=\"keywordtype\">float</span>*)positionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a name=\"a171\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a227e8416235cd3b43077ca91504a463f\">MHWRender::MGeometry::kNormal</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!normalBuffer)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        normalBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (normalBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            normals = (<span class=\"keywordtype\">float</span>*)normalBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a6de4261b95102b5402b425d62e1bda93\">MHWRender::MGeometry::kTexture</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> numericValue(<span class=\"stringliteral\">&quot;numericvalue&quot;</span>);</div>\n\
<div class=\"line\">                    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> numeric3Value(<span class=\"stringliteral\">&quot;numeric3value&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Fill in single numeric field</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ((desc.<a name=\"a172\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aec39ee3496166457d1ccdf73c8d1a3b2\">semanticName</a>().<a name=\"a173\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a56fd78fe1cd1bc285cc8c336ed977d7e\">toLowerCase</a>() == numericValue) &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexIdItemName))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!vertexNumericIdBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            vertexNumericIdBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (vertexNumericIdBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire 1float numeric buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                vertexNumericIds = (<span class=\"keywordtype\">float</span>*)vertexNumericIdBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly */</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Fill in triple numeric field</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ((desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aec39ee3496166457d1ccdf73c8d1a3b2\">semanticName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a56fd78fe1cd1bc285cc8c336ed977d7e\">toLowerCase</a>() == numeric3Value) &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexPositionItemName))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!vertexNumericLocationBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            vertexNumericLocationBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (vertexNumericLocationBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire 3float numeric location buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                vertexNumericLocations = (<span class=\"keywordtype\">float</span>*)vertexNumericLocationBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly */</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Fill in uv values</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sVertexIdItemName &amp;&amp;</div>\n\
<div class=\"line\">                             desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sVertexPositionItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!uvBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            uvBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (uvBuffer)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                                    printf(<span class=\"stringliteral\">&quot;Acquire a uv buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">                                uvs = (<span class=\"keywordtype\">float</span>*)uvBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a name=\"a174\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4afc0133ebaa6c307b2388ecf5f72f6fdf\">MHWRender::MGeometry::kColor</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!cpvBuffer)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        cpvBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (cpvBuffer)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            cpv = (<span class=\"keywordtype\">float</span>*)cpvBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"comment\">// do nothing for stuff we don&#39;t understand</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> pid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> nid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uvid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> cid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> j=0; j&lt;numVerts; j++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (positions || vertexNumericIdPositions || </div>\n\
<div class=\"line\">                    vertexNumericLocationPositions || vertexNumericLocations)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a175\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> position = fMeshGeom-&gt;vertices[fMeshGeom-&gt;face_connects[vid]];</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Position used as position</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (positions)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        positions[pid] = (float)position[0];</div>\n\
<div class=\"line\">                        positions[pid+1] = (float)position[1];</div>\n\
<div class=\"line\">                        positions[pid+2] = (float)position[2];</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Move the id&#39;s a bit to avoid overlap. Position used as position.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (vertexNumericIdPositions)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        vertexNumericIdPositions[pid] = (float)(position[0]);</div>\n\
<div class=\"line\">                        vertexNumericIdPositions[pid+1] = (float)(position[1]);</div>\n\
<div class=\"line\">                        vertexNumericIdPositions[pid+2] = (float)(position[2]);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Move the locations a bit to avoid overlap. Position used as position.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (vertexNumericLocationPositions)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        vertexNumericLocationPositions[pid] = (float)(position[0]);</div>\n\
<div class=\"line\">                        vertexNumericLocationPositions[pid+1] = (float)(position[1]);</div>\n\
<div class=\"line\">                        vertexNumericLocationPositions[pid+2] = (float)(position[2]);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Position used as numeric display.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (vertexNumericLocations)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        vertexNumericLocations[pid] = (float)position[0];</div>\n\
<div class=\"line\">                        vertexNumericLocations[pid+1] = (float)position[1];</div>\n\
<div class=\"line\">                        vertexNumericLocations[pid+2] = (float)position[2];</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    pid += 3;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (normals)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a176\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> normal = fMeshGeom-&gt;normals[fMeshGeom-&gt;face_connects[vid]];</div>\n\
<div class=\"line\">                    normals[nid++] = (float)normal[0];</div>\n\
<div class=\"line\">                    normals[nid++] = (float)normal[1];</div>\n\
<div class=\"line\">                    normals[nid++] = (float)normal[2];</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (uvs)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> u = 0.0f;</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> v = 0.0f;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numUVs &gt; 0)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">int</span> uvNum = fMeshGeom-&gt;uvcoords.uvId(vid);</div>\n\
<div class=\"line\">                        fMeshGeom-&gt;uvcoords.getUV(uvNum, u, v);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    uvs[uvid++] = u;</div>\n\
<div class=\"line\">                    uvs[uvid++] = v;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"comment\">// Just same fake colors to show filling in requirements for</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// color-per-vertex (CPV)</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (cpv)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> position = fMeshGeom-&gt;vertices[fMeshGeom-&gt;face_connects[vid]];</div>\n\
<div class=\"line\">                    cpv[cid++] = (float)position[0];</div>\n\
<div class=\"line\">                    cpv[cid++] = (float)position[1];</div>\n\
<div class=\"line\">                    cpv[cid++] = (float)position[2];</div>\n\
<div class=\"line\">                    cpv[cid++] = 1.0f;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"comment\">// Vertex id&#39;s used for numeric display</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (vertexNumericIds)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    vertexNumericIds[vid] = (float)(fMeshGeom-&gt;face_connects[vid]);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                vid++;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (numVerts &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            vid += numVerts;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (positions)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        positionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(positions);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (normals)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        normalBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(normals);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (uvs)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        uvBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(uvs);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cpv)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cpvBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(cpv);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexNumericIds)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexNumericIdBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(vertexNumericIds);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexNumericIdPositions)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexNumericIdPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(vertexNumericIdPositions);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexNumericLocations)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexNumericLocationBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(vertexNumericLocations);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertexNumericLocationPositions)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexNumericLocationPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(vertexNumericLocationPositions);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill in active vertex data buffer (only when fDrawSharedActiveVertices=true</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// which results in activeVertexPositions and activeVertexPositionBuffer being non-NULL)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (activeVertexPositions &amp;&amp; activeVertexPositionBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for active vertex position buffer base on component list\\n&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill in position buffer with positions based on active vertex indexing list</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        pid = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vertexCount = fMeshGeom-&gt;vertices.length(); </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeVertexCount &gt; vertexCount)</div>\n\
<div class=\"line\">            activeVertexCount = vertexCount;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeVertexCount; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = fActiveVertices[i];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (idx &lt; vertexCount)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> position = fMeshGeom-&gt;vertices[ idx ];</div>\n\
<div class=\"line\">                activeVertexPositions[pid++] = (float)position[0];</div>\n\
<div class=\"line\">                activeVertexPositions[pid++] = (float)position[1];</div>\n\
<div class=\"line\">                activeVertexPositions[pid++] = (float)position[2];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        activeVertexPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(activeVertexPositions);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (activeVertexUVs &amp;&amp; activeVertexUVBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for active vertex uv buffer base on component list\\n&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill in position buffer with positions based on active vertex indexing list</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        pid = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeVertexCount &gt; fMeshGeom-&gt;vertices.length())</div>\n\
<div class=\"line\">            activeVertexCount = fMeshGeom-&gt;vertices.length();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeVertexCount; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            activeVertexUVs[pid++] = (float)i/ (<span class=\"keywordtype\">float</span>)activeVertexCount;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        activeVertexUVBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(activeVertexUVs);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill in face center data buffer (only when fDrawFaceCenter=true</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// which results in faceCenterPositions and faceCenterPositionBuffer being non-NULL)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (faceCenterPositions &amp;&amp; faceCenterPositionBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Fill in the data for face center position buffer\\n&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// Fill in face center buffer with positions based on realtime calculations.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        pid = 0;</div>\n\
<div class=\"line\">        vid = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceId=0; faceId &lt; fMeshGeom-&gt;faceCount; faceId++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//tmp variables for calculating the face center position.</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> x = 0.0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> y = 0.0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> z = 0.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> faceCenterPosition;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceId];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (numVerts &gt; 2){</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts; v++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> face_vertex_position = fMeshGeom-&gt;vertices[fMeshGeom-&gt;face_connects[vid]];</div>\n\
<div class=\"line\">                    x += face_vertex_position[0];</div>\n\
<div class=\"line\">                    y += face_vertex_position[1];</div>\n\
<div class=\"line\">                    z += face_vertex_position[2];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    vid++;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                faceCenterPosition[0] = (float)x/numVerts;</div>\n\
<div class=\"line\">                faceCenterPosition[1] = (float)y/numVerts;</div>\n\
<div class=\"line\">                faceCenterPosition[2] = (float)z/numVerts;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                faceCenterPositions[pid++] = (float)faceCenterPosition[0];</div>\n\
<div class=\"line\">                faceCenterPositions[pid++] = (float)faceCenterPosition[1];</div>\n\
<div class=\"line\">                faceCenterPositions[pid++] = (float)faceCenterPosition[2];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(numVerts &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                vid += numVerts;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        faceCenterPositionBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(faceCenterPositions);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Run around a second time and handle duplicate buffers and unknown buffers</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> reqNum=0; reqNum&lt;numVertexReqs; reqNum++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (satisfiedRequirements[reqNum] || !descList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#ab5970217cd80acac6aa900cc1daec6b8\">getDescriptor</a>(reqNum, desc))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fDrawSharedActiveVertices &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sActiveVertexStreamName))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    cloneVertexBuffer(activeVertexPositionBuffer, data, desc, activeVertexCount, debugPopulateGeometry);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a6de4261b95102b5402b425d62e1bda93\">MHWRender::MGeometry::kTexture</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    cloneVertexBuffer(activeVertexUVBuffer, data, desc, activeVertexCount, debugPopulateGeometry);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (fDrawFaceCenters &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sFaceCenterStreamName))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    cloneVertexBuffer(faceCenterPositionBuffer, data, desc, fMeshGeom-&gt;faceCount, debugPopulateGeometry);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexIdItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(vertexNumericIdPositionBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexPositionItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(vertexNumericLocationPositionBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(positionBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a227e8416235cd3b43077ca91504a463f\">MHWRender::MGeometry::kNormal</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    cloneVertexBuffer(normalBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a6de4261b95102b5402b425d62e1bda93\">MHWRender::MGeometry::kTexture</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> numericValue(<span class=\"stringliteral\">&quot;numericvalue&quot;</span>);</div>\n\
<div class=\"line\">                    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> numeric3Value(<span class=\"stringliteral\">&quot;numeric3value&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ((desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aec39ee3496166457d1ccdf73c8d1a3b2\">semanticName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a56fd78fe1cd1bc285cc8c336ed977d7e\">toLowerCase</a>() == numericValue) &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexIdItemName))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(vertexNumericIdBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ((desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aec39ee3496166457d1ccdf73c8d1a3b2\">semanticName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a56fd78fe1cd1bc285cc8c336ed977d7e\">toLowerCase</a>() == numeric3Value) &amp;&amp; (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexPositionItemName))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(vertexNumericLocationBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sVertexIdItemName &amp;&amp;</div>\n\
<div class=\"line\">                             desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>() != sVertexPositionItemName)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        cloneVertexBuffer(uvBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4afc0133ebaa6c307b2388ecf5f72f6fdf\">MHWRender::MGeometry::kColor</a>:</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    satisfiedRequirements[reqNum] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    cloneVertexBuffer(cpvBuffer, data, desc, totalVerts, debugPopulateGeometry);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!satisfiedRequirements[reqNum])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// We have a strange buffer request we do not understand. Provide a set of Zeros sufficient to cover</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// totalVerts:</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* destBuffer = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#acf6369e390e9831c0e180cc60c7db618\">createVertexBuffer</a>(desc);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (destBuffer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Dummy data for active vertex requirement with name %s. Semantic = %s\\n&quot;</span>,</div>\n\
<div class=\"line\">                            desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(),</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar() );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">void</span>* destDataBuffer = destBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (destDataBuffer)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    memset(destDataBuffer, 0, totalVerts * desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#a064b0aed53f7aa48d27145b41f9590aa\">dataTypeSize</a>() * desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#ae5acbe47d704ceb866e3717e2ac9422f\">dimension</a>());</div>\n\
<div class=\"line\">                    destBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(destDataBuffer);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> [] satisfiedRequirements;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing required to draw wireframe render items.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    There can be more than one render item using the same wireframe indexing</span></div>\n\
<div class=\"line\"><span class=\"comment\">    so it is passed in as an argument. If it is not null then we can</span></div>\n\
<div class=\"line\"><span class=\"comment\">    reuse it instead of creating new indexing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForWireframeItems(<a name=\"_a177\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* wireIndexBuffer,</div>\n\
<div class=\"line\">                                                            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Wireframe index buffer is same for both wireframe and selected render item</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so we only compute and allocate it once, but reuse it for both render items</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!wireIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireIndexBuffer = data.<a name=\"a178\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a name=\"a179\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (wireIndexBuffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)wireIndexBuffer-&gt;<a name=\"a180\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(2*totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> first = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;fMeshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        first = vid;</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            buffer[idx++] = vid++;</div>\n\
<div class=\"line\">                            buffer[idx++] = vid;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        buffer[idx++] = vid++;</div>\n\
<div class=\"line\">                        buffer[idx++] = first;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        vid += numVerts;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                wireIndexBuffer-&gt;<a name=\"a181\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Associate same index buffer with either render item</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (wireIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        item-&gt;<a name=\"a182\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(wireIndexBuffer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw dormant vertices</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForDormantVertices(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                              <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(3*numTriangles, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// compute index data for triangulated convex polygons sharing</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// poly vertex data among triangles</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;fMeshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        buffer[idx++] = base;</div>\n\
<div class=\"line\">                        buffer[idx++] = base+v;</div>\n\
<div class=\"line\">                        buffer[idx++] = base+v+1;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    base += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">            item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw active vertices</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForVertices(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles,</div>\n\
<div class=\"line\">                                                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> activeVertexCount,</div>\n\
<div class=\"line\">                                                        <span class=\"keywordtype\">bool</span> debugPopulateGeometry)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// If drawing shared active vertices then the indexing degenerates into</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// a numerically increasing index value. Otherwise a remapping from</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the active vertex list indexing to the unshared position stream is required.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 1. Create indexing for shared positions. In this case it</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// is a degenerate list since the position buffer was created</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// in linear ascending order.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fDrawSharedActiveVertices)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(activeVertexCount, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for shared vertices\\n&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeVertexCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    buffer[i] = i;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// 2. Create indexing to remap to unshared positions</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for unshared vertices\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(3*numTriangles, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;3*numTriangles; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    buffer[i] = 3*numTriangles+1;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> std::set&lt;int&gt;&amp; selectionIdSet = fActiveVerticesSet;</div>\n\
<div class=\"line\">                std::set&lt;int&gt;::const_iterator selectionIdSetIter;</div>\n\
<div class=\"line\">                std::set&lt;int&gt;::const_iterator selectionIdSetIterEnd = selectionIdSet.end();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// compute index data for triangulated convex polygons sharing</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// poly vertex data among triangles</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> lastFound = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;fMeshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> vertexId = fMeshGeom-&gt;face_connects[base];</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( vertexId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                buffer[idx++] = base;</div>\n\
<div class=\"line\">                                lastFound = base;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            vertexId = fMeshGeom-&gt;face_connects[base+v];</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( vertexId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                buffer[idx++] = base+v;</div>\n\
<div class=\"line\">                                lastFound = base+v;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            vertexId = fMeshGeom-&gt;face_connects[base+v+1];</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( vertexId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                buffer[idx++] = base+v+1;</div>\n\
<div class=\"line\">                                lastFound = base+v+1;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        base += numVerts;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;3*numTriangles; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (buffer[i] == 3*numTriangles+1)</div>\n\
<div class=\"line\">                        buffer[i] = lastFound;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw face centers</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForFaceCenters(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data, <span class=\"keywordtype\">bool</span> debugPopulateGeometry)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(fMeshGeom-&gt;faceCount, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;&gt;&gt;&gt; Set up indexing for face centers\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                    buffer[i] = 0;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    buffer[idx] = idx;</div>\n\
<div class=\"line\">                    idx++;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw affected edges</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForEdges(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                      <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts,</div>\n\
<div class=\"line\">                                                      <span class=\"keywordtype\">bool</span> fromSelection)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalEdges = 2*totalVerts;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalEdgesP1 = 2*totalVerts+1;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(totalEdges, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;totalEdges; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                buffer[i] = totalEdgesP1;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayAll = !fromSelection;</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayActives = (!displayAll &amp;&amp; fActiveEdgesSet.size() &gt; 0);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayAffected = (!displayAll &amp;&amp; !displayActives);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> std::set&lt;int&gt;&amp; selectionIdSet = (displayActives ? fActiveEdgesSet : fActiveVerticesSet);</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator selectionIdSetIter;</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator selectionIdSetIterEnd = selectionIdSet.end();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> lastFound = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> edgeId = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;fMeshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts; v++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">bool</span> enableEdge = displayAll;</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vindex1 = base + (v % numVerts);</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vindex2 = base + ((v+1) % numVerts);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span>( displayAffected )</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <span class=\"comment\">// Check either ends of an &quot;edge&quot; to see if the</span></div>\n\
<div class=\"line\">                            <span class=\"comment\">// vertex is in the active vertex list</span></div>\n\
<div class=\"line\">                            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> vertexId = fMeshGeom-&gt;face_connects[vindex1];</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( vertexId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                enableEdge = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                lastFound = vindex1;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (!enableEdge)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexId2 = fMeshGeom-&gt;face_connects[vindex2];</div>\n\
<div class=\"line\">                                selectionIdSetIter = selectionIdSet.find( vertexId2 );</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                                {</div>\n\
<div class=\"line\">                                    enableEdge = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                    lastFound = vindex2;</div>\n\
<div class=\"line\">                                }</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( displayActives )</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <span class=\"comment\">// Check if the edge is active</span></div>\n\
<div class=\"line\">                            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( edgeId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                enableEdge = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                lastFound = vindex1;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"comment\">// Add indices for &quot;edge&quot;</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (enableEdge)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            buffer[idx++] = vindex1;</div>\n\
<div class=\"line\">                            buffer[idx++] = vindex2;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        ++edgeId;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    base += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!displayAll)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;totalEdges; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (buffer[i] == totalEdgesP1)</div>\n\
<div class=\"line\">                        buffer[i] = lastFound;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw affected faces</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForFaces(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles,</div>\n\
<div class=\"line\">                                                    <span class=\"keywordtype\">bool</span> fromSelection)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangleVertices = 3*numTriangles;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(numTriangleVertices, <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;numTriangleVertices; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                buffer[i] = numTriangleVertices+1;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayAll = !fromSelection;</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayActives = (!displayAll &amp;&amp; fActiveFacesSet.size() &gt; 0);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> displayAffected = (!displayAll &amp;&amp; !displayActives);</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> isolateSelect = item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca74a11ff6a5082cd01e8a952a7cf198\">isIsolateSelectCopy</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            std::unique_ptr&lt;bool[]&gt; enableFaces(<span class=\"keyword\">nullptr</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (isolateSelect)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                enableFaces.reset(<span class=\"keyword\">new</span> <span class=\"keywordtype\">bool</span>[fMeshGeom-&gt;faceCount]);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    enableFaces[i] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent(item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#af2cf56c078dcc016695e00ffad239238\">shadingComponent</a>());</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceIds;</div>\n\
<div class=\"line\">                    fnComponent.getElements(faceIds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; faceIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">int</span> faceId = faceIds[i];</div>\n\
<div class=\"line\">                        enableFaces[faceId] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> std::set&lt;int&gt;&amp; selectionIdSet = (displayActives ? fActiveFacesSet : fActiveVerticesSet);</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator selectionIdSetIter;</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator selectionIdSetIterEnd = selectionIdSet.<a name=\"a183\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#aa3241d85739676c634e312b6a97f64a0\">end</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> lastFound = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;fMeshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> enableFace = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span>( displayAffected )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// Scan for any vertex in the active list</span></div>\n\
<div class=\"line\">                        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> vertexId = fMeshGeom-&gt;face_connects[base];</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( vertexId );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                enableFace = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                lastFound = base;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (!enableFace)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexId2 = fMeshGeom-&gt;face_connects[base+v];</div>\n\
<div class=\"line\">                                selectionIdSetIter = selectionIdSet.find( vertexId2 );</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                                {</div>\n\
<div class=\"line\">                                    enableFace = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                    lastFound = base+v;</div>\n\
<div class=\"line\">                                }</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (!enableFace)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexId3 = fMeshGeom-&gt;face_connects[base+v+1];</div>\n\
<div class=\"line\">                                selectionIdSetIter = selectionIdSet.find( vertexId3 );</div>\n\
<div class=\"line\">                                <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                                {</div>\n\
<div class=\"line\">                                    enableFace = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                    lastFound = base+v+1;</div>\n\
<div class=\"line\">                                }</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( displayActives )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span>( !isolateSelect || enableFaces[faceIdx] )</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            selectionIdSetIter = selectionIdSet.find( faceIdx );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (selectionIdSetIter != selectionIdSetIterEnd)</div>\n\
<div class=\"line\">                            {</div>\n\
<div class=\"line\">                                enableFace = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                                lastFound = base;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( !isolateSelect || enableFaces[faceIdx] )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        enableFace = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        lastFound = base;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Found an active face</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// or one active vertex on the triangle so add indexing for the entire triangle.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (enableFace)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            buffer[idx++] = base;</div>\n\
<div class=\"line\">                            buffer[idx++] = base+v;</div>\n\
<div class=\"line\">                            buffer[idx++] = base+v+1;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    base += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(!displayAll)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;numTriangleVertices; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (buffer[i] == numTriangleVertices+1)</div>\n\
<div class=\"line\">                        buffer[i] = lastFound;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">        item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Create / update indexing for render items which draw filled / shaded</span></div>\n\
<div class=\"line\"><span class=\"comment\">    triangles.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateIndexingForShadedTriangles(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item,</div>\n\
<div class=\"line\">                                                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data,</div>\n\
<div class=\"line\">                                                              <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* indexBuffer =</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a649d0f008cdfbd368a4157dcd47ede67\">createIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (indexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> isolateSelect = item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca74a11ff6a5082cd01e8a952a7cf198\">isIsolateSelectCopy</a>();</div>\n\
<div class=\"line\">        std::unique_ptr&lt;bool[]&gt; enableFaces(<span class=\"keyword\">nullptr</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (isolateSelect)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            enableFaces.reset(<span class=\"keyword\">new</span> <span class=\"keywordtype\">bool</span>[fMeshGeom-&gt;faceCount]);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                enableFaces[i] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent(item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#af2cf56c078dcc016695e00ffad239238\">shadingComponent</a>());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> faceIds;</div>\n\
<div class=\"line\">                fnComponent.getElements(faceIds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; faceIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> faceId = faceIds[i];</div>\n\
<div class=\"line\">                    enableFaces[faceId] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        std::vector&lt;unsigned int&gt; indices;</div>\n\
<div class=\"line\">        indices.reserve(numTriangles * 3);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// compute index data for triangulated convex polygons sharing</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// poly vertex data among triangles</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceId = 0; faceId &lt; fMeshGeom-&gt;faceCount; faceId++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[faceId];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!isolateSelect || enableFaces[faceId])</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v = 1; v &lt; numVerts - 1; v++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        indices.push_back(base);</div>\n\
<div class=\"line\">                        indices.push_back(base + v);</div>\n\
<div class=\"line\">                        indices.push_back(base + v + 1);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                base += numVerts;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* buffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aff9e3c2ed40ad0c0f0fe55668670d071\">acquire</a>(indices.size(), <span class=\"keyword\">true</span> <span class=\"comment\">/*writeOnly - we don&#39;t need the current buffer values*/</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (buffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            memcpy(buffer, indices.data(), <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> int) * indices.size());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            indexBuffer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#aafb3736206f8a73c0fc74757919cfb83\">commit</a>(buffer);</div>\n\
<div class=\"line\">            item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a7d0f067f76206a54f4f716f63bcb6b19\">associateWithIndexBuffer</a>(indexBuffer);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Fill in data and index streams based on the requirements passed in.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Associate indexing with the render items passed in.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    Note that we leave both code paths to either draw shared or non-shared active vertices.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    The choice of which to use is up to the circumstances per plug-in.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    When drawing shared vertices, this requires an additional position buffer to be</span></div>\n\
<div class=\"line\"><span class=\"comment\">    created so will use more memory. If drawing unshared vertices redundent extra</span></div>\n\
<div class=\"line\"><span class=\"comment\">    vertices are drawn but will use less memory. The data member fDrawSharedActiveVertices</span></div>\n\
<div class=\"line\"><span class=\"comment\">    can be set to decide on which implementation to use.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::populateGeometry(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_requirements.html\">MHWRender::MGeometryRequirements</a>&amp; requirements,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItems,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>&amp; data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> debugPopulateGeometry = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;&gt; Begin populate geometry\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the active vertex count</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> activeVertexCount = fActiveVertices.length();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute the number of triangles, assume polys are always convex</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;fMeshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numVerts = fMeshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            numTriangles += numVerts - 2;</div>\n\
<div class=\"line\">            totalVerts += numVerts;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update data streams based on geometry requirements</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>    updateGeometryRequirements(requirements, data,  activeVertexCount, totalVerts,</div>\n\
<div class=\"line\">        debugPopulateGeometry);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update indexing data for all appropriate render items</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* wireIndexBuffer = NULL; <span class=\"comment\">// reuse same index buffer for both wireframe and selected</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numItems = renderItems.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;numItems; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* item = renderItems.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(i);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!item) <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Enable to debug vertex buffers that are associated with each render item.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Can also use to generate indexing better, but we don&#39;t need that here.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Also debugs custom data on the render item.</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> debugStuff = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (debugStuff)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html\">MHWRender::MVertexBufferDescriptorList</a>&amp; itemBuffers =</div>\n\
<div class=\"line\">                item-&gt;<a name=\"a184\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aaf40ec14e4ae3d72f8108395e78643c1\">requiredVertexBuffers</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> numBufs = itemBuffers.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a> desc;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> bufNum=0; bufNum&lt;numBufs; bufNum++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (itemBuffers.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#ab5970217cd80acac6aa900cc1daec6b8\">getDescriptor</a>(bufNum, desc))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;Buffer Required for Item #%d (&#39;%s&#39;):\\n&quot;</span>, i, item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;\\tBufferName: %s\\n&quot;</span>, desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;\\tDataType: %s (dimension %d)\\n&quot;</span>, <a name=\"a185\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a2164a45dbdf2ae0f47998f5e5ac854e6\">MHWRender::MGeometry::dataTypeString</a>(desc.<a name=\"a186\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc7588a483f61d3d4a1e8204ca14d6f6\">dataType</a>()).asChar(), desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#ae5acbe47d704ceb866e3717e2ac9422f\">dimension</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;\\tSemantic: %s\\n&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a19e106f192d0c974c6f5cdd3f07e3288\">MHWRender::MGeometry::semanticString</a>(desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>()).asChar());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Just print a message for illustration purposes. Note that the custom data is also</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// accessible from the MRenderItem in MPxShaderOverride::draw().</span></div>\n\
<div class=\"line\">            <span class=\"keyword\">auto</span> myCustomData = ApiMeshUserDataPtr::dynamic_pointer_cast&lt;&gt;(item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a70171d1dc55d8353aea17312740526aa\">getCustomData</a>());</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (myCustomData)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;Custom data on Item #%d: &#39;%s&#39;, modified count=&#39;%d&#39;\\n\\n&quot;</span>, i, myCustomData-&gt;fMessage.asChar(), myCustomData-&gt;fNumModifications);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;No custom data on Item #%d\\n\\n&quot;</span>, i);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Update indexing for active vertex item</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sActiveVertexItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForVertices( item, data, numTriangles, activeVertexCount, debugPopulateGeometry);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Update indexing for face center item in wireframe mode and shaded mode</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ((item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sShadedModeFaceCenterItemName || item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sWireframeModeFaceCenterItemName) &amp;&amp; fDrawFaceCenters)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForFaceCenters( item, data, debugPopulateGeometry);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Create indexing for dormant and numeric vertex render items</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexItemName ||</div>\n\
<div class=\"line\">                 item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexIdItemName ||</div>\n\
<div class=\"line\">                 item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sVertexPositionItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForDormantVertices( item, data, numTriangles );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Create indexing for wireframe render items</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sWireframeItemName</div>\n\
<div class=\"line\">                 || item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sShadedTemplateItemName</div>\n\
<div class=\"line\">                 || item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sSelectedWireframeItemName</div>\n\
<div class=\"line\">                 || (item-&gt;<a name=\"a187\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a0005764259795847274dba4c66e3661b\">primitive</a>() != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a></div>\n\
<div class=\"line\">                     &amp;&amp; item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sShadedProxyItemName))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForWireframeItems(wireIndexBuffer, item, data, totalVerts);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Handle indexing for affected edge render items</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// For each face we check the edges. If the edges are in the active vertex</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// list we add indexing for the 2 vertices on the edge to the index buffer.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sAffectedEdgeItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForEdges(item, data, totalVerts, <span class=\"keyword\">true</span> <span class=\"comment\">/*fromSelection*/</span>); <span class=\"comment\">// Filter edges using active edges or actives vertices set</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sEdgeSelectionItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForEdges(item, data, totalVerts, <span class=\"keyword\">false</span> <span class=\"comment\">/*fromSelection*/</span>); <span class=\"comment\">// No filter : all edges</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Handle indexing for affected edge render items</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// For each triangle we check the vertices. If any of the vertices are in the active vertex</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// list we add indexing for the triangle to the index buffer.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sAffectedFaceItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForFaces(item, data, numTriangles, <span class=\"keyword\">true</span> <span class=\"comment\">/*fromSelection*/</span>); <span class=\"comment\">// Filter faces using active faces or actives vertices set</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aca2cba4630391c78dcf1a828986160da\">name</a>() == sFaceSelectionItemName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            updateIndexingForFaces(item, data, numTriangles, <span class=\"keyword\">false</span> <span class=\"comment\">/*fromSelection*/</span>); <span class=\"comment\">// No filter : all faces</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Create indexing for filled (shaded) render items</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (item-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a0005764259795847274dba4c66e3661b\">primitive</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">                updateIndexingForShadedTriangles(item, data, numTriangles);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugPopulateGeometry)</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;&gt; End populate geometry\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::cleanUp()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fMeshGeom = NULL;</div>\n\
<div class=\"line\">    fActiveVertices.clear();</div>\n\
<div class=\"line\">    fActiveVerticesSet.clear();</div>\n\
<div class=\"line\">    fActiveEdgesSet.clear();</div>\n\
<div class=\"line\">    fActiveFacesSet.clear();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    This is method is called during the pre-filtering phase of the viewport 2.0 selection</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and is used to setup the selection context of the given DAG object.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    We want the whole shape to be selectable, so we set the selection level to kObject so that the shape</span></div>\n\
<div class=\"line\"><span class=\"comment\">    will be processed by the selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    In case we are currently in component selection mode (vertex, edge or face),</span></div>\n\
<div class=\"line\"><span class=\"comment\">    since we have created render items that can be use in the selection phase (kSelectionOnly draw mode)</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and we also registered component converters to handle this render items,</span></div>\n\
<div class=\"line\"><span class=\"comment\">    we can set the selection level to kComponent so that the shape will also be processed by the selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::updateSelectionGranularity(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">    <a name=\"_a188\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MHWRender::MSelectionContext</a>&amp; selectionContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(displayStatus == MHWRender::kHilite)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> globalComponentMask = <a name=\"a189\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a2166afd9d082dd5952bcd361f0a3abb5\">MGlobal::selectionMode</a>() == <a name=\"a190\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b78971d76a21fe10e157bbb39983cfcad27a906a7906e3bca506b9cf5dc98d9f\">MGlobal::kSelectComponentMode</a> ? <a name=\"a191\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a1da385dcfc2718a595d4d008c56e7dc6\">MGlobal::componentSelectionMask</a>() : <a name=\"_a192\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html\">MGlobal</a>::objectSelectionMask();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> supportedComponents(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(globalComponentMask.<a name=\"a193\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#ab0107f35df7fbf5b2b293ae20cdd2670\">intersects</a>(supportedComponents))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            selectionContext.<a name=\"a194\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#ab1ead3c2bb71ebaaaa7b94b8a1dcaa3b\">setSelectionLevel</a>(<a name=\"a195\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\">MHWRender::MSelectionContext::kComponent</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (pointSnappingActive())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionContext.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#ab1ead3c2bb71ebaaaa7b94b8a1dcaa3b\">setSelectionLevel</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\">MHWRender::MSelectionContext::kComponent</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">   Register our component converters to the draw registry</span></div>\n\
<div class=\"line\"><span class=\"comment\">   This should be done only once, when the plugin is initialized</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshGeometryOverride::registerComponentConverters()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a196\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshGeometryOverride::sVertexItemName, meshVertComponentConverter::creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">        status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshGeometryOverride::sEdgeSelectionItemName, meshEdgeComponentConverter::creator);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshGeometryOverride::sFaceSelectionItemName, meshFaceComponentConverter::creator);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">   Deregister our component converters from the draw registry</span></div>\n\
<div class=\"line\"><span class=\"comment\">   This should be done only once, when the plugin is uninitialized</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshGeometryOverride::deregisterComponentConverters()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a197\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshGeometryOverride::sVertexItemName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">        status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshGeometryOverride::sEdgeSelectionItemName);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">            status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshGeometryOverride::sFaceSelectionItemName);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    Sequence trace enabling. Will output trace logs such as the examples shown below.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    </span></div>\n\
<div class=\"line\"><span class=\"comment\">    In this particular case this is an example trace log when an internal shader </span></div>\n\
<div class=\"line\"><span class=\"comment\">    with color and bump is mapped with a texture. </span></div>\n\
<div class=\"line\"><span class=\"comment\">    </span></div>\n\
<div class=\"line\"><span class=\"comment\">    Of note is:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    - The check for all indexing dirty for all render items.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    - The check for stream dirty which includes tangent, bitangent, uv coordinates, face</span></div>\n\
<div class=\"line\"><span class=\"comment\">    center, and position streams.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override DG update: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Start geometry override render item update: |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: - Call API to update render items</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: End geometry override render item update: |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshWire. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshShadedTemplateWire. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshSelectedWireFrame. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshVertices. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshActiveVertices. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshVertexIds. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshVertexPositions. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshFaceCenterInWireframeMode. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshFaceCenterInShadedMode. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshAffectedEdges. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshAffectedFaces. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshEdgeSelection. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiMeshFaceSelection. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: apiShadedProxy. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: StandardShadedItem. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: StandardShadedItem. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: FlatShadedItem. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty indexing check: FlatShadedItem. |transform1|apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1, Name: uvCoord</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1, Name: mayaBitangentIn</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1, Name: mayaTangentIn</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1, Name: apiMeshFaceCenterStream</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Geometry override dirty stream check: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: Start geometry override update stream and indexing data: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: - Update render item: StandardShadedItem</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: - Update render item: apiMeshFaceCenterInShadedMode</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: - Update render item: apiMeshSelectedWireFrame</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: End geometry override stream and indexing data: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">    apiMeshGeometryOverride: End geometry override clean up: apiMesh1</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshGeometryOverride::traceCallSequence()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Return true if internal tracing is desired.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshGeometryOverride::handleTraceMessage( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;message )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a name=\"a198\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;apiMeshGeometryOverride: &quot;</span> + message);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Some simple custom message formatting.</span></div>\n\
<div class=\"line\">    fprintf(stderr, <span class=\"stringliteral\">&quot;apiMeshGeometryOverride: &quot;</span>);</div>\n\
<div class=\"line\">    fprintf(stderr, <span class=\"stringliteral\">&quot;%s&quot;</span>, message.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">    fprintf(stderr, <span class=\"stringliteral\">&quot;\\n&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";