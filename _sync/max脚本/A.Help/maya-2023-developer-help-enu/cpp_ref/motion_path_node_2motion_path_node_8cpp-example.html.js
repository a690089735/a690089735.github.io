var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: motionPathNode/motionPathNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'motion_path_node_2motion_path_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: motionPathNode/motionPathNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">motionPathNode/motionPathNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxMotionPathNode.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MQuaternion.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTransformationMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span></div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\"><span class=\"comment\">// Plugin MotionPathNode Class //</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">// INTRODUCTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This class will create a custom &quot;motionPathNode&quot; node which</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  illustrates how a developer can extend Maya&#39;s motionPath</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  functionality by creating a surfboard that follows a path.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// HOW TO USE THIS PLUG-IN:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Part 1, Getting started</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (1) Compile this plug-in.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (2) Load the compiled plug-in into Maya via the plug-in manager.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (3) Create an anim curve to define how the motion progresses along</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      the path. Here we assume the animation is 114 frames long and</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      progresses linearly in time.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          string $ac = `createNode animCurveTU -n &quot;animCurve&quot;`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setKeyframe -t 1 -v 0 $ac;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setKeyframe -t 114 -v 1 $ac;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (4) Create a path for the motion to navigate: we use a NURBS circle.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          string $tmp[] = `circle -ch on -o on -nr 0 1 0 -r 16.688138`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          string $path = $tmp[0];</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (5) Create a motionPathNode and connect the path and anim curve.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          $mp = `createNode motionPathNode`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.fractionMode&quot;) true;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          connectAttr ($ac+&quot;.output&quot;) ($mp+&quot;.uValue&quot;);</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          connectAttr ($path+&quot;.worldSpace[0]&quot;) ($mp+&quot;.geometryPath&quot;);</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Part 2, Translation along the path</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (6) Create a surfboard and connect to the motionPathNode.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          $tmp = `polySphere`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          scale 2 0.1 1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          string $sp = $tmp[0];</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          connectAttr ($mp+&quot;.allCoordinates&quot;) ($sp+&quot;.translate&quot;);</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (7) Play the animation and the surfboard will move along the path,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      wobbling back and forth. Change the &quot;offset&quot; plug to affect</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      the magnitude of the offset effect and change &quot;wobbleRate&quot; to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      affect the frequency of the wobble.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          currentTime 1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          play -wait;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Part 3, Add rotation so the surfboard follows the path</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (8) Turn on the &quot;follow&quot; attribute to enable rotation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.follow&quot;) 1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (9) Define the axes then play again. The surfboard should</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      now follow the path.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.frontAxis&quot;) 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.upAxis&quot;) 1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          currentTime 1;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          play -wait;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Part 4, Make the surfboard bank into the curve</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (10) Enable banking to add rotation based on the sharpness of</span></div>\n\
<div class=\"line\"><span class=\"comment\">//       the curve by rotating the surfboard about the front vector.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.bank&quot;) true;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          setAttr ($mp+&quot;.bankScale&quot;) 5.0;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Useful constants.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define ALMOST_ZERO 1.0e-5</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define TWO_PI      ( 2.0 * 3.1415927 )</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Declare our motionPathNode class which derives from MPxMotionPath.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>motionPathNode : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_motion_path_node.html\">MPxMotionPathNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                        motionPathNode();</div>\n\
<div class=\"line\">                    ~motionPathNode() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span>*       creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Member variables...</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     offset;         <span class=\"comment\">// The &quot;offset&quot; attribute</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     wobbleRate;     <span class=\"comment\">// The &quot;wobbleRate&quot; attribute</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     id;             <span class=\"comment\">// The IFF type id</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>      affectsOutput( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; attr );</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Attributes defined on this node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> motionPathNode::offset;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> motionPathNode::wobbleRate;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// IFF type ID</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Each node requires a unique identifier which is used by</span></div>\n\
<div class=\"line\"><span class=\"comment\">// MFnDependencyNode::create() to identify which node to create, and by</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the Maya file format.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// For local testing of nodes you can use any identifier between</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 0x00000000 and 0x0007ffff, but for any node that you plan to use for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// more permanent purposes, you should get a universally unique id from</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Autodesk Support. You will be assigned a unique range that you can manage</span></div>\n\
<div class=\"line\"><span class=\"comment\">// on your own.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> motionPathNode::id( 0x0008101C );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This node does not need to perform any special actions on creation or</span></div>\n\
<div class=\"line\"><span class=\"comment\">// destruction</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">motionPathNode::motionPathNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\">motionPathNode::~motionPathNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The compute() method does the actual work of the node using the inputs</span></div>\n\
<div class=\"line\"><span class=\"comment\">// of the node to generate its output.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Compute takes two parameters: plug and data.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - Plug is the the data value that needs to be recomputed</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - Data provides handles to all of the nodes attributes, only these</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   handles should be used when performing computations.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> motionPathNode::compute( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  f;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read the attributes we need from the datablock.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  uVal            = data.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( uValue ).<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    fractionModeVal = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( fractionMode ).<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    followVal       = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( follow ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     frontAxisVal    = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( frontAxis ).<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ab4cfc0fe402e4a52cf87b8acc6a29861\">asShort</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     upAxisVal       = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( upAxis ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ab4cfc0fe402e4a52cf87b8acc6a29861\">asShort</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    bankVal         = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( bank ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  bankScaleVal    = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( bankScale ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  bankThresholdVal= data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( bankThreshold ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  offsetVal       = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( offset ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>  wobbleRateVal   = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( wobbleRate ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Make sure the value is fractional.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( fractionModeVal ) {</div>\n\
<div class=\"line\">        f = uVal;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        f = parametricToFractional( uVal, &amp;status );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// To compute the sample location on the path, first wrap the fraction</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// around the start of the the path in case it goes past the end</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to prevent clamping, then compute the sample location on the path.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    f = wraparoundFractionalValue( f, &amp;status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> location = position( data, f, &amp;status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the orthogonal vectors on the motion path.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> worldUp = <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a2b69f64d6203c46c6f7971ebcf22c85f\">MGlobal::upAxis</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> front, side, up;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( getVectors( data, f, front, side, up,</div>\n\
<div class=\"line\">            &amp;worldUp ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If follow (i.e. rotation) is enabled, check if banking is also</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// enabled and if so, bank into the turn.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( followVal &amp;&amp; bankVal ) {</div>\n\
<div class=\"line\">        <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_quaternion.html\">MQuaternion</a> bankQuat = banking( data, f, worldUp,</div>\n\
<div class=\"line\">                bankScaleVal, bankThresholdVal, &amp;status );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\">        up = up.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html#a2720ffc2ad2a37bc5e9b54522efae914\">rotateBy</a>( bankQuat );</div>\n\
<div class=\"line\">        side = front ^ up;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute the wobble that moves the sphere back and forth as it</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// traverses the path.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( fabs( offsetVal ) &gt; ALMOST_ZERO</div>\n\
<div class=\"line\">                &amp;&amp; fabs( wobbleRateVal ) &gt; ALMOST_ZERO ) {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> wobble = offsetVal * sin( TWO_PI * wobbleRateVal * f );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> tmp = side * wobble;</div>\n\
<div class=\"line\">        location += tmp;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Write the result values to the output plugs.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    data.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( allCoordinates ).<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( location.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, location.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>,</div>\n\
<div class=\"line\">            location.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( followVal ) {</div>\n\
<div class=\"line\">        <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html\">MTransformationMatrix</a>   resultOrientation = matrix( front, side,</div>\n\
<div class=\"line\">                up, frontAxisVal, upAxisVal, &amp;status );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html#af3d74c777e523f2725cdf87c15a4b5bc\">MTransformationMatrix::RotationOrder</a> ro</div>\n\
<div class=\"line\">                = (<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html#af3d74c777e523f2725cdf87c15a4b5bc\">MTransformationMatrix::RotationOrder</a>)</div>\n\
<div class=\"line\">                    ( data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( rotateOrder ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ab4cfc0fe402e4a52cf87b8acc6a29861\">asShort</a>() + 1 );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span>  rot[3];</div>\n\
<div class=\"line\">        status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html\">MTransformationMatrix</a>( resultOrientation ).<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html#ad02a09f585916f236663e931880c3cd9\">getRotation</a>(</div>\n\
<div class=\"line\">                rot, ro );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( rotate ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( rot[0], rot[1], rot[2] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( MS::kSuccess );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The creator() method allows Maya to instantiate instances of this node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It is called every time a new instance of the node is requested by</span></div>\n\
<div class=\"line\"><span class=\"comment\">// either the createNode command or the MFnDependencyNode::create()</span></div>\n\
<div class=\"line\"><span class=\"comment\">// method.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// In this case creator simply returns a new motionPathNode object.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* motionPathNode::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( <span class=\"keyword\">new</span> motionPathNode() );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The initialize method is called only once when the node is first</span></div>\n\
<div class=\"line\"><span class=\"comment\">// registered with Maya. In general,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> motionPathNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a>     nAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//====================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//          I N P U T     A T T R I B U T E S</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//====================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    offset = nAttr.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;offset&quot;</span>, <span class=\"stringliteral\">&quot;o&quot;</span>,</div>\n\
<div class=\"line\">            <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 4.0 ); </div>\n\
<div class=\"line\">    addAttribute( offset );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    wobbleRate = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;wobbleRate&quot;</span>, <span class=\"stringliteral\">&quot;w&quot;</span>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 10.0 ); </div>\n\
<div class=\"line\">    addAttribute( wobbleRate );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//====================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//          A F F E C T S    R E L A T I O N S H I P S</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//====================================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( affectsOutput( offset ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( affectsOutput( wobbleRate ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( MS::kSuccess );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> motionPathNode::affectsOutput( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; attr )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, rotate ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, rotateX ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, rotateY ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, rotateZ ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, allCoordinates ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, xCoordinate ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, yCoordinate ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( attributeAffects( attr, zCoordinate ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( MS::kSuccess );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// These methods load and unload the plugin, registerNode registers the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// new node type with maya</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     status;</div>\n\
<div class=\"line\">    <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;motionPathNode&quot;</span>,</div>\n\
<div class=\"line\">            motionPathNode::id,</div>\n\
<div class=\"line\">            motionPathNode::creator,</div>\n\
<div class=\"line\">            motionPathNode::initialize,</div>\n\
<div class=\"line\">            <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7adc7352b0e7efc578832d39bd26970966\">MPxNode::kMotionPathNode</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>( status );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( status );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a>   plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( motionPathNode::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>( status );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>( status );</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";