var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: AbcImport/AbcImport.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_abc_import_2_abc_import_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: AbcImport/AbcImport.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">AbcImport/AbcImport.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (c) 2009-2012,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Sony Pictures Imageworks, Inc. and</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Industrial Light &amp; Magic, a division of Lucasfilm Entertainment Company Ltd.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Redistribution and use in source and binary forms, with or without</span></div>\n\
<div class=\"line\"><span class=\"comment\">// modification, are permitted provided that the following conditions are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// met:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions of source code must retain the above copyright</span></div>\n\
<div class=\"line\"><span class=\"comment\">// notice, this list of conditions and the following disclaimer.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Redistributions in binary form must reproduce the above</span></div>\n\
<div class=\"line\"><span class=\"comment\">// copyright notice, this list of conditions and the following disclaimer</span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the documentation and/or other materials provided with the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// distribution.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// *       Neither the name of Sony Pictures Imageworks, nor</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Industrial Light &amp; Magic nor the names of their contributors may be used</span></div>\n\
<div class=\"line\"><span class=\"comment\">// to endorse or promote products derived from this software without specific</span></div>\n\
<div class=\"line\"><span class=\"comment\">// prior written permission.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></div>\n\
<div class=\"line\"><span class=\"comment\">// &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></div>\n\
<div class=\"line\"><span class=\"comment\">// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>\n\
<div class=\"line\"><span class=\"comment\">// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></div>\n\
<div class=\"line\"><span class=\"comment\">// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-*****************************************************************************</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;util.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;NodeIteratorVisitorHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;AbcImport.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgParser.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFileIO.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFileObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDGModifier.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> usage(</div>\n\
<div class=\"line\"><span class=\"stringliteral\">&quot;                                                                           \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport  [options] File [File2 File3 ... ]                              \\n\\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">Options:                                                                    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-rpr/ reparent      DagPath                                                 \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    reparent the whole hierarchy under a node in the        \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    current Maya scene                                      \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-ftr/ fitTimeRange                                                          \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Change Maya time slider to fit the range of input file. \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-rcs / recreateAllColorSets                                                 \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    IC3/4fArrayProperties with face varying scope on        \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    IPolyMesh and ISubD are treated as color sets even if   \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    they weren&#39;t written out of Maya.                       \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-ct / connect       string node1 node2 ...                                  \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    The nodes specified in the argument string are supposed to\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\"> be the names of top level nodes from the input file.                       \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    If such a node doesn&#39;t exist in the provided input file, a\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">warning will be given and nothing will be done.                             \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    If Maya DAG node of the same name doesn&#39;t exist in the    \\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">current Maya scene,  a warning will be given and nothing will be done.      \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    If such a node exists both in the input file and in the   \\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">current Maya scene, data for the whole hierarchy from the nodes down        \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    (inclusive) will be substituted by data from the input file,\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\"> and connections to the AlembicNode will be made or updated accordingly.    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    If string \\&quot;/\\&quot; is used as the root name,  all top level  \\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">nodes from the input file will be used for updating the current Maya scene. \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Again if certain node doesn&#39;t exist in the current scene, \\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">a warning will be given and nothing will be done.                           \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    If a single node is specified and it exists in the Maya \\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">scene but doesn&#39;t exist in the archive, children of that node will be connected\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\"> to the children of the archive.                                            \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-crt/ createIfNotFound                                                      \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Used only when -connect flag is set.                    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-rm / removeIfNoUpdate                                                      \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Used only when -connect flag is set.                    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-sts/ setToStartFrame                                                       \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Set the current time to the start of the frame range    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-m  / mode          string (\\&quot;open\\&quot;|\\&quot;import\\&quot;|\\&quot;replace\\&quot;)                \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Set read mode to open/import/replace (default to import)\\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-ft / filterObjects \\&quot;regex1 regex2 ...\\&quot;                                   \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Selective import cache objects whose name matches with  \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-eft / excludeFilterObjects \\&quot;regex1 regex2 ...\\&quot;                          \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">                    Selective exclude cache objects whose name matches with \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">the input regular expressions.                                              \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-h  / help          Print this message                                      \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">-d  / debug         Turn on debug message printout                        \\n\\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">Specifying more than one file will layer those files together.            \\n\\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">Example:                                                                    \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport -h;                                                               \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport -d -m open \\&quot;/tmp/test.abc\\&quot;;                                     \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport -ftr -ct \\&quot;/\\&quot; -crt -rm \\&quot;/tmp/test.abc\\&quot;;                        \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport -ct \\&quot;root1 root2 root3 ...\\&quot; \\&quot;/tmp/test.abc\\&quot;;                  \\n\\</span></div>\n\
<div class=\"line\"><span class=\"stringliteral\">AbcImport \\&quot;/tmp/test.abc\\&quot; \\&quot;/tmp/justUVs.abc\\&quot; \\&quot;/tmp/other.abc\\&quot;         \\n&quot;</span></div>\n\
<div class=\"line\">);  <span class=\"comment\">// usage</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">AbcImport::AbcImport()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">AbcImport::~AbcImport()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> AbcImport::createSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-d&quot;</span>,    <span class=\"stringliteral\">&quot;-debug&quot;</span>,        <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-ftr&quot;</span>,  <span class=\"stringliteral\">&quot;-fitTimeRange&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-h&quot;</span>,    <span class=\"stringliteral\">&quot;-help&quot;</span>,         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-m&quot;</span>,    <span class=\"stringliteral\">&quot;-mode&quot;</span>,         <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-rcs&quot;</span>,  <span class=\"stringliteral\">&quot;-recreateAllColorSets&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-ct&quot;</span>,   <span class=\"stringliteral\">&quot;-connect&quot;</span>,          <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-crt&quot;</span>,  <span class=\"stringliteral\">&quot;-createIfNotFound&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-rm&quot;</span>,   <span class=\"stringliteral\">&quot;-removeIfNoUpdate&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-rpr&quot;</span>,  <span class=\"stringliteral\">&quot;-reparent&quot;</span>,     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-sts&quot;</span>,  <span class=\"stringliteral\">&quot;-setToStartFrame&quot;</span>,  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2ada8d12b05de59486981e5e424c53d59c40\">MSyntax::kNoArg</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-ft&quot;</span>,   <span class=\"stringliteral\">&quot;-filterObjects&quot;</span>,    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a>);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(<span class=\"stringliteral\">&quot;-eft&quot;</span>,  <span class=\"stringliteral\">&quot;-excludeFilterObjects&quot;</span>,    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a299f2c91c864387f1b4208e99a72631d\">setObjectType</a>( <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a72b517c34c0de9b91ce4b5342675186ba95ae214c27f08b1e9d9a19245cca42fb\">MSyntax::kStringObjects</a>, 1, 1024 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a414088ac458bc323845634fcf7663e69\">enableQuery</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    syntax.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a2a329cd0b0d89bc1b9721c522d6d0006\">enableEdit</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* AbcImport::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> AbcImport();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AbcImport::doIt(<span class=\"keyword\">const</span> <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a> &amp; args)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_parser.html\">MArgParser</a> argData(syntax(), args, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filename(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> connectRootNodes(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filterString(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> excludeFilterString(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> reparentObj = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    swap = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    createIfNotFound = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    removeIfNoUpdate = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    debugOn = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;help&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(usage);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;debug&quot;</span>))</div>\n\
<div class=\"line\">        debugOn = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;reparent&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> parent(<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">        <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> reparentDagPath;</div>\n\
<div class=\"line\">        status = argData.getFlagArgument(<span class=\"stringliteral\">&quot;reparent&quot;</span>, 0, parent);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (status == MS::kSuccess</div>\n\
<div class=\"line\">            &amp;&amp; getDagPathByName(parent, reparentDagPath) == MS::kSuccess)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            reparentObj = reparentDagPath.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> theWarning = parent;</div>\n\
<div class=\"line\">            theWarning += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot; is not a valid DagPath&quot;</span>);</div>\n\
<div class=\"line\">            printWarning(theWarning);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!argData.isFlagSet(<span class=\"stringliteral\">&quot;connect&quot;</span>) &amp;&amp; argData.isFlagSet(<span class=\"stringliteral\">&quot;mode&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> modeStr;</div>\n\
<div class=\"line\">        argData.getFlagArgument(<span class=\"stringliteral\">&quot;mode&quot;</span>, 0, modeStr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (modeStr == <span class=\"stringliteral\">&quot;replace&quot;</span>)</div>\n\
<div class=\"line\">            deleteCurrentSelection();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (modeStr == <span class=\"stringliteral\">&quot;open&quot;</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_i_o.html\">MFileIO</a> fileIo;</div>\n\
<div class=\"line\">            fileIo.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_i_o.html#a29a647c6db69a1313023d3b025c33644\">newFile</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;connect&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        swap = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        argData.getFlagArgument(<span class=\"stringliteral\">&quot;connect&quot;</span>, 0, connectRootNodes);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;createIfNotFound&quot;</span>))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            createIfNotFound = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;removeIfNoUpdate&quot;</span>))</div>\n\
<div class=\"line\">            removeIfNoUpdate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;filterObjects&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        argData.getFlagArgument(<span class=\"stringliteral\">&quot;filterObjects&quot;</span>, 0, filterString);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;excludeFilterObjects&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        argData.getFlagArgument(<span class=\"stringliteral\">&quot;excludeFilterObjects&quot;</span>, 0, excludeFilterString);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// if the flag isn&#39;t specified we&#39;ll only do stuff marked with the Maya</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// meta data</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> recreateColorSets = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;recreateAllColorSets&quot;</span>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        recreateColorSets = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> abcNodeName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> filenameArray;</div>\n\
<div class=\"line\">    status = argData.getObjects( filenameArray );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( ( status == <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> ) &amp;&amp; ( filenameArray.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0 ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        std::vector&lt; std::string &gt; filenameList;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> fileNum = 0; fileNum &lt; filenameArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); fileNum++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            filename = filenameArray[ fileNum ];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fileRule, expandName;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> alembicFileRule = <span class=\"stringliteral\">&quot;alembicCache&quot;</span>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> alembicFilePath = <span class=\"stringliteral\">&quot;cache/alembic&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> queryFileRuleCmd;</div>\n\
<div class=\"line\">            queryFileRuleCmd.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(<span class=\"stringliteral\">&quot;workspace -q -fre \\&quot;^1s\\&quot;&quot;</span>,</div>\n\
<div class=\"line\">                alembicFileRule);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> queryFolderCmd;</div>\n\
<div class=\"line\">            queryFolderCmd.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>(<span class=\"stringliteral\">&quot;workspace -en `workspace -q -fre \\&quot;^1s\\&quot;`&quot;</span>,</div>\n\
<div class=\"line\">                alembicFileRule);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// query the file rule for alembic cache</span></div>\n\
<div class=\"line\">            <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(queryFileRuleCmd, fileRule);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fileRule.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// we have alembic file rule, query the folder</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(queryFolderCmd, expandName);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// resolve the expanded file rule</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (expandName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                expandName = alembicFilePath;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// get the path to the alembic file rule</span></div>\n\
<div class=\"line\">            <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> directory;</div>\n\
<div class=\"line\">            directory.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(expandName);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> directoryName = directory.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// resolve the relative path</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> absoluteFile;</div>\n\
<div class=\"line\">            absoluteFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(filename);</div>\n\
<div class=\"line\">            absoluteFile.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a4b3d5deec3dc9475f712c8e0f2f4d9a2\">setResolveMethod</a>(<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#af71e719034e8e9a4c69adcc174ca9049ac1ce1604eaae6e61df873510a9254fb3\">MFileObject::kInputFile</a>);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if MAYA_API_VERSION &lt; 201300</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (absoluteFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>() !=</div>\n\
<div class=\"line\">                absoluteFile.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a1e36aee73cb919f85ab93bb30967df89\">expandedFullName</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#abe7742bc48c00e4bf3f7b3bbc7c468ae\">MFileObject::isAbsolutePath</a>(filename)) {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// this is a relative path</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> absoluteFileName = directoryName + <span class=\"stringliteral\">&quot;/&quot;</span> + filename;</div>\n\
<div class=\"line\">                absoluteFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(absoluteFileName);</div>\n\
<div class=\"line\">                filename = absoluteFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                filename = absoluteFile.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> fileObj;</div>\n\
<div class=\"line\">            status = fileObj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(filename);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (status == MS::kSuccess &amp;&amp; fileObj.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#aa9100e4c626877b706ca9fc67a35c562\">exists</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                filenameList.push_back( filename.asChar() );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> theError(<span class=\"stringliteral\">&quot;In AbcImport::doIt(), &quot;</span>);</div>\n\
<div class=\"line\">                theError += filename;</div>\n\
<div class=\"line\">                theError += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot; doesn&#39;t exist&quot;</span>);</div>\n\
<div class=\"line\">                printError(theError);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( filenameList.size() &gt; 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            ArgData inputData(filenameList, debugOn, reparentObj,</div>\n\
<div class=\"line\">                swap, connectRootNodes, createIfNotFound, removeIfNoUpdate,</div>\n\
<div class=\"line\">                recreateColorSets, filterString, excludeFilterString);</div>\n\
<div class=\"line\">            abcNodeName = createScene(inputData);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (inputData.mSequenceStartTime != inputData.mSequenceEndTime &amp;&amp;</div>\n\
<div class=\"line\">                inputData.mSequenceStartTime != -DBL_MAX &amp;&amp;</div>\n\
<div class=\"line\">                inputData.mSequenceEndTime != DBL_MAX)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;fitTimeRange&quot;</span>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> sec(1.0, <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">                    setPlayback(</div>\n\
<div class=\"line\">                        inputData.mSequenceStartTime * sec.as(<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>()),</div>\n\
<div class=\"line\">                        inputData.mSequenceEndTime * sec.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>()) );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (argData.isFlagSet(<span class=\"stringliteral\">&quot;setToStartFrame&quot;</span>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> sec(1.0, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\">                    <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#ac919b5ecda7f12015e94792c0712726f\">MGlobal::viewFrame</a>( inputData.mSequenceStartTime *</div>\n\
<div class=\"line\">                        sec.as(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a5b08f84ff68e42c0a32dbd8e0a2d6506\">MTime::uiUnit</a>()) );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a6c6cf288906d72135b4a25baa66b42b5\">MPxCommand::setResult</a>(abcNodeName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";