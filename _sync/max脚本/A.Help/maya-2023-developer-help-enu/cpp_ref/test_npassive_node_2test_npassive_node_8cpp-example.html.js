var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: testNpassiveNode/testNpassiveNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'test_npassive_node_2test_npassive_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: testNpassiveNode/testNpassiveNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">testNpassiveNode/testNpassiveNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;testNpassiveNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnIntArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnComponentListData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshVertex.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNObjectData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimControl.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;stdio.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">Introduction to interacting with the N Solver</span></div>\n\
<div class=\"line\"><span class=\"comment\">=============================================</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">In order to create an N cloth object that can interact with the Nucleus solver, </span></div>\n\
<div class=\"line\"><span class=\"comment\">your object will need to own a MnCloth, which represents the underlying</span></div>\n\
<div class=\"line\"><span class=\"comment\">N cloth and its data.</span></div>\n\
<div class=\"line\"><span class=\"comment\">your node will also need the following 6 attributes:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">ATTR                Type        Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">startState          kNObject    initial state of your N object</span></div>\n\
<div class=\"line\"><span class=\"comment\">currentState        kNObject    current state of your N object</span></div>\n\
<div class=\"line\"><span class=\"comment\">currentTime         Time        connection to the current time</span></div>\n\
<div class=\"line\"><span class=\"comment\">inputGeom           kMesh       input mesh       </span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">inputGeom and currentTime are self explanatory.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">A connection is to be made from the nucleus solver&#39;s outputObjects attribute to </span></div>\n\
<div class=\"line\"><span class=\"comment\">the nextState attribute of your node.  Also, you need to connect the currentState</span></div>\n\
<div class=\"line\"><span class=\"comment\">and startState attributes of your node to the inputActive and inputActiveStart attributes</span></div>\n\
<div class=\"line\"><span class=\"comment\">on the solver node respectively.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">Once these connections are made, the normal sequence of events is the following:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">The refresh will trigger a pull on the output mesh attribute.  At this your node will</span></div>\n\
<div class=\"line\"><span class=\"comment\">pull on the nextState attribute, triggering a solve from the solver.  Depending on the current</span></div>\n\
<div class=\"line\"><span class=\"comment\">time, the solver will trigger pulls on either the currentState or startState attributes of your</span></div>\n\
<div class=\"line\"><span class=\"comment\">node.  If the startState is pulled on, you need to initialize the MnCloth which you node</span></div>\n\
<div class=\"line\"><span class=\"comment\">owns from the input geometry.  Once this is done and the data passed back to the solver,</span></div>\n\
<div class=\"line\"><span class=\"comment\">a solve will occur, and the solver will automatically update your MnCloth behind the scenes.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">At this point you may extract the results of the solve via methods on the MnCloth and apply it</span></div>\n\
<div class=\"line\"><span class=\"comment\">to the output mesh.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">Below is a script that show how to test this node:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">// This example show how 2 cloth objects falling and colliding with a sphere</span></div>\n\
<div class=\"line\"><span class=\"comment\">// side by side.  One is a default nCloth object, the other is a cloth</span></div>\n\
<div class=\"line\"><span class=\"comment\">// object created by our plugin.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Note: Before running this code, make sure the plugin testNpassiveNode is loaded!</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">global proc setupCustomPassiveScene()</span></div>\n\
<div class=\"line\"><span class=\"comment\">{</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    file -f -new;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    //plane1 and 2 will be driven by regular nCloth</span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pPlane1[] = `polyPlane -w 5 -h 5 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    move -r -10 0 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNCloth 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //plane2 will act as input to our testNpassiveNode</span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pPlane2[] = `polyPlane -w 5 -h 5 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNCloth 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //sphere 1  will be a regular a passive object.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pSphere1[] = `polySphere -r 1 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    move -r -10 -3 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    makeCollideNCloth;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //sphere 2  will be a plugin  a passive object.</span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pSphere2[] = `polySphere -r 1 -sx 20 -sy 20 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    move -r 0 -3 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNode testNpassiveNode;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr pSphereShape2.worldMesh[0] testNpassiveNode1.inputGeom;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr testNpassiveNode1.currentState nucleus1.inputPassive[1];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr testNpassiveNode1.startState nucleus1.inputPassiveStart[1];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr time1.outTime testNpassiveNode1.currentTime;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">}</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> testNpassiveNode::id( 0x85004 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNpassiveNode::startState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNpassiveNode::currentState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNpassiveNode::currentTime;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNpassiveNode::inputGeom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> statCheck( <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout&lt;&lt;msg&lt;&lt;<span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">testNpassiveNode::testNpassiveNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//Create my N cloth.</span></div>\n\
<div class=\"line\">    fNObject.createNRigid();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> testNpassiveNode::compute(<span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( plug == currentState )</div>\n\
<div class=\"line\">    { </div>\n\
<div class=\"line\">      <span class=\"comment\">// get old positions and numVerts</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// if num verts is different, reset topo and zero velocity</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// if num verts is the same, compute new velocity</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>        <span class=\"keywordtype\">int</span> ii,jj;</div>\n\
<div class=\"line\">        <span class=\"comment\">// initialize MnCloth</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> inMeshObj = data.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(inputGeom).<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a301e7b7cdf9f9e1e206651cc6a1b67ec\">asMesh</a>();</div>\n\
<div class=\"line\">                </div>\n\
<div class=\"line\">        <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> inputMesh(inMeshObj);       </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numVerts = 0;</div>\n\
<div class=\"line\">        numVerts = inputMesh.numVertices();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> prevNumVerts;</div>\n\
<div class=\"line\">        fNObject.getNumVertices(prevNumVerts);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(numVerts != prevNumVerts) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numPolygons = inputMesh.numPolygons();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> * faceVertCounts = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[numPolygons];</div>\n\
<div class=\"line\">                </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> facesArrayLength = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numPolygons;ii++) {</div>\n\
<div class=\"line\">                <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> verts;</div>\n\
<div class=\"line\">                inputMesh.getPolygonVertices(ii,verts);</div>\n\
<div class=\"line\">                faceVertCounts[ii] = verts.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">                facesArrayLength += verts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> * faces = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[facesArrayLength];</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> currIndex = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numPolygons;ii++) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> verts;</div>\n\
<div class=\"line\">                inputMesh.getPolygonVertices(ii,verts);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(jj=0;jj&lt;(int)verts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();jj++) {</div>\n\
<div class=\"line\">                    faces[currIndex++] = verts[jj];</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numEdges = inputMesh.numEdges();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> * edges = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[2*numEdges];</div>\n\
<div class=\"line\">                currIndex = 0;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numEdges;ii++) {</div>\n\
<div class=\"line\">                int2 edge;</div>\n\
<div class=\"line\">                inputMesh.getEdgeVertices(ii,edge);</div>\n\
<div class=\"line\">                edges[currIndex++] = edge[0];</div>\n\
<div class=\"line\">                edges[currIndex++] = edge[1];</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// When you are doing the initialization, the first call must to be setTopology().  All other</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// calls must come after this.</span></div>\n\
<div class=\"line\">            fNObject.setTopology(numPolygons, faceVertCounts, faces,numEdges, edges );</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span>[] faceVertCounts;</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span>[] faces;</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span>[] edges;        </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> vertexArray;</div>\n\
<div class=\"line\">                inputMesh.getPoints(vertexArray, <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">                fNObject.setPositions(vertexArray,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> velocitiesArray;</div>\n\
<div class=\"line\">                velocitiesArray.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>(numVerts);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(ii=0;ii&lt;(int)numVerts;ii++) {</div>\n\
<div class=\"line\">                velocitiesArray[ii].x = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].y = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].z = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].w = 0.0f;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            fNObject.setVelocities(velocitiesArray);</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> vertexArray;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> prevVertexArray;</div>\n\
<div class=\"line\">                inputMesh.getPoints(vertexArray, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">                fNObject.getPositions(prevVertexArray);</div>\n\
<div class=\"line\">            <span class=\"comment\">// you may want to get the playback rate for the dt</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// double dt = MAnimControl::playbackBy() \\ 24.0;</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// or get the real dt by caching the last eval time</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> dt = 1.0/24.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> velocitiesArray;</div>\n\
<div class=\"line\">                velocitiesArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>(numVerts);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(ii=0;ii&lt;(int)numVerts;ii++) {</div>\n\
<div class=\"line\">                velocitiesArray[ii].x = (float)( (vertexArray[ii].x - prevVertexArray[ii].x)/dt);</div>\n\
<div class=\"line\">                velocitiesArray[ii].y = (float)( (vertexArray[ii].y - prevVertexArray[ii].y)/dt);</div>\n\
<div class=\"line\">                velocitiesArray[ii].z = (float)( (vertexArray[ii].x - prevVertexArray[ii].z)/dt);</div>\n\
<div class=\"line\">                velocitiesArray[ii].w = 0.0f;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            fNObject.setVelocities(velocitiesArray);</div>\n\
<div class=\"line\">            fNObject.setPositions(vertexArray,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// in real life, you&#39;d get these attribute values each frame and set them</span></div>\n\
<div class=\"line\">        fNObject.setThickness(0.1f);</div>\n\
<div class=\"line\">        fNObject.setBounce(0.0f);</div>\n\
<div class=\"line\">        fNObject.setFriction(0.1f);</div>\n\
<div class=\"line\">        fNObject.setCollisionFlags(<span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>);               </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html\">MFnNObjectData</a> outputData;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> mayaNObjectData = outputData.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#afb956940db719576eaff480cae20fbcc\">create</a>();</div>\n\
<div class=\"line\">        outputData.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_base.html#ad09f5acece0f9926b3e0e55cff78c3be\">setObject</a>(mayaNObjectData);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        outputData.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#a8bb1865bb8b15b97ecee7b90eb3db48c\">setObjectPtr</a>(&amp;fNObject);        </div>\n\
<div class=\"line\">        outputData.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#a22988ec475332c4cbb67225c13697843\">setCached</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> currStateOutputHandle = data.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(currentState);</div>\n\
<div class=\"line\">        currStateOutputHandle.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(outputData.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_base.html#a7a8204dee26df7900252fd8294090865\">object</a>());</div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( plug == startState )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> ii,jj;</div>\n\
<div class=\"line\">        <span class=\"comment\">// initialize MnCloth</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> inMeshObj = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(inputGeom).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a301e7b7cdf9f9e1e206651cc6a1b67ec\">asMesh</a>();</div>\n\
<div class=\"line\">                </div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> inputMesh(inMeshObj);       </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numPolygons = inputMesh.numPolygons();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> * faceVertCounts = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[numPolygons];</div>\n\
<div class=\"line\">                </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> facesArrayLength = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numPolygons;ii++) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> verts;</div>\n\
<div class=\"line\">                inputMesh.getPolygonVertices(ii,verts);</div>\n\
<div class=\"line\">                faceVertCounts[ii] = verts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">                facesArrayLength += verts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> * faces = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[facesArrayLength];</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> currIndex = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numPolygons;ii++) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> verts;</div>\n\
<div class=\"line\">                inputMesh.getPolygonVertices(ii,verts);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span>(jj=0;jj&lt;(int)verts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();jj++) {</div>\n\
<div class=\"line\">                    faces[currIndex++] = verts[jj];</div>\n\
<div class=\"line\">               }</div>\n\
<div class=\"line\">           }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> numEdges = inputMesh.numEdges();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> * edges = <span class=\"keyword\">new</span> <span class=\"keywordtype\">int</span>[2*numEdges];</div>\n\
<div class=\"line\">            currIndex = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(ii=0;ii&lt;numEdges;ii++) {</div>\n\
<div class=\"line\">                int2 edge;</div>\n\
<div class=\"line\">                inputMesh.getEdgeVertices(ii,edge);</div>\n\
<div class=\"line\">                edges[currIndex++] = edge[0];</div>\n\
<div class=\"line\">                edges[currIndex++] = edge[1];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// When you are doing the initialization, the first call must to be setTopology().  All other</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// calls must come after this.</span></div>\n\
<div class=\"line\">            fNObject.setTopology(numPolygons, faceVertCounts, faces,numEdges, edges );</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span>[] faceVertCounts;</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span>[] faces;</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span>[] edges;        </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numVerts = 0;</div>\n\
<div class=\"line\">            numVerts = inputMesh.numVertices();        </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> vertexArray;</div>\n\
<div class=\"line\">            inputMesh.getPoints(vertexArray, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">            fNObject.setPositions(vertexArray,<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a> velocitiesArray;</div>\n\
<div class=\"line\">            velocitiesArray.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>(numVerts);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(ii=0;ii&lt;(int)numVerts;ii++) {</div>\n\
<div class=\"line\">                velocitiesArray[ii].x = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].y = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].z = 0.0f;</div>\n\
<div class=\"line\">                velocitiesArray[ii].w = 0.0f;</div>\n\
<div class=\"line\">           }</div>\n\
<div class=\"line\">           fNObject.setVelocities(velocitiesArray);</div>\n\
<div class=\"line\">           fNObject.setThickness(0.1f);</div>\n\
<div class=\"line\">            fNObject.setBounce(0.0f);</div>\n\
<div class=\"line\">            fNObject.setFriction(0.1f);</div>\n\
<div class=\"line\">            fNObject.setCollisionFlags(<span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>, <span class=\"keyword\">true</span>);               </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html\">MFnNObjectData</a> outputData;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> mayaNObjectData = outputData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#afb956940db719576eaff480cae20fbcc\">create</a>();</div>\n\
<div class=\"line\">            outputData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_base.html#ad09f5acece0f9926b3e0e55cff78c3be\">setObject</a>(mayaNObjectData);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">            outputData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#a8bb1865bb8b15b97ecee7b90eb3db48c\">setObjectPtr</a>(&amp;fNObject);        </div>\n\
<div class=\"line\">            outputData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html#a22988ec475332c4cbb67225c13697843\">setCached</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> startStateOutputHandle = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>(startState);</div>\n\
<div class=\"line\">            startStateOutputHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>(outputData.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_base.html#a7a8204dee26df7900252fd8294090865\">object</a>());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        stat = MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> testNpassiveNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> tAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    inputGeom = tAttr.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;inputGeom&quot;</span>, <span class=\"stringliteral\">&quot;ing&quot;</span>, <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>, <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create inputGeom&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    currentState = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;currentState&quot;</span>, <span class=\"stringliteral\">&quot;cus&quot;</span>, <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9c720fc6ebcdf253fe6d586db63dd943\">MFnData::kNObject</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create currentState&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    startState = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;startState&quot;</span>, <span class=\"stringliteral\">&quot;sts&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9c720fc6ebcdf253fe6d586db63dd943\">MFnData::kNObject</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create startState&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a> uniAttr;</div>\n\
<div class=\"line\">    currentTime = uniAttr.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>( <span class=\"stringliteral\">&quot;currentTime&quot;</span>, <span class=\"stringliteral\">&quot;ctm&quot;</span> , <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>,  0.0, &amp;stat  );    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(inputGeom);</div>\n\
<div class=\"line\">    addAttribute(currentTime);</div>\n\
<div class=\"line\">    addAttribute(startState);</div>\n\
<div class=\"line\">    addAttribute(currentState);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    attributeAffects(inputGeom, startState);</div>\n\
<div class=\"line\">    attributeAffects(inputGeom, currentState);</div>\n\
<div class=\"line\">    attributeAffects(currentTime, currentState);    </div>\n\
<div class=\"line\">    attributeAffects(currentTime, startState);    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, <span class=\"stringliteral\">&quot;Autodesk - nCloth Prototype 5&quot;</span>, <span class=\"stringliteral\">&quot;9.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode ( <span class=\"stringliteral\">&quot;testNpassiveNode&quot;</span>, testNpassiveNode::id,testNpassiveNode ::creator, testNpassiveNode::initialize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(testNpassiveNode::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";