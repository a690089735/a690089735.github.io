var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: userMsgCmd/userMsgCmd.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'user_msg_cmd_2user_msg_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: userMsgCmd/userMsgCmd.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">userMsgCmd/userMsgCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Produces the MEL command &quot;userMessage&quot; that demonstrates how a plug-in</span></div>\n\
<div class=\"line\"><span class=\"comment\">// can use user-defined messages.   </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This example demonstrates the usage of the MUserEventMessage class.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It allows the user to create, destroy, and post to user-defined events</span></div>\n\
<div class=\"line\"><span class=\"comment\">// identified by strings.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The command &quot;userMessage&quot; supports the following options:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -r/-register string : Register a new event type with the given name.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          Registration also attaches two callback functions to the event:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          userCallback1 and userCallback2.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -d/-deregister string : Deregister an existing event with the given name.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -p/-post string : Post the event. In this case, it simply notifies</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          userCallback1 and userCallback2, which print info messages.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      -t/-test : Run a basic set of tests that demonstrate how the user event</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          types can be used. See userMessage::runTests()</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Only one option must be specified per invocation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Following is an example of how the command can be used:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Register a user-defined event named &quot;test&quot;. The plug-in will internally register</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // callbacks for the event.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  userMessage -r test;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Post to the user-defined event. The plug-in prints info messages from the callbacks.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  userMessage -p test;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Entered userMessage::userCallback2</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Received data: Sample Client Data (an MString object)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Entered userMessage::userCallback1</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Received data: Sample Client Data (an MString object)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Deregister the user-defined event</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  userMessage -d test;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  // Trying to post a message after the event has been removed will fail.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  userMessage -p test; </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUserEventMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Syntax string definitions</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *postFlag = <span class=\"stringliteral\">&quot;-p&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *postLongFlag = <span class=\"stringliteral\">&quot;-post&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *registerFlag = <span class=\"stringliteral\">&quot;-r&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *registerLongFlag = <span class=\"stringliteral\">&quot;-register&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *deregisterFlag = <span class=\"stringliteral\">&quot;-d&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *deregisterLongFlag = <span class=\"stringliteral\">&quot;-deregister&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *testFlag = <span class=\"stringliteral\">&quot;-t&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *testLongFlag = <span class=\"stringliteral\">&quot;-test&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>userMessage : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html\">MPxCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#ade7d0a873cbe811d6eab464e695390a9\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> runTests();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> *creator();</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> newSyntax();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// callback functions.</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> userCallback1(<span class=\"keywordtype\">void</span>* clientData);</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> userCallback2(<span class=\"keywordtype\">void</span>* clientData);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> stringClientData;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Define a string that will be passed to the callback functions</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> userMessage::stringClientData = <span class=\"stringliteral\">&quot;Sample Client Data (an MString object)&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> userMessage::doIt( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> argData(syntax(), args);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(deregisterFlag))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> event;</div>\n\
<div class=\"line\">        argData.getFlagArgument(deregisterFlag, 0, event);</div>\n\
<div class=\"line\">        status = <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(event);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(registerFlag))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Register the new event and add two fixed callbacks to it.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> event;</div>\n\
<div class=\"line\">        argData.getFlagArgument(registerFlag, 0, event);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a788047af2118caca88351c497847291a\">MUserEventMessage::isUserEvent</a>(event)) {</div>\n\
<div class=\"line\">            status = <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1bf2c1d9c15a610f60f3f0037732e3a2\">MUserEventMessage::registerUserEvent</a>(event);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (status == MS::kSuccess)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(event,userCallback1,(<span class=\"keywordtype\">void</span>*) &amp;stringClientData,&amp;status);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(event,userCallback2,(<span class=\"keywordtype\">void</span>*) &amp;stringClientData,&amp;status);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(postFlag))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> event;</div>\n\
<div class=\"line\">        argData.getFlagArgument(postFlag, 0, event);</div>\n\
<div class=\"line\">        status = <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#ab8bec0966086ddae83bd0e62ce76ad71\">MUserEventMessage::postUserEvent</a>(event);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(testFlag))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        runTests();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* userMessage::creator() </div>\n\
<div class=\"line\">{   </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> userMessage;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> userMessage::newSyntax() {</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\">    syntax.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( postFlag, postLongFlag, <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( registerFlag, registerLongFlag, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( deregisterFlag, deregisterLongFlag, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( testFlag, testLongFlag );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> userMessage::userCallback1(<span class=\"keywordtype\">void</span>* clientData) {</div>\n\
<div class=\"line\">    <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Entered userMessage::userCallback1&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (clientData != 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> receivedDataMsg(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Received data: &quot;</span>) + *((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>*) clientData));</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(receivedDataMsg);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> userMessage::userCallback2(<span class=\"keywordtype\">void</span>* clientData) {</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Entered userMessage::userCallback2&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (clientData != 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> receivedDataMsg(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Received data: &quot;</span>) + *((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>*) clientData));</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(receivedDataMsg);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> userMessage::runTests() {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Test 1: Try to register callback for nonexistent event</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Starting Test 1&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Test 1 passed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Test 1 failed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Test 2: Register and deregister an event </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// - Expected output: Entered userMessage::userCallback1</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Starting Test 2&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1bf2c1d9c15a610f60f3f0037732e3a2\">MUserEventMessage::registerUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#ab8bec0966086ddae83bd0e62ce76ad71\">MUserEventMessage::postUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Test 3: The event should be gone</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Starting Test 3&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Test 3 passed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Test 3 failed&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Test 4: Try adding multiple callbacks to an event</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Expected output: Entered userMessage::userCallback1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Entered userMessage::userCallback2</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Starting Test 4&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1bf2c1d9c15a610f60f3f0037732e3a2\">MUserEventMessage::registerUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback2,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#ab8bec0966086ddae83bd0e62ce76ad71\">MUserEventMessage::postUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\">    <span class=\"comment\">// Test 5: Try adding and posting to multiple events</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Expected output: Posting first event</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Entered userMessage::userCallback1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Entered userMessage::userCallback2</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Posting second event</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Entered userMessage::userCallback1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                  Entered userMessage::userCallback2</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Starting Test 5&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1bf2c1d9c15a610f60f3f0037732e3a2\">MUserEventMessage::registerUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1bf2c1d9c15a610f60f3f0037732e3a2\">MUserEventMessage::registerUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent2&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>,userCallback2,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent2&quot;</span>,userCallback1,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#af8c10b009573c25b25a3ea096644fe12\">MUserEventMessage::addUserEventCallback</a>(<span class=\"stringliteral\">&quot;TestEvent2&quot;</span>,userCallback2,0,&amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Posting first event&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#ab8bec0966086ddae83bd0e62ce76ad71\">MUserEventMessage::postUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Posting second event&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#ab8bec0966086ddae83bd0e62ce76ad71\">MUserEventMessage::postUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent2&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestEvent2&quot;</span>);</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Completed all tests&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// standard initialize and uninitialize functions</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Version number may need to change in the future</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> pluginFn(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    status = pluginFn.registerCommand(<span class=\"stringliteral\">&quot;userMessage&quot;</span>, userMessage::creator, userMessage::newSyntax);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !status)</div>\n\
<div class=\"line\">        status.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;register Command failed&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> pluginFn(obj);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = MS::kSuccess;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">//remove call backs</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestFoo1&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_event_message.html#a1aecd43427fb32de1e0a7c6b659b51c9\">MUserEventMessage::deregisterUserEvent</a>(<span class=\"stringliteral\">&quot;TestFoo2&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = pluginFn.deregisterCommand(<span class=\"stringliteral\">&quot;userMessage&quot;</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";