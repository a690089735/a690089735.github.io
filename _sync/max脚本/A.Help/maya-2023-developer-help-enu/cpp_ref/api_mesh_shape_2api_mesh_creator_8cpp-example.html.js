var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: apiMeshShape/apiMeshCreator.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'api_mesh_shape_2api_mesh_creator_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: apiMeshShape/apiMeshCreator.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">apiMeshShape/apiMeshCreator.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// apiMeshCreator.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshCreator.h&quot;</span>           </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshData.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;api_macros.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPluginData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnEnumAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef M_PI</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define M_PI        3.14159265358979323846</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef M_PI_2</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define M_PI_2      1.57079632679489661923</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Shape implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> apiMeshCreator::size;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> apiMeshCreator::shapeType;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> apiMeshCreator::inputMesh;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> apiMeshCreator::outputSurface;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> apiMeshCreator::id( 0x80089 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiMeshCreator::apiMeshCreator() {}</div>\n\
<div class=\"line\">apiMeshCreator::~apiMeshCreator() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Overrides</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">/* override */</span></div>\n\
<div class=\"line\"><a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshCreator::compute( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; datablock )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    When input attributes are dirty this method will be called to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    recompute the output attributes.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( plug == outputSurface ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Create some user defined geometry data and access the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// geometry so we can set it</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin_data.html\">MFnPluginData</a> fnDataCreator;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> tmpid( apiMeshData::id );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        fnDataCreator.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin_data.html#a7f9c5cbd4b1f86d66d0f5ec3c221b9e4\">create</a>( tmpid, &amp;stat );</div>\n\
<div class=\"line\">        MCHECKERROR( stat, <span class=\"stringliteral\">&quot;compute : error creating apiMeshData&quot;</span>)</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        apiMeshData * newData = (apiMeshData*)fnDataCreator.data( &amp;stat );</div>\n\
<div class=\"line\">        MCHECKERROR( stat, &quot;compute : error gettin at proxy apiMeshData <span class=\"keywordtype\">object</span>&quot;)</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        apiMeshGeom * geomPtr = newData-&gt;fGeometry;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// If there is an input mesh then copy it&#39;s values</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// and construct some apiMeshGeom for it.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> hasHistory = computeInputMesh( plug, datablock,</div>\n\
<div class=\"line\">                                            geomPtr-&gt;vertices,</div>\n\
<div class=\"line\">                                            geomPtr-&gt;face_counts,</div>\n\
<div class=\"line\">                                            geomPtr-&gt;face_connects,</div>\n\
<div class=\"line\">                                            geomPtr-&gt;normals, </div>\n\
<div class=\"line\">                                            geomPtr-&gt;uvcoords</div>\n\
<div class=\"line\">            );</div>\n\
<div class=\"line\">                                            </div>\n\
<div class=\"line\">        <span class=\"comment\">// There is no input mesh so check the shapeType attribute</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// and create either a cube or a sphere.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        if ( !hasHistory ) {</div>\n\
<div class=\"line\">            <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> sizeHandle = datablock.inputValue( size );</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> shape_size = sizeHandle.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ac1983b7d41a8dae60dc5b1eb9f44a53c\">asDouble</a>();</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> typeHandle = datablock.inputValue( shapeType );</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">short</span> shape_type = typeHandle.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#ab4cfc0fe402e4a52cf87b8acc6a29861\">asShort</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span>( shape_type )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> 0 : <span class=\"comment\">// build a cube</span></div>\n\
<div class=\"line\">                    buildCube( shape_size,</div>\n\
<div class=\"line\">                               geomPtr-&gt;vertices,</div>\n\
<div class=\"line\">                               geomPtr-&gt;face_counts,</div>\n\
<div class=\"line\">                               geomPtr-&gt;face_connects,</div>\n\
<div class=\"line\">                               geomPtr-&gt;normals, </div>\n\
<div class=\"line\">                               geomPtr-&gt;uvcoords</div>\n\
<div class=\"line\">                        );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> 1 : <span class=\"comment\">// buld a sphere</span></div>\n\
<div class=\"line\">                    buildSphere( shape_size,</div>\n\
<div class=\"line\">                                 32,</div>\n\
<div class=\"line\">                                 geomPtr-&gt;vertices,</div>\n\
<div class=\"line\">                                 geomPtr-&gt;face_counts,</div>\n\
<div class=\"line\">                                 geomPtr-&gt;face_connects,</div>\n\
<div class=\"line\">                                 geomPtr-&gt;normals, </div>\n\
<div class=\"line\">                                 geomPtr-&gt;uvcoords</div>\n\
<div class=\"line\">                        );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            } <span class=\"comment\">// end switch</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        geomPtr-&gt;faceCount = geomPtr-&gt;face_counts.length();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Assign the new data to the outputSurface handle</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outHandle = datablock.outputValue( outputSurface );</div>\n\
<div class=\"line\">        outHandle.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( newData );</div>\n\
<div class=\"line\">        datablock.setClean( plug );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper routines</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshCreator::buildCube( </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> cube_size, </div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a>&amp; pa,</div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>&amp; faceCounts, </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>&amp; faceConnects,</div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp; normals, </div>\n\
<div class=\"line\">    apiMeshGeomUV&amp; uvs</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Constructs a cube</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> num_faces         = 6;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> num_face_connects = 24;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> normal_value   = 0.5775;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> uv_count          = 14; </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    pa.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>(); faceCounts.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>(); faceConnects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    uvs.reset(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    pa.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -cube_size, -cube_size, -cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(  cube_size, -cube_size, -cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(  cube_size, -cube_size,  cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -cube_size, -cube_size,  cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -cube_size,  cube_size, -cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -cube_size,  cube_size,  cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(  cube_size,  cube_size,  cube_size ) );</div>\n\
<div class=\"line\">    pa.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(  cube_size,  cube_size, -cube_size ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    normals.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>( -normal_value, -normal_value, -normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(  normal_value, -normal_value, -normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(  normal_value, -normal_value,  normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>( -normal_value, -normal_value,  normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>( -normal_value,  normal_value, -normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>( -normal_value,  normal_value,  normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(  normal_value,  normal_value,  normal_value ) );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>(  normal_value,  normal_value, -normal_value ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Define the UVs for the cube. </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> uv_pts[uv_count * 2] = { 0.375, 0.0, </div>\n\
<div class=\"line\">                                   0.625, 0.0,</div>\n\
<div class=\"line\">                                   0.625, 0.25, </div>\n\
<div class=\"line\">                                   0.375, 0.25,</div>\n\
<div class=\"line\">                                   0.625, 0.5,</div>\n\
<div class=\"line\">                                   0.375, 0.5,</div>\n\
<div class=\"line\">                                   0.625, 0.75,</div>\n\
<div class=\"line\">                                   0.375, 0.75,</div>\n\
<div class=\"line\">                                   0.625, 1.0,</div>\n\
<div class=\"line\">                                   0.375, 1.0,</div>\n\
<div class=\"line\">                                   0.875, 0.0,</div>\n\
<div class=\"line\">                                   0.875, 0.25,</div>\n\
<div class=\"line\">                                   0.125, 0.0,</div>\n\
<div class=\"line\">                                   0.125, 0.25 </div>\n\
<div class=\"line\">    }; </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// UV Face Vertex Id. </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv_fvid [ num_face_connects ] = {  0, 1, 2, 3, </div>\n\
<div class=\"line\">                                           3, 2, 4, 5, </div>\n\
<div class=\"line\">                                           5, 4, 6, 7, </div>\n\
<div class=\"line\">                                           7, 6, 8, 9, </div>\n\
<div class=\"line\">                                           1, 10, 11, 2, </div>\n\
<div class=\"line\">                                           12, 0, 3, 13 };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; uv_count; i ++ ) {</div>\n\
<div class=\"line\">        uvs.append_uv( uv_pts[i*2], uv_pts[i*2 + 1] ); </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; num_face_connects; i ++ ) { </div>\n\
<div class=\"line\">        uvs.faceVertexIndex.append( uv_fvid[i] ); </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up an array containing the number of vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for each of the 6 cube faces (4 verticies per face)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_counts[num_faces] = { 4, 4, 4, 4, 4, 4 };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i=0; i&lt;num_faces; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        faceCounts.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( face_counts[i] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up and array to assign vertices from pa to each face </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> face_connects[ num_face_connects ] = {  0, 1, 2, 3,</div>\n\
<div class=\"line\">                                                4, 5, 6, 7,</div>\n\
<div class=\"line\">                                                3, 2, 6, 5,</div>\n\
<div class=\"line\">                                                0, 3, 5, 4,</div>\n\
<div class=\"line\">                                                0, 4, 7, 1,</div>\n\
<div class=\"line\">                                                1, 7, 6, 2  };</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i=0; i&lt;num_face_connects; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        faceConnects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( face_connects[i] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshCreator::buildSphere( </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>              rad, </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>                 div, </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> &amp;       vertices,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> &amp;         counts, </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> &amp;         connects,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a> &amp;      normals, </div>\n\
<div class=\"line\">    apiMeshGeomUV &amp;     uvs</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Create circles of vertices starting with </span></div>\n\
<div class=\"line\"><span class=\"comment\">//    the top pole ending with the botton pole</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> u = -M_PI_2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> v = -M_PI;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> u_delta = M_PI / ((double)div); </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> v_delta = 2 * M_PI / ((double)div); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> topPole( 0.0, rad, 0.0 );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> botPole( 0.0, -rad, 0.0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Build the vertex and normal table</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    vertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( botPole );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( botPole-<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#a00b995f41b11d33118a799cfb2bf00ac\">MPoint::origin</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i=0; i&lt;(div-1); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        u += u_delta;</div>\n\
<div class=\"line\">        v = -M_PI;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> j=0; j&lt;div; j++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> x = rad * cos(u) * cos(v);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> y = rad * sin(u);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> z = rad * cos(u) * sin(v) ;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pnt( x, y, z );</div>\n\
<div class=\"line\">            vertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( pnt );</div>\n\
<div class=\"line\">            normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( pnt-<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#a00b995f41b11d33118a799cfb2bf00ac\">MPoint::origin</a> );</div>\n\
<div class=\"line\">            v += v_delta;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    vertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>( topPole );</div>\n\
<div class=\"line\">    normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( topPole-<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#a00b995f41b11d33118a799cfb2bf00ac\">MPoint::origin</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create the connectivity lists</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 1;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numV = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i=0; i&lt;div; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> j=0; j&lt;div; j++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( i==0 ) {</div>\n\
<div class=\"line\">                counts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( 3 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( 0 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j+vid );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( (j==(div-1)) ? vid : j+vid+1 );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( i==(div-1) ) {</div>\n\
<div class=\"line\">                counts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( 3 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j+vid+1-div );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( vid+1 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j==(div-1) ? vid+1-div : j+vid+2-div );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                counts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( 4 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j + vid+1-div );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j + vid+1 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j == (div-1) ? vid+1 : j+vid+2 );</div>\n\
<div class=\"line\">                connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( j == (div-1) ? vid+1-div : j+vid+2-div );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            numV++;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        vid = numV;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// TODO: Define UVs for sphere ...</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshCreator::computeInputMesh( </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;        plug,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp;         datablock,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a>&amp;        vertices,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>&amp;          counts,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>&amp;          connects,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html\">MVectorArray</a>&amp;       normals, </div>\n\
<div class=\"line\">    apiMeshGeomUV&amp;      uvs</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This function takes an input surface of type kMeshData and converts</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     the geometry into this nodes attributes.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Returns kFailure if nothing is connected.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the input subdiv</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//        </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> inputData = datablock.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( inputMesh, &amp;stat );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, <span class=\"stringliteral\">&quot;compute get inputMesh&quot;</span>)</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> surf = inputData.asMesh();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check if anything is connected</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisObj = thisMObject();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> surfPlug( thisObj, inputMesh );</div>\n\
<div class=\"line\">    if ( !surfPlug.isConnected() ) {</div>\n\
<div class=\"line\">        stat = datablock.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug );</div>\n\
<div class=\"line\">        MCHECKERROR( stat, <span class=\"stringliteral\">&quot;compute setClean&quot;</span> )</div>\n\
<div class=\"line\">        return MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Extract the mesh data</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> surfFn (surf, &amp;stat);</div>\n\
<div class=\"line\">    MCHECKERROR( stat, &quot;compute - <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> error&quot; );</div>\n\
<div class=\"line\">    stat = surfFn.getPoints( vertices, <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html\">MSpace</a>::kObject );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, &quot;compute getPoints&quot;); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check to see if we have UVs to copy. </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hasUVs = surfFn.numUVs() &gt; 0;  </div>\n\
<div class=\"line\">    surfFn.getUVs( uvs.ucoord, uvs.vcoord ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    for ( <span class=\"keywordtype\">int</span> i=0; i&lt;surfFn.numPolygons(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> polyVerts;</div>\n\
<div class=\"line\">        surfFn.getPolygonVertices( i, polyVerts );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> pvc = polyVerts.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">        counts.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( pvc );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> uvId; </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> v=0; v&lt;pvc; v++ ) {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( hasUVs ) {</div>\n\
<div class=\"line\">                surfFn.getPolygonUVid( i, v, uvId );</div>\n\
<div class=\"line\">                uvs.faceVertexIndex.append( uvId );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            connects.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>( polyVerts[v] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> n=0; n&lt;(int)vertices.length(); n++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> normal;</div>\n\
<div class=\"line\">        surfFn.getVertexNormal( n, <span class=\"keyword\">true</span>, normal );</div>\n\
<div class=\"line\">        normals.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector_array.html#a01b5503917181b1b379579cc1d6d802e\">append</a>( normal );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* apiMeshCreator::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Called internally to create a new instance of the users MPx node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiMeshCreator();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshCreator::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Attribute (static) initialization. See api_macros.h.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>             stat;</div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a>   typedAttr;</div>\n\
<div class=\"line\">    <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html\">MFnEnumAttribute</a>    enumAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// ----------------------- INPUTS -------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MAKE_NUMERIC_ATTR(  size, <span class=\"stringliteral\">&quot;size&quot;</span>, <span class=\"stringliteral\">&quot;sz&quot;</span>,</div>\n\
<div class=\"line\">                        <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7acd70f5d2b5e8c1bb8e83b0482a33e518\">MFnNumericData::kDouble</a>, 1,</div>\n\
<div class=\"line\">                        <span class=\"keyword\">false</span>, <span class=\"keyword\">false</span>, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    shapeType = enumAttr.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a6bbfd35f997fda13f9a5824bc1fc6af7\">create</a>( <span class=\"stringliteral\">&quot;shapeType&quot;</span>, <span class=\"stringliteral\">&quot;st&quot;</span>, 0, &amp;stat );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, <span class=\"stringliteral\">&quot;create shapeType attribute&quot;</span> );</div>\n\
<div class=\"line\">    stat = enumAttr.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>( <span class=\"stringliteral\">&quot;cube&quot;</span>, 0 );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, <span class=\"stringliteral\">&quot;add enum type cube&quot;</span> );</div>\n\
<div class=\"line\">    stat = enumAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_enum_attribute.html#a8f286e4714934d59d15bc79ba923e8f1\">addField</a>( <span class=\"stringliteral\">&quot;sphere&quot;</span>, 1 );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, <span class=\"stringliteral\">&quot;add enum type sphere&quot;</span> );</div>\n\
<div class=\"line\">    <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( enumAttr.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>( <span class=\"keyword\">false</span> ) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( enumAttr.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>( <span class=\"keyword\">true</span> ) );</div>\n\
<div class=\"line\">    ADD_ATTRIBUTE( shapeType );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    MAKE_TYPED_ATTR( inputMesh, <span class=\"stringliteral\">&quot;inputMesh&quot;</span>, <span class=\"stringliteral\">&quot;im&quot;</span>, <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFnData::kMesh</a>, <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// ----------------------- OUTPUTS -------------------------</span></div>\n\
<div class=\"line\">    outputSurface = typedAttr.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>( <span class=\"stringliteral\">&quot;outputSurface&quot;</span>, <span class=\"stringliteral\">&quot;os&quot;</span>,</div>\n\
<div class=\"line\">                                      apiMeshData::id,</div>\n\
<div class=\"line\">                                      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\">    MCHECKERROR( stat, <span class=\"stringliteral\">&quot;create outputSurface attribute&quot;</span> )</div>\n\
<div class=\"line\">    typedAttr.setWritable( false );</div>\n\
<div class=\"line\">    ADD_ATTRIBUTE( outputSurface );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// ---------- Specify what inputs affect the outputs ----------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    ATTRIBUTE_AFFECTS( inputMesh, outputSurface );</div>\n\
<div class=\"line\">    ATTRIBUTE_AFFECTS( size, outputSurface );</div>\n\
<div class=\"line\">    ATTRIBUTE_AFFECTS( shapeType, outputSurface );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    return MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";