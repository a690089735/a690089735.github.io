var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MPxDragAndDropBehavior Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_px_drag_and_drop_behavior.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MPxDragAndDropBehavior Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MPxDragAndDropBehavior Class Reference<div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_u_i.html\">OpenMayaUI - API module for user interface</a> &#124; <a class=\"el\" href=\"#!/url=./cpp_ref/group___m_px.html\">Proxy classes</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Writing-a-Hardware-Shading-Node/Implementing-a-hardware-shading.html\">Writing a Hardware Shading Node &gt; Implementing a hardware shading node plug-in</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_px_drag_and_drop_behavior.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_px_drag_and_drop_behavior.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Drag and Drop Behavior.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MPxDragAndDropBehavior.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:abf8554c9810ba811d5c7ca55c1a5b5e4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"abf8554c9810ba811d5c7ca55c1a5b5e4\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#abf8554c9810ba811d5c7ca55c1a5b5e4\">MPxDragAndDropBehavior</a> ()</td></tr>\n\
<tr class=\"memdesc:abf8554c9810ba811d5c7ca55c1a5b5e4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Class constructor. <br></td></tr>\n\
<tr class=\"separator:abf8554c9810ba811d5c7ca55c1a5b5e4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4990a4ccb09882fc544e50557946f180\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a4990a4ccb09882fc544e50557946f180\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a4990a4ccb09882fc544e50557946f180\">~MPxDragAndDropBehavior</a> ()</td></tr>\n\
<tr class=\"memdesc:a4990a4ccb09882fc544e50557946f180\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Class destructor. <br></td></tr>\n\
<tr class=\"separator:a4990a4ccb09882fc544e50557946f180\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a566480407b5581045e61682bbafc5633\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a566480407b5581045e61682bbafc5633\">MPxDragAndDropBehavior</a> (void *init)</td></tr>\n\
<tr class=\"memdesc:a566480407b5581045e61682bbafc5633\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Deprecated in 2016.0</b>  <a href=\"class_m_px_drag_and_drop_behavior.html#a566480407b5581045e61682bbafc5633\">More...</a><br></td></tr>\n\
<tr class=\"separator:a566480407b5581045e61682bbafc5633\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5d0d4625c50cb712ed84a9cc82cbdac5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a5d0d4625c50cb712ed84a9cc82cbdac5\">shouldBeUsedFor</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;destinationNode, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;sourcePlug, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;destinationPlug)</td></tr>\n\
<tr class=\"memdesc:a5d0d4625c50cb712ed84a9cc82cbdac5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method must be overridden in order to use a drag and drop behavior.  <a href=\"class_m_px_drag_and_drop_behavior.html#a5d0d4625c50cb712ed84a9cc82cbdac5\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5d0d4625c50cb712ed84a9cc82cbdac5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a233f305be83c0cd77e5ff1d88c187656\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a233f305be83c0cd77e5ff1d88c187656\">connectAttrToAttr</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;sourcePlug, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;destinationPlug, bool force)</td></tr>\n\
<tr class=\"memdesc:a233f305be83c0cd77e5ff1d88c187656\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by the defaultNavigation command to connect a source attribute to a destination attribute.  <a href=\"class_m_px_drag_and_drop_behavior.html#a233f305be83c0cd77e5ff1d88c187656\">More...</a><br></td></tr>\n\
<tr class=\"separator:a233f305be83c0cd77e5ff1d88c187656\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a20d0cba18d99b6ec9241cbd349421c33\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a20d0cba18d99b6ec9241cbd349421c33\">connectAttrToNode</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;sourcePlug, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;destinationNode, bool force)</td></tr>\n\
<tr class=\"memdesc:a20d0cba18d99b6ec9241cbd349421c33\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by the defaultNavigation command to connect a source attribute to a destination node.You should override this method if you can determine from the type of source node and attribute and the type of destination node what the user is trying to do and you know the appropriate connections that must be made for the end result to be what the user expects.  <a href=\"class_m_px_drag_and_drop_behavior.html#a20d0cba18d99b6ec9241cbd349421c33\">More...</a><br></td></tr>\n\
<tr class=\"separator:a20d0cba18d99b6ec9241cbd349421c33\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a63f8828e5f551870ebe17e1318751562\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a63f8828e5f551870ebe17e1318751562\">connectNodeToAttr</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;destinationPlug, bool force)</td></tr>\n\
<tr class=\"memdesc:a63f8828e5f551870ebe17e1318751562\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by the defaultNavigation command to connect a source node to a destination attribute.  <a href=\"class_m_px_drag_and_drop_behavior.html#a63f8828e5f551870ebe17e1318751562\">More...</a><br></td></tr>\n\
<tr class=\"separator:a63f8828e5f551870ebe17e1318751562\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afed59f6f1e91b3b7f55971b09ad70235\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#afed59f6f1e91b3b7f55971b09ad70235\">connectNodeToNode</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;sourceNode, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;destinationNode, bool force)</td></tr>\n\
<tr class=\"memdesc:afed59f6f1e91b3b7f55971b09ad70235\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by the defaultNavigation command to connect a source node to a destination node.You should override this method if you can determine from the type of source node and the type of destination node what the user is trying to do and you know the appropriate connections that must be made for the end result to be what the user expects.  <a href=\"class_m_px_drag_and_drop_behavior.html#afed59f6f1e91b3b7f55971b09ad70235\">More...</a><br></td></tr>\n\
<tr class=\"separator:afed59f6f1e91b3b7f55971b09ad70235\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_px_drag_and_drop_behavior.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Drag and Drop Behavior. </p>\n\
<p>This is the base class for user defined drag and drop behaviors. This class allows a plugin to override the behavior of drag and drop connections from nodes in the hyperGraph/hyperShade to other nodes or other UI. These behaviors are defined by the type of relationship that is trying to be resolved. These are <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a233f305be83c0cd77e5ff1d88c187656\" title=\"This method is called by the defaultNavigation command to connect a source attribute to a destination...\">connectAttrToAttr()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a20d0cba18d99b6ec9241cbd349421c33\" title=\"This method is called by the defaultNavigation command to connect a source attribute to a destination...\">connectAttrToNode()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a63f8828e5f551870ebe17e1318751562\" title=\"This method is called by the defaultNavigation command to connect a source node to a destination attr...\">connectNodeToAttr()</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#afed59f6f1e91b3b7f55971b09ad70235\" title=\"This method is called by the defaultNavigation command to connect a source node to a destination node...\">connectNodeToNode()</a>. In order for the overridden methods to be executed the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html#a5d0d4625c50cb712ed84a9cc82cbdac5\" title=\"This method must be overridden in order to use a drag and drop behavior. \">shouldBeUsedFor()</a> method must be overridden in order to decide which behavior to use given the source and destination node. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#_a0\">hwPhongShader/hwPhongShaderBehavior.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/slope_shader_2slope_shader_behavior_8h-example.html#_a0\">slopeShader/slopeShaderBehavior.h</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a566480407b5581045e61682bbafc5633\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_px_drag_and_drop_behavior.html\">MPxDragAndDropBehavior</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">void *&#160;</td>\n\
          <td class=\"paramname\"><em>init</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Deprecated in 2016.0</b> </p>\n\
<dl class=\"deprecated\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/deprecated.html#_deprecated000199\">Deprecated:</a></b></dt><dd>Use the default constructor instead.</dd></dl>\n\
<dl class=\"changelog_2016_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2016_0.html#_changelog_2016_0000033\">2016.0:</a></b></dt><dd>Deprecated in this version. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">init</td><td></td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a5d0d4625c50cb712ed84a9cc82cbdac5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool shouldBeUsedFor </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourceNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourcePlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationPlug</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method must be overridden in order to use a drag and drop behavior. </p>\n\
<p>The overridden method will be called by the defaultNavigation command to determine wether or not to use this drag and drop behavior to finish a connection. If the user would like to handle the connection between sourceNode/Plug and destinationNode/Plug then this routine must pass back true, otherwise the routine must pass back false in order for the default connection mechanism to work between these two nodes. sourcePlug and destinationPlug may be null depending on if there were any attributes given in the drag and drop. Use the isNull() method on <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\" title=\"Create and Access dependency node plugs. \">MPlug</a> to assure the plugs are valid.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourceNode</td><td>The source node of the drag and drop or the node being dragged </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationNode</td><td>the destination node of the drag and drop or the node being dropped upon </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourcePlug</td><td>The source plug of the drag and drop or the plug being dragged (this may be null) </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationPlug</td><td>The destination plug of the drag and drop or the plug being dropped upon (this may be null) </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#a1\">hwPhongShader/hwPhongShaderBehavior.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/slope_shader_2slope_shader_behavior_8h-example.html#a1\">slopeShader/slopeShaderBehavior.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a233f305be83c0cd77e5ff1d88c187656\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> connectAttrToAttr </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourcePlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationPlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>force</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by the defaultNavigation command to connect a source attribute to a destination attribute. </p>\n\
<p>If this method is overidden it should attempt to determine what the user probably wants this connection to be, and set up the connection appropriately. If the force argument is true it is intended to notify the user to break any existing connections to the plug, similar to what the mel command \"connectAttr\" -f flag is used for.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourcePlug</td><td>Source plug in the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationPlug</td><td>Destination plug in the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">force</td><td>Tells whether or not to break any existing connections to the destination attribute </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#a8\">hwPhongShader/hwPhongShaderBehavior.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a20d0cba18d99b6ec9241cbd349421c33\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> connectAttrToNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourcePlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>force</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by the defaultNavigation command to connect a source attribute to a destination node.You should override this method if you can determine from the type of source node and attribute and the type of destination node what the user is trying to do and you know the appropriate connections that must be made for the end result to be what the user expects. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourcePlug</td><td>Source plug for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationNode</td><td>Destination node for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">force</td><td>Tells whether or not to break any existing connections to the destination node </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#a7\">hwPhongShader/hwPhongShaderBehavior.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a63f8828e5f551870ebe17e1318751562\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> connectNodeToAttr </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourceNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationPlug</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>force</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by the defaultNavigation command to connect a source node to a destination attribute. </p>\n\
<p>You should override this method if you can determine from the type of source node and the type of destination node and attribute what the user is trying to do and you know the appropriate connections that must be made for the end result to be what the user expects.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourceNode</td><td>Source node for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationPlug</td><td>Destination plug for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">force</td><td>Tells whether or not to break any existing connections to the destination attribute </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#a6\">hwPhongShader/hwPhongShaderBehavior.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/slope_shader_2slope_shader_behavior_8h-example.html#a6\">slopeShader/slopeShaderBehavior.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afed59f6f1e91b3b7f55971b09ad70235\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> connectNodeToNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>sourceNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>destinationNode</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>force</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by the defaultNavigation command to connect a source node to a destination node.You should override this method if you can determine from the type of source node and the type of destination node what the user is trying to do and you know the appropriate connections that must be made for the end result to be what the user expects. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">sourceNode</td><td>Source node for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">destinationNode</td><td>Destination node for the connection </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">force</td><td>Tells whether or not to break any existing connections to the destination node </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_behavior_8h-example.html#a5\">hwPhongShader/hwPhongShaderBehavior.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/slope_shader_2slope_shader_behavior_8h-example.html#a5\">slopeShader/slopeShaderBehavior.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MPxDragAndDropBehavior.h</li>\n\
<li>MPxDragAndDropBehavior.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";