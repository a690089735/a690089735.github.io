var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: OpenMaya.MItDependencyGraph Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'class_open_maya_1_1_m_it_dependency_graph.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: OpenMaya.MItDependencyGraph Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenMaya.MItDependencyGraph Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Maya-Python-API/Command-Plug-in-Basics/Querying-the-Scene-Graph.html\">Maya Python API &gt; Command Plug-ins &gt; Querying the Scene Graph</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_open_maya_1_1_m_it_dependency_graph.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_1_1_m_it_dependency_graph.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_1_1_m_it_dependency_graph.html#pub-static-attribs\">Static Public Attributes</a> &#124;\n\
<a href=\"class_open_maya_1_1_m_it_dependency_graph.html#properties\">Properties</a> &#124;\n\
<a href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Inheritance diagram for OpenMaya.MItDependencyGraph:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"py_ref/class_open_maya_1_1_m_it_dependency_graph.png\" usemap=\"#OpenMaya.MItDependencyGraph_map\" alt=\"\">\n\
  <map id=\"OpenMaya.MItDependencyGraph_map\" name=\"OpenMaya.MItDependencyGraph_map\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:adbdbb740c11ca22eddc0d4a2d5adba31\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#adbdbb740c11ca22eddc0d4a2d5adba31\">__init__</a> ()</td></tr>\n\
<tr class=\"separator:adbdbb740c11ca22eddc0d4a2d5adba31\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6115a76d0b7ebb6d57468afc8806acb3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a6115a76d0b7ebb6d57468afc8806acb3\">__iter__</a> ()</td></tr>\n\
<tr class=\"separator:a6115a76d0b7ebb6d57468afc8806acb3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aac21ee82b363a5c81ad1f0ddbafaa7dc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#aac21ee82b363a5c81ad1f0ddbafaa7dc\">__next__</a> ()</td></tr>\n\
<tr class=\"separator:aac21ee82b363a5c81ad1f0ddbafaa7dc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a567bc0f227a3b2b14e7c02ad173bf4f4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a567bc0f227a3b2b14e7c02ad173bf4f4\">currentNode</a> ()</td></tr>\n\
<tr class=\"separator:a567bc0f227a3b2b14e7c02ad173bf4f4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a62db9905b0ba8359acf66a50faca41f9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a62db9905b0ba8359acf66a50faca41f9\">currentNodeHasUnknownType</a> ()</td></tr>\n\
<tr class=\"separator:a62db9905b0ba8359acf66a50faca41f9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a74b892f223a92d8394353c8713c26c54\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a74b892f223a92d8394353c8713c26c54\">currentPlug</a> ()</td></tr>\n\
<tr class=\"separator:a74b892f223a92d8394353c8713c26c54\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af781ca1328ed04c0175b71dd32915a11\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#af781ca1328ed04c0175b71dd32915a11\">getNodePath</a> ()</td></tr>\n\
<tr class=\"separator:af781ca1328ed04c0175b71dd32915a11\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0f10aef869b4a897312eadf33d9be5e3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a0f10aef869b4a897312eadf33d9be5e3\">getNodesVisited</a> ()</td></tr>\n\
<tr class=\"separator:a0f10aef869b4a897312eadf33d9be5e3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a35277f3244c8a8334cebd79e2abdc480\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a35277f3244c8a8334cebd79e2abdc480\">getPlugPath</a> ()</td></tr>\n\
<tr class=\"separator:a35277f3244c8a8334cebd79e2abdc480\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae0a2f1e4bd01a1fe90b3cce9d74c17ff\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#ae0a2f1e4bd01a1fe90b3cce9d74c17ff\">getPlugsVisited</a> ()</td></tr>\n\
<tr class=\"separator:ae0a2f1e4bd01a1fe90b3cce9d74c17ff\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6bc2b4a6fa1d32572a3c2e17ea3df846\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a6bc2b4a6fa1d32572a3c2e17ea3df846\">isDone</a> ()</td></tr>\n\
<tr class=\"separator:a6bc2b4a6fa1d32572a3c2e17ea3df846\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a266342ff44ef00dc6375b254deedcce7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a266342ff44ef00dc6375b254deedcce7\">iter</a> ()</td></tr>\n\
<tr class=\"separator:a266342ff44ef00dc6375b254deedcce7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac683f496b0f3afae5eefb992488e4a7c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#ac683f496b0f3afae5eefb992488e4a7c\">iternext</a> ()</td></tr>\n\
<tr class=\"separator:ac683f496b0f3afae5eefb992488e4a7c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a719acd3a680691cf8df481599adb242a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a719acd3a680691cf8df481599adb242a\">next</a> ()</td></tr>\n\
<tr class=\"separator:a719acd3a680691cf8df481599adb242a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a865ea5b78cdef8ff0f9b9e06c4010a0d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a865ea5b78cdef8ff0f9b9e06c4010a0d\">previousPlug</a> ()</td></tr>\n\
<tr class=\"separator:a865ea5b78cdef8ff0f9b9e06c4010a0d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a61a044afd7fc9ea137578cbb5517c1ef\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a61a044afd7fc9ea137578cbb5517c1ef\">prune</a> ()</td></tr>\n\
<tr class=\"separator:a61a044afd7fc9ea137578cbb5517c1ef\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af71d9603c0a34ee37c4bd1c6d8b3c4f9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#af71d9603c0a34ee37c4bd1c6d8b3c4f9\">reset</a> ()</td></tr>\n\
<tr class=\"separator:af71d9603c0a34ee37c4bd1c6d8b3c4f9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa10d2323d44f180dcf18790481d95fa8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#aa10d2323d44f180dcf18790481d95fa8\">resetFilter</a> ()</td></tr>\n\
<tr class=\"separator:aa10d2323d44f180dcf18790481d95fa8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab8227bbe1a5d8de4a895097dfb4aa322\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#ab8227bbe1a5d8de4a895097dfb4aa322\">resetTo</a> ()</td></tr>\n\
<tr class=\"separator:ab8227bbe1a5d8de4a895097dfb4aa322\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aba7902bfb79f566871e7c664206b1eec\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#aba7902bfb79f566871e7c664206b1eec\">rootNode</a> ()</td></tr>\n\
<tr class=\"separator:aba7902bfb79f566871e7c664206b1eec\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae177831c9bd6b35a702118e0ce4932da\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#ae177831c9bd6b35a702118e0ce4932da\">rootPlug</a> ()</td></tr>\n\
<tr class=\"separator:ae177831c9bd6b35a702118e0ce4932da\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:af7a74c999defa03c75a19e486352ba6d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#af7a74c999defa03c75a19e486352ba6d\">__new__</a> ()</td></tr>\n\
<tr class=\"separator:af7a74c999defa03c75a19e486352ba6d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-attribs\"></a>\n\
Static Public Attributes</h2></td></tr>\n\
<tr class=\"memitem:afe9c8523ad946ce628860f89f93baa89\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"afe9c8523ad946ce628860f89f93baa89\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kBreadthFirst</b> = 1</td></tr>\n\
<tr class=\"separator:afe9c8523ad946ce628860f89f93baa89\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab71cd0d6a14730f5db4c44fe0db3aae6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab71cd0d6a14730f5db4c44fe0db3aae6\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kConnectedTo</b> = 1</td></tr>\n\
<tr class=\"separator:ab71cd0d6a14730f5db4c44fe0db3aae6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab65a401d5ed30ce11ecb514b2eadac46\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab65a401d5ed30ce11ecb514b2eadac46\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDependsOn</b> = 0</td></tr>\n\
<tr class=\"separator:ab65a401d5ed30ce11ecb514b2eadac46\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab1ce49df67f451fa97ccc30924066386\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab1ce49df67f451fa97ccc30924066386\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDepthFirst</b> = 0</td></tr>\n\
<tr class=\"separator:ab1ce49df67f451fa97ccc30924066386\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a42f08e1fe30b16be8a30d71f96c96dca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a42f08e1fe30b16be8a30d71f96c96dca\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kDownstream</b> = 0</td></tr>\n\
<tr class=\"separator:a42f08e1fe30b16be8a30d71f96c96dca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abfe4b3fa04d400c09db8f75a027c6b47\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"abfe4b3fa04d400c09db8f75a027c6b47\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kEvaluationGraph</b> = 2</td></tr>\n\
<tr class=\"separator:abfe4b3fa04d400c09db8f75a027c6b47\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab91e41858dfb14d698b123b702f8b8ea\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab91e41858dfb14d698b123b702f8b8ea\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kNodeLevel</b> = 0</td></tr>\n\
<tr class=\"separator:ab91e41858dfb14d698b123b702f8b8ea\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a607b86d126704acf165003bcf70d62b1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a607b86d126704acf165003bcf70d62b1\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kPlugLevel</b> = 1</td></tr>\n\
<tr class=\"separator:a607b86d126704acf165003bcf70d62b1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5ace58c0aa56bb3b6eea833aa7e46959\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a5ace58c0aa56bb3b6eea833aa7e46959\"></a>\n\
int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><b>kUpstream</b> = 1</td></tr>\n\
<tr class=\"separator:a5ace58c0aa56bb3b6eea833aa7e46959\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"properties\"></a>\n\
Properties</h2></td></tr>\n\
<tr class=\"memitem:afd72ad2fd7cc7b04c3db6bff9861dfef\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#afd72ad2fd7cc7b04c3db6bff9861dfef\">currentDirection</a></td></tr>\n\
<tr class=\"separator:afd72ad2fd7cc7b04c3db6bff9861dfef\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a77964bb657f2459b9c2b651221f75c3f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a77964bb657f2459b9c2b651221f75c3f\">currentFilter</a></td></tr>\n\
<tr class=\"separator:a77964bb657f2459b9c2b651221f75c3f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a11e6509dc8ae4fed5009ca43e5833fc9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a11e6509dc8ae4fed5009ca43e5833fc9\">currentLevel</a></td></tr>\n\
<tr class=\"separator:a11e6509dc8ae4fed5009ca43e5833fc9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0bacc4d1e6c8ffa25460d19469e2eee9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a0bacc4d1e6c8ffa25460d19469e2eee9\">currentRelationship</a></td></tr>\n\
<tr class=\"separator:a0bacc4d1e6c8ffa25460d19469e2eee9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab07738e66c8b4cbb0f0d65c26a72ca25\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#ab07738e66c8b4cbb0f0d65c26a72ca25\">currentTraversal</a></td></tr>\n\
<tr class=\"separator:ab07738e66c8b4cbb0f0d65c26a72ca25\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a75db425ac5f03a6ebfc78b00695bd59e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a75db425ac5f03a6ebfc78b00695bd59e\">pruningOnFilter</a></td></tr>\n\
<tr class=\"separator:a75db425ac5f03a6ebfc78b00695bd59e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6a256c103cbd7a5c4c3c7a8b8dc47a27\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_1_1_m_it_dependency_graph.html#a6a256c103cbd7a5c4c3c7a8b8dc47a27\">traversingOverWorldSpaceDependents</a></td></tr>\n\
<tr class=\"separator:a6a256c103cbd7a5c4c3c7a8b8dc47a27\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><pre class=\"fragment\">Dependency Graph Iterator.\n\
\n\
Iterate over Dependency Graph (DG) Nodes or Plugs starting at a specified\n\
root Node or Plug.\n\
\n\
\n\
Set and query the root of the iteration.\n\
\n\
\n\
Set and query the direction (downstream or upstream), traversal priority\n\
(depth first or breadth first), level of detail (Node level or Plug\n\
level) and relationship (dependency, DG connection, eval graph) of the iteration.\n\
\n\
\n\
Set and disable a filter to iterate over only specific types (MFn.Type) of\n\
Nodes.\n\
\n\
\n\
Reset the root, filter, direction, traversal priority and level of detail\n\
of the iteration.\n\
\n\
\n\
Prune branches of the graph from iteration.\n\
\n\
\n\
In Maya, all geometry, animation and rendering information is implemented\n\
in nodes in the Dependency Graph (DG).  The DG includes the Directed Acyclic\n\
Graph (DAG).  Therefore, all DAG nodes are also DG nodes.  The data on nodes\n\
is associated with Attributes.  Attributes on nodes are connected to\n\
Attributes on other nodes via plugs on the Attributes.  Plugs are, in effect\n\
the external intefaces of Attributes.\n\
\n\
\n\
The DG Iterator Class (MItDependencyGraph) provides methods for iterating\n\
over either nodes or plugs, as well as methods for setting and querying the\n\
characteristics and behaviour of the iterator.\n\
\n\
\n\
This iterator will traverse all connected attributes upstream or\n\
downstream from the root node of the traversal. For non root nodes,\n\
only attributes that are affected by the incoming attribute to that\n\
node will be traversed.  Hence, only nodes to which data from the root\n\
node is flowing will be traversed. \n\
\n\
\n\
By default, the iterator does not traverse world-space attribute\n\
dependencies (an example of a world-space dependency is that\n\
translateX affects worldMatrix). The\n\
setTraversalOverWorldSpaceDependents method can be used to enable such\n\
traversal. Note that even when world-space traversal is enabled, the\n\
iterator will only iterate to connected nodes. It does not iterate up\n\
and down through the dag hierarchy.\n\
\n\
\n\
The DG Iterator is used in conjunction with the Maya Object (MObject), plug\n\
(MPlug), Maya Object Array (MObjectArray) and plug Array (MPlugArray)\n\
classes.\n\
\n\
\n\
It is also useful to use Function Sets specific to the nodes returned by\n\
the iterator to query and modify the nodes in the DG.\n\
\n\
\n\
The DG itself can be modified using a DG Modifer (MDGModifier).\n\
\n\
\n\
Additionally, nodes can be added to and retrieved from selection lists using\n\
the Selection List (MSelectionList) class and Selection List Iterator\n\
(MItSelectionList).  This can be useful for obtaining the root node for an\n\
iteration.\n\
\n\
\n\
Attributes on the nodes can be manipulated using the Attribute Function Set\n\
(MFnAttribute) and its derivations.</pre> </div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"adbdbb740c11ca22eddc0d4a2d5adba31\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.__init__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Initialize self.  See help(type(self)) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a6115a76d0b7ebb6d57468afc8806acb3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.__iter__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Implement iter(self).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af7a74c999defa03c75a19e486352ba6d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.__new__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Create and return a new object.  See help(type) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aac21ee82b363a5c81ad1f0ddbafaa7dc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.__next__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Implement next(self).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a567bc0f227a3b2b14e7c02ad173bf4f4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentNode() -&gt; MObject\n\
\n\
Retrieves the current node of the iteration.  Results in a null object on\n\
failure or if the node is of a unrecognized type.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a62db9905b0ba8359acf66a50faca41f9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentNodeHasUnknownType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentNodeHasUnknownType() -&gt; Bool\n\
\n\
Indicates whether or not the current node has an unrecognised\n\
type.  This is useful if an unexpected failure is encountered\n\
in the next() or currentNode() methods.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a74b892f223a92d8394353c8713c26c54\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentPlug </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">currentPlug() -&gt; MPlug\n\
\n\
Retrieves the current plug of the iteration.  Results in a null\n\
plug on failure.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af781ca1328ed04c0175b71dd32915a11\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.getNodePath </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNodePath() -&gt; MObjectArray\n\
\n\
Retrieves the direct path from the current node to the root\n\
node.  Path does not include the current node.\n\
State of the provided array is undefined if this method fails.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0f10aef869b4a897312eadf33d9be5e3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.getNodesVisited </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getNodesVisited() -&gt; MObjectArray\n\
\n\
Retrieves all nodes visited during the iteration.\n\
State of the provided array is undefined if this method fails.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a35277f3244c8a8334cebd79e2abdc480\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.getPlugPath </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getPlugPath() -&gt; MPlugArray\n\
\n\
Retrieves the direct path from the current plug to the root\n\
plug, with the current plug in element 0 of the array and the root\n\
plug in the final element of the array.\n\
\n\
Once the iterator is done (i.e. isDone() returns True) there is no\n\
longer a current plug and this method will return an empty array.\n\
\n\
If this method fails the state of the returned array is undefined.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae0a2f1e4bd01a1fe90b3cce9d74c17ff\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.getPlugsVisited </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">getPlugsVisited() -&gt; MPlugArray\n\
\n\
Retrieves all plugs visited during the iteration.\n\
State of the provided array is undefined if this method fails.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6bc2b4a6fa1d32572a3c2e17ea3df846\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.isDone </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">isDone() -&gt; Bool\n\
\n\
Indicates whether or not all nodes or plugs have been iterated over\n\
in accordance with the direction, traversal, level, relationship and filter.\n\
If a valid filter is set, the iterator only visits those nodes that match\n\
the filter.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a266342ff44ef00dc6375b254deedcce7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.iter </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">iter() -&gt; self\n\
\n\
Initializes the iterator object for pythonic iteration.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac683f496b0f3afae5eefb992488e4a7c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.iternext </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">iternext() -&gt; self\n\
\n\
Used in pythonic iteration to move the iterator</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a719acd3a680691cf8df481599adb242a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.next </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">next() -&gt; self\n\
\n\
Iterates to the next node or plug in accordance with the\n\
direction, traversal, level, relationship and filter.  If a valid filter is\n\
set, the iterator only visits those nodes that match the\n\
filter.  When filtering is enabled nodes that have unknown type\n\
are treated as non-matching nodes.  With filtering disabled,\n\
iteration to a node with an unknown type is treated as a\n\
failure.  An attempt to iterate when there is nothing left to\n\
iterate over has no effect.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a865ea5b78cdef8ff0f9b9e06c4010a0d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.previousPlug </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">previousPlug() -&gt; MPlug\n\
\n\
Retrieves the previous plug of the iteration.  Results in a\n\
null plug on failure.  Null plug may also indicate that the\n\
current plug is the root plug.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a61a044afd7fc9ea137578cbb5517c1ef\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.prune </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">prune() -&gt; self\n\
\n\
Prunes the search path at the current plug.  Iterator will not\n\
visit any of the plugs connected to the pruned plug.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af71d9603c0a34ee37c4bd1c6d8b3c4f9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.reset </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">reset() -&gt; self\n\
\n\
Clears iterator data and resets the iterator to the root node\n\
or plug.  If a valid filter is enabled, the iterator\n\
automatically advances to the next node after the root node\n\
that matches the filter.  If no matching node is found an\n\
exception is thrown.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa10d2323d44f180dcf18790481d95fa8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.resetFilter </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">resetFilter() -&gt; self\n\
\n\
Resets the node or plug filter to default, MFn.kInvalid\n\
(filter disabled).  Disables pruning on the filter (default).\n\
Resets the iterator.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab8227bbe1a5d8de4a895097dfb4aa322\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.resetTo </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">resetTo(rootObject, filter = MFn.kInvalid, direction = MItDependencyGraph.kDownstream, traversal = MItDependencyGraph.kDepthFirst, level = MItDependencyGraph.kNodeLevel, relationship = MItDependencyGraph.kDependsOn) -&gt; self\n\
resetTo(rootPlug, filter = MFn.kInvalid, direction = MItDependencyGraph.kDownstream, traversal = MItDependencyGraph.kDepthFirst, level = MItDependencyGraph.kNodeLevel, relationship = MItDependencyGraph.kDependsOn) -&gt; self\n\
resetTo(infoObject, rootObject OR rootPlug, direction = MItDependencyGraph.kDownstream, traversal = MItDependencyGraph.kDepthFirst, level = MItDependencyGraph.kNodeLevel, relationship = MItDependencyGraph.kDependsOn) -&gt; self\n\
\n\
\n\
Clears iterator data and re-initializes the iterator.  If a\n\
valid filter is provided, the iterator automatically advances\n\
to the next node after the root node that matches the filter.\n\
If no matching node is found an exception is thrown.\n\
\n\
\n\
   rootObject (MObject) - Root node to begin the next traversal.\n\
   rootPlug (MPlug) - Root plug to to begin the next traversal.\n\
   infoObject (MIteratorType) - Iterator object having info on filter or filterlist.\n\
   filter (MFn.Type) - Function set type, defaults to MFn.kInvalid\n\
   direction (MItDependencyGraph.Direction) - Primary direction of iteration, defaults to MItDependencyGraph.kDownstream\n\
   traversal (MItDependencyGraph.Traversal) - Order of traversal, defaults to MItDependencyGraph.kDepthFirst\n\
   level (MItDependencyGraph.Level) - Level of detail of the iteration, defaults to MItDependencyGraph.kNodeLevel\n\
   relationship (MItDependencyGraph.Relationship) - Relationship mode of the iteration, defaults to MItDependencyGraph.kDependsOn</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aba7902bfb79f566871e7c664206b1eec\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.rootNode </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">rootNode() -&gt; MObject\n\
\n\
Retrieves the root node of the iteration.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae177831c9bd6b35a702118e0ce4932da\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.rootPlug </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">rootPlug() -&gt; MPlug\n\
\n\
Retrieves the root plug of the iteration.</pre> \n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Property Documentation</h2>\n\
<a class=\"anchor\" id=\"afd72ad2fd7cc7b04c3db6bff9861dfef\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentDirection</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Direction of the iteration through the graph (MItDependencyGraph.Direction).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a77964bb657f2459b9c2b651221f75c3f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentFilter</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Current node type filter (MFn.Type) .</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a11e6509dc8ae4fed5009ca43e5833fc9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentLevel</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Level of the iteration through the graph (MItDependencyGraph.Level).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0bacc4d1e6c8ffa25460d19469e2eee9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentRelationship</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Relationship mode of the iteration through the graph (MItDependencyGraph.Relationship).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab07738e66c8b4cbb0f0d65c26a72ca25\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.currentTraversal</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Traversal mode of the iteration through the graph (MItDependencyGraph.Traversal).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a75db425ac5f03a6ebfc78b00695bd59e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.pruningOnFilter</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Whether or not the iteration path is pruned automatically at nodes or plugs which do not match the filter (Bool).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6a256c103cbd7a5c4c3c7a8b8dc47a27\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMaya.MItDependencyGraph.traversingOverWorldSpaceDependents</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\"> Whether the iterator is set to traverse world-space attribute dependencies (Bool).</pre> \n\
</div>\n\
</div>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";