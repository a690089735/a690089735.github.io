var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: rawfootPrintNode/rawfootPrintNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'rawfoot_print_node_2rawfoot_print_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: rawfootPrintNode/rawfootPrintNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">rawfootPrintNode/rawfootPrintNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2020 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license agreement</span></div>\n\
<div class=\"line\"><span class=\"comment\">// provided at the time of installation or download, or which otherwise</span></div>\n\
<div class=\"line\"><span class=\"comment\">// accompanies this software in either electronic or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _MSC_VER &gt;= 1700</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable: 4005 )</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxLocatorNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDistance.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFileObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEventMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEvaluationNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPointArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Viewport 2.0 includes</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxDrawOverride.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUserData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometryUtilities.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStateManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MShaderManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MRenderTargetManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAnimControl.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;assert.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DX stuff</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define WIN32_LEAN_AND_MEAN</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;d3d11.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;dxgi.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;DirectXMath.h&gt;</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">using namespace </span>DirectX;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;d3dcompiler.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #ifndef D3DCOMPILE_ENABLE_STRICTNESS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        #define D3DCOMPILE_ENABLE_STRICTNESS D3D10_SHADER_ENABLE_STRICTNESS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        #define D3DCOMPILE_DEBUG D3D10_SHADER_DEBUG</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// GL stuff</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined (__APPLE__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define GL_DO_NOT_WARN_IF_MULTI_GL_VERSION_HEADERS_INCLUDED</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;OpenGL/gl3.h&gt;</span> <span class=\"comment\">// For gl*VertexArray(s) and APIENTRY</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#elif defined (__linux__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;GL/glx.h&gt;</span> <span class=\"comment\">// For glXGetProcAddressARB</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Foot Data</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> sole[][3] = { {  0.00f, 0.0f, -0.70f },</div>\n\
<div class=\"line\">                           {  0.04f, 0.0f, -0.69f },</div>\n\
<div class=\"line\">                           {  0.09f, 0.0f, -0.65f },</div>\n\
<div class=\"line\">                           {  0.13f, 0.0f, -0.61f },</div>\n\
<div class=\"line\">                           {  0.16f, 0.0f, -0.54f },</div>\n\
<div class=\"line\">                           {  0.17f, 0.0f, -0.46f },</div>\n\
<div class=\"line\">                           {  0.17f, 0.0f, -0.35f },</div>\n\
<div class=\"line\">                           {  0.16f, 0.0f, -0.25f },</div>\n\
<div class=\"line\">                           {  0.15f, 0.0f, -0.14f },</div>\n\
<div class=\"line\">                           {  0.13f, 0.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 0.0f,  0.00f },</div>\n\
<div class=\"line\">                           { -0.13f, 0.0f,  0.00f },</div>\n\
<div class=\"line\">                           { -0.15f, 0.0f, -0.14f },</div>\n\
<div class=\"line\">                           { -0.16f, 0.0f, -0.25f },</div>\n\
<div class=\"line\">                           { -0.17f, 0.0f, -0.35f },</div>\n\
<div class=\"line\">                           { -0.17f, 0.0f, -0.46f },</div>\n\
<div class=\"line\">                           { -0.16f, 0.0f, -0.54f },</div>\n\
<div class=\"line\">                           { -0.13f, 0.0f, -0.61f },</div>\n\
<div class=\"line\">                           { -0.09f, 0.0f, -0.65f },</div>\n\
<div class=\"line\">                           { -0.04f, 0.0f, -0.69f },</div>\n\
<div class=\"line\">                           { -0.00f, 0.0f, -0.70f } };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> soleNorm[][3] = { {  0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f },</div>\n\
<div class=\"line\">                           { 0.00f, 1.0f, 0.00f } };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> heel[][3] = { {  0.00f, 0.0f,  0.06f },</div>\n\
<div class=\"line\">                           {  0.13f, 0.0f,  0.06f },</div>\n\
<div class=\"line\">                           {  0.14f, 0.0f,  0.15f },</div>\n\
<div class=\"line\">                           {  0.14f, 0.0f,  0.21f },</div>\n\
<div class=\"line\">                           {  0.13f, 0.0f,  0.25f },</div>\n\
<div class=\"line\">                           {  0.11f, 0.0f,  0.28f },</div>\n\
<div class=\"line\">                           {  0.09f, 0.0f,  0.29f },</div>\n\
<div class=\"line\">                           {  0.04f, 0.0f,  0.30f },</div>\n\
<div class=\"line\">                           {  0.00f, 0.0f,  0.30f },</div>\n\
<div class=\"line\">                           { -0.04f, 0.0f,  0.30f },</div>\n\
<div class=\"line\">                           { -0.09f, 0.0f,  0.29f },</div>\n\
<div class=\"line\">                           { -0.11f, 0.0f,  0.28f },</div>\n\
<div class=\"line\">                           { -0.13f, 0.0f,  0.25f },</div>\n\
<div class=\"line\">                           { -0.14f, 0.0f,  0.21f },</div>\n\
<div class=\"line\">                           { -0.14f, 0.0f,  0.15f },</div>\n\
<div class=\"line\">                           { -0.13f, 0.0f,  0.06f },</div>\n\
<div class=\"line\">                           { -0.00f, 0.0f,  0.06f } };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> heelNorm[][3] = { {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f },</div>\n\
<div class=\"line\">                           {  0.00f, 1.0f,  0.00f } };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">int</span> soleCount = 21;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">int</span> heelCount = 17;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Index buffer data for drawing in Dx and Core Profile modes:</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> soleWireIndices[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            0, 1,</div>\n\
<div class=\"line\">            1, 2,</div>\n\
<div class=\"line\">            2, 3,</div>\n\
<div class=\"line\">            3, 4,</div>\n\
<div class=\"line\">            4, 5,</div>\n\
<div class=\"line\">            5, 6,</div>\n\
<div class=\"line\">            6, 7,</div>\n\
<div class=\"line\">            7, 8,</div>\n\
<div class=\"line\">            8, 9,</div>\n\
<div class=\"line\">            9, 10,</div>\n\
<div class=\"line\">            10, 11,</div>\n\
<div class=\"line\">            11, 12,</div>\n\
<div class=\"line\">            12, 13,</div>\n\
<div class=\"line\">            13, 14,</div>\n\
<div class=\"line\">            14, 15,</div>\n\
<div class=\"line\">            15, 16,</div>\n\
<div class=\"line\">            16, 17,</div>\n\
<div class=\"line\">            17, 18,</div>\n\
<div class=\"line\">            18, 19,</div>\n\
<div class=\"line\">            19, 20</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> heelWireIndices[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            0, 1,</div>\n\
<div class=\"line\">            1, 2,</div>\n\
<div class=\"line\">            2, 3,</div>\n\
<div class=\"line\">            3, 4,</div>\n\
<div class=\"line\">            4, 5,</div>\n\
<div class=\"line\">            5, 6,</div>\n\
<div class=\"line\">            6, 7,</div>\n\
<div class=\"line\">            7, 8,</div>\n\
<div class=\"line\">            8, 9,</div>\n\
<div class=\"line\">            9, 10,</div>\n\
<div class=\"line\">            10, 11,</div>\n\
<div class=\"line\">            11, 12,</div>\n\
<div class=\"line\">            12, 13,</div>\n\
<div class=\"line\">            13, 14,</div>\n\
<div class=\"line\">            14, 15,</div>\n\
<div class=\"line\">            15, 16</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> soleShadedIndices[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            0, 1, 2,</div>\n\
<div class=\"line\">            0, 2, 3,</div>\n\
<div class=\"line\">            0, 3, 4,</div>\n\
<div class=\"line\">            0, 4, 5,</div>\n\
<div class=\"line\">            0, 5, 6,</div>\n\
<div class=\"line\">            0, 6, 7,</div>\n\
<div class=\"line\">            0, 7, 8,</div>\n\
<div class=\"line\">            0, 8, 9,</div>\n\
<div class=\"line\">            0, 9, 10,</div>\n\
<div class=\"line\">            0, 10, 11,</div>\n\
<div class=\"line\">            0, 11, 12,</div>\n\
<div class=\"line\">            0, 12, 13,</div>\n\
<div class=\"line\">            0, 13, 14,</div>\n\
<div class=\"line\">            0, 14, 15,</div>\n\
<div class=\"line\">            0, 15, 16,</div>\n\
<div class=\"line\">            0, 16, 17,</div>\n\
<div class=\"line\">            0, 17, 18,</div>\n\
<div class=\"line\">            0, 18, 19,</div>\n\
<div class=\"line\">            0, 19, 20</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> heelShadedIndices[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            0, 1, 2,</div>\n\
<div class=\"line\">            0, 2, 3,</div>\n\
<div class=\"line\">            0, 3, 4,</div>\n\
<div class=\"line\">            0, 4, 5,</div>\n\
<div class=\"line\">            0, 5, 6,</div>\n\
<div class=\"line\">            0, 6, 7,</div>\n\
<div class=\"line\">            0, 7, 8,</div>\n\
<div class=\"line\">            0, 8, 9,</div>\n\
<div class=\"line\">            0, 9, 10,</div>\n\
<div class=\"line\">            0, 10, 11,</div>\n\
<div class=\"line\">            0, 11, 12,</div>\n\
<div class=\"line\">            0, 12, 13,</div>\n\
<div class=\"line\">            0, 13, 14,</div>\n\
<div class=\"line\">            0, 14, 15,</div>\n\
<div class=\"line\">            0, 15, 16</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// 8 Vertices for drawing the bounding box in DX and Core Profile mode</span></div>\n\
<div class=\"line\"><span class=\"comment\">// lower and upper values of the sole and heel vertices +/- 0.1</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> bbData[][3] = {</div>\n\
<div class=\"line\">        { -0.18f, 0.f, -0.71f},</div>\n\
<div class=\"line\">        {  0.18f, 0.f, -0.71f},</div>\n\
<div class=\"line\">        {  0.18f, 0.f,  0.31f},</div>\n\
<div class=\"line\">        { -0.18f, 0.f,  0.31f},</div>\n\
<div class=\"line\">        { -0.18f, 0.f, -0.71f},</div>\n\
<div class=\"line\">        {  0.18f, 0.f, -0.71f},</div>\n\
<div class=\"line\">        {  0.18f, 0.f,  0.31f},</div>\n\
<div class=\"line\">        { -0.18f, 0.f,  0.31f}};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Index buffer for Wireframe drawing in Dx and Core Profile</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> bbWireIndices[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            0,1,</div>\n\
<div class=\"line\">            1,2,</div>\n\
<div class=\"line\">            2,3,</div>\n\
<div class=\"line\">            3,0,</div>\n\
<div class=\"line\">            4,5,</div>\n\
<div class=\"line\">            5,6,</div>\n\
<div class=\"line\">            6,7,</div>\n\
<div class=\"line\">            7,4,</div>\n\
<div class=\"line\">            0,4,</div>\n\
<div class=\"line\">            1,5,</div>\n\
<div class=\"line\">            2,6,</div>\n\
<div class=\"line\">            3,7</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Node implementation with standard viewport draw</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>rawfootPrint : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html\">MPxLocatorNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    rawfootPrint();</div>\n\
<div class=\"line\">    ~rawfootPrint() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         compute( <span class=\"keyword\">const</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            isBounded() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>    boundingBox() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> preEvaluation(<span class=\"keyword\">const</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_context.html\">MDGContext</a>&amp; context, <span class=\"keyword\">const</span> <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evaluationNode) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    getCacheSetup(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evalNode, <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info.html\">MNodeCacheDisablingInfo</a>&amp; disablingInfo, <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html\">MNodeCacheSetupInfo</a>&amp; cacheSetupInfo, <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a>&amp; monitoredAttributes) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *          creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         size;               <span class=\"comment\">// The size of the foot</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         transparencySort;   <span class=\"comment\">// The transparent status of the foot</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         transparency;       <span class=\"comment\">// The transparent value of the foot</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     id;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>     drawDbClassification;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>     drawRegistrantId;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootPrint::size;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootPrint::transparencySort;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootPrint::transparency;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> rawfootPrint::id( 0x0008002D );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> rawfootPrint::drawDbClassification(<span class=\"stringliteral\">&quot;drawdb/geometry/rawfootPrint&quot;</span>);</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> rawfootPrint::drawRegistrantId(<span class=\"stringliteral\">&quot;RawFootprintNodePlugin&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">rawfootPrint::rawfootPrint() {}</div>\n\
<div class=\"line\">rawfootPrint::~rawfootPrint() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> rawfootPrint::compute( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; <span class=\"comment\">/*plug*/</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; <span class=\"comment\">/*data*/</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> rawfootPrint::isBounded()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> rawfootPrint::boundingBox()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the size</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisNode = thisMObject();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug( thisNode, size );</div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> sizeVal;</div>\n\
<div class=\"line\">    plug.getValue( sizeVal );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> multiplier = sizeVal.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#ace39ab92685b0f5ab1a2925e748efb1f\">asCentimeters</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner1( -0.17, 0.0, -0.7 );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner2( 0.17, 0.0, 0.3 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    corner1 = corner1 * multiplier;</div>\n\
<div class=\"line\">    corner2 = corner2 * multiplier;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>( corner1, corner2 );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Called before this node is evaluated by Evaluation Manager</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> rawfootPrint::preEvaluation(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_context.html\">MDGContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evaluationNode)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (context.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_context.html#a761a03ae58bbf2942f90578a0e61ada7\">isNormal</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// The size attribute is set to affect the localScale attribute during</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// initialization, thus no need to be checked here to trigger geometry</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// change.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ((evaluationNode.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#abc632b073f3b3abeb4ca052f20573dd6\">dirtyPlugExists</a>(transparencySort, &amp;status) &amp;&amp; status) ||</div>\n\
<div class=\"line\">            (evaluationNode.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html#abc632b073f3b3abeb4ca052f20573dd6\">dirtyPlugExists</a>(transparency, &amp;status) &amp;&amp; status))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\">MHWRender::MRenderer::setGeometryDrawDirty</a>(thisMObject());</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> rawfootPrint::getCacheSetup(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_evaluation_node.html\">MEvaluationNode</a>&amp; evalNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info.html\">MNodeCacheDisablingInfo</a>&amp; disablingInfo, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html\">MNodeCacheSetupInfo</a>&amp; cacheSetupInfo, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a>&amp; monitoredAttributes)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#aade939f51d18467f6d5af0ccec27d896\">MPxLocatorNode::getCacheSetup</a>(evalNode, disablingInfo, cacheSetupInfo, monitoredAttributes);</div>\n\
<div class=\"line\">    assert(!disablingInfo.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_disabling_info.html#a7a82d4f610253dd0b96d95e59153a429\">getCacheDisabled</a>());</div>\n\
<div class=\"line\">    cacheSetupInfo.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html#aa8e8aa3d550475221be89a27e48df13e\">setPreference</a>(<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_cache_setup_info.html#a6860ea2ce3c2eaa8de289c1638d288eba6039051d3a71594da68a931e5dcf7179\">MNodeCacheSetupInfo::kWantToCacheByDefault</a>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* rawfootPrint::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> rawfootPrint();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Viewport 2.0 override implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintData : <span class=\"keyword\">public</span> <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    ~RawFootPrintData()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{ </div>\n\
<div class=\"line\">        mBlendState = <span class=\"keyword\">nullptr</span>; </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>                         fMultiplier;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>                         fColor[4];</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                          fCustomBoxDraw;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>                  fCurrentBoundingBox;</div>\n\
<div class=\"line\">    <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_a_g_draw_override_info.html\">MDAGDrawOverrideInfo</a>          fDrawOV;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* mBlendState{<span class=\"keyword\">nullptr</span>};</div>\n\
<div class=\"line\">    MUint64                       mLastFrameStamp{0};</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper class declaration for the object drawing</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintDrawAgent</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    RawFootPrintDrawAgent() : mDrawContext(NULL), mShaderOverride(NULL) {}</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> ~RawFootPrintDrawAgent(){}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawShaded() = 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawBoundingBox() = 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawWireframe() = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> setMatrix(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo) = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride ) {</div>\n\
<div class=\"line\">        mDrawContext = &amp;context;</div>\n\
<div class=\"line\">        mShaderOverride = passShaderOverride;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Sample code to debug geometry streams required for the override</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// shader.</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> debugShader = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html\">MHWRender::MVertexBufferDescriptorList</a> bufferList;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mShaderOverride) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (debugShader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                mShaderOverride-&gt;requiredVertexBuffers(bufferList);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;bufferList.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>(); i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a> desc;</div>\n\
<div class=\"line\">                    bufferList.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor_list.html#ab5970217cd80acac6aa900cc1daec6b8\">getDescriptor</a>( i, desc );</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;Buffer[%d][name=%s]\\n&quot;</span>, i,</div>\n\
<div class=\"line\">                        desc.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aca2cba4630391c78dcf1a828986160da\">name</a>().<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[semantic = %s\\n&quot;</span>, desc.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aec39ee3496166457d1ccdf73c8d1a3b2\">semanticName</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[dataType = %d\\n&quot;</span>, desc.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc7588a483f61d3d4a1e8204ca14d6f6\">dataType</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[dataTyleSize = %d\\n&quot;</span>, desc.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#a064b0aed53f7aa48d27145b41f9590aa\">dataTypeSize</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[dimension = %d\\n&quot;</span>, desc.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#ae5acbe47d704ceb866e3717e2ac9422f\">dimension</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[offset = %d\\n&quot;</span>, desc.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aaa02ea556dee3025f49406b9d3fb662c\">offset</a>());</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;[stride = %d\\n&quot;</span>, desc.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#a2f0529f7f5ff03b8a26e3a3d1925bb2b\">stride</a>());</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }           </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            mShaderOverride-&gt;bind( *mDrawContext );</div>\n\
<div class=\"line\">            mShaderOverride-&gt;updateParameters( *mDrawContext );</div>\n\
<div class=\"line\">            mShaderOverride-&gt;activatePass( *mDrawContext, 0 );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> endDraw() {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mShaderOverride) {</div>\n\
<div class=\"line\">            mShaderOverride-&gt;unbind( *mDrawContext );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mDrawContext = NULL;</div>\n\
<div class=\"line\">        mShaderOverride = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setColor( <span class=\"keyword\">const</span> <a name=\"_a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>&amp; color){</div>\n\
<div class=\"line\">        mColor = color;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>* mDrawContext;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* mShaderOverride;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>  mColor;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// GL draw agent declaration</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintDrawAgentGL : <span class=\"keyword\">public</span> RawFootPrintDrawAgent</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> RawFootPrintDrawAgentGL&amp; getDrawAgent(){</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> RawFootPrintDrawAgentGL obj;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> obj;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawShaded() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawBoundingBox() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawWireframe() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> endDraw() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setMatrix(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get  world view matrix</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        mWorldViewMatrix =</div>\n\
<div class=\"line\">            context.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a5359807d83c248df630615c60f896a51\">getMatrix</a>(<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9aada60cca33133e088ad8ee1bce291878\">MHWRender::MFrameContext::kWorldViewMtx</a>, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get projection matrix</span></div>\n\
<div class=\"line\">        mProjectionMatrix = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a5359807d83c248df630615c60f896a51\">getMatrix</a>(<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9a9bfe03d742b94b682ba896a1597df9f7\">MHWRender::MFrameContext::kProjectionMtx</a>, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (status != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute a pick matrix that, when it is post-multiplied with the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// projection matrix, will cause the picking region to fill the entire</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// viewport for OpenGL selection mode.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (selectInfo)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> view_x, view_y, view_w, view_h;</div>\n\
<div class=\"line\">            context.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a833da0fac707065e2b987ff38b7b7312\">getViewportDimensions</a>(view_x, view_y, view_w, view_h);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sel_x, sel_y, sel_w, sel_h;</div>\n\
<div class=\"line\">            selectInfo-&gt;<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html#a2e00d4919c72b22e16478dfd986684b2\">selectRect</a>(sel_x, sel_y, sel_w, sel_h);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> center_x = sel_x + sel_w * 0.5;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> center_y = sel_y + sel_h * 0.5;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> pickMatrix;</div>\n\
<div class=\"line\">            pickMatrix[0][0] = view_w / double(sel_w);</div>\n\
<div class=\"line\">            pickMatrix[1][1] = view_h / double(sel_h);</div>\n\
<div class=\"line\">            pickMatrix[3][0] = (view_w - 2.0 * (center_x - view_x)) / double(sel_w);</div>\n\
<div class=\"line\">            pickMatrix[3][1] = (view_h - 2.0 * (center_y - view_y)) / double(sel_h);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            mProjectionMatrix *= pickMatrix;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentGL(){}</div>\n\
<div class=\"line\">    ~RawFootPrintDrawAgentGL()<span class=\"keyword\"> override</span>{}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentGL( <span class=\"keyword\">const</span> RawFootPrintDrawAgentGL&amp; v ){}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentGL operator = (<span class=\"keyword\">const</span> RawFootPrintDrawAgentGL&amp; v){ <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mWorldViewMatrix;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mProjectionMatrix;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// GL Core Profile functions:</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>GLCP</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// For more extensive OpenGL coding you will definitively want to</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// use a good extension loader framework. I recommend looking at:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// https://www.opengl.org/wiki/OpenGL_Loading_Library </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to find the one that will fit your needs the best.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Also note that MGLFunctionTable stops at GL 2.1, so a lot</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of functions will be missing.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined (__APPLE__)</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> <span class=\"keywordtype\">char</span> GLchar;</div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> ptrdiff_t GLsizeiptr;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glBindVertexArray) (GLuint array);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glBindVertexArray BindVertexArray;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGenVertexArrays) (GLsizei n, GLuint *arrays);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGenVertexArrays GenVertexArrays;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glDeleteVertexArrays ) (GLsizei n, <span class=\"keyword\">const</span> GLuint *arrays);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glDeleteVertexArrays DeleteVertexArrays;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glUniform4f) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glUniform4f Uniform4f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glUniformMatrix4fv) (GLint location, GLsizei count, GLboolean transpose, <span class=\"keyword\">const</span> GLfloat *value);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glUniformMatrix4fv UniformMatrix4fv;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> GLint (APIENTRY *Tp_glGetUniformLocation) (GLuint program, <span class=\"keyword\">const</span> GLchar *name);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetUniformLocation GetUniformLocation;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> GLint (APIENTRY *Tp_glGetAttribLocation) (GLuint program, <span class=\"keyword\">const</span> GLchar *name);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetAttribLocation GetAttribLocation;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> GLuint (APIENTRY *Tp_glCreateShader ) (GLenum type);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glCreateShader CreateShader;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glShaderSource ) (GLuint shader, GLsizei count, <span class=\"keyword\">const</span> GLchar *<span class=\"keyword\">const</span>*string, <span class=\"keyword\">const</span> GLint *length);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glShaderSource ShaderSource;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glCompileShader ) (GLuint shader);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glCompileShader CompileShader;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGetShaderiv ) (GLuint shader, GLenum pname, GLint *params);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetShaderiv GetShaderiv;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGetShaderInfoLog ) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetShaderInfoLog GetShaderInfoLog;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> GLuint (APIENTRY *Tp_glCreateProgram ) ();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glCreateProgram CreateProgram;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glAttachShader ) (GLuint program, GLuint shader);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glAttachShader AttachShader;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glDeleteShader ) (GLuint shader);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glDeleteShader DeleteShader;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glLinkProgram ) (GLuint program);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glLinkProgram LinkProgram;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGetProgramiv ) (GLuint program, GLenum pname, GLint *params);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetProgramiv GetProgramiv;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glUseProgram ) (GLuint program);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glUseProgram UseProgram;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glDeleteProgram ) (GLuint program);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glDeleteProgram DeleteProgram;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGetProgramInfoLog ) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGetProgramInfoLog GetProgramInfoLog;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glGenBuffers ) (GLsizei n, GLuint *buffers);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glGenBuffers GenBuffers;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glDeleteBuffers ) (GLsizei n, <span class=\"keyword\">const</span> GLuint *buffers);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glDeleteBuffers DeleteBuffers;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glBindBuffer ) (GLenum target, GLuint buffer);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glBindBuffer BindBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glBufferData ) (GLenum target, GLsizeiptr size, <span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *data, GLenum usage);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glBufferData BufferData;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glEnableVertexAttribArray ) (GLuint index);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glEnableVertexAttribArray EnableVertexAttribArray;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">typedef</span> void (APIENTRY *Tp_glVertexAttribPointer ) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, <span class=\"keyword\">const</span> <span class=\"keywordtype\">void</span> *pointer);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> Tp_glVertexAttribPointer VertexAttribPointer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> initGLFunctionsCoreProfile();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">GLCP::Tp_glBindVertexArray GLCP::BindVertexArray = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGenVertexArrays GLCP::GenVertexArrays = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glDeleteVertexArrays GLCP::DeleteVertexArrays = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glUniform4f GLCP::Uniform4f = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glUniformMatrix4fv GLCP::UniformMatrix4fv = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetUniformLocation GLCP::GetUniformLocation = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetAttribLocation GLCP::GetAttribLocation = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glCreateShader GLCP::CreateShader = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glShaderSource GLCP::ShaderSource = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glCompileShader GLCP::CompileShader = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetShaderiv GLCP::GetShaderiv = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetShaderInfoLog GLCP::GetShaderInfoLog = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glCreateProgram GLCP::CreateProgram = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glAttachShader GLCP::AttachShader = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glDeleteShader GLCP::DeleteShader = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glLinkProgram GLCP::LinkProgram = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetProgramiv GLCP::GetProgramiv = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glUseProgram GLCP::UseProgram = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glDeleteProgram GLCP::DeleteProgram = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGetProgramInfoLog GLCP::GetProgramInfoLog = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glGenBuffers GLCP::GenBuffers = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glDeleteBuffers GLCP::DeleteBuffers = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glBindBuffer GLCP::BindBuffer = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glBufferData GLCP::BufferData = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glEnableVertexAttribArray GLCP::EnableVertexAttribArray = 0;</div>\n\
<div class=\"line\">GLCP::Tp_glVertexAttribPointer GLCP::VertexAttribPointer = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> GLCP::initGLFunctionsCoreProfile()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined (__APPLE__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define INIT_GLPOINTER(funcName) funcName = gl##funcName</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#elif defined (_WIN32)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define INIT_GLPOINTER(funcName) if (!funcName) funcName = (Tp_gl##funcName)wglGetProcAddress(&quot;gl&quot; #funcName)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define INIT_GLPOINTER(funcName) if (!funcName) funcName = (Tp_gl##funcName)::glXGetProcAddress((const GLubyte*)&quot;gl&quot; #funcName)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    INIT_GLPOINTER(BindVertexArray);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GenVertexArrays);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(DeleteVertexArrays);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(Uniform4f);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(UniformMatrix4fv);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetUniformLocation);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetAttribLocation);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(CreateShader);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(ShaderSource);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(CompileShader);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetShaderiv);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetShaderInfoLog);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(CreateProgram);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(AttachShader);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(DeleteShader);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(LinkProgram);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetProgramiv);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(UseProgram);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(DeleteProgram);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GetProgramInfoLog);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(GenBuffers);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(DeleteBuffers);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(BindBuffer);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(BufferData);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(EnableVertexAttribArray);</div>\n\
<div class=\"line\">    INIT_GLPOINTER(VertexAttribPointer);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#undef INIT_GLPOINTER</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if !defined (__APPLE__)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_FRAGMENT_SHADER                0x8B30</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_VERTEX_SHADER                  0x8B31</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_ARRAY_BUFFER                   0x8892</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_ELEMENT_ARRAY_BUFFER           0x8893</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_STATIC_DRAW                    0x88E4</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_COMPILE_STATUS                 0x8B81</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_LINK_STATUS                    0x8B82</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GL_INFO_LOG_LENGTH                0x8B84</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Core Profile draw agent declaration</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintDrawAgentCoreProfile : <span class=\"keyword\">public</span> RawFootPrintDrawAgent</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> RawFootPrintDrawAgentCoreProfile&amp; getDrawAgent(){</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> RawFootPrintDrawAgentCoreProfile obj;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> obj;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawShaded() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawBoundingBox() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> drawWireframe() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> endDraw() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setMatrix(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get world view projection matrix</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        mWorldViewProjMatrix =</div>\n\
<div class=\"line\">            context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a5359807d83c248df630615c60f896a51\">getMatrix</a>(<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9aef68016d080e72df2f823fb80e1f0473\">MHWRender::MFrameContext::kWorldViewProjMtx</a>, &amp;status);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> releaseCoreProfileResources();</div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    GLuint mShaderProgram;</div>\n\
<div class=\"line\">    GLint mWVPIndex;</div>\n\
<div class=\"line\">    GLint mColorIndex;</div>\n\
<div class=\"line\">    GLint mVtxAttrib;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLuint mBBoxVAO;</div>\n\
<div class=\"line\">    GLuint mSoleWireframeVAO;</div>\n\
<div class=\"line\">    GLuint mHeelWireframeVAO;</div>\n\
<div class=\"line\">    GLuint mSoleShadedVAO;</div>\n\
<div class=\"line\">    GLuint mHeelShadedVAO;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLuint mBoundingboxVertexBuffer;</div>\n\
<div class=\"line\">    GLuint mBoundingboxIndexBuffer;</div>\n\
<div class=\"line\">    GLuint mSoleVertexBuffer;</div>\n\
<div class=\"line\">    GLuint mSoleNormalBuffer;</div>\n\
<div class=\"line\">    GLuint mHeelVertexBuffer;</div>\n\
<div class=\"line\">    GLuint mHeelNormalBuffer;</div>\n\
<div class=\"line\">    GLuint mSoleWireIndexBuffer;</div>\n\
<div class=\"line\">    GLuint mSoleShadedIndexBuffer;</div>\n\
<div class=\"line\">    GLuint mHeelWireIndexBuffer;</div>\n\
<div class=\"line\">    GLuint mHeelShadedIndexBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mWorldViewProjMatrix;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> mInitialized;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> mValid;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> initShadersCoreProfile();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> initBuffersCoreProfile();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setupUniforms();</div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentCoreProfile()</div>\n\
<div class=\"line\">        <span class=\"comment\">// Shader program data</span></div>\n\
<div class=\"line\">        : mShaderProgram(0)</div>\n\
<div class=\"line\">        , mWVPIndex(0)</div>\n\
<div class=\"line\">        , mColorIndex(0)</div>\n\
<div class=\"line\">        , mVtxAttrib(0)</div>\n\
<div class=\"line\">        <span class=\"comment\">// VAOs</span></div>\n\
<div class=\"line\">        , mBBoxVAO(0)</div>\n\
<div class=\"line\">        , mSoleWireframeVAO(0)</div>\n\
<div class=\"line\">        , mHeelWireframeVAO(0)</div>\n\
<div class=\"line\">        , mSoleShadedVAO(0)</div>\n\
<div class=\"line\">        , mHeelShadedVAO(0)</div>\n\
<div class=\"line\">        <span class=\"comment\">// Draw buffers</span></div>\n\
<div class=\"line\">        , mBoundingboxVertexBuffer(0)</div>\n\
<div class=\"line\">        , mBoundingboxIndexBuffer(0)</div>\n\
<div class=\"line\">        , mSoleVertexBuffer(0)</div>\n\
<div class=\"line\">        , mSoleNormalBuffer(0)</div>\n\
<div class=\"line\">        , mHeelVertexBuffer(0)</div>\n\
<div class=\"line\">        , mHeelNormalBuffer(0)</div>\n\
<div class=\"line\">        , mSoleWireIndexBuffer(0)</div>\n\
<div class=\"line\">        , mSoleShadedIndexBuffer(0)</div>\n\
<div class=\"line\">        , mHeelWireIndexBuffer(0)</div>\n\
<div class=\"line\">        , mHeelShadedIndexBuffer(0)</div>\n\
<div class=\"line\">        , mInitialized(false)</div>\n\
<div class=\"line\">        , mValid(false)</div>\n\
<div class=\"line\">        {}</div>\n\
<div class=\"line\">    ~RawFootPrintDrawAgentCoreProfile()<span class=\"keyword\"> override</span>{}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentCoreProfile( <span class=\"keyword\">const</span> RawFootPrintDrawAgentCoreProfile&amp; v ){}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentCoreProfile operator = (<span class=\"keyword\">const</span> RawFootPrintDrawAgentCoreProfile&amp; v){ <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DX stuff</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DX draw agent declaration</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintDrawAgentDX : <span class=\"keyword\">public</span> RawFootPrintDrawAgent</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> RawFootPrintDrawAgentDX&amp; getDrawAgent(){</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> RawFootPrintDrawAgentDX obj;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> obj;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawShaded();</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawBoundingBox();</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> drawWireframe();</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride );</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> endDraw();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setMatrix(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get world view projection matrix</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        mWorldViewProjMatrix =</div>\n\
<div class=\"line\">            context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a5359807d83c248df630615c60f896a51\">getMatrix</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9aef68016d080e72df2f823fb80e1f0473\">MHWRender::MFrameContext::kWorldViewProjMtx</a>, &amp;status);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> releaseDXResources();</div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    ID3D11Device* mDevicePtr;</div>\n\
<div class=\"line\">    ID3D11DeviceContext* mDeviceContextPtr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ID3D11Buffer* mBoundingboxVertexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mBoundingboxIndexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mSoleVertexBufferPtr[2];</div>\n\
<div class=\"line\">    ID3D11Buffer* mHeelVertexBufferPtr[2];</div>\n\
<div class=\"line\">    ID3D11Buffer* mSoleWireIndexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mSoleShadedIndexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mHeelWireIndexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mHeelShadedIndexBufferPtr;</div>\n\
<div class=\"line\">    ID3D11Buffer* mConstantBufferPtr;</div>\n\
<div class=\"line\">    ID3D11VertexShader* mVertexShaderPtr;</div>\n\
<div class=\"line\">    ID3D11PixelShader* mPixelShaderPtr;</div>\n\
<div class=\"line\">    ID3D11InputLayout* mVertexLayoutPtr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> mEffectLocation;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> mEffectLoad;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> mStride[2];</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> mOffset[2];</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mWorldViewProjMatrix;</div>\n\
<div class=\"line\">    <span class=\"keyword\">struct </span>ConstantBufferDef</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        XMMATRIX fWVP;</div>\n\
<div class=\"line\">        XMFLOAT4 fMatColor;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> initShadersDX();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> initBuffersDX();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setupConstantBuffer();</div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentDX():</div>\n\
<div class=\"line\">        mDevicePtr(NULL), mDeviceContextPtr(NULL), mEffectLocation(<span class=\"stringliteral\">&quot;&quot;</span>),</div>\n\
<div class=\"line\">        mEffectLoad(false),</div>\n\
<div class=\"line\">        mBoundingboxVertexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mBoundingboxIndexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mSoleWireIndexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mSoleShadedIndexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mHeelWireIndexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mHeelShadedIndexBufferPtr(NULL),</div>\n\
<div class=\"line\">        mConstantBufferPtr(NULL),</div>\n\
<div class=\"line\">        mVertexShaderPtr(NULL),</div>\n\
<div class=\"line\">        mPixelShaderPtr(NULL),</div>\n\
<div class=\"line\">        mVertexLayoutPtr(NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[0] = NULL;</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[1] = NULL;</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[0] = NULL;</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[1] = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mStride[0] = <span class=\"keyword\">sizeof</span>(float) * 3;</div>\n\
<div class=\"line\">        mStride[1] = <span class=\"keyword\">sizeof</span>(float) * 3;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mOffset[0] = 0;</div>\n\
<div class=\"line\">        mOffset[1] = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    ~RawFootPrintDrawAgentDX(){}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentDX( <span class=\"keyword\">const</span> RawFootPrintDrawAgentDX&amp; v ){}</div>\n\
<div class=\"line\">    RawFootPrintDrawAgentDX operator = (<span class=\"keyword\">const</span> RawFootPrintDrawAgentDX&amp; v){ <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif // _WIN32</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// GL draw agent definition</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentGL::beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    RawFootPrintDrawAgent::beginDraw(context, passShaderOverride);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mShaderOverride)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// set world view matrix</span></div>\n\
<div class=\"line\">        glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">        glPushMatrix();</div>\n\
<div class=\"line\">        glLoadMatrixd(mWorldViewMatrix.matrix[0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// set projection matrix</span></div>\n\
<div class=\"line\">        glMatrixMode(GL_PROJECTION);</div>\n\
<div class=\"line\">        glPushMatrix();</div>\n\
<div class=\"line\">        glLoadMatrixd(mProjectionMatrix.matrix[0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPushAttrib( GL_CURRENT_BIT );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentGL::endDraw()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mShaderOverride)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPopAttrib();</div>\n\
<div class=\"line\">        glPopMatrix();</div>\n\
<div class=\"line\">        glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">        glPopMatrix();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    RawFootPrintDrawAgent::endDraw();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentGL::drawShaded()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">    glColor4fv( &amp;(mColor.r) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glBegin( GL_TRIANGLE_FAN );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> last = soleCount - 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; last; ++i ) {</div>\n\
<div class=\"line\">        glNormal3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">        glVertex3f( sole[i][0],</div>\n\
<div class=\"line\">            sole[i][1],</div>\n\
<div class=\"line\">            sole[i][2]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">    glBegin( GL_TRIANGLE_FAN );</div>\n\
<div class=\"line\">    last = heelCount - 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; last; ++i ) {</div>\n\
<div class=\"line\">        glNormal3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">        glVertex3f( heel[i][0],</div>\n\
<div class=\"line\">            heel[i][1],</div>\n\
<div class=\"line\">            heel[i][2]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentGL::drawBoundingBox()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">    glColor4fv( &amp;(mColor.r) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* bottomLeftFront = bbData[0];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* topLeftFront = bbData[4];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* bottomRightFront = bbData[1];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* topRightFront = bbData[5];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* bottomLeftBack = bbData[3];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* topLeftBack = bbData[7];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* bottomRightBack = bbData[2];</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span>* topRightBack = bbData[6];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glBegin( GL_LINES );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 4 Bottom lines</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftFront );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftBack );</div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftBack );</div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftFront );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 4 Top lines</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glVertex3fv( topLeftFront );</div>\n\
<div class=\"line\">    glVertex3fv( topRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( topRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( topRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( topRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( topLeftBack );</div>\n\
<div class=\"line\">    glVertex3fv( topLeftBack );</div>\n\
<div class=\"line\">    glVertex3fv( topLeftFront );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 4 Side lines</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftFront );</div>\n\
<div class=\"line\">    glVertex3fv( topLeftFront );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( topRightFront );</div>\n\
<div class=\"line\">    glVertex3fv( bottomRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( topRightBack );</div>\n\
<div class=\"line\">    glVertex3fv( bottomLeftBack );</div>\n\
<div class=\"line\">    glVertex3fv( topLeftBack );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentGL::drawWireframe()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// set color</span></div>\n\
<div class=\"line\">    glColor4fv( &amp;(mColor.r) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// draw wire</span></div>\n\
<div class=\"line\">    glBegin( GL_LINES );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> last = soleCount - 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; last; ++i ) {</div>\n\
<div class=\"line\">        glVertex3f( sole[i][0],</div>\n\
<div class=\"line\">            sole[i][1],</div>\n\
<div class=\"line\">            sole[i][2]);</div>\n\
<div class=\"line\">        glVertex3f( sole[i+1][0],</div>\n\
<div class=\"line\">            sole[i+1][1],</div>\n\
<div class=\"line\">            sole[i+1][2]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    last = heelCount - 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; last; ++i ) {</div>\n\
<div class=\"line\">        glVertex3f( heel[i][0],</div>\n\
<div class=\"line\">            heel[i][1],</div>\n\
<div class=\"line\">            heel[i][2]);</div>\n\
<div class=\"line\">        glVertex3f( heel[i+1][0],</div>\n\
<div class=\"line\">            heel[i+1][1],</div>\n\
<div class=\"line\">            heel[i+1][2]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Core Profile draw agent definition</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Init common data:</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !mInitialized ){</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set up all the one-time data:</span></div>\n\
<div class=\"line\">        GLCP::initGLFunctionsCoreProfile();</div>\n\
<div class=\"line\">        mValid = initShadersCoreProfile() &amp;&amp; initBuffersCoreProfile();</div>\n\
<div class=\"line\">        mInitialized = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mValid)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    RawFootPrintDrawAgent::beginDraw(context, passShaderOverride);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mShaderOverride) {</div>\n\
<div class=\"line\">        GLCP::UseProgram(mShaderProgram);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::endDraw()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mValid)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mShaderOverride) {</div>\n\
<div class=\"line\">        GLCP::UseProgram(0);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    RawFootPrintDrawAgent::endDraw();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::setupUniforms()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( mShaderOverride == NULL )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> fMatrix[4][4];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">size_t</span> i = 0; i &lt; 4; ++i)</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">size_t</span> j = 0; j &lt; 4; ++j)</div>\n\
<div class=\"line\">                fMatrix[i][j] = (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[i][j];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        GLCP::UniformMatrix4fv(mWVPIndex, 1, GL_FALSE, (<span class=\"keywordtype\">float</span>*)fMatrix);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        GLCP::Uniform4f(mColorIndex, mColor.r, mColor.g, mColor.b, mColor.a);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::drawShaded()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mValid)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set uniforms</span></div>\n\
<div class=\"line\">    setupUniforms();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mSoleShadedVAO);</div>\n\
<div class=\"line\">    glDrawElements(GL_TRIANGLES, 3 * (soleCount-2), GL_UNSIGNED_SHORT, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mHeelShadedVAO);</div>\n\
<div class=\"line\">    glDrawElements(GL_TRIANGLES, 3 * (heelCount-2), GL_UNSIGNED_SHORT, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::drawBoundingBox()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mValid)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set uniforms</span></div>\n\
<div class=\"line\">    setupUniforms();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mBBoxVAO);</div>\n\
<div class=\"line\">    glDrawElements(GL_LINES, 2 * 12, GL_UNSIGNED_SHORT, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentCoreProfile::drawWireframe()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mValid)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set uniforms</span></div>\n\
<div class=\"line\">    setupUniforms();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mSoleWireframeVAO);</div>\n\
<div class=\"line\">    glDrawElements(GL_LINES, 2 * (soleCount-1), GL_UNSIGNED_SHORT, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mHeelWireframeVAO);</div>\n\
<div class=\"line\">    glDrawElements(GL_LINES, 2 * (heelCount-1), GL_UNSIGNED_SHORT, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DX stuff</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DX draw agent definition</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::beginDraw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mEffectLoad)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Please move file &quot;rawfootprint.hlsl&quot; to following location, or </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// change following location as your local path.</span></div>\n\
<div class=\"line\">        mEffectLocation = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;$MAYA_PLUG_IN_PATH/rawfootprint.hlsl&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html\">MFileObject</a> fileObj;</div>\n\
<div class=\"line\">        fileObj.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#ac14aefbfe38c2711256eb8c14a3194ee\">setRawFullName</a>(mEffectLocation);</div>\n\
<div class=\"line\">        fileObj.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a4b3d5deec3dc9475f712c8e0f2f4d9a2\">setResolveMethod</a>(<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#af71e719034e8e9a4c69adcc174ca9049ac1ce1604eaae6e61df873510a9254fb3\">MFileObject::kInputFile</a>);</div>\n\
<div class=\"line\">        assert(fileObj.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#aa9100e4c626877b706ca9fc67a35c562\">exists</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!fileObj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#aa9100e4c626877b706ca9fc67a35c562\">exists</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Can not find file:&quot;</span>) + mEffectLocation;</div>\n\
<div class=\"line\">            <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>(msg);</div>\n\
<div class=\"line\">            mEffectLoad = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        mEffectLocation = fileObj.<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_file_object.html#a9484f49594e6f95729f1be1608a6ae8f\">resolvedFullName</a>();</div>\n\
<div class=\"line\">        mEffectLoad = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initial device</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !mDevicePtr || !mDeviceContextPtr ){</div>\n\
<div class=\"line\">        <span class=\"comment\">// get renderer</span></div>\n\
<div class=\"line\">        <a name=\"_a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* theRenderer = <a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( theRenderer ){</div>\n\
<div class=\"line\">            mDevicePtr = (ID3D11Device*)theRenderer-&gt;<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a637ec8cc3cc0e631f1d134f6891f89f0\">GPUDeviceHandle</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( mDevicePtr ){</div>\n\
<div class=\"line\">                mDevicePtr-&gt;GetImmediateContext( &amp;mDeviceContextPtr );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    assert( mDevicePtr );</div>\n\
<div class=\"line\">    assert( mDeviceContextPtr );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( mDevicePtr &amp;&amp; mDeviceContextPtr ){</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        RawFootPrintDrawAgent::beginDraw(context, passShaderOverride);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Init shaders</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( initShadersDX() &amp;&amp; passShaderOverride == NULL ){</div>\n\
<div class=\"line\">            <span class=\"comment\">// Set up shader</span></div>\n\
<div class=\"line\">            mDeviceContextPtr-&gt;VSSetShader(mVertexShaderPtr, NULL, 0);</div>\n\
<div class=\"line\">            mDeviceContextPtr-&gt;PSSetShader(mPixelShaderPtr, NULL, 0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Init buffers</span></div>\n\
<div class=\"line\">        initBuffersDX();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::endDraw()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    RawFootPrintDrawAgent::endDraw();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::setupConstantBuffer()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDeviceContextPtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !mDeviceContextPtr )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( mShaderOverride == NULL )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute matrix</span></div>\n\
<div class=\"line\">        XMMATRIX dxTransform = XMMATRIX(</div>\n\
<div class=\"line\">            (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[0][0], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[0][1], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[0][2], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[0][3],</div>\n\
<div class=\"line\">            (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[1][0], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[1][1], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[1][2], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[1][3],</div>\n\
<div class=\"line\">            (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[2][0], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[2][1], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[2][2], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[2][3],</div>\n\
<div class=\"line\">            (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[3][0], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[3][1], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[3][2], (<span class=\"keywordtype\">float</span>)mWorldViewProjMatrix.matrix[3][3]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set constant buffer</span></div>\n\
<div class=\"line\">        ConstantBufferDef cb;</div>\n\
<div class=\"line\">        cb.fWVP = XMMatrixTranspose(dxTransform);</div>\n\
<div class=\"line\">        cb.fMatColor = XMFLOAT4( mColor.r, mColor.g, mColor.b, mColor.a);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mDeviceContextPtr-&gt;UpdateSubresource(mConstantBufferPtr, 0, NULL, &amp;cb, 0, 0);</div>\n\
<div class=\"line\">        mDeviceContextPtr-&gt;VSSetConstantBuffers(0, 1, &amp;mConstantBufferPtr);</div>\n\
<div class=\"line\">        mDeviceContextPtr-&gt;PSSetConstantBuffers(0, 1, &amp;mConstantBufferPtr);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::drawShaded()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDeviceContextPtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !(mDeviceContextPtr &amp;&amp; mEffectLoad) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set constant buffer</span></div>\n\
<div class=\"line\">    setupConstantBuffer();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the sole. Position + normals</span></div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetVertexBuffers(0, 2, &amp;mSoleVertexBufferPtr[0], &amp;mStride[0], &amp;mOffset[0]);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetIndexBuffer(mSoleShadedIndexBufferPtr, DXGI_FORMAT_R16_UINT, 0);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetInputLayout(mVertexLayoutPtr);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;DrawIndexed(3 * (soleCount-2), 0, 0);</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the heel. Position + normals</span></div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetVertexBuffers(0, 2, &amp;mHeelVertexBufferPtr[0], &amp;mStride[0], &amp;mOffset[0]);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetIndexBuffer(mHeelShadedIndexBufferPtr, DXGI_FORMAT_R16_UINT, 0);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetInputLayout(mVertexLayoutPtr);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;DrawIndexed(3 * (heelCount-2), 0, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::drawBoundingBox()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDeviceContextPtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !(mDeviceContextPtr &amp;&amp; mEffectLoad) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set constant buffer</span></div>\n\
<div class=\"line\">    setupConstantBuffer();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetVertexBuffers(0, 1, &amp;mBoundingboxVertexBufferPtr, &amp;mStride[0], &amp;mOffset[0]);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetIndexBuffer(mBoundingboxIndexBufferPtr, DXGI_FORMAT_R16_UINT, 0);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetInputLayout(mVertexLayoutPtr);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_LINELIST);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;DrawIndexed(2 * 12, 0, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawAgentDX::drawWireframe()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDeviceContextPtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !(mDeviceContextPtr &amp;&amp; mEffectLoad) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set constant buffer</span></div>\n\
<div class=\"line\">    setupConstantBuffer();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the sole. Only use position buffer</span></div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetVertexBuffers(0, 1, &amp;mSoleVertexBufferPtr[0], &amp;mStride[0], &amp;mOffset[0]);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetIndexBuffer(mSoleWireIndexBufferPtr, DXGI_FORMAT_R16_UINT, 0);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetInputLayout(mVertexLayoutPtr);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_LINELIST);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;DrawIndexed(2 * (soleCount-1), 0, 0);</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the heel. Only use position buffer</span></div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetVertexBuffers(0, 1, &amp;mHeelVertexBufferPtr[0], &amp;mStride[0], &amp;mOffset[0]);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetIndexBuffer(mHeelWireIndexBufferPtr, DXGI_FORMAT_R16_UINT, 0);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetInputLayout(mVertexLayoutPtr);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_LINELIST);</div>\n\
<div class=\"line\">    mDeviceContextPtr-&gt;DrawIndexed(2 * (heelCount-1), 0, 0);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif // _WIN32</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>RawFootPrintDrawOverride : <span class=\"keyword\">public</span> <a name=\"_a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_draw_override.html\">MHWRender::MPxDrawOverride</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_draw_override.html\">MHWRender::MPxDrawOverride</a>* Creator(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> RawFootPrintDrawOverride(obj);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~RawFootPrintDrawOverride() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DrawAPI supportedDrawAPIs() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isBounded(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> boundingBox(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> disableInternalBoundingBoxDraw() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> excludedFromPostEffects() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isTransparent() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* prepareForDraw(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* oldData) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hasUIDrawables()<span class=\"keyword\"> const override </span>{ <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> addUIDrawables(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <a name=\"_a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The general trace sequence we will get is:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// At creation and during geometry chagnes (size attribute)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: Start draw override DG bounding box update for object:: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: End draw override DG bounding box update for object:: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// At creation and during attribute or transform modification:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: Start draw override DG node transform update for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: End draw override DG node transform update for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Every refresh:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: Start draw override render item update for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode:  - call draw override prepareForDraw()</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: End draw override render item update for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: Start draw override queuing of UI drawables for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode:  - call draw override addUIDrawables()</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: End draw override queuing of UI drawables for object: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Every draw:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: Start draw override draw function: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rawFootPrintNode: End draw override draw function: |transform1|rawfootPrint1</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> traceCallSequence()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Return true if internal tracing is desired.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> handleTraceMessage( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;message )<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Some simple custom message formatting.</span></div>\n\
<div class=\"line\">        fputs(<span class=\"stringliteral\">&quot;rawFootPrintNode: &quot;</span>, stderr);</div>\n\
<div class=\"line\">        fputs(message.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), stderr);</div>\n\
<div class=\"line\">        fputs(<span class=\"stringliteral\">&quot;\\n&quot;</span>, stderr);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> wantUserSelection()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Perform user selection when the viewport renderer is using legacy</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// OpenGL API which supports OpenGL selection mode</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* theRenderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> theRenderer &amp;&amp; theRenderer-&gt;<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae2d5ce57991bca16f525728e8d9d399e\">drawAPI</a>() == MHWRender::kOpenGL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> userSelect(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>&amp; selectInfo,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data,</div>\n\
<div class=\"line\">        <a name=\"_a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a>&amp; selectionList,</div>\n\
<div class=\"line\">        <a name=\"_a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a>&amp; worldSpaceHitPts)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// This is the user selection function that will be invoked only if</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// wantUserSelection() returns true. The OpenGL selection mode is used</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// here for simplicity reason, however, a plug-in can choose other</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// GPU-based approaches like occlusion query, or CPU-based approaches</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// which perform hit test on object shapes.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set up selection buffer</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> GLsizei BUF_SIZE = 10;</div>\n\
<div class=\"line\">        GLuint selectBuf[BUF_SIZE];</div>\n\
<div class=\"line\">        glSelectBuffer(BUF_SIZE, selectBuf);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Enter OpenGL selection mode</span></div>\n\
<div class=\"line\">        glRenderMode(GL_SELECT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Call into draw code with a name pushed onto the name stack and the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// select info passed into the method for adjusting projection matrix.</span></div>\n\
<div class=\"line\">        glInitNames();</div>\n\
<div class=\"line\">        glPushName(0);</div>\n\
<div class=\"line\">        drawImpl(context, &amp;selectInfo, data);</div>\n\
<div class=\"line\">        glPopName();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Exit OpenGL selection mode.</span></div>\n\
<div class=\"line\">        GLint hits = glRenderMode(GL_RENDER);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Return false if nothing is hit.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (hits &lt;= 0) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Otherwise, calculate the hit point in world space. The depth is the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// average of minimum and maximum, so it isn&#39;t the accurate depth at</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the cursor position.</span></div>\n\
<div class=\"line\">        GLuint minZ = selectBuf[1];</div>\n\
<div class=\"line\">        GLuint maxZ = selectBuf[2];</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> depth = (minZ*0.5 + maxZ*0.5) / 0xFFFFFFFF;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> camera(context.<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7785aa5262ffc0200653a692b16fa608\">getCurrentCameraPath</a>());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!camera.isOrtho())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> Zn = camera.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html#a7189bcaad0276cd50d0d67b69e572ddd\">nearClippingPlane</a>();</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> Zf = camera.farClippingPlane();</div>\n\
<div class=\"line\">            depth *= Zn / (Zf - depth * (Zf - Zn));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> x, y, w, h;</div>\n\
<div class=\"line\">        selectInfo.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html#a2e00d4919c72b22e16478dfd986684b2\">selectRect</a>(x, y, w, h);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> nearPw, farPw;</div>\n\
<div class=\"line\">        context.<a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a0f5a55195c724b06707730d7d52d915c\">viewportToWorld</a>(x + w*0.5, y + h*0.5, nearPw, farPw);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> hitPoint = nearPw + depth * (farPw - nearPw);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        selectionList.<a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a>(objPath);</div>\n\
<div class=\"line\">        worldSpaceHitPts.<a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html#abe5a9fe36b4651af38a4a26c85f46e1a\">append</a>(hitPoint);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> drawImpl(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> draw(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawImpl(context, <span class=\"keyword\">nullptr</span>, data);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> mCurrentBoundingBox;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         mCustomBoxDraw;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         mExcludeFromPostEffects;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>         mTransparencySort;</div>\n\
<div class=\"line\">    MUint64     mLastFrameStamp;</div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    RawFootPrintDrawOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   getMultiplier(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    isTransparentSort(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   getTransparency(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> OnModelEditorChanged(<span class=\"keywordtype\">void</span> *clientData);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MCallbackId fModelEditorChangedCbId;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fRawFootPrint;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* mBlendState;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// By setting isAlwaysDirty to false in MPxDrawOverride constructor, the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// draw override will be updated (via prepareForDraw()) only when the node</span></div>\n\
<div class=\"line\"><span class=\"comment\">// is marked dirty via DG evaluation or dirty propagation. Additional</span></div>\n\
<div class=\"line\"><span class=\"comment\">// callback is also added to explicitly mark the node as being dirty (via</span></div>\n\
<div class=\"line\"><span class=\"comment\">// MRenderer::setGeometryDrawDirty()) for certain circumstances.</span></div>\n\
<div class=\"line\">RawFootPrintDrawOverride::RawFootPrintDrawOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">: <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxDrawOverride(obj, RawFootPrintDrawOverride::draw, false)</div>\n\
<div class=\"line\"><span class=\"comment\">// We want to perform custom bounding box drawing</span></div>\n\
<div class=\"line\"><span class=\"comment\">// so return true so that the internal rendering code</span></div>\n\
<div class=\"line\"><span class=\"comment\">// will not draw it for us.</span></div>\n\
<div class=\"line\">, mCustomBoxDraw(true)</div>\n\
<div class=\"line\">, mExcludeFromPostEffects(false)</div>\n\
<div class=\"line\">, mTransparencySort(false)</div>\n\
<div class=\"line\">, mBlendState(NULL)</div>\n\
<div class=\"line\">, mLastFrameStamp(0)</div>\n\
<div class=\"line\">, fRawFootPrint(obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fModelEditorChangedCbId = <a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event_message.html#a8d22c58b90484867755273c2f7ffc6ec\">MEventMessage::addEventCallback</a>(</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;modelEditorChanged&quot;</span>, OnModelEditorChanged, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">RawFootPrintDrawOverride::~RawFootPrintDrawOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBlendState)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a544e5c653741b90e7c65d2b34e8ebe60\">MHWRender::MStateManager::releaseBlendState</a>(mBlendState);</div>\n\
<div class=\"line\">        mBlendState = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fModelEditorChangedCbId != 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fModelEditorChangedCbId);</div>\n\
<div class=\"line\">        fModelEditorChangedCbId = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawOverride::OnModelEditorChanged(<span class=\"keywordtype\">void</span> *clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Mark the node as being dirty so that it can update on display appearance</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// switch among wireframe and shaded.</span></div>\n\
<div class=\"line\">    RawFootPrintDrawOverride *ovr = <span class=\"keyword\">static_cast&lt;</span>RawFootPrintDrawOverride*<span class=\"keyword\">&gt;</span>(clientData);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (ovr) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\">MHWRender::MRenderer::setGeometryDrawDirty</a>(ovr-&gt;fRawFootPrint);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MHWRender::DrawAPI RawFootPrintDrawOverride::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// this plugin supports both GL and DX</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (MHWRender::kOpenGL | MHWRender::kDirectX11 | MHWRender::kOpenGLCoreProfile);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">float</span> RawFootPrintDrawOverride::getMultiplier(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve value of the size attribute from the node</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootprintNode = objPath.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>(&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug(rawfootprintNode, rawfootPrint::size);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!plug.isNull())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html\">MDistance</a> sizeVal;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (plug.getValue(sizeVal))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> (<span class=\"keywordtype\">float</span>)sizeVal.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#ace39ab92685b0f5ab1a2925e748efb1f\">asCentimeters</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 1.0f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawOverride::isTransparentSort(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootprintNode = objPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>(&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug(rawfootprintNode, rawfootPrint::transparencySort);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!plug.isNull())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> isTransparent;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (plug.getValue(isTransparent))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> isTransparent;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">float</span> RawFootPrintDrawOverride::getTransparency(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve value of the transparency attribute from the node</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> rawfootprintNode = objPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>(&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug(rawfootprintNode, rawfootPrint::transparency);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!plug.isNull())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> transparencyVal;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (plug.getValue(transparencyVal))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> transparencyVal;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 1.0f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawOverride::isBounded(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; <span class=\"comment\">/*objPath*/</span>,</div>\n\
<div class=\"line\">                                      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; <span class=\"comment\">/*cameraPath*/</span>)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> RawFootPrintDrawOverride::transform(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update the transform matrix with the multiplier value,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// this way, the matrices of the draw context will already contain the multiplier factor.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// That way the WorldViewProjection uniform of the selection shader - which we do not have access to -</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// will be set properly.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform = objPath.<a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#afb30f64680f5aa038da428a79579d08c\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> multiplier = getMultiplier(objPath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    transform[0][0] *= multiplier;</div>\n\
<div class=\"line\">    transform[1][1] *= multiplier;</div>\n\
<div class=\"line\">    transform[2][2] *= multiplier;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> transform;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> RawFootPrintDrawOverride::boundingBox(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner1( -0.17, 0.0, -0.7 );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> corner2( 0.17, 0.0, 0.3 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> multiplier = getMultiplier(objPath);</div>\n\
<div class=\"line\">    corner1 = corner1 * multiplier;</div>\n\
<div class=\"line\">    corner2 = corner2 * multiplier;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    RawFootPrintDrawOverride *nonConstThis = (RawFootPrintDrawOverride *)<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\">    nonConstThis-&gt;mCurrentBoundingBox.clear();</div>\n\
<div class=\"line\">    nonConstThis-&gt;mCurrentBoundingBox.expand( corner1 );</div>\n\
<div class=\"line\">    nonConstThis-&gt;mCurrentBoundingBox.expand( corner2 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mCurrentBoundingBox;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawOverride::disableInternalBoundingBoxDraw()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mCustomBoxDraw;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawOverride::excludedFromPostEffects()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mExcludeFromPostEffects;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawOverride::isTransparent()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> mTransparencySort;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* RawFootPrintDrawOverride::prepareForDraw(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; cameraPath,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext,</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* oldData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> cameraPathToo = frameContext.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7785aa5262ffc0200653a692b16fa608\">getCurrentCameraPath</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> ufeCamera = frameContext.<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ac4e243de9ca786f03799095244a6bfbe\">getCurrentUfeCameraPath</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// We only care about post effects when in shaded mode</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> displayStyle = frameContext.<a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acd5ce60bbd3d03181b1ad681023ff44d\">getDisplayStyle</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> shadedMode = (displayStyle &amp; <a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">MHWRender::MFrameContext::kGouraudShaded</a>) ||</div>\n\
<div class=\"line\">                      (displayStyle &amp; <a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa7914d385424ca72fdf84654b735a5a50\">MHWRender::MFrameContext::kFlatShaded</a>);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> sExcludedFromPostEffects =</div>\n\
<div class=\"line\">        (getenv(<span class=\"stringliteral\">&quot;MAYA_RAWFOOTPRINT_EXCLUDEDFROMPOSTEFFECTS&quot;</span>) != NULL);</div>\n\
<div class=\"line\">    mExcludeFromPostEffects = !shadedMode || sExcludedFromPostEffects;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mTransparencySort = isTransparentSort(objPath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve data cache (create if does not exist)</span></div>\n\
<div class=\"line\">    RawFootPrintData* data = <span class=\"keyword\">dynamic_cast&lt;</span>RawFootPrintData*<span class=\"keyword\">&gt;</span>(oldData);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!data)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        data = <span class=\"keyword\">new</span> RawFootPrintData();</div>\n\
<div class=\"line\">        data-&gt;mLastFrameStamp = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// compute data and cache it</span></div>\n\
<div class=\"line\">    data-&gt;fMultiplier = getMultiplier(objPath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DisplayStatus displayStatus =</div>\n\
<div class=\"line\">        <a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#aa2838b92c9f7db4a810690a986199134\">MHWRender::MGeometryUtilities::displayStatus</a>(objPath);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((displayStatus == MHWRender::kLead) ||</div>\n\
<div class=\"line\">        (displayStatus == MHWRender::kActive) ||</div>\n\
<div class=\"line\">        (displayStatus == MHWRender::kHilite) ||</div>\n\
<div class=\"line\">        (displayStatus == MHWRender::kActiveComponent))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> color = <a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#a6221bc7407b14246b14f79a751496276\">MHWRender::MGeometryUtilities::wireframeColor</a>(objPath);</div>\n\
<div class=\"line\">        data-&gt;fColor[0] = color.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>;</div>\n\
<div class=\"line\">        data-&gt;fColor[1] = color.<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a>;</div>\n\
<div class=\"line\">        data-&gt;fColor[2] = color.<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        data-&gt;fColor[0] = 0.6f;</div>\n\
<div class=\"line\">        data-&gt;fColor[1] = 0.6f;</div>\n\
<div class=\"line\">        data-&gt;fColor[2] = 0.6f;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    data-&gt;fColor[3] = getTransparency(objPath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    data-&gt;fCustomBoxDraw = mCustomBoxDraw;</div>\n\
<div class=\"line\">    data-&gt;fCurrentBoundingBox = mCurrentBoundingBox;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the draw override information</span></div>\n\
<div class=\"line\">    data-&gt;fDrawOV = objPath.<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#aea0b55ce377063a108c3241885fc5c66\">getDrawOverrideInfo</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get a blend state override</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mBlendState)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MHWRender::MBlendStateDesc</a> blendStateDesc;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; (blendStateDesc.<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab374ca375c42792265e69bb0a4123559\">independentBlendEnable</a> ? <a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ab6b4785ac0e20c5947d74921bacc49b8\">MHWRender::MBlendState::kMaxTargets</a> : 1); ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            blendStateDesc.<a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#af69e3282d64f8cfe88a2759960788417\">blendEnable</a> = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">               blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a5c49c83334018fa4b2f69ac30b60d003\">sourceBlend</a> = <a name=\"a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa76de73d01667fca98bcd3754f1f92c00\">MHWRender::MBlendState::kSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#adadc1ea4b5fca51312ae451f346434e3\">destinationBlend</a> = <a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaa58d506c01416594f41c42e255dec594\">MHWRender::MBlendState::kInvSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a919cbb29a19a1fc79843f58e68ccad57\">blendOperation</a> = <a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MHWRender::MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">               blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a9fbc968d46ad9a7107696211e34b4e51\">alphaSourceBlend</a> = <a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa567435a26feac1c98cd5213345ec6681\">MHWRender::MBlendState::kOne</a>;</div>\n\
<div class=\"line\">            blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#aa0f38fbd90e3171cc6c092e80ff25c7c\">alphaDestinationBlend</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaa58d506c01416594f41c42e255dec594\">MHWRender::MBlendState::kInvSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a4d3de738732021fb87a82040e77f0aa4\">alphaBlendOperation</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MHWRender::MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        blendStateDesc.<a name=\"a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[0] = 1.0f;</div>\n\
<div class=\"line\">        blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[1] = 1.0f;</div>\n\
<div class=\"line\">        blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[2] = 1.0f;</div>\n\
<div class=\"line\">        blendStateDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[3] = 1.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        mBlendState = <a name=\"a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#aeb560f7829270f34ab413ad314314c8f\">MHWRender::MStateManager::acquireBlendState</a>(blendStateDesc);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    data-&gt;mBlendState = mBlendState;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> data;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawOverride::addUIDrawables(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; objPath,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw a text &quot;Foot&quot;</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pos( 0.0, 0.0, 0.0 ); <span class=\"comment\">// Position of the text</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> textColor( 0.1f, 0.8f, 0.8f, 1.0f ); <span class=\"comment\">// Text color</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9008ebfa63c02670625076230d77c3f9\">beginDrawable</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9baede3e37abe9551e50a8c6be65ec4d\">setColor</a>( textColor );</div>\n\
<div class=\"line\">    drawManager.<a name=\"a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#adfd0cfdd2cc781dba3987f64cb638a67\">setFontSize</a>( <a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a88cff078229df1c0803a690e4826b5f1a7218bb69173cb216cb619effff1055ea\">MHWRender::MUIDrawManager::kSmallFontSize</a> );</div>\n\
<div class=\"line\">    drawManager.<a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a334e4280e5ddd4653c69f9703b5dd3b4\">text</a>( pos,  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;rawFootprint&quot;</span>), <a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#aa56f1a82069b5feeadbb4591cb3e474fae006401ce2987367501dd62b12f1396d\">MHWRender::MUIDrawManager::kCenter</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a78c343c25a05be7e46dd4b7ebab82ff6\">endDrawable</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug camera information</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugCameraInformation(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugCameraInformation = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugCameraInformation)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> frustum = context.<a name=\"a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a6507cd42e5e18556f966088b0866fd0f\">getFrustumBox</a>(&amp;status);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> min = frustum.<a name=\"a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afb3213b98f3a6b4bda9759511e9b79a1\">min</a>();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> max = frustum.<a name=\"a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a1dfdbea9d5560e4aa09d34bdbd82480c\">max</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        <span class=\"comment\">// 1. Query informaiton available from the draw context</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;Context Camera Info:\\n&quot;</span>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;====================\\n&quot;</span>);   </div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- Frustum: W = %g, H = %g, D= %g. Min = %g,%g,%g. Max = %g,%g,%g\\n&quot;</span>, </div>\n\
<div class=\"line\">            frustum.<a name=\"a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a6cddcbf72c80144aa2e6501abb150c30\">width</a>(), frustum.<a name=\"a116\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afa7750092d5dcf402c83fb5adba91453\">height</a>(), frustum.<a name=\"a117\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a65c72a51aba9fc4233b58751dd712e43\">depth</a>(), min[0], min[1], min[2],</div>\n\
<div class=\"line\">            max[0], max[1], max[2]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get depth range</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> nearV, farV;</div>\n\
<div class=\"line\">        context.<a name=\"a118\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ae1bda403fc02486d936aadc56a90e395\">getDepthRange</a>(nearV, farV);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- Depth Range: near=%g, far=%g\\n&quot;</span>, nearV, farV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Determine if view direction is along Z- (or Z+)</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> alongNegZ = context.<a name=\"a119\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a6913c6eda7d76d313d3ea1a8fab5318d\">viewDirectionAlongNegZ</a>(&amp;status);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View direction = %s\\n&quot;</span>, alongNegZ ? <span class=\"stringliteral\">&quot;-Z&quot;</span> : <span class=\"stringliteral\">&quot;+Z&quot;</span>); </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// Find out the camera coordinate system</span></div>\n\
<div class=\"line\">        <a name=\"_a120\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> vPos = context.<a name=\"a121\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a122\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670aba1d4dab9b951b21263efade0a8f6729\">MHWRender::MFrameContext::kViewPosition</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View position = %g,%g,%g\\n&quot;</span>, vPos[0], vPos[1], vPos[2]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> vDir = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a123\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670a227b592bc3c59e5855866b1d9f8c997b\">MHWRender::MFrameContext::kViewDirection</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View direction = %g,%g,%g\\n&quot;</span>, vDir [0], vDir [1], vDir [2]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> vals = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a124\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670a46bdbff9d5db6921557766fcf9e4133f\">MHWRender::MFrameContext::kViewUp</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View up = %g,%g,%g\\n&quot;</span>, vals[0], vals[1], vals[2]);</div>\n\
<div class=\"line\">        vals = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a125\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670ae859394c6853c70c4000dc7a7a766bf1\">MHWRender::MFrameContext::kViewRight</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View right = %g,%g,%g\\n&quot;</span>, vals[0], vals[1], vals[2]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> vNear = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a126\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670ab2b11196237108d7c893c6940cfe4b16\">MHWRender::MFrameContext::kViewUnnormlizedNearClipValue</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View near clip value = %g\\n&quot;</span>, vNear[0]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_double_array.html\">MDoubleArray</a> vFar = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a0dfe2293173b7b5a7da2e1f903ee18cb\">getTuple</a>(<a name=\"a127\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#af164f32d9bda6829f1738ef3fb2c6670a973730135c8d1f08c5de00aa2997e914\">MHWRender::MFrameContext::kViewUnnormalizedFarClipValue</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- View far clip value = %g\\n&quot;</span>, vFar[0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute the world space planes for the near and far clip planes</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// The near is pointing away from the camera and is thus point in the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// negative direction while the far is point towards the camera (positive </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// direction.</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> distW = vPos[0]*vDir[0] + </div>\n\
<div class=\"line\">                    vPos[1]*vDir[1] + </div>\n\
<div class=\"line\">                    vPos[2]*vDir[2]; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Face near plane away from the camera</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> distNearW = -1.0 * (distW + vNear[0]); </div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- World space near plane dist=%g. Dir=%g,%g,%g\\n&quot;</span>, distNearW,</div>\n\
<div class=\"line\">            vDir[0], vDir[1], vDir[2]);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Face far plane torwards the camera</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> distFarW = distW + vFar[0];</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- World space far plane dist=%g. Dir=%g,%g,%g\\n&quot;</span>, distFarW,</div>\n\
<div class=\"line\">            -vDir[0], -vDir[1], -vDir[2]);  </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// 2. Query the active Maya camera for information from the draw context</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> cameraPath = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7785aa5262ffc0200653a692b16fa608\">getCurrentCameraPath</a>();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> activeCamera(cameraPath);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> uiX, uiY, uiWidth, uiHeight;</div>\n\
<div class=\"line\">        context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a833da0fac707065e2b987ff38b7b7312\">getViewportDimensions</a>(uiX, uiY, uiWidth, uiHeight);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> windowAspect = (double)uiWidth / (<span class=\"keywordtype\">double</span>)uiHeight;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> left, bottom, right, top;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> destinationName;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9\">MHWRender::MFrameContext::RenderingDestination</a> dest = context.<a name=\"a128\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a0df712533d76bdc96f2b49f4767ed85e\">renderingDestination</a>(destinationName);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> viewportMode = (dest == <a name=\"a129\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9a3549cf4609bdd691a990ade34855ea5e\">MHWRender::MFrameContext::k3dViewport</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// If rendering mode ignore all the in viewport options</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!viewportMode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            activeCamera.getRenderingFrustum(windowAspect, left, right, bottom, top);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// If viewport mode take into consideration overscan, and pan+zoom but not squeeze.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> overscan = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> squeeze = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> panAndZoom = activeCamera.panZoomEnabled();</div>\n\
<div class=\"line\">            activeCamera.getViewingFrustum(windowAspect, left, right, bottom, top, overscan, squeeze, panAndZoom );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"comment\">// Relative near and far with respect to camera position.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the unnormalized value.</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> nearD = activeCamera.unnormalizedNearClippingPlane();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> farD = activeCamera.unnormalizedFarClippingPlane();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;Camera Info:\\n&quot;</span>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;============\\n&quot;</span>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- Shape %s, Frustum: left=%g, bottom=%g, right=%g, top=%g near=%g, far=%g\\n&quot;</span>, </div>\n\
<div class=\"line\">            activeCamera.name().asChar(), left, bottom, right, top, nearD, farD);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Object space information</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> eyePoint = activeCamera.eyePoint();</div>\n\
<div class=\"line\">        <a name=\"_a130\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> viewDirection = activeCamera.viewDirection();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> upDirection = activeCamera.upDirection();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> rightDirection = activeCamera.rightDirection();</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- Object space values: eyePoint=%g,%g,%g. vdir=%g,%g,%g. vup=%g,%g,%g, vright=%g,%g,%g\\n&quot;</span>, </div>\n\
<div class=\"line\">            eyePoint[0], eyePoint[1], eyePoint[2],</div>\n\
<div class=\"line\">            viewDirection[0], viewDirection[1], viewDirection[2],</div>\n\
<div class=\"line\">            upDirection[0], upDirection[1], upDirection[2],</div>\n\
<div class=\"line\">            rightDirection[0], rightDirection[1], rightDirection[2]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// World space information</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> eyePointW = activeCamera.eyePoint(<a name=\"a131\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> viewDirectionW = activeCamera.viewDirection(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> upDirectionW = activeCamera.upDirection(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> rightDirectionW = activeCamera.rightDirection(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- World space values: eyePoint=%g,%g,%g. vdir=%g,%g,%g. vup=%g,%g,%g, vright=%g,%g,%g\\n&quot;</span>, </div>\n\
<div class=\"line\">            eyePointW[0], eyePointW[1], eyePointW[2],</div>\n\
<div class=\"line\">            viewDirectionW[0], viewDirectionW[1], viewDirectionW[2],</div>\n\
<div class=\"line\">            upDirectionW[0], upDirectionW[1], upDirectionW[2],</div>\n\
<div class=\"line\">            rightDirectionW[0], rightDirectionW[1], rightDirectionW[2]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute the world space planes for the near and far clip planes</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// The near is pointing away from the camera and is thus point in the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// negative direction while the far is point towards the camera (positive </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// direction.</span></div>\n\
<div class=\"line\">        distW = eyePointW[0]*viewDirectionW[0] + </div>\n\
<div class=\"line\">            eyePointW[1]*viewDirectionW[1] + </div>\n\
<div class=\"line\">            eyePointW[2]*viewDirectionW[2]; </div>\n\
<div class=\"line\">        <span class=\"comment\">// Face near plane away from the camera</span></div>\n\
<div class=\"line\">        distNearW = -1.0 * (distW + nearD); </div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- World space near plane: Dir=%g,%g,%g. Dist=%g.\\n&quot;</span>, </div>\n\
<div class=\"line\">            viewDirectionW[0], viewDirectionW[1], viewDirectionW[2], distNearW);</div>\n\
<div class=\"line\">        <span class=\"comment\">// Face far plane torwards the camera</span></div>\n\
<div class=\"line\">        distFarW = distW + farD;    </div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;-- World space far plane: Dir=%g,%g,%g, Dist=%g. \\n&quot;</span>, </div>\n\
<div class=\"line\">            -viewDirectionW[0], -viewDirectionW[1], -viewDirectionW[2], distFarW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// World space near and far clip points.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> clipPts[4];</div>\n\
<div class=\"line\">        activeCamera.getFilmFrustum( -nearD, clipPts );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> icMat = cameraPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#afb30f64680f5aa038da428a79579d08c\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( i = 0; i &lt; 4; i ++ ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pt = clipPts[i] * icMat;</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;-- Near clip point[%d] = %g,%g,%g\\n&quot;</span>, i, pt[0], pt[1], pt[2]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        activeCamera.getFilmFrustum( -farD, clipPts );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i = 0; i &lt; 4; i ++ ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pt = clipPts[i] * icMat;</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;-- Far clip point[%d] = %g,%g,%g\\n&quot;</span>, i, pt[0], pt[1], pt[2]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//  Sample code to debug object type exclusion</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugObjectTypeExclusions(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Sample code to determine object type exclusion</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugTypeExclusions = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugTypeExclusions)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MUint64 excluded = </div>\n\
<div class=\"line\">            context.<a name=\"a132\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ac261da38b7d3de4b388a98fd0b2a0b0a\">objectTypeExclusions</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (excluded &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a133\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a6e25ffd5dc55a1622a8cb06a309f5fb8\">MHWRender::MFrameContext::kExcludeNurbsCurves</a>)   <a name=\"a134\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude NURBS curves&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a135\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a576c3b18d351b8888fbbff43139ccbba\">MHWRender::MFrameContext::kExcludeNurbsSurfaces</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude NURBS surface&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a136\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a06e443cfee21517d5419b59bfffce58e\">MHWRender::MFrameContext::kExcludeMeshes</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude polygonal meshes&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a137\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a655a8fcb6ec2b55c2b3b117c609e205f\">MHWRender::MFrameContext::kExcludePlanes</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude planes&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a138\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ae09382e580972c4ff8a6ce263f34c74b\">MHWRender::MFrameContext::kExcludeLights</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude lights&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a139\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a6ae65cd8011721dd567e086ab2fb9bbb\">MHWRender::MFrameContext::kExcludeCameras</a>)       <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude camera&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a140\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a53eef4c5e6bd4f3d6340ab56a8d62d54\">MHWRender::MFrameContext::kExcludeJoints</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude joints&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a141\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#afcc02c10a11dc154011ec4ff0a4c8c78\">MHWRender::MFrameContext::kExcludeIkHandles</a>)     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude IK handles&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a142\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a71307c6d62541fdfdad4d824fae128e8\">MHWRender::MFrameContext::kExcludeDeformers</a>)     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude all deformations&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a143\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a48d0ba196b99ea9d3bbd925a6631b28e\">MHWRender::MFrameContext::kExcludeDynamics</a>)      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude all dynamics objects (emiiters, cloth)&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a144\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a64871af76ecf3e4fd71cca646263aa09\">MHWRender::MFrameContext::kExcludeParticleInstancers</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude all particle instancers&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a145\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a6a609f42b99b65e448d7bf6afcb4fa45\">MHWRender::MFrameContext::kExcludeLocators</a>)      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude locators&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a146\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a79e3933fe22df59f08e51f983e9a92fc\">MHWRender::MFrameContext::kExcludeDimensions</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude all measurement objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a147\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a93095dc24fc5f88b8661705ab984f340\">MHWRender::MFrameContext::kExcludeSelectHandles</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude selection handles&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a148\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a19b7419f7035c7aa09006dc06f177c72\">MHWRender::MFrameContext::kExcludePivots</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude pivots&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a149\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a43aff18e4bb3ff07fe12f60f5c21f35d\">MHWRender::MFrameContext::kExcludeTextures</a>)      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude texure placement objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a150\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#abda73013ac024fb6afff8299f562f563\">MHWRender::MFrameContext::kExcludeGrid</a>)          <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude grid drawing&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a151\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aa5622c94510b9c494a00485b2a260044\">MHWRender::MFrameContext::kExcludeCVs</a>)           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude NURBS control vertices&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a152\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7c73d6bee6e87ec4a9761d7876ba26f0\">MHWRender::MFrameContext::kExcludeHulls</a>)         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude NURBS hulls&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a153\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a178d30cd749c27c22a619d6f42ff1df6\">MHWRender::MFrameContext::kExcludeStrokes</a>)       <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude PaintFX strokes&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a154\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a60ffb175081688c475708a072604dea7\">MHWRender::MFrameContext::kExcludeSubdivSurfaces</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude subdivision surfaces&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a155\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ad199af54f92349cdf9cc3380c7640178\">MHWRender::MFrameContext::kExcludeFluids</a>)        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude fluid objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a156\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1bb60addd11a572c20805915ca03ed5f\">MHWRender::MFrameContext::kExcludeFollicles</a>)     <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude hair follicles&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a157\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ab1ef0d12c350d2f352079b9e183d2701\">MHWRender::MFrameContext::kExcludeHairSystems</a>)   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude hair system&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a158\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a64a935afb656a183e011f1691da91b63\">MHWRender::MFrameContext::kExcludeImagePlane</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude image planes&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a159\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#afd865ca54e1d0ef15182ad213010ff1c\">MHWRender::MFrameContext::kExcludeNCloths</a>)       <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude N-cloth objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a160\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a301c93a48c30d62221e6d0a7be105050\">MHWRender::MFrameContext::kExcludeNRigids</a>)       <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude rigid-body objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a161\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a2d8462407a482bbc0bc4dd0e33822e67\">MHWRender::MFrameContext::kExcludeDynamicConstraints</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude rigid-body constraints&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a162\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a8f3e1e24c4aea4e7c428a25ddfe19ae9\">MHWRender::MFrameContext::kExcludeManipulators</a>)  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude manipulators&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a163\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a59dc61787294f08afe1a9f600654f548\">MHWRender::MFrameContext::kExcludeNParticles</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude N-particle objects&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a164\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a7c0a5e89afefd83c50907b2f3c2abda9\">MHWRender::MFrameContext::kExcludeMotionTrails</a>)  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude motion trails&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a165\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ae2f50ec1b109f59c32883702a9e241b0\">MHWRender::MFrameContext::kExcludeHoldOuts</a>)      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude hold-outs&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a166\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a2dd077abb5ab5b82a6dea8c6dcea2fda\">MHWRender::MFrameContext::kExcludePluginShapes</a>)  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude plug-in shapes&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a167\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#afd14f3345a2d204c215823f09c43d547\">MHWRender::MFrameContext::kExcludeHUD</a>)           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude HUD&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a168\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a166dc67869ea7c3ae835b53ae98271d7\">MHWRender::MFrameContext::kExcludeClipGhosts</a>)    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude animation clip ghosts&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a169\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a8f10e655b4ff96331c939e54e7adec4c\">MHWRender::MFrameContext::kExcludeGreasePencils</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude grease pencil drawing&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (excluded &amp; <a name=\"a170\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a895584bb929e046e8a712b34ebbf35b5\">MHWRender::MFrameContext::kExcludeControllers</a>)   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Exclude controllers objects&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Sample code to determine classification type exclusion</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugClassificationExclusions = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugClassificationExclusions )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a171\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> classifications;</div>\n\
<div class=\"line\">        context.<a name=\"a172\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a53dcd8befa544040b1c48808fdfae27b\">classificationExclusions</a>( classifications );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;Classification strings excluded: &quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;classifications.<a name=\"a173\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            info += classifications[i];</div>\n\
<div class=\"line\">            info += <span class=\"stringliteral\">&quot;;&quot;</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>( info );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug background parameters</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugBackground(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugBackground = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugBackground)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a174\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html\">MHWRender::MFrameContext::BackgroundParams</a> backParams;</div>\n\
<div class=\"line\">        context.<a name=\"a175\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a884cc89835076a7b836b86538c01e722\">getBackgroundParameters</a>(backParams);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;Display Gradient: &quot;</span>); info += backParams.<a name=\"a176\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a127ce7706df392d9cb498e03768fbaf5\">displayGradient</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear color bit: &quot;</span>); info += backParams.<a name=\"a177\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a01ce816fb45a354a86a31b053332707e\">clearColorFlag</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear depth bit: &quot;</span>); info += backParams.<a name=\"a178\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#af9100c06665ebc59126c19e6703bf821\">clearDepthFlag</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear stencil bit: &quot;</span>); info += backParams.<a name=\"a179\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a50b68b504399f3ce873183a6fd368955\">clearStencilFlag</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear color: &quot;</span>); </div>\n\
<div class=\"line\">        info += backParams.<a name=\"a180\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a80b1e198f586619d844fff6bb4cc4679\">clearColor1</a>[0]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a80b1e198f586619d844fff6bb4cc4679\">clearColor1</a>[1]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a80b1e198f586619d844fff6bb4cc4679\">clearColor1</a>[2]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a80b1e198f586619d844fff6bb4cc4679\">clearColor1</a>[3]; </div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear color 2: &quot;</span>); </div>\n\
<div class=\"line\">        info += backParams.<a name=\"a181\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a51a529fc62d83747bb1b7f1ed04ff22e\">clearColor2</a>[0]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a51a529fc62d83747bb1b7f1ed04ff22e\">clearColor2</a>[1]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a51a529fc62d83747bb1b7f1ed04ff22e\">clearColor2</a>[2]; info += <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;,&quot;</span>);</div>\n\
<div class=\"line\">        info += backParams.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a51a529fc62d83747bb1b7f1ed04ff22e\">clearColor2</a>[3]; </div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear depth value: &quot;</span>); info += backParams.<a name=\"a182\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a08244f814f06c8716897536d8386e4cd\">clearDepthValue</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Clear stencil value: &quot;</span>); info += backParams.<a name=\"a183\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_background_params.html#a2cb70220d3d1dcd8f01ad0650d32ea30\">clearStencilValue</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug post effect information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugPostEffects(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugPostEffects = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugPostEffects)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (context.<a name=\"a184\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1f7de24693b8d7be24a0624f9b970983\">getPostEffectEnabled</a>( <a name=\"a185\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed6597b6ca26d0c599d1d9a004442e21ad1489eaf62f989ec0fb25acf68bedfe0\">MHWRender::MFrameContext::kAmbientOcclusion</a> ))</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;SSAO enabled&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1f7de24693b8d7be24a0624f9b970983\">getPostEffectEnabled</a>( <a name=\"a186\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed6597b6ca26d0c599d1d9a004442e21aaf082eeacce9a2ee38f421f3f5cdc50c\">MHWRender::MFrameContext::kMotionBlur</a> ))</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Motion blur enabled&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1f7de24693b8d7be24a0624f9b970983\">getPostEffectEnabled</a>( <a name=\"a187\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed6597b6ca26d0c599d1d9a004442e21a9f7ec2595ebbeea1cbec76e4b0534537\">MHWRender::MFrameContext::kViewColorTransformEnabled</a> ))</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Color management enabled&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1f7de24693b8d7be24a0624f9b970983\">getPostEffectEnabled</a>( <a name=\"a188\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed6597b6ca26d0c599d1d9a004442e21a12a6c9c6d81719d67d63412fe85aaffb\">MHWRender::MFrameContext::kDepthOfField</a> ))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a189\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_d_o_f_params.html\">MHWRender::MFrameContext::DOFParams</a> dofParams;</div>\n\
<div class=\"line\">            context.<a name=\"a190\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#adc3c931b5b8b55549af38d1b3288ed91\">getDOFParameters</a>(dofParams);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Depth-of-field enabled:&quot;</span>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;- Focus distance: &quot;</span>); info += dofParams.<a name=\"a191\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_d_o_f_params.html#a57f00d353f941a588ca5edb1f9a4f8cd\">focalDistance</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">            info = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;- Alpha: &quot;</span>); info += dofParams.<a name=\"a192\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_d_o_f_params.html#ab1551d8043c2aa4410fb7dbb1fe3be7b\">alpha</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1f7de24693b8d7be24a0624f9b970983\">getPostEffectEnabled</a>( <a name=\"a193\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed6597b6ca26d0c599d1d9a004442e21aafe2e2c0bbb8da0d1e70a0ab0b4b5576\">MHWRender::MFrameContext::kAntiAliasing</a> ))</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Anti-aliasing enabled&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug render destination</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugDestination(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Sample code to determine the rendering destination</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugDestination = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugDestination)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> destinationIdentifier;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9\">MHWRender::MFrameContext::RenderingDestination</a> dest = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a0df712533d76bdc96f2b49f4767ed85e\">renderingDestination</a>(destinationIdentifier);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> destinationType = <span class=\"stringliteral\">&quot; 3d viewport&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> found3dView = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dest == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9a3549cf4609bdd691a990ade34855ea5e\">MHWRender::MFrameContext::k3dViewport</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a name=\"_a194\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> view;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (<a name=\"a195\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a6f8dcac6993b14738fc6259cfd50a3b8\">M3dView::getM3dViewFromModelPanel</a>(destinationIdentifier, view) == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                found3dView = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (dest == <a name=\"a196\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9a6f4723549117a9e163b5656977b57c5a\">MHWRender::MFrameContext::k2dViewport</a>)</div>\n\
<div class=\"line\">            destinationType = <span class=\"stringliteral\">&quot; 2d viewport&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (dest == <a name=\"a197\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a4c4732853003d9156d368e44cbe552f9a9df07847c20cd540354c92617d62ee38\">MHWRender::MFrameContext::kImage</a>)</div>\n\
<div class=\"line\">            destinationType = <span class=\"stringliteral\">&quot;n image&quot;</span>;</div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;rawfootprint node render destination is a%s. Destination name=%s. Found M3dView=%d\\n&quot;</span>, </div>\n\
<div class=\"line\">            destinationType.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), destinationIdentifier.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), found3dView);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug render override</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugRenderOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugRenderOverride = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugRenderOverride)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a198\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_render_override_information.html\">MHWRender::MFrameContext::RenderOverrideInformation</a> overrideInfo;</div>\n\
<div class=\"line\">        context.<a name=\"a199\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aed7789770ef0eb47fd196edfc669d8f6\">getRenderOverrideInformation</a>(overrideInfo);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (overrideInfo.<a name=\"a200\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_render_override_information.html#a7d246d5345a44680468aa6cae4cfc648\">overrideName</a>.<a name=\"a201\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;Render Override: &quot;</span>); info += overrideInfo.<a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_render_override_information.html#a7d246d5345a44680468aa6cae4cfc648\">overrideName</a>; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug display style</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugDisplayStyle(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">                                        <span class=\"keyword\">const</span> RawFootPrintData* footData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugDisplayStyle = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugDisplayStyle)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> displayStyle = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acd5ce60bbd3d03181b1ad681023ff44d\">getDisplayStyle</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> drawAsBoundingbox =</div>\n\
<div class=\"line\">            (displayStyle &amp; <a name=\"a202\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa74c3784e844e54dab272e794fa6bcaa9\">MHWRender::MFrameContext::kBoundingBox</a>) ||</div>\n\
<div class=\"line\">            (footData-&gt;fDrawOV.fLOD == <a name=\"a203\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_a_g_draw_override_info.html#a750085d0d3a9a6a2888fdc87478cd01da95d9908c6f0be5e5025f119b9cca0a96\">MDAGDrawOverrideInfo::kLODBoundingBox</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawAsBoundingbox) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Bbox display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a204\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa53c5241bb4e72f6c9547de918125d068\">MHWRender::MFrameContext::kWireFrame</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Wireframe display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> drawShaded = ((displayStyle &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">MHWRender::MFrameContext::kGouraudShaded</a>) ||</div>\n\
<div class=\"line\">                          (displayStyle &amp; MHWRender::MFrameContext::kFlatShaded));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawShaded) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Shaded display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a205\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa17e882561d8db0dedc215d0d4978e887\">MHWRender::MFrameContext::kTextured</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Textured display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a206\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aac0e52a169c76e2d1747f043a2eb4838f\">MHWRender::MFrameContext::kDefaultMaterial</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Use default material display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a207\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa99437964e7d704b69731888dcba2fe94\">MHWRender::MFrameContext::kXrayJoint</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;X-ray joint display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a208\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa46c4787c817c63725de629dbb7cc74bd\">MHWRender::MFrameContext::kXray</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;X-ray display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a209\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aac8c533b01e236ad5b27f023374ec7027\">MHWRender::MFrameContext::kTwoSidedLighting</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Two-sided lighting display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; MHWRender::MFrameContext::kFlatShaded) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Flat shaded display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a210\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aaafc1312afe4b53aa0b4a0b818c377bfc\">MHWRender::MFrameContext::kShadeActiveOnly</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Shaded active display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a211\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aaab3091414a40736866381fd46d9a1e0a\">MHWRender::MFrameContext::kXrayActiveComponents</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;X-ray active component display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a212\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa8d96c94c9b833bae178635ba699dc2ee\">MHWRender::MFrameContext::kBackfaceCulling</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Backface culling display style on&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; <a name=\"a213\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa9a962e9185fe5bb3b7a2a0751a3fe5ba\">MHWRender::MFrameContext::kSmoothWireframe</a>) <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Smooth wireframe display style on&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug fog parameters</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugFogStatus(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> debugFogStatus = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugFogStatus)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a214\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html\">MHWRender::MFrameContext::HwFogParams</a> params = context.<a name=\"a215\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#aa4e74730699e09cec07f3b59fd2679e8\">getHwFogParameters</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (params.<a name=\"a216\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#ae127077f7a1eda466f6837a3a1dc8277\">HwFogEnabled</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Fog mode = &quot;</span>) + params.<a name=\"a217\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#aa283269f91a1d2ddac0f0af5a485ff39\">HwFogMode</a>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Fog start = &quot;</span>) + params.<a name=\"a218\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#aab8b5ae43dd8979294e7a9e933be5934\">HwFogStart</a>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Fog end = &quot;</span>) + params.<a name=\"a219\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#a2080b4810338eb92be71796f16e547d5\">HwFogEnd</a>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Fog density = &quot;</span>) + params.<a name=\"a220\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#ab98580d56f9bccc16b7ab408055774e3\">HwFogDensity</a>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> col = params.<a name=\"a221\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/struct_m_h_w_render_1_1_m_frame_context_1_1_hw_fog_params.html#a145d982480d906036f1de9abd0eb6333\">HwFogColor</a>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;Fog color = &quot;</span>);</div>\n\
<div class=\"line\">            info += col[0]; info += <span class=\"stringliteral\">&quot;,&quot;</span>;</div>\n\
<div class=\"line\">            info += col[1]; info += <span class=\"stringliteral\">&quot;,&quot;</span>;</div>\n\
<div class=\"line\">            info += col[2]; info += <span class=\"stringliteral\">&quot;,&quot;</span>;</div>\n\
<div class=\"line\">            info += col[3]; </div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Sample code to debug print out pass information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> footPrint_DebugPassInformation(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> debugPassInformation = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (debugPassInformation)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a222\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html\">MHWRender::MPassContext</a> &amp; passCtx = context.<a name=\"a223\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ad3f9422688a9ffbe815c374ece46c1ea\">getPassContext</a>();</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp; passSem = passCtx.<a name=\"a224\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a9737189d5cfffd795336d711a678d627\">passSemantics</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; passId = passCtx.<a name=\"a225\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ae90d4b4c8175e81800d8eb16ee126e1f\">passIdentifier</a>();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;rawfootprint node drawing in pass[&quot;</span>); </div>\n\
<div class=\"line\">        info += passId.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(); info += <span class=\"stringliteral\">&quot;]&quot;</span>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (passSem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>()) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> info(<span class=\"stringliteral\">&quot;--- semantics[&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;passSem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                info += <span class=\"stringliteral\">&quot; &quot;</span>;</div>\n\
<div class=\"line\">                info += passSem[i].asChar();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            info += <span class=\"stringliteral\">&quot;]&quot;</span>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(info);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (passCtx.<a name=\"a226\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a54cb1ff5e4a10ffc51cb05ddab8e69ab\">hasShaderOverride</a>()) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride = </div>\n\
<div class=\"line\">                    passCtx.<a name=\"a227\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#aef8d7620ddd58e44e45ea0f0dfaa6fb4\">shaderOverrideInstance</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (passShaderOverride) {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;--- use internal shaderOverride&quot;</span>);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Main drawing routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> RawFootPrintDrawOverride::drawImpl(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_info.html\">MHWRender::MSelectionInfo</a>* selectInfo,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get renderer</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* theRenderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!theRenderer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get user draw data</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> RawFootPrintData* footData = <span class=\"keyword\">dynamic_cast&lt;</span><span class=\"keyword\">const </span>RawFootPrintData*<span class=\"keyword\">&gt;</span>(data);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!footData)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Debug code to trace frame stamp numbering</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> traceFrameStamp = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (traceFrameStamp)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html\">MHWRender::MPassContext</a> &amp; passCtx = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ad3f9422688a9ffbe815c374ece46c1ea\">getPassContext</a>();</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp; passSem = passCtx.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a9737189d5cfffd795336d711a678d627\">passSemantics</a>();</div>\n\
<div class=\"line\">        MUint64 currentFrameStamp = context.<a name=\"a228\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ac9d36cff81e99e1fb66d9e162b97ecfb\">getFrameStamp</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (currentFrameStamp != footData-&gt;mLastFrameStamp)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> updateColorPassFrameStamp = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (passSem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 1 &amp;&amp; </div>\n\
<div class=\"line\">                (passSem[0] == <a name=\"a229\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a728fc00f0764227a6f345c089058c998\">MHWRender::MPassContext::kSelectionPassSemantic</a> ||</div>\n\
<div class=\"line\">                passSem[0] == <a name=\"a230\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ab0d481f367db0fa41c2b3a1aeb2074c8\">MHWRender::MPassContext::kShadowPassSemantic</a>))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                updateColorPassFrameStamp = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (updateColorPassFrameStamp)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;RawFootPrintDrawOverride: frame stamp change from %ld to %ld\\n&quot;</span>,                    </div>\n\
<div class=\"line\">                    (<span class=\"keywordtype\">long</span>)footData-&gt;mLastFrameStamp, (<span class=\"keywordtype\">long</span>)currentFrameStamp);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            ((RawFootPrintData*)footData)-&gt;mLastFrameStamp = currentFrameStamp;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get DAG object draw override</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_a_g_draw_override_info.html\">MDAGDrawOverrideInfo</a>&amp; objectOverrideInfo = footData-&gt;fDrawOV;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Just return and draw nothing, if it is overridden invisible</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( objectOverrideInfo.<a name=\"a231\"></a>fOverrideEnabled &amp;&amp; !objectOverrideInfo.<a name=\"a232\"></a>fEnableVisible )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If in playback but hidden in playback, skip drawing</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> animPlay = <a name=\"a233\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_control.html#a8438e3403946accc1986a05b89ee7b03\">MAnimControl::isPlaying</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> animScrub = <a name=\"a234\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_anim_control.html#a8d1e3f6d61a15ff72695396e9d36ae57\">MAnimControl::isScrubbing</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!objectOverrideInfo.<a name=\"a235\"></a>fPlaybackVisible &amp;&amp;</div>\n\
<div class=\"line\">        (animPlay || animScrub))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Optional debugging utility calls</span></div>\n\
<div class=\"line\">    footPrint_DebugCameraInformation(context);</div>\n\
<div class=\"line\">    footPrint_DebugObjectTypeExclusions(context);</div>\n\
<div class=\"line\">    footPrint_DebugBackground(context);</div>\n\
<div class=\"line\">    footPrint_DebugPostEffects(context);    </div>\n\
<div class=\"line\">    footPrint_DebugDestination(context);    </div>\n\
<div class=\"line\">    footPrint_DebugRenderOverride(context);</div>\n\
<div class=\"line\">    footPrint_DebugDisplayStyle(context, footData);</div>\n\
<div class=\"line\">    footPrint_DebugFogStatus(context);</div>\n\
<div class=\"line\">    footPrint_DebugPassInformation(context);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check display styles to determine what modes to draw with</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> displayStyle = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acd5ce60bbd3d03181b1ad681023ff44d\">getDisplayStyle</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawAsBoundingbox =</div>\n\
<div class=\"line\">        (displayStyle &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa74c3784e844e54dab272e794fa6bcaa9\">MHWRender::MFrameContext::kBoundingBox</a>) ||</div>\n\
<div class=\"line\">        (footData-&gt;fDrawOV.fLOD == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_a_g_draw_override_info.html#a750085d0d3a9a6a2888fdc87478cd01da95d9908c6f0be5e5025f119b9cca0a96\">MDAGDrawOverrideInfo::kLODBoundingBox</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Require shadeded draw</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawShaded = ((displayStyle &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">MHWRender::MFrameContext::kGouraudShaded</a>) ||</div>\n\
<div class=\"line\">                      (displayStyle &amp; MHWRender::MFrameContext::kFlatShaded));</div>\n\
<div class=\"line\">    <span class=\"comment\">// Require wireframe draw</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawWireframe = (displayStyle &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa53c5241bb4e72f6c9547de918125d068\">MHWRender::MFrameContext::kWireFrame</a>) &gt; 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Templated, only draw wirefame and it is not selectale</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> overideTemplated = objectOverrideInfo.fOverrideEnabled &amp;&amp;</div>\n\
<div class=\"line\">        (objectOverrideInfo.<a name=\"a236\"></a>fDisplayType == <a name=\"a237\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_a_g_draw_override_info.html#ab422481bee446a6af09c5436925cd1cca9387ad37dc26db18a135740b8b0aa2f4\">MDAGDrawOverrideInfo::kDisplayTypeTemplate</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (overideTemplated)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawWireframe = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Override no shaded, only show wireframe</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> overrideNoShaded = objectOverrideInfo.fOverrideEnabled &amp;&amp; !objectOverrideInfo.<a name=\"a238\"></a>fEnableShading;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (overideTemplated || overrideNoShaded)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawShaded = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If we don&#39;t want to draw the bounds within this plugin</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// manually, then skip drawing altogether in bounding box mode</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// since the bounds draw is handled by the renderer and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// doesn&#39;t need to be drawn here.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( drawAsBoundingbox &amp;&amp; !footData-&gt;fCustomBoxDraw )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        drawAsBoundingbox = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// For any viewport interactions switch to bounding box mode,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// except when we are in playback. Uncomment to enable usage.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (context.<a name=\"a239\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ae814ee8697336ed8a1f43182c3a43fd6\">inUserInteraction</a>() || context.<a name=\"a240\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acae6b9f8aa6589912296983df9f1aca8\">userChangingViewContext</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!animPlay &amp;&amp; !animScrub)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            ; <span class=\"comment\">//drawAsBoundingbox = true;</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check to see if we are drawing with a shader override,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and look for any specific branching required for different passes</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// (e.g. for selection)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> inSelection = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> inBeautyPass = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> inTransparencyPass = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> beautyPassSemantic(<span class=\"stringliteral\">&quot;shadedBeautyGraphSemantic&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html\">MHWRender::MPassContext</a> &amp; passCtx = context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#ad3f9422688a9ffbe815c374ece46c1ea\">getPassContext</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp; passSem = passCtx.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a9737189d5cfffd795336d711a678d627\">passSemantics</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\">MHWRender::MShaderInstance</a>* passShaderOverride = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;passSem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (passSem[i] == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a728fc00f0764227a6f345c089058c998\">MHWRender::MPassContext::kSelectionPassSemantic</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            inSelection = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (passSem[i] == beautyPassSemantic)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            inBeautyPass = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Do not use the shader override in selection drawing code path</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (selectInfo == <span class=\"keyword\">nullptr</span> &amp;&amp; passCtx.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a54cb1ff5e4a10ffc51cb05ddab8e69ab\">hasShaderOverride</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            passShaderOverride = passCtx.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#aef8d7620ddd58e44e45ea0f0dfaa6fb4\">shaderOverrideInstance</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Update single-sided state and normal multiplier as needed</span></div>\n\
<div class=\"line\">            passShaderOverride-&gt;<a name=\"a241\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;isSingleSided&quot;</span>, (displayStyle &amp; MHWRender::MFrameContext::kTwoSidedLighting) == 0);</div>\n\
<div class=\"line\">            passShaderOverride-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;mayaNormalMultiplier&quot;</span>, -1.0f);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (passSem[i] == <a name=\"a242\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a99397c595d39f3decd87dfb85faf16a9\">MHWRender::MPassContext::kCullBackSemantic</a> ||</div>\n\
<div class=\"line\">            passSem[i] == <a name=\"a243\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a6715518f047f0e552636b74d311dfffd\">MHWRender::MPassContext::kCullFrontSemantic</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            inTransparencyPass = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get cached data</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> color[4] = {</div>\n\
<div class=\"line\">            footData-&gt;fColor[0] * footData-&gt;fColor[3],</div>\n\
<div class=\"line\">            footData-&gt;fColor[1] * footData-&gt;fColor[3],</div>\n\
<div class=\"line\">            footData-&gt;fColor[2] * footData-&gt;fColor[3],</div>\n\
<div class=\"line\">            footData-&gt;fColor[3]</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> requireBlending = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!inSelection)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Use some monotone version of color to show &quot;default material mode&quot;</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//if (displayStyle &amp; MHWRender::MFrameContext::kDefaultMaterial)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//{</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  color[0] = color[1] = color[2] = (color[0] + color[1] + color[2]) / 3.0f;</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//}</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Do some alpha blending if in x-ray mode</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (displayStyle &amp; MHWRender::MFrameContext::kXray)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// If in beauty pass should still allow blending e.g. kMaterialOverrideSemantic</span></div>\n\
<div class=\"line\">            requireBlending = !passShaderOverride;</div>\n\
<div class=\"line\">            color[3] = 0.3f;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set blend and raster state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <a name=\"_a244\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html\">MHWRender::MStateManager</a>* stateMgr = context.<a name=\"a245\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a9eed5300933693e76ad77822b4feb37f\">getStateManager</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* pOldBlendState = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a246\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html\">MHWRender::MRasterizerState</a>* pOldRasterState = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html\">MHWRender::MRasterizerState</a>* rasterState = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(stateMgr &amp;&amp; ((displayStyle &amp; <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">MHWRender::MFrameContext::kGouraudShaded</a>) ||</div>\n\
<div class=\"line\">                   (displayStyle &amp; MHWRender::MFrameContext::kFlatShaded)))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// draw filled, and with blending if required</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (stateMgr &amp;&amp; requireBlending)</div>\n\
<div class=\"line\">        {       </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (footData-&gt;mBlendState)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                pOldBlendState = stateMgr-&gt;<a name=\"a247\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a4dbf5ff33e99eba611b73273d868182f\">getBlendState</a>();</div>\n\
<div class=\"line\">                stateMgr-&gt;<a name=\"a248\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a27dbc083002d85108ed30ee1131f68c1\">setBlendState</a>(footData-&gt;mBlendState);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// If the object is not draw as transparency, </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// override culling mode since we always want double-sided</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!inTransparencyPass)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            pOldRasterState = stateMgr ? stateMgr-&gt;<a name=\"a249\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a381d58fef9908f00a0e04bcf38b67838\">getRasterizerState</a>() : NULL;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pOldRasterState)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a name=\"_a250\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state_desc.html\">MHWRender::MRasterizerStateDesc</a> desc( pOldRasterState-&gt;<a name=\"a251\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a40659f03655c48c6f0060634b295067d\">desc</a>() );</div>\n\
<div class=\"line\">                <span class=\"comment\">// It&#39;s also possible to change this to kCullFront or kCullBack if we</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// wanted to set it to that.</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8a\">MHWRender::MRasterizerState::CullMode</a> cullMode = <a name=\"a252\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_rasterizer_state.html#a9602dcbc7b9991767e322a6f55541e8aaa6657ab67920a4dcc6e0a30044cc5487\">MHWRender::MRasterizerState::kCullNone</a>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (desc.cullMode != cullMode)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Just override the cullmode</span></div>\n\
<div class=\"line\">                    desc.cullMode = cullMode;</div>\n\
<div class=\"line\">                    rasterState = stateMgr-&gt;<a name=\"a253\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a1f43e6ab99a6e2e5817df7bb1a0c69e6\">acquireRasterizerState</a>(desc);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (rasterState)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        stateMgr-&gt;<a name=\"a254\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a7dfb1c4f28575ed6581aa40a7b64f22a\">setRasterizerState</a>(rasterState);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Start the draw work</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Prepare draw agent, default using OpenGL</span></div>\n\
<div class=\"line\">    RawFootPrintDrawAgentGL&amp; drawAgentRef = RawFootPrintDrawAgentGL::getDrawAgent();</div>\n\
<div class=\"line\">    RawFootPrintDrawAgent* drawAgentPtr = &amp;drawAgentRef;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// DX Draw</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !theRenderer-&gt;<a name=\"a255\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aac2a5827e6a0ce3333e62ffa7751ba5e\">drawAPIIsOpenGL</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        RawFootPrintDrawAgentDX&amp; drawAgentRef = RawFootPrintDrawAgentDX::getDrawAgent();</div>\n\
<div class=\"line\">        drawAgentPtr = &amp;drawAgentRef;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( theRenderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae2d5ce57991bca16f525728e8d9d399e\">drawAPI</a>() == MHWRender::kOpenGLCoreProfile )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        RawFootPrintDrawAgentCoreProfile&amp; drawAgentRef = RawFootPrintDrawAgentCoreProfile::getDrawAgent();</div>\n\
<div class=\"line\">        drawAgentPtr = &amp;drawAgentRef;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    assert( drawAgentPtr );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (drawAgentPtr) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set color</span></div>\n\
<div class=\"line\">        drawAgentPtr-&gt;setColor(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>(color[0], color[1], color[2], color[3]));</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set matrix</span></div>\n\
<div class=\"line\">        drawAgentPtr-&gt;setMatrix( context, selectInfo);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        drawAgentPtr-&gt;beginDraw( context, passShaderOverride );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawAsBoundingbox)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// If it is in bounding bode, draw only bounding box wireframe, nothing else</span></div>\n\
<div class=\"line\">            drawAgentPtr-&gt;drawBoundingBox();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (drawWireframe || overideTemplated || overrideNoShaded) </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                drawAgentPtr-&gt;drawWireframe();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!overideTemplated &amp;&amp; !overrideNoShaded  &amp;&amp; drawShaded)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                drawAgentPtr-&gt;drawShaded();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        drawAgentPtr-&gt;endDraw();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// End the draw work</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( passShaderOverride ) {</div>\n\
<div class=\"line\">        theRenderer-&gt;<a name=\"a256\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>()-&gt;<a name=\"a257\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>( passShaderOverride );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore old blend state and old raster state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//================================================</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(stateMgr &amp;&amp; (displayStyle &amp; MHWRender::MFrameContext::kGouraudShaded  ||</div>\n\
<div class=\"line\">                    displayStyle &amp; MHWRender::MFrameContext::kFlatShaded))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (stateMgr &amp;&amp; pOldBlendState)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            stateMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a27dbc083002d85108ed30ee1131f68c1\">setBlendState</a>(pOldBlendState);</div>\n\
<div class=\"line\">            stateMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a544e5c653741b90e7c65d2b34e8ebe60\">releaseBlendState</a>(pOldBlendState);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (pOldRasterState)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            stateMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a7dfb1c4f28575ed6581aa40a7b64f22a\">setRasterizerState</a>(pOldRasterState);</div>\n\
<div class=\"line\">            stateMgr-&gt;<a name=\"a258\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a5c1115e1c741c78d1c19909c7b4d8db9\">releaseRasterizerState</a>(pOldRasterState);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (rasterState)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            stateMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a5c1115e1c741c78d1c19909c7b4d8db9\">releaseRasterizerState</a>(rasterState);</div>\n\
<div class=\"line\">            rasterState = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentCoreProfile::initShadersCoreProfile()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* vertexShaderText = </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;#version 330  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;in vec3 Pm;  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;uniform mat4 MVP;  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;void main() {  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   gl_Position = MVP * vec4(Pm,1.0);  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;}&quot;</span>;</div>\n\
<div class=\"line\">    GLuint vertexShaderID = GLCP::CreateShader(GL_VERTEX_SHADER);</div>\n\
<div class=\"line\">    GLCP::ShaderSource(vertexShaderID, 1, &amp;vertexShaderText , NULL);</div>\n\
<div class=\"line\">    GLCP::CompileShader(vertexShaderID);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check for errors:</span></div>\n\
<div class=\"line\">    GLint result;</div>\n\
<div class=\"line\">    GLCP::GetShaderiv(vertexShaderID, GL_COMPILE_STATUS, &amp;result);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(result==GL_FALSE){</div>\n\
<div class=\"line\">        GLint errLength;</div>\n\
<div class=\"line\">        GLCP::GetShaderiv(vertexShaderID, GL_INFO_LOG_LENGTH, &amp;errLength);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span>* errorMessage = (<span class=\"keywordtype\">char</span>*)malloc(errLength+1);</div>\n\
<div class=\"line\">        GLCP::GetShaderInfoLog(vertexShaderID, errLength, NULL, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        fprintf(stdout, <span class=\"stringliteral\">&quot;Compilation of vertex shader failed:\\n%s\\n&quot;</span>, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        free(errorMessage);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* fragmentShaderText = </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;#version 330  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;uniform vec4 color = vec4( 1.0f, 1.0f, 1.0f, 1.0f );  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;out vec4 colorOut; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;void main() {  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   colorOut = color;  \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;}&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLuint fragmentShaderID = GLCP::CreateShader(GL_FRAGMENT_SHADER);</div>\n\
<div class=\"line\">    GLCP::ShaderSource(fragmentShaderID, 1, &amp;fragmentShaderText , NULL);</div>\n\
<div class=\"line\">    GLCP::CompileShader(fragmentShaderID);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GetShaderiv(fragmentShaderID, GL_COMPILE_STATUS, &amp;result);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(result==GL_FALSE){</div>\n\
<div class=\"line\">        GLint errLength;</div>\n\
<div class=\"line\">        GLCP::GetShaderiv(fragmentShaderID, GL_INFO_LOG_LENGTH, &amp;errLength);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span>* errorMessage = (<span class=\"keywordtype\">char</span>*)malloc(errLength+1);</div>\n\
<div class=\"line\">        GLCP::GetShaderInfoLog(fragmentShaderID, errLength, NULL, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        fprintf(stdout, <span class=\"stringliteral\">&quot;Compilation of fragment shader failed:\\n%s\\n&quot;</span>, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        free(errorMessage);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mShaderProgram = GLCP::CreateProgram();</div>\n\
<div class=\"line\">    GLCP::AttachShader(mShaderProgram, vertexShaderID);</div>\n\
<div class=\"line\">    GLCP::AttachShader(mShaderProgram, fragmentShaderID);</div>\n\
<div class=\"line\">    GLCP::LinkProgram(mShaderProgram);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GetProgramiv(mShaderProgram, GL_LINK_STATUS, &amp;result);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(result==GL_FALSE){</div>\n\
<div class=\"line\">        GLint errLength;</div>\n\
<div class=\"line\">        GLCP::GetProgramiv(mShaderProgram, GL_INFO_LOG_LENGTH, &amp;errLength);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span>* errorMessage = (<span class=\"keywordtype\">char</span>*)malloc(errLength+1);</div>\n\
<div class=\"line\">        GLCP::GetProgramInfoLog(mShaderProgram, errLength, NULL, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        fprintf(stdout, <span class=\"stringliteral\">&quot;Linking of shader program failed:\\n%s\\n&quot;</span>, &amp;errorMessage[0]);</div>\n\
<div class=\"line\">        free(errorMessage);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    mWVPIndex = GLCP::GetUniformLocation(mShaderProgram, <span class=\"stringliteral\">&quot;MVP&quot;</span>);</div>\n\
<div class=\"line\">    mColorIndex = GLCP::GetUniformLocation(mShaderProgram, <span class=\"stringliteral\">&quot;color&quot;</span>);</div>\n\
<div class=\"line\">    mVtxAttrib = GLCP::GetAttribLocation( mShaderProgram, <span class=\"stringliteral\">&quot;Pm&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::DeleteShader(vertexShaderID);</div>\n\
<div class=\"line\">    GLCP::DeleteShader(fragmentShaderID);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentCoreProfile::initBuffersCoreProfile()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GLCP::GenVertexArrays(1, &amp;mBBoxVAO);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mBBoxVAO);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mBoundingboxVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mBoundingboxVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(bbData), (<span class=\"keywordtype\">void</span>*)bbData, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mBoundingboxVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mBoundingboxVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(bbWireIndices), (<span class=\"keywordtype\">void</span>*)bbWireIndices, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::EnableVertexAttribArray(mVtxAttrib);</div>\n\
<div class=\"line\">    GLCP::VertexAttribPointer(mVtxAttrib, 3, GL_FLOAT, GL_FALSE, 0, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mSoleVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mSoleVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(sole), (<span class=\"keywordtype\">void</span>*)sole, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mHeelVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mHeelVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(heel), (<span class=\"keywordtype\">void</span>*)heel, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mSoleWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mSoleWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(soleWireIndices), (<span class=\"keywordtype\">void</span>*)soleWireIndices, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mHeelWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mHeelWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(heelWireIndices), (<span class=\"keywordtype\">void</span>*)heelWireIndices, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mSoleShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mSoleShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(soleShadedIndices), (<span class=\"keywordtype\">void</span>*)soleShadedIndices, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenBuffers(1, &amp;mHeelShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mHeelShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::BufferData(GL_ELEMENT_ARRAY_BUFFER, <span class=\"keyword\">sizeof</span>(heelShadedIndices), (<span class=\"keywordtype\">void</span>*)heelShadedIndices, GL_STATIC_DRAW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::UseProgram(mShaderProgram);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Setup ALL VAO Combinations here for further usage:</span></div>\n\
<div class=\"line\">    GLCP::GenVertexArrays(1, &amp;mSoleWireframeVAO);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mSoleWireframeVAO);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mSoleVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mSoleWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::EnableVertexAttribArray(mVtxAttrib);</div>\n\
<div class=\"line\">    GLCP::VertexAttribPointer(mVtxAttrib, 3, GL_FLOAT, GL_FALSE, 0, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenVertexArrays(1, &amp;mHeelWireframeVAO);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mHeelWireframeVAO);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mHeelVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mHeelWireIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::EnableVertexAttribArray(mVtxAttrib);</div>\n\
<div class=\"line\">    GLCP::VertexAttribPointer(mVtxAttrib, 3, GL_FLOAT, GL_FALSE, 0, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenVertexArrays(1, &amp;mSoleShadedVAO);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mSoleShadedVAO);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mSoleVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mSoleShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::EnableVertexAttribArray(mVtxAttrib);</div>\n\
<div class=\"line\">    GLCP::VertexAttribPointer(mVtxAttrib, 3, GL_FLOAT, GL_FALSE, 0, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::GenVertexArrays(1, &amp;mHeelShadedVAO);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(mHeelShadedVAO);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, mHeelVertexBuffer);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, mHeelShadedIndexBuffer);</div>\n\
<div class=\"line\">    GLCP::EnableVertexAttribArray(mVtxAttrib);</div>\n\
<div class=\"line\">    GLCP::VertexAttribPointer(mVtxAttrib, 3, GL_FLOAT, GL_FALSE, 0, 0);</div>\n\
<div class=\"line\">    GLCP::BindVertexArray(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLCP::UseProgram(0);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ARRAY_BUFFER, 0);</div>\n\
<div class=\"line\">    GLCP::BindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentCoreProfile::releaseCoreProfileResources()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mShaderProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteProgram(mShaderProgram);</div>\n\
<div class=\"line\">        mShaderProgram = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBBoxVAO)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteVertexArrays(1, &amp;mBBoxVAO);</div>\n\
<div class=\"line\">        mBBoxVAO = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleWireframeVAO)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteVertexArrays(1, &amp;mSoleWireframeVAO);</div>\n\
<div class=\"line\">        mSoleWireframeVAO = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelWireframeVAO)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteVertexArrays(1, &amp;mHeelWireframeVAO);</div>\n\
<div class=\"line\">        mHeelWireframeVAO = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleShadedVAO)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteVertexArrays(1, &amp;mSoleShadedVAO);</div>\n\
<div class=\"line\">        mSoleShadedVAO = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelShadedVAO)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteVertexArrays(1, &amp;mHeelShadedVAO);</div>\n\
<div class=\"line\">        mHeelShadedVAO = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBoundingboxVertexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mBoundingboxVertexBuffer);</div>\n\
<div class=\"line\">        mBoundingboxVertexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBoundingboxIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mBoundingboxIndexBuffer);</div>\n\
<div class=\"line\">        mBoundingboxIndexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleVertexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mSoleVertexBuffer);</div>\n\
<div class=\"line\">        mSoleVertexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelVertexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mHeelVertexBuffer);</div>\n\
<div class=\"line\">        mHeelVertexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleWireIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mSoleWireIndexBuffer);</div>\n\
<div class=\"line\">        mSoleWireIndexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleShadedIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mSoleShadedIndexBuffer);</div>\n\
<div class=\"line\">        mSoleShadedIndexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelWireIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mHeelWireIndexBuffer);</div>\n\
<div class=\"line\">        mHeelWireIndexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelShadedIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GLCP::DeleteBuffers(1, &amp;mHeelShadedIndexBuffer);</div>\n\
<div class=\"line\">        mHeelShadedIndexBuffer = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DX stuff</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentDX::initShadersDX()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDevicePtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !mDevicePtr )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    HRESULT hr;</div>\n\
<div class=\"line\">    DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;</div>\n\
<div class=\"line\">    ID3DBlob* vsBlob = NULL;</div>\n\
<div class=\"line\">    ID3DBlob* psBlob = NULL;</div>\n\
<div class=\"line\">    ID3DBlob* pErrorBlob;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// VS</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mVertexShaderPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _MSC_VER &lt; 1700</span></div>\n\
<div class=\"line\">        hr = D3DX11CompileFromFile(</div>\n\
<div class=\"line\">            mEffectLocation.asChar(),</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;mainVS&quot;</span>,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;vs_5_0&quot;</span>,</div>\n\
<div class=\"line\">            dwShaderFlags,</div>\n\
<div class=\"line\">            0,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            &amp;vsBlob,</div>\n\
<div class=\"line\">            &amp;pErrorBlob,</div>\n\
<div class=\"line\">            NULL);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        hr = D3DCompileFromFile(</div>\n\
<div class=\"line\">            mEffectLocation.asWChar(),</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;mainVS&quot;</span>,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;vs_5_0&quot;</span>,</div>\n\
<div class=\"line\">            dwShaderFlags,</div>\n\
<div class=\"line\">            0,</div>\n\
<div class=\"line\">            &amp;vsBlob,</div>\n\
<div class=\"line\">            &amp;pErrorBlob);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Failed to compile vertex shader\\n&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pErrorBlob) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (pErrorBlob) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateVertexShader(</div>\n\
<div class=\"line\">            vsBlob-&gt;GetBufferPointer(), vsBlob-&gt;GetBufferSize(), NULL, &amp;mVertexShaderPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Failed to create vertex shader\\n&quot;</span>);</div>\n\
<div class=\"line\">            vsBlob-&gt;Release();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Layout</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mVertexLayoutPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        D3D11_INPUT_ELEMENT_DESC layout[] =</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            { <span class=\"stringliteral\">&quot;POSITION&quot;</span>, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },</div>\n\
<div class=\"line\">            { <span class=\"stringliteral\">&quot;NORMAL&quot;</span>, 0, DXGI_FORMAT_R32G32B32_FLOAT, 1, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numLayoutElements = <span class=\"keyword\">sizeof</span> layout/<span class=\"keyword\">sizeof</span> layout[0];</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateInputLayout(</div>\n\
<div class=\"line\">            layout, numLayoutElements, vsBlob-&gt;GetBufferPointer(), vsBlob-&gt;GetBufferSize(), &amp;mVertexLayoutPtr);</div>\n\
<div class=\"line\">        vsBlob-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Failed to create input layout\\n&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// PS</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mPixelShaderPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _MSC_VER &lt; 1700</span></div>\n\
<div class=\"line\">        hr = D3DX11CompileFromFile(</div>\n\
<div class=\"line\">            mEffectLocation.asChar(),</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;mainPS&quot;</span>,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;ps_5_0&quot;</span>,</div>\n\
<div class=\"line\">            dwShaderFlags,</div>\n\
<div class=\"line\">            0,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            &amp;psBlob,</div>\n\
<div class=\"line\">            &amp;pErrorBlob,</div>\n\
<div class=\"line\">            NULL);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        hr = D3DCompileFromFile(</div>\n\
<div class=\"line\">            mEffectLocation.asWChar(),</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            NULL,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;mainPS&quot;</span>,</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;ps_5_0&quot;</span>,</div>\n\
<div class=\"line\">            dwShaderFlags,</div>\n\
<div class=\"line\">            0,</div>\n\
<div class=\"line\">            &amp;psBlob,</div>\n\
<div class=\"line\">            &amp;pErrorBlob);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Failed to compile vertex shader\\n&quot;</span>);</div>\n\
<div class=\"line\">            mVertexShaderPtr-&gt;Release();</div>\n\
<div class=\"line\">            mVertexLayoutPtr-&gt;Release();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pErrorBlob) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (pErrorBlob) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreatePixelShader(</div>\n\
<div class=\"line\">            psBlob-&gt;GetBufferPointer(), psBlob-&gt;GetBufferSize(), NULL, &amp;mPixelShaderPtr);</div>\n\
<div class=\"line\">        psBlob-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Failed to create pixel shader\\n&quot;</span>);</div>\n\
<div class=\"line\">            mVertexShaderPtr-&gt;Release();</div>\n\
<div class=\"line\">            mVertexLayoutPtr-&gt;Release();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentDX::initBuffersDX()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    assert( mDevicePtr );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !mDevicePtr )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    HRESULT hr;</div>\n\
<div class=\"line\">    D3D11_BUFFER_DESC bd;</div>\n\
<div class=\"line\">    ZeroMemory(&amp;bd, <span class=\"keyword\">sizeof</span>(bd));</div>\n\
<div class=\"line\">    D3D11_SUBRESOURCE_DATA InitData;</div>\n\
<div class=\"line\">    ZeroMemory(&amp;InitData, <span class=\"keyword\">sizeof</span>(InitData));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mBoundingboxVertexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(float) * 3 * 8;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = bbData;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mBoundingboxVertexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !mBoundingboxIndexBufferPtr ){</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> short) * 2 * 12;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = bbWireIndices;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mBoundingboxIndexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Sole positions</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mSoleVertexBufferPtr[0])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(float) * 3 * soleCount;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = sole;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mSoleVertexBufferPtr[0]);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Sole normals</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mSoleVertexBufferPtr[1])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(float) * 3 * soleCount;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = soleNorm;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mSoleVertexBufferPtr[1]);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Heal positions</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mHeelVertexBufferPtr[0])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(float) * 3 * heelCount;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = heel;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mHeelVertexBufferPtr[0]);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Heal normals</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mHeelVertexBufferPtr[1])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(float) * 3 * heelCount;</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = heelNorm;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mHeelVertexBufferPtr[1]);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mSoleWireIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> short) * 2 * (soleCount-1);</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = soleWireIndices;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mSoleWireIndexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mHeelWireIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> short) * 2 * (heelCount-1);</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = heelWireIndices;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mHeelWireIndexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mSoleShadedIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> short) * 3 * (soleCount-2);</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = soleShadedIndices;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mSoleShadedIndexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mHeelShadedIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_IMMUTABLE;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> short) * 3 * (heelCount-2);</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        InitData.pSysMem = heelShadedIndices;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, &amp;InitData, &amp;mHeelShadedIndexBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!mConstantBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bd.Usage = D3D11_USAGE_DEFAULT;</div>\n\
<div class=\"line\">        bd.ByteWidth = <span class=\"keyword\">sizeof</span>(ConstantBufferDef);</div>\n\
<div class=\"line\">        bd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;</div>\n\
<div class=\"line\">        bd.CPUAccessFlags = 0;</div>\n\
<div class=\"line\">        hr = mDevicePtr-&gt;CreateBuffer(&amp;bd, NULL, &amp;mConstantBufferPtr);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (FAILED(hr)) <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> RawFootPrintDrawAgentDX::releaseDXResources()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBoundingboxVertexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mBoundingboxVertexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mBoundingboxVertexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mBoundingboxIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mBoundingboxIndexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mBoundingboxIndexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleVertexBufferPtr[0])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[0]-&gt;Release();</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[0] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleVertexBufferPtr[1])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[1]-&gt;Release();</div>\n\
<div class=\"line\">        mSoleVertexBufferPtr[1] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelVertexBufferPtr[0])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[0]-&gt;Release();</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[0] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelVertexBufferPtr[1])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[1]-&gt;Release();</div>\n\
<div class=\"line\">        mHeelVertexBufferPtr[1] = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleWireIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSoleWireIndexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mSoleWireIndexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSoleShadedIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSoleShadedIndexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mSoleShadedIndexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelWireIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mHeelWireIndexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mHeelWireIndexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mHeelShadedIndexBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mHeelShadedIndexBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mHeelShadedIndexBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mVertexShaderPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mVertexShaderPtr-&gt;Release();</div>\n\
<div class=\"line\">        mVertexShaderPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mPixelShaderPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mPixelShaderPtr-&gt;Release();</div>\n\
<div class=\"line\">        mPixelShaderPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mVertexLayoutPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mVertexLayoutPtr-&gt;Release();</div>\n\
<div class=\"line\">        mVertexLayoutPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mConstantBufferPtr)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mConstantBufferPtr-&gt;Release();</div>\n\
<div class=\"line\">        mConstantBufferPtr = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif // _WIN32</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Plugin Registration</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> rawfootPrint::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a259\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a> unitFn;</div>\n\
<div class=\"line\">    <a name=\"_a260\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> numberFn;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>          stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    size = unitFn.<a name=\"a261\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>( <span class=\"stringliteral\">&quot;size&quot;</span>, <span class=\"stringliteral\">&quot;sz&quot;</span>, <a name=\"a262\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a1925172d8d6f77cdb98f7f486f706024\">MFnUnitAttribute::kDistance</a> );</div>\n\
<div class=\"line\">    unitFn.<a name=\"a263\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a02a46e1b4ae48c38d85678a8611e3e77\">setDefault</a>( 1.0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = addAttribute( size );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">        stat.<a name=\"a264\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    transparencySort = numberFn.<a name=\"a265\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;transparencySort&quot;</span>, <span class=\"stringliteral\">&quot;ts&quot;</span>, <a name=\"a266\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a> );</div>\n\
<div class=\"line\">    numberFn.<a name=\"a267\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    stat = addAttribute( transparencySort );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    transparency = numberFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;transparency&quot;</span>, <span class=\"stringliteral\">&quot;t&quot;</span>, <a name=\"a268\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a> );</div>\n\
<div class=\"line\">    numberFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( 1.0 );</div>\n\
<div class=\"line\">    numberFn.<a name=\"a269\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>( 1.0 );</div>\n\
<div class=\"line\">    numberFn.<a name=\"a270\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>( 0.0 );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    stat = addAttribute( transparency );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) {</div>\n\
<div class=\"line\">        stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add dependency on the localScale attribute, so that when size is modified RawFootPrintDrawOverride::transform will get called</span></div>\n\
<div class=\"line\">    attributeAffects( rawfootPrint::size, <a name=\"a271\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#aec8212a7775d67dbea1c6207a80d3cf3\">MPxLocatorNode::localScale</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a272\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(</div>\n\
<div class=\"line\">                <span class=\"stringliteral\">&quot;rawfootPrint&quot;</span>,</div>\n\
<div class=\"line\">                rawfootPrint::id,</div>\n\
<div class=\"line\">                &amp;rawfootPrint::creator,</div>\n\
<div class=\"line\">                &amp;rawfootPrint::initialize,</div>\n\
<div class=\"line\">                <a name=\"a273\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee1b06f2f9885d7d4fd4fda48926f94b\">MPxNode::kLocatorNode</a>,</div>\n\
<div class=\"line\">                &amp;rawfootPrint::drawDbClassification);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = <a name=\"a274\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#aad1598f978d33d3e5101ae28f9f07b6f\">MHWRender::MDrawRegistry::registerDrawOverrideCreator</a>(</div>\n\
<div class=\"line\">        rawfootPrint::drawDbClassification,</div>\n\
<div class=\"line\">        rawfootPrint::drawRegistrantId,</div>\n\
<div class=\"line\">        RawFootPrintDrawOverride::Creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerDrawOverrideCreator&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = <a name=\"a275\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ae87be399ce4204dbe8b565c4ff76c0fa\">MHWRender::MDrawRegistry::deregisterDrawOverrideCreator</a>(</div>\n\
<div class=\"line\">        rawfootPrint::drawDbClassification,</div>\n\
<div class=\"line\">        rawfootPrint::drawRegistrantId);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterDrawOverrideCreator&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( rawfootPrint::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Release DX resources</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        RawFootPrintDrawAgentDX&amp; drawAgentRef = RawFootPrintDrawAgentDX::getDrawAgent();</div>\n\
<div class=\"line\">        drawAgentRef.releaseDXResources();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Release GL Core resources</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        RawFootPrintDrawAgentCoreProfile&amp; drawAgentRef = RawFootPrintDrawAgentCoreProfile::getDrawAgent();</div>\n\
<div class=\"line\">        drawAgentRef.releaseCoreProfileResources();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";