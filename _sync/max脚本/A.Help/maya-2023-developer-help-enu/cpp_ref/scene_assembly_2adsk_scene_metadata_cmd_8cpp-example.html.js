var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: sceneAssembly/adskSceneMetadataCmd.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: sceneAssembly/adskSceneMetadataCmd.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">sceneAssembly/adskSceneMetadataCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#include &quot;sceneAssemblyStrings.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;adskSceneMetadataCmd.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/adskDataAssociations.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/adskDataAccessor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/adskDataAccessorMaya.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/adskDataStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;iostream&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;string&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>std;</div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespaceadsk_1_1_data.html\">adsk::Data</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Constants</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> gStructureName   [] = <span class=\"stringliteral\">&quot;adskSceneMetadataCmdStructure&quot;</span>;   </div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> gMemberName      [] = <span class=\"stringliteral\">&quot;adskSceneMetadataCmdDataString&quot;</span>;</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> gStreamName      [] = <span class=\"stringliteral\">&quot;adskSceneMetadataCmdStream&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CLASS AdskSceneMetadataCmd</span></div>\n\
<div class=\"line\"><span class=\"comment\">//==============================================================================</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">AdskSceneMetadataCmd::AdskSceneMetadataCmd()</div>\n\
<div class=\"line\">    : fMode(kEdit)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">AdskSceneMetadataCmd::~AdskSceneMetadataCmd()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* AdskSceneMetadataCmd::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> AdskSceneMetadataCmd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> AdskSceneMetadataCmd::cmdSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( <span class=\"stringliteral\">&quot;-c&quot;</span>, <span class=\"stringliteral\">&quot;-channelName&quot;</span>,   <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );   </div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>( <span class=\"stringliteral\">&quot;-d&quot;</span>, <span class=\"stringliteral\">&quot;-data&quot;</span>,          <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#ae6f2057f0d0419845a48c1eb6813f2adafab53ea4a643325262b9c140af093279\">MSyntax::kString</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// In query mode, the command needs to know what channel to look for</span></div>\n\
<div class=\"line\">    syntax.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a2b8a4d7860614d895198e769b7c3ede9\">makeFlagQueryWithFullArgs</a>( <span class=\"stringliteral\">&quot;-channelName&quot;</span>, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a299f2c91c864387f1b4208e99a72631d\">setObjectType</a>( <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a72b517c34c0de9b91ce4b5342675186ba95ae214c27f08b1e9d9a19245cca42fb\">MSyntax::kStringObjects</a>, 1, 1 );</div>\n\
<div class=\"line\">    syntax.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a414088ac458bc323845634fcf7663e69\">enableQuery</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    syntax.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#a2a329cd0b0d89bc1b9721c522d6d0006\">enableEdit</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* AdskSceneMetadataCmd::name()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"stringliteral\">&quot;adskSceneMetadataCmd&quot;</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::doIt(<span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a> argsDb( syntax(), args, &amp;status );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Validate the mode</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argsDb.isEdit()) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (argsDb.isQuery()) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            displayError( <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rEditQueryError, status));</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        fMode = kEdit;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argsDb.isQuery()) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fMode = kQuery;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Parse and validate the flags</span></div>\n\
<div class=\"line\">    fChannelName.parse  ( argsDb, <span class=\"stringliteral\">&quot;-channelName&quot;</span> ); </div>\n\
<div class=\"line\">    fData.parse         ( argsDb, <span class=\"stringliteral\">&quot;-data&quot;</span> );  </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !fData.isModeValid(fMode) ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rDataFlagError, status));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The channel name flag needs to be set in all modes</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !fChannelName.isSet() || !fChannelName.isArgValid() || fChannelName.arg() == <span class=\"stringliteral\">&quot;&quot;</span> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rChannelNameFlagError, status) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the scene path</span></div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> objs;   </div>\n\
<div class=\"line\">    status = argsDb.getObjects( objs );</div>\n\
<div class=\"line\">    <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#ga2f3f1ac62ed663f5efd20ff99991335b\">CHECK_MSTATUS_AND_RETURN_IT</a>( status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// cmdSyntax above enforces one and only one object</span></div>\n\
<div class=\"line\">    <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath = objs[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> ( fMode ) </div>\n\
<div class=\"line\">    {     </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> kEdit:     status = doEdit( scenePath );  <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> kQuery:    status = doQuery( scenePath ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">default</span>: <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::doEdit( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> setMetadata( scenePath );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::doQuery( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath )</div>\n\
<div class=\"line\">{    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> getMetadata( scenePath );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::getMetadata( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// This string gets populated with errors by the Metadata library when they occur</span></div>\n\
<div class=\"line\">    std::string errors;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the accessor</span></div>\n\
<div class=\"line\">    std::unique_ptr&lt; Accessor &gt; accessor( getAccessorForScene( scenePath ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( NULL == accessor.get() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the scene associations</span></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> associations;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( MS::kSuccess != getSceneAssociations(*(accessor.get()), associations) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Look for the specified channel</span></div>\n\
<div class=\"line\">    std::string channelName( fChannelName.arg().asChar() );</div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> *channel = associations.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#afdf389cfedef552b73399ab8d4aea282\">findChannel</a>( channelName );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( NULL == channel )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// The specified channel was not found in the metadata. </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// There is simply no metadata of interest in that scene file</span></div>\n\
<div class=\"line\">        setResult( <span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// There should only be one stream in our metadata. Make sure there is at least one</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 0 == channel-&gt;dataStreamCount() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rMissingStreamInChannelError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, fChannelName.arg() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> *stream = channel-&gt;dataStream( 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// There should only be one element in the stream. Make sure there is at least one</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 0 == stream-&gt;<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#a2cf54c09c7946e9fed5c17c5959c8e98\">elementCount</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rMissingElementInStreamError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, fChannelName.arg() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> handle = stream-&gt;<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#ae5ac2be84506f4117b59cff6554d85a3\">element</a>( 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Position the handle on our data of interest</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( <span class=\"keyword\">false</span> == handle.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html#ab72c3d5222528d68f876f43300382c64\">setPositionByMemberName</a>( gMemberName ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rMissingMemberInElementError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, gMemberName, fChannelName.arg() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( Member::kString != handle.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html#adcaa08b2590d3626ffe0ae9bb753337e\">dataType</a>() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rInvalidMemberDataTypeError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, fChannelName.arg() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">char</span> **strings = handle.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html#ad1774dcab460b16c19ee80506226b35c\">asString</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    setResult( strings[0] );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::setMetadata( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// This string gets populated with errors by the Metadata library when they occur</span></div>\n\
<div class=\"line\">    std::string errors;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the accessor</span></div>\n\
<div class=\"line\">    std::unique_ptr&lt; Accessor &gt; accessor( getAccessorForScene( scenePath ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( NULL == accessor.get() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        setResult( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the accessor</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> associations;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( MS::kSuccess != getSceneAssociations(*(accessor.get()), associations) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        setResult( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Is our structure registered yet?</span></div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *structure = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( Structure::ListIterator itrStructList = Structure::allStructures().begin(); itrStructList != Structure::allStructures().end(); ++itrStructList )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( std::string((*itrStructList)-&gt;name()) == std::string(gStructureName) )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            structure = *itrStructList;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( NULL == structure )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Register our structure since it is not registered yet.</span></div>\n\
<div class=\"line\">        structure = Structure::create();</div>\n\
<div class=\"line\">        structure-&gt;<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ad79b3edf375d6aa09288510a4e024a64\">setName</a>( gStructureName );</div>\n\
<div class=\"line\">        structure-&gt;<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#acfbcfec5221077596fbb06a1772c035d\">addMember</a>( Member::kString, 1, gMemberName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Structure::registerStructure( *structure );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Make sure our structure is known by the accessor</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html#aff553838464e5f221113da466536a67b\">Accessor::StructureSet</a> &amp;accessorStructures = accessor-&gt;structures();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( accessorStructures.find( structure ) == accessorStructures.end() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Build a new structure set from the existing one</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html#aff553838464e5f221113da466536a67b\">Accessor::StructureSet</a> updatedStructures = accessorStructures;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Add our structure to it</span></div>\n\
<div class=\"line\">        updatedStructures.insert( structure );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Assign the new structure set</span></div>\n\
<div class=\"line\">        accessor-&gt;setStructures( updatedStructures );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve or create the specified channel</span></div>\n\
<div class=\"line\">    std::string channelName( fChannelName.arg().asChar() );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> channel = associations.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#acff69ff356746a2cd0288ebb4bf2950a\">channel</a>( channelName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create the stream</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\">Stream</a> stream( *structure, std::string( gStreamName ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the stream in the channel</span></div>\n\
<div class=\"line\">    channel.setDataStream( stream );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create an handle to the data itself</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\">Handle</a> handle( *structure );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set our string</span></div>\n\
<div class=\"line\">    std::string dataString( fData.arg().asChar() );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 0 != handle.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html#a47c6bf88120d623e5e9d4b33d99a4531\">fromStr</a>( dataString, 0, errors ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rSetDataOnChannelError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, fChannelName.arg(), errors.c_str() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        setResult( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the handle in the stream</span></div>\n\
<div class=\"line\">    stream.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html#af5b9bd96d037b7ceecb05bba5d646ee9\">setElement</a>( 0, handle );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Write the new scene file metadata</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !accessor-&gt;write( errors ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rWriteMetadataError, resStatus );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        setResult( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// true is success;</span></div>\n\
<div class=\"line\">    setResult( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">std::unique_ptr&lt; Accessor &gt; AdskSceneMetadataCmd::getAccessorForScene( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> scenePath )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// This string gets populated with errors by the Metadata library when they occur</span></div>\n\
<div class=\"line\">    std::string errors;</div>\n\
<div class=\"line\">    std::string stdScenePath( scenePath.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>() );</div>\n\
<div class=\"line\">    std::unique_ptr&lt; Accessor &gt; accessor( Accessor::accessorByExtension( stdScenePath ) );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( NULL == accessor.get() ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rAccessorNotFoundError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, scenePath );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> std::unique_ptr&lt; Accessor &gt;();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Optimization: only read the scene associations.</span></div>\n\
<div class=\"line\">    std::set&lt; std::string &gt; wantedAssociations;</div>\n\
<div class=\"line\">    wantedAssociations.insert( AccessorMaya::getSceneAssociationsName() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !accessor-&gt;read(   stdScenePath, </div>\n\
<div class=\"line\">                            NULL,                   <span class=\"comment\">// read all the structures</span></div>\n\
<div class=\"line\">                            &amp;wantedAssociations,    </div>\n\
<div class=\"line\">                            errors ) ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> resStatus;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> errorString = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_resource.html#a121315f443a9c4ea512738dc1d39414d\">MStringResource::getString</a>( rCannotReadFileError, resStatus );</div>\n\
<div class=\"line\">        errorString.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a07ae464181c795f43fa1bcc288acff91\">format</a>( errorString, scenePath, errors.c_str() );</div>\n\
<div class=\"line\">        displayError( errorString );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> std::unique_ptr&lt; Accessor &gt;();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> accessor;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> AdskSceneMetadataCmd::getSceneAssociations( <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html\">Accessor</a> &amp;accessor, <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;out_associations )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Retrieve the scene-level association</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html#a1e26ab17d996ee0fecd7cf918fe9915e\">Accessor::AssociationsMap</a> &amp;associationsMap = accessor.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html#a64a9e981f0481bc7f992232430db244c\">associations</a>();</div>\n\
<div class=\"line\">    Accessor::AssociationsMap::const_iterator iterAssociations = associationsMap.find( AccessorMaya::getSceneAssociationsName() );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( iterAssociations == associationsMap.end() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// We could not find the scene associations in the given file. Create them</span></div>\n\
<div class=\"line\">        out_associations = Associations::create();</div>\n\
<div class=\"line\">        accessor.<a class=\"code\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_accessor.html#a64a9e981f0481bc7f992232430db244c\">associations</a>()[AccessorMaya::getSceneAssociationsName()] = out_associations;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        out_associations = (*iterAssociations).second;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy</span></div>\n\
<div class=\"line\"><span class=\"comment\">// form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";