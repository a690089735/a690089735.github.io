var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: testNsolverNode/testNsolverNode.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'test_nsolver_node_2test_nsolver_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: testNsolverNode/testNsolverNode.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">testNsolverNode/testNsolverNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;testNsolverNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTime.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMeshData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnUnitAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnIntArrayData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnComponentListData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshVertex.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">This example shows a custom solver at work.  Two nCloth objects are created,</span></div>\n\
<div class=\"line\"><span class=\"comment\">one is disconnected from the default nucleus solver, and hooked to</span></div>\n\
<div class=\"line\"><span class=\"comment\">this custom solver node. This node creates an MnSolver object, and gives</span></div>\n\
<div class=\"line\"><span class=\"comment\">it the same properties as the default maya settings for the nucleus</span></div>\n\
<div class=\"line\"><span class=\"comment\">solver, so that it should solve any connected objects the same way</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">To be useable with standard maya nThing nodes, a custom solver needs</span></div>\n\
<div class=\"line\"><span class=\"comment\">these 3 array attributes:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">-startState     To be connected from the cloth objects to the solver</span></div>\n\
<div class=\"line\"><span class=\"comment\">-currentState   To be connected from the cloth objects to the solver</span></div>\n\
<div class=\"line\"><span class=\"comment\">-nextState      To be connected from the solver object to the cloth objects</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">and  a 4th attribute that is the current time.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">In a more complete solver node, you would want to connect constraint objects</span></div>\n\
<div class=\"line\"><span class=\"comment\">as well, but that&#39;s a topic for a different example.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">We&#39;ve hardcoded a lot of the settings that would normally be attributes, </span></div>\n\
<div class=\"line\"><span class=\"comment\">but only because we want to hilight the ones that are required for the solver.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">At the start frame (which we hardcoded to 1), we always rebuild the solver</span></div>\n\
<div class=\"line\"><span class=\"comment\">relationships from scratch. We don&#39;t want to mess with the solver </span></div>\n\
<div class=\"line\"><span class=\"comment\">relationships too much while it&#39;s running, so we wait until the next rewind.</span></div>\n\
<div class=\"line\"><span class=\"comment\">In this simple example, that means removing all the objects and collisions</span></div>\n\
<div class=\"line\"><span class=\"comment\">from the solver, and re-adding whatever is currently connected.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">When a solve is needed, the first nThing to get a refresh will pull on the</span></div>\n\
<div class=\"line\"><span class=\"comment\">nextState attribute.  When the solver gets a pull on one next state element,</span></div>\n\
<div class=\"line\"><span class=\"comment\">it wil pull on either the all the currentState attribute elements,</span></div>\n\
<div class=\"line\"><span class=\"comment\">or the all the startStates, depending on the current time.</span></div>\n\
<div class=\"line\"><span class=\"comment\">This pull forces all the nThings to update their current state,</span></div>\n\
<div class=\"line\"><span class=\"comment\">to reflect the effects of any external animation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">Once all the nThings have been updated, the solve() call on the solver</span></div>\n\
<div class=\"line\"><span class=\"comment\">will update all the objects that have been assigned to that solver.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">After that, we mark the plug clean to indicate that the solve is completed.</span></div>\n\
<div class=\"line\"><span class=\"comment\">You may notive that we&#39;re not actually passing back any data or an updated</span></div>\n\
<div class=\"line\"><span class=\"comment\">MnObject, This is because when we added an object to the MnSolver at the start frame,</span></div>\n\
<div class=\"line\"><span class=\"comment\">it actually got a pointer to the internal data of the source object, and</span></div>\n\
<div class=\"line\"><span class=\"comment\">each frame, it updates it directly. The rest of the connections are there so that</span></div>\n\
<div class=\"line\"><span class=\"comment\">we can force synchronization, and make sure that any external animation is</span></div>\n\
<div class=\"line\"><span class=\"comment\">updated.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">A motivated individual could add some current and start state connections for passive</span></div>\n\
<div class=\"line\"><span class=\"comment\">objects, and just skip the next state connections on those.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">Below is some example code to test this plugin:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Note: Before running this code, make sure the plugin testNsolverNode is loaded!</span></div>\n\
<div class=\"line\"><span class=\"comment\">//---------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">global proc setupCustomSolverScene()</span></div>\n\
<div class=\"line\"><span class=\"comment\">{</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    file -f -new;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pPlane1[] = `polyPlane -w 5 -h 5 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    move -r -10 0 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNCloth 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    string $pPlane2[] = `polyPlane -w 5 -h 5 -sx 10 -sy 10 -ax 0 1 0 -cuv 2 -ch 1`;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNCloth 0;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //Hookup plane2 (the cloth object created for plane2 is named nClothShape2) to our custom solver instead.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //First, disconnect it from the default nucleus solver:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    disconnectAttr nClothShape2.currentState nucleus1.inputActive[1];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    disconnectAttr nClothShape2.startState nucleus1.inputActiveStart[1];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    disconnectAttr nucleus1.outputObjects[1] nClothShape2.nextState;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    disconnectAttr nucleus1.startFrame nClothShape2.startFrame;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //create our custom solver:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    createNode testNsolverNode;</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    //Hookup plane2 to our custom solver:</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr testNsolverNode1.nextState[0] nClothShape2.nextState;</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr nClothShape2.currentState testNsolverNode1.currentState[0];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr nClothShape2.startState testNsolverNode1.startState[0];</span></div>\n\
<div class=\"line\"><span class=\"comment\">    connectAttr time1.outTime testNsolverNode1.currentTime;</span></div>\n\
<div class=\"line\"><span class=\"comment\">}</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> testNsolverNode::id( 0x85005 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNObjectData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MnCloth.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNsolverNode::startState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNsolverNode::currentState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNsolverNode::nextState;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> testNsolverNode::currentTime;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> statCheck( <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> msg )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout&lt;&lt;msg&lt;&lt;<span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">testNsolverNode::testNsolverNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    solver.createNSolver();</div>\n\
<div class=\"line\">    solver.setGravity(9.8f);</div>\n\
<div class=\"line\">    solver.setStartTime((<span class=\"keywordtype\">float</span>)(1.0/24.0));</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> testNsolverNode::compute(<span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a> &amp;data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( plug == nextState )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        <span class=\"comment\">//get the value of the currentTime </span></div>\n\
<div class=\"line\">        <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html\">MTime</a> currTime = data.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>(currentTime).<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#aaa4774146bfa48e040aea132d03b900c\">asTime</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> solveTime = (float)currTime.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a105d41236561f4d4be6383ced757a429\">as</a>(<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#abceb2331ad056e3c5ad27894199a49eda3091d1a096c28d4993507f167253ebc7\">MTime::kSeconds</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> inputData;</div>\n\
<div class=\"line\">        <span class=\"comment\">// start frame setup</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(currTime.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_time.html#a324b14b7506c6e4f47912161956974ed\">value</a>() &lt;= 1.0) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// actually, there will be multiple pulls on next state at the start frame</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// if there are multiple nCloth objects - you&#39;ll need to check and make sure that </span></div>\n\
<div class=\"line\">            <span class=\"comment\">// you only initialize once, or take a performance hit</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// you could also re-initialize if a connection is made or broke at the start frame</span></div>\n\
<div class=\"line\">            <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> multiDataHandle = data.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a6ba8ea2b4af93fabd2a7c846a1625587\">inputArrayValue</a>(startState);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> count =  multiDataHandle.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;multi handle elementcount = &quot;</span> &lt;&lt; count &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">            solver.removeAllCollisions();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; count; i++) {</div>\n\
<div class=\"line\">              <span class=\"comment\">// yes, I suppose  you could be more careful about sparse indices</span></div>\n\
<div class=\"line\">              <span class=\"comment\">// and use next() to iterate, but this example is more about</span></div>\n\
<div class=\"line\">              <span class=\"comment\">// using MnSolver than about careful use of multis</span></div>\n\
<div class=\"line\">                multiDataHandle.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">jumpToElement</a>(i);</div>\n\
<div class=\"line\">                inputData = multiDataHandle.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">inputValue</a>().<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">                <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html\">MFnNObjectData</a> inputNData(inputData);       </div>\n\
<div class=\"line\">                <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_mn_cloth.html\">MnCloth</a> * nObj = NULL;</div>\n\
<div class=\"line\">                inputNData.getObjectPtr(nObj);  </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// remove and re-add all objects at start frame in case </span></div>\n\
<div class=\"line\">                <span class=\"comment\">// objects have been added or removed</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                solver.removeNObject(nObj);</div>\n\
<div class=\"line\">                solver.addNObject(nObj);</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> nObj;    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            solver.makeAllCollide();</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html\">MArrayDataHandle</a> multiDataHandle = data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a6ba8ea2b4af93fabd2a7c846a1625587\">inputArrayValue</a>(currentState);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> count =  multiDataHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a5f3dd1d27853eccbbe78b6d4383ccb79\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i = 0; i &lt; count; i++) {</div>\n\
<div class=\"line\">                multiDataHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a8d77f0fea87bb6854b60cd199bf26240\">jumpToElement</a>(i);</div>\n\
<div class=\"line\">                inputData =multiDataHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_array_data_handle.html#a81d24dca6d647d8d0a8fe0ef2c63b170\">inputValue</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a31773b870681e1f6b3ad82ff58de33bc\">data</a>();</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_n_object_data.html\">MFnNObjectData</a> inputNData(inputData);       </div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_mn_cloth.html\">MnCloth</a> * nObj = NULL;</div>\n\
<div class=\"line\">                inputNData.getObjectPtr(nObj);</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> nObj;    </div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        solver.setGravity(9.8f);</div>\n\
<div class=\"line\">        solver.setGravityDir(0.0f, -1.0f, 0.0f);</div>\n\
<div class=\"line\">        solver.setAirDensity(1.0f);</div>\n\
<div class=\"line\">        solver.setWindSpeed(0.0f);</div>\n\
<div class=\"line\">        solver.setWindDir(0.0f, 1.0f, 0.0f);</div>\n\
<div class=\"line\">        solver.setWindNoiseIntensity(0.0f);</div>\n\
<div class=\"line\">        solver.setDisabled(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        solver.setSubsteps(3);</div>\n\
<div class=\"line\">        solver.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_mn_cloth.html#a1b2ed19e3f9a94556b7bd122450501dd\">setMaxIterations</a>(4);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        solver.solve(solveTime);</div>\n\
<div class=\"line\">        data.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == currentState )</div>\n\
<div class=\"line\">    {   </div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == startState) {</div>\n\
<div class=\"line\">        data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>(plug);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        stat = MS::kUnknownParameter;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> testNsolverNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> tAttr;</div>\n\
<div class=\"line\">    startState = tAttr.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;startState&quot;</span>, <span class=\"stringliteral\">&quot;sst&quot;</span>, <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9c720fc6ebcdf253fe6d586db63dd943\">MFnData::kNObject</a>, <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create startState&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    currentState = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;currentState&quot;</span>, <span class=\"stringliteral\">&quot;cst&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9c720fc6ebcdf253fe6d586db63dd943\">MFnData::kNObject</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create currentState&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    nextState = tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;nextState&quot;</span>, <span class=\"stringliteral\">&quot;nst&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9c720fc6ebcdf253fe6d586db63dd943\">MFnData::kNObject</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;stat );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    statCheck(stat, <span class=\"stringliteral\">&quot;failed to create nextState&quot;</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#acc80b84249f9c028f2c6d085a026b50c\">setArray</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html\">MFnUnitAttribute</a> uniAttr;</div>\n\
<div class=\"line\">    currentTime = uniAttr.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a31f804de81a968aa11b510a6231e7874\">create</a>( <span class=\"stringliteral\">&quot;currentTime&quot;</span>, <span class=\"stringliteral\">&quot;ctm&quot;</span> , <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_unit_attribute.html#a1d1cfd8ffb84e947f82999c682b666a7a65c3a8bb75ba1a57e36c86855169752e\">MFnUnitAttribute::kTime</a>,  0.0, &amp;stat  );       </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(startState);</div>\n\
<div class=\"line\">    addAttribute(currentState);</div>\n\
<div class=\"line\">    addAttribute(nextState);</div>\n\
<div class=\"line\">    addAttribute(currentTime);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    attributeAffects(startState, nextState);</div>\n\
<div class=\"line\">    attributeAffects(currentState, nextState);  </div>\n\
<div class=\"line\">    attributeAffects(currentTime, nextState);   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, <span class=\"stringliteral\">&quot;Autodesk - nCloth Prototype 4&quot;</span>, <span class=\"stringliteral\">&quot;8.5&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode ( <span class=\"stringliteral\">&quot;testNsolverNode&quot;</span>, testNsolverNode::id,testNsolverNode ::creator, testNsolverNode::initialize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(testNsolverNode::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";