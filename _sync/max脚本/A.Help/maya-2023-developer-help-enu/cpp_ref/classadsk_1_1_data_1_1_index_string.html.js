var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: IndexString Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_index_string.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: IndexString Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">IndexString Class Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_index_string.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_index_string.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_index_string.html#pro-methods\">Protected Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_index_string.html#pro-static-attribs\">Static Protected Attributes</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_index_string.html#friends\">Friends</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> type which uses a String for the index mapping.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;adskDataIndexString.h&gt;</code></p>\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Inheritance diagram for IndexString:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"cpp_ref/classadsk_1_1_data_1_1_index_string.png\" usemap=\"#IndexString_map\" alt=\"\">\n\
  <map id=\"IndexString_map\" name=\"IndexString_map\">\n\
<area href=\"classadsk_1_1_data_1_1_c_r_t_p___index_type.html\" alt=\"CRTP_IndexType&lt; IndexString &gt;\" shape=\"rect\" coords=\"0,112,309,136\">\n\
<area href=\"classadsk_1_1_debug_1_1_c_r_t_p___debug.html\" alt=\"CRTP_Debug&lt; IndexString, adsk::Debug::Print &gt;\" shape=\"rect\" coords=\"319,112,628,136\">\n\
<area href=\"classadsk_1_1_debug_1_1_c_r_t_p___debug.html\" alt=\"CRTP_Debug&lt; IndexString, adsk::Debug::Footprint &gt;\" shape=\"rect\" coords=\"638,112,947,136\">\n\
<area href=\"classadsk_1_1_data_1_1_index_type.html\" title=\"Complex index type for referencing metadata. \" alt=\"IndexType\" shape=\"rect\" coords=\"0,56,309,80\">\n\
<area href=\"classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \" alt=\"RefCounted\" shape=\"rect\" coords=\"0,0,309,24\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a8f181e8881d6d8c5be7436bdf2f3db9c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a8f181e8881d6d8c5be7436bdf2f3db9c\">IndexString</a> (const std::string &amp;stringIndex)</td></tr>\n\
<tr class=\"memdesc:a8f181e8881d6d8c5be7436bdf2f3db9c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Conversion constructor.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a8f181e8881d6d8c5be7436bdf2f3db9c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8f181e8881d6d8c5be7436bdf2f3db9c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaeeda48cce005ca64584c79156c251cd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#aaeeda48cce005ca64584c79156c251cd\">IndexString</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:aaeeda48cce005ca64584c79156c251cd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor, simplest level.  <a href=\"classadsk_1_1_data_1_1_index_string.html#aaeeda48cce005ca64584c79156c251cd\">More...</a><br></td></tr>\n\
<tr class=\"separator:aaeeda48cce005ca64584c79156c251cd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2c1174c9d59b9e25545ca49180884772\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a2c1174c9d59b9e25545ca49180884772\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a2c1174c9d59b9e25545ca49180884772\">~IndexString</a> () override</td></tr>\n\
<tr class=\"memdesc:a2c1174c9d59b9e25545ca49180884772\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default destructor, nothing to do. <br></td></tr>\n\
<tr class=\"separator:a2c1174c9d59b9e25545ca49180884772\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aba1f4a326ae1a176b489cbbdbd184d24\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#aba1f4a326ae1a176b489cbbdbd184d24\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:aba1f4a326ae1a176b489cbbdbd184d24\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Class assignment operator.  <a href=\"classadsk_1_1_data_1_1_index_string.html#aba1f4a326ae1a176b489cbbdbd184d24\">More...</a><br></td></tr>\n\
<tr class=\"separator:aba1f4a326ae1a176b489cbbdbd184d24\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa96673344347aee9856d8564c0da6706\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#aa96673344347aee9856d8564c0da6706\">operator=</a> (const std::string &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:aa96673344347aee9856d8564c0da6706\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">IndexCount assignment operator.  <a href=\"classadsk_1_1_data_1_1_index_string.html#aa96673344347aee9856d8564c0da6706\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa96673344347aee9856d8564c0da6706\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0294c48099702e7db26c2aa4b77d322e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">std::string&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a0294c48099702e7db26c2aa4b77d322e\">indexString</a> () const </td></tr>\n\
<tr class=\"memdesc:a0294c48099702e7db26c2aa4b77d322e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the string being used as an index.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a0294c48099702e7db26c2aa4b77d322e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0294c48099702e7db26c2aa4b77d322e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">std::string&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\">asString</a> () const  override</td></tr>\n\
<tr class=\"memdesc:ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> in string form.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9de765f69162bfb317593a8c0f6a7326\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a9de765f69162bfb317593a8c0f6a7326\">supportsDenseMode</a> () const  override</td></tr>\n\
<tr class=\"memdesc:a9de765f69162bfb317593a8c0f6a7326\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Notifies users that this index type cannot be packed densely.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a9de765f69162bfb317593a8c0f6a7326\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9de765f69162bfb317593a8c0f6a7326\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad489a502e57c7ce74ac083889b63001c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">IndexCount&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ad489a502e57c7ce74ac083889b63001c\">denseSpaceBetween</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:ad489a502e57c7ce74ac083889b63001c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns 0 to indicate failure since strings cannot be densely packed.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ad489a502e57c7ce74ac083889b63001c\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad489a502e57c7ce74ac083889b63001c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae14db8587bbb41afed54f8adb8e6a5e7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ae14db8587bbb41afed54f8adb8e6a5e7\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:ae14db8587bbb41afed54f8adb8e6a5e7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Equality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is the same as another Objects of different types are defined as not equal.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ae14db8587bbb41afed54f8adb8e6a5e7\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae14db8587bbb41afed54f8adb8e6a5e7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a37779217bca78a6cb3dac3f975d5c6d9\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a37779217bca78a6cb3dac3f975d5c6d9\">operator!=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:a37779217bca78a6cb3dac3f975d5c6d9\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Inequality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is not the same as another Objects of different types are defined as not equal.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a37779217bca78a6cb3dac3f975d5c6d9\">More...</a><br></td></tr>\n\
<tr class=\"separator:a37779217bca78a6cb3dac3f975d5c6d9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a465565901999b17f1be2643707a2248a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a465565901999b17f1be2643707a2248a\">operator&lt;</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:a465565901999b17f1be2643707a2248a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Less-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is less than another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a465565901999b17f1be2643707a2248a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a465565901999b17f1be2643707a2248a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ade55896ef2a0dcf1e1d4b1777b6889f8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ade55896ef2a0dcf1e1d4b1777b6889f8\">operator&lt;=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:ade55896ef2a0dcf1e1d4b1777b6889f8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Less-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &lt;= another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ade55896ef2a0dcf1e1d4b1777b6889f8\">More...</a><br></td></tr>\n\
<tr class=\"separator:ade55896ef2a0dcf1e1d4b1777b6889f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae6eae9f1a5a1c3e66062b36436a7e4d6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ae6eae9f1a5a1c3e66062b36436a7e4d6\">operator&gt;</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:ae6eae9f1a5a1c3e66062b36436a7e4d6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Greater-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ae6eae9f1a5a1c3e66062b36436a7e4d6\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae6eae9f1a5a1c3e66062b36436a7e4d6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8b6ccdadabe47a1c80c965c070a77ee0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a8b6ccdadabe47a1c80c965c070a77ee0\">operator&gt;=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs) const  override</td></tr>\n\
<tr class=\"memdesc:a8b6ccdadabe47a1c80c965c070a77ee0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Greater-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &gt;= another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a8b6ccdadabe47a1c80c965c070a77ee0\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8b6ccdadabe47a1c80c965c070a77ee0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aafb6cf5f08fb761fc3c11af3744a45f2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#aafb6cf5f08fb761fc3c11af3744a45f2\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:aafb6cf5f08fb761fc3c11af3744a45f2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Equality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is the same as another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#aafb6cf5f08fb761fc3c11af3744a45f2\">More...</a><br></td></tr>\n\
<tr class=\"separator:aafb6cf5f08fb761fc3c11af3744a45f2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab3e28257b678c386e4e1eade14abee9f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ab3e28257b678c386e4e1eade14abee9f\">operator!=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:ab3e28257b678c386e4e1eade14abee9f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Inequality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is not the same as another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ab3e28257b678c386e4e1eade14abee9f\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab3e28257b678c386e4e1eade14abee9f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac4b6a00e90df6d80624610f674d778cf\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#ac4b6a00e90df6d80624610f674d778cf\">operator&lt;</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:ac4b6a00e90df6d80624610f674d778cf\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Less-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is less than another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#ac4b6a00e90df6d80624610f674d778cf\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac4b6a00e90df6d80624610f674d778cf\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4a32a29bba40f6d718cadd18a33a6d1d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a4a32a29bba40f6d718cadd18a33a6d1d\">operator&lt;=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:a4a32a29bba40f6d718cadd18a33a6d1d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Less-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &lt;= another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a4a32a29bba40f6d718cadd18a33a6d1d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4a32a29bba40f6d718cadd18a33a6d1d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abdd39a0103ba0b96baf16f58032b68d0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#abdd39a0103ba0b96baf16f58032b68d0\">operator&gt;</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:abdd39a0103ba0b96baf16f58032b68d0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Greater-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#abdd39a0103ba0b96baf16f58032b68d0\">More...</a><br></td></tr>\n\
<tr class=\"separator:abdd39a0103ba0b96baf16f58032b68d0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a463445dad44e242f2e694d4d750be5d3\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a463445dad44e242f2e694d4d750be5d3\">operator&gt;=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:a463445dad44e242f2e694d4d750be5d3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Greater-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &gt;= another.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a463445dad44e242f2e694d4d750be5d3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a463445dad44e242f2e694d4d750be5d3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classadsk_1_1_data_1_1_index_type\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classadsk_1_1_data_1_1_index_type\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a></td></tr>\n\
<tr class=\"memitem:a9528a2d9f6428a81458e37f76b103fad inherit pub_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a9528a2d9f6428a81458e37f76b103fad\">IndexType</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:a9528a2d9f6428a81458e37f76b103fad inherit pub_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor, simplest level.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a9528a2d9f6428a81458e37f76b103fad\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9528a2d9f6428a81458e37f76b103fad inherit pub_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a71f59ca9454bdc942ea9eeeeaa665e0b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a71f59ca9454bdc942ea9eeeeaa665e0b\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">adsk::Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a71f59ca9454bdc942ea9eeeeaa665e0b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> object.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a71f59ca9454bdc942ea9eeeeaa665e0b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a71f59ca9454bdc942ea9eeeeaa665e0b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a759a4be85bdaf88f08f235ba5ad2bf70\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a759a4be85bdaf88f08f235ba5ad2bf70\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">adsk::Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a759a4be85bdaf88f08f235ba5ad2bf70\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> object.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a759a4be85bdaf88f08f235ba5ad2bf70\">More...</a><br></td></tr>\n\
<tr class=\"separator:a759a4be85bdaf88f08f235ba5ad2bf70\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_static_methods_classadsk_1_1_ref_counted\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_methods_classadsk_1_1_ref_counted\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a></td></tr>\n\
<tr class=\"memitem:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#a017b673598cf98da323123828a580828\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> object.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a017b673598cf98da323123828a580828\">More...</a><br></td></tr>\n\
<tr class=\"separator:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#a9d1b2b85361a0ceb15861047253b31bc\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> object.  <a href=\"classadsk_1_1_data_1_1_index_string.html#a9d1b2b85361a0ceb15861047253b31bc\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-methods\"></a>\n\
Protected Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a7f0d10d8260961df57144b325fc65b59\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a7f0d10d8260961df57144b325fc65b59\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a7f0d10d8260961df57144b325fc65b59\">IndexString</a> ()</td></tr>\n\
<tr class=\"memdesc:a7f0d10d8260961df57144b325fc65b59\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor, sets to empty string. <br></td></tr>\n\
<tr class=\"separator:a7f0d10d8260961df57144b325fc65b59\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_methods_classadsk_1_1_data_1_1_index_type\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_methods_classadsk_1_1_data_1_1_index_type\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a></td></tr>\n\
<tr class=\"memitem:a347fc7a1085d91147dbb0ddd3e0fd37d inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a347fc7a1085d91147dbb0ddd3e0fd37d\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a347fc7a1085d91147dbb0ddd3e0fd37d\">~IndexType</a> () override</td></tr>\n\
<tr class=\"memdesc:a347fc7a1085d91147dbb0ddd3e0fd37d inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default destructor, nothing to do. <br></td></tr>\n\
<tr class=\"separator:a347fc7a1085d91147dbb0ddd3e0fd37d inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5728e6fc25f1f5ba84329c301647f50b inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a5728e6fc25f1f5ba84329c301647f50b\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a5728e6fc25f1f5ba84329c301647f50b\">IndexType</a> ()</td></tr>\n\
<tr class=\"memdesc:a5728e6fc25f1f5ba84329c301647f50b inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor, should never be used. <br></td></tr>\n\
<tr class=\"separator:a5728e6fc25f1f5ba84329c301647f50b inherit pro_methods_classadsk_1_1_data_1_1_index_type\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_methods_classadsk_1_1_ref_counted\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_methods_classadsk_1_1_ref_counted\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a></td></tr>\n\
<tr class=\"memitem:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aebb1990f519367c00c1861b5b3b3e0a5\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#aebb1990f519367c00c1861b5b3b3e0a5\">RefCounted</a> ()</td></tr>\n\
<tr class=\"memdesc:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> default ctor. <br></td></tr>\n\
<tr class=\"separator:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af66f84bd2408304143da35229d0a7d3e\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#af66f84bd2408304143da35229d0a7d3e\">RefCounted</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> copy ctor. <br></td></tr>\n\
<tr class=\"separator:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae725be496ffd7a9d4bc812d5bb26d58f\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#ae725be496ffd7a9d4bc812d5bb26d58f\">~RefCounted</a> ()</td></tr>\n\
<tr class=\"memdesc:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> dtor. <br></td></tr>\n\
<tr class=\"separator:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-static-attribs\"></a>\n\
Static Protected Attributes</h2></td></tr>\n\
<tr class=\"memitem:a951db9ffca1d19fccf8ed3dd88f86327\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a951db9ffca1d19fccf8ed3dd88f86327\"></a>\n\
static std::string&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a951db9ffca1d19fccf8ed3dd88f86327\">myTypeName</a> = &quot;string&quot;</td></tr>\n\
<tr class=\"memdesc:a951db9ffca1d19fccf8ed3dd88f86327\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Name used to identify this type. <br></td></tr>\n\
<tr class=\"separator:a951db9ffca1d19fccf8ed3dd88f86327\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a06013a942d7abc4c27da4257b6d9438e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a06013a942d7abc4c27da4257b6d9438e\"></a>\n\
static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type_1_1_index_registration.html\">IndexRegistration</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a06013a942d7abc4c27da4257b6d9438e\">myRegistration</a></td></tr>\n\
<tr class=\"memdesc:a06013a942d7abc4c27da4257b6d9438e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Name used to identify this type. <br></td></tr>\n\
<tr class=\"separator:a06013a942d7abc4c27da4257b6d9438e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"friends\"></a>\n\
Friends</h2></td></tr>\n\
<tr class=\"memitem:a6a6068bdfb4ac45e41da87744845d85d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a6a6068bdfb4ac45e41da87744845d85d\"></a>\n\
class&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a6a6068bdfb4ac45e41da87744845d85d\">CRTP_IndexType&lt; IndexString &gt;</a></td></tr>\n\
<tr class=\"memdesc:a6a6068bdfb4ac45e41da87744845d85d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">String index used for mapping. <br></td></tr>\n\
<tr class=\"separator:a6a6068bdfb4ac45e41da87744845d85d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> type which uses a String for the index mapping. </p>\n\
<p>This is a more general type of indexing that can only be used in mapping mode since it doesn\'t make sense to define \"all strings between two\n\
strings\". </p>\n\
</div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a8f181e8881d6d8c5be7436bdf2f3db9c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>stringIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Conversion constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">stringIndex</td><td>The string used as an index </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aaeeda48cce005ca64584c79156c251cd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor, simplest level. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"aba1f4a326ae1a176b489cbbdbd184d24\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Class assignment operator. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa96673344347aee9856d8564c0da6706\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>IndexCount assignment operator. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>String to be used as an index </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0294c48099702e7db26c2aa4b77d322e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">std::string indexString </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the string being used as an index. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A copy of the string this object uses as an index </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab5b56a7e2515dc71bf1cdc2ba3f0a5b4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">std::string asString </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> in string form. </p>\n\
<p>In the case of this index the string version of the string index is simply itself. This is a duplicate of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html#a0294c48099702e7db26c2aa4b77d322e\" title=\"Get the string being used as an index. \">indexString()</a> method, but it\'s virtual and accessible through the base class for generic serialization functions.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>String representing the index value (in the same form expected by the creator functions) </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a4bdc2b56bee9607b892c6a481b0a3328\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9de765f69162bfb317593a8c0f6a7326\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool supportsDenseMode </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Notifies users that this index type cannot be packed densely. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>false, indicating that this index type cannot be used in dense mode </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a2c2c311245138fe7c5a9272bd3ffbf14\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad489a502e57c7ce74ac083889b63001c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">IndexCount denseSpaceBetween </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns 0 to indicate failure since strings cannot be densely packed. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td>The index from which the density is to be calculated</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Returns 0 since the dense packing cannot be supported. </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a08f9910769b208789de2c903a8991f93\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae14db8587bbb41afed54f8adb8e6a5e7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Equality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is the same as another Objects of different types are defined as not equal. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the two <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> objects have the same underlying IndexCount </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#ac1f4dfbea575317d6bb107a32c2be6ca\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a37779217bca78a6cb3dac3f975d5c6d9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Inequality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is not the same as another Objects of different types are defined as not equal. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the two <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> objects have a different underlying IndexCount </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a3eb4f4fdc34a4a7ae028b2970dace346\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a465565901999b17f1be2643707a2248a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&lt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Less-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is less than another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>\'s counter is less than rhs\'s </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#ad132cbda28290d7d58d9b5557c8944dd\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ade55896ef2a0dcf1e1d4b1777b6889f8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&lt;= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Less-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &lt;= another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>\'s counter is less than or equal to rhs\'s </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html#a948f29b62691805cfc85b67aaee2a468\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae6eae9f1a5a1c3e66062b36436a7e4d6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Greater-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>\'s counter is greater than rhs\'s </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8b6ccdadabe47a1c80c965c070a77ee0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&gt;= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">override</span><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Greater-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &gt;= another Operator sorts by typeid if the object passed in is not an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>\'s counter is greater than or equal to rhs\'s </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_type.html\">IndexType</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aafb6cf5f08fb761fc3c11af3744a45f2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Equality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is the same as another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the two <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> objects have the same underlying string </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab3e28257b678c386e4e1eade14abee9f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Inequality operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is not the same as another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the two <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> objects have a different underlying string </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac4b6a00e90df6d80624610f674d778cf\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&lt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Less-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is less than another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>\'s string is less than rhs\'s </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4a32a29bba40f6d718cadd18a33a6d1d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&lt;= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Less-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &lt;= another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is less than or equal to rhs\'s </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abdd39a0103ba0b96baf16f58032b68d0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&gt; </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Greater-than operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than rhs\'s </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a463445dad44e242f2e694d4d750be5d3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator&gt;= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Greater-or-equal operator, checks if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is &gt;= another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> to be compared</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> is greater than or equal to rhs\'s </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a71f59ca9454bdc942ea9eeeeaa665e0b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">adsk::Debug::Print</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a Print request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> object. </p>\n\
<p>Use the request object to dump all information on this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a>,</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Object to debug, NULL means debug static information </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Print request object</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a759a4be85bdaf88f08f235ba5ad2bf70\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\">IndexString</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">adsk::Debug::Footprint</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a footprint request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index_string.html\" title=\"Index type which uses a String for the index mapping. \">IndexString</a> object. </p>\n\
<p>Populate the Footprint request with the information on all data stored within this object.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Object to debug, NULL means debug static information </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Footprint object to populate</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. The Footprint object will have all information added to it. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>adskDataIndexString.h</li>\n\
<li>adskDataIndexString.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";