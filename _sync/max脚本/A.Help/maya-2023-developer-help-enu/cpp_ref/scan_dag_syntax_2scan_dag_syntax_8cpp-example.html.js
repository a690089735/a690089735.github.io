var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: scanDagSyntax/scanDagSyntax.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'scan_dag_syntax_2scan_dag_syntax_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: scanDagSyntax/scanDagSyntax.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">scanDagSyntax/scanDagSyntax.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Produces the MEL command &quot;scanDagSyntax&quot;. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This command plug-in provides the same functionality as scanDagCmd except</span></div>\n\
<div class=\"line\"><span class=\"comment\">// that the syntax parsing is performed using syntax objects.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The command accepts several flags:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -b/-breadthFirst  : Perform breadth first search </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -d/-depthFirst    : Perform depth first search </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -c/-cameras       : Limit the scan to cameras</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -l/-lights        : Limit the scan to lights</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  -n/-nurbsSurfaces : Limit the scan to NURBS surfaces</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDag.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSyntax.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgDatabase.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTransformationMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLight.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNurbsSurface.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kBreadthFlag            &quot;-b&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kBreadthFlagLong        &quot;-breadthFirst&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kDepthFlag              &quot;-d&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kDepthFlagLong          &quot;-depthFirst&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kCameraFlag             &quot;-c&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kCameraFlagLong         &quot;-cameras&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kLightFlag              &quot;-l&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kLightFlagLong          &quot;-lights&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kNurbsSurfaceFlag       &quot;-n&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kNurbsSurfaceFlagLong   &quot;-nurbsSurfaces&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kQuietFlag              &quot;-q&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kQuietFlagLong          &quot;-quiet&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>scanDagSyntax: <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html\">MPxCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    scanDagSyntax() {};</div>\n\
<div class=\"line\">                ~scanDagSyntax() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*    creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a>  newSyntax();</div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#ade7d0a873cbe811d6eab464e695390a9\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         parseArgs( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args,</div>\n\
<div class=\"line\">                               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a>&amp; traversalType,</div>\n\
<div class=\"line\">                               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a>&amp; filter, <span class=\"keywordtype\">bool</span> &amp; quiet);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         doScan( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a> traversalType,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a> filter, <span class=\"keywordtype\">bool</span> quiet);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            printTransformData(<span class=\"keyword\">const</span> <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; dagPath, <span class=\"keywordtype\">bool</span> quiet);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">scanDagSyntax::~scanDagSyntax() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* scanDagSyntax::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> scanDagSyntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> scanDagSyntax::newSyntax()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html\">MSyntax</a> syntax;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    syntax.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kBreadthFlag, kBreadthFlagLong);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kDepthFlag, kDepthFlagLong);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kCameraFlag, kCameraFlagLong);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kLightFlag, kLightFlagLong);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kNurbsSurfaceFlag, kNurbsSurfaceFlagLong);</div>\n\
<div class=\"line\">    syntax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_syntax.html#aeaeaac3794bb4de8004afb1ac1829488\">addFlag</a>(kQuietFlag, kQuietFlagLong);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> syntax;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> scanDagSyntax::doIt( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a>   traversalType = <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1a6e92a8757afce03be51397f0b518f4c5\">MItDag::kDepthFirst</a>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a>               filter        = <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a94dd08feda7b2cf0ff8262312c4fcc09\">MFn::kInvalid</a>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>                 status;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>                    quiet = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = parseArgs ( args, traversalType, filter, quiet );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> doScan( traversalType, filter, quiet);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> scanDagSyntax::parseArgs( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args,</div>\n\
<div class=\"line\">                                  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a>&amp; traversalType,</div>\n\
<div class=\"line\">                                  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a>&amp; filter,</div>\n\
<div class=\"line\">                                  <span class=\"keywordtype\">bool</span> &amp; quiet)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         stat;</div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_database.html\">MArgDatabase</a>    argData(syntax(), args);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         arg;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kBreadthFlag))</div>\n\
<div class=\"line\">        traversalType = <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1a8ad4d0a286855b50181b12df48942291\">MItDag::kBreadthFirst</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(kDepthFlag))</div>\n\
<div class=\"line\">        traversalType = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1a6e92a8757afce03be51397f0b518f4c5\">MItDag::kDepthFirst</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kCameraFlag))</div>\n\
<div class=\"line\">        filter = <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7af2731fae06310295129a8fb3dba5fbb2\">MFn::kCamera</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(kLightFlag))</div>\n\
<div class=\"line\">        filter = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a4b1026889ac8a8c906a6f3a53301bbbc\">MFn::kLight</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (argData.isFlagSet(kNurbsSurfaceFlag))</div>\n\
<div class=\"line\">        filter = <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (argData.isFlagSet(kQuietFlag))</div>\n\
<div class=\"line\">        quiet = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> scanDagSyntax::doScan( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a> traversalType,</div>\n\
<div class=\"line\">                               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a> filter,</div>\n\
<div class=\"line\">                               <span class=\"keywordtype\">bool</span> quiet)</div>\n\
<div class=\"line\">{   </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html\">MItDag</a> dagIterator( traversalType, filter, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !status) {</div>\n\
<div class=\"line\">        status.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MItDag constructor&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Scan the entire DAG and output the name and depth of each node</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (traversalType == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1a8ad4d0a286855b50181b12df48942291\">MItDag::kBreadthFirst</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            cout &lt;&lt; endl &lt;&lt; <span class=\"stringliteral\">&quot;Starting Breadth First scan of the Dag&quot;</span>;</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            cout &lt;&lt; endl &lt;&lt; <span class=\"stringliteral\">&quot;Starting Depth First scan of the Dag&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (filter) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7af2731fae06310295129a8fb3dba5fbb2\">MFn::kCamera</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;: Filtering for Cameras\\n&quot;</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a4b1026889ac8a8c906a6f3a53301bbbc\">MFn::kLight</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;: Filtering for Lights\\n&quot;</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;: Filtering for Nurbs Surfaces\\n&quot;</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            cout &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> objectCount = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ; !dagIterator.isDone(); dagIterator.next() ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> dagPath;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        status = dagIterator.getPath(dagPath);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MItDag::getPath&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNode(dagPath, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">            status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnDagNode constructor&quot;</span>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            cout &lt;&lt; dagNode.name() &lt;&lt; <span class=\"stringliteral\">&quot;: &quot;</span> &lt;&lt; dagNode.typeName() &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;  dagPath: &quot;</span> &lt;&lt; dagPath.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a7cffb69661adc6ae7ac9e03c297caf01\">fullPathName</a>() &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        objectCount += 1;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dagPath.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7af2731fae06310295129a8fb3dba5fbb2\">MFn::kCamera</a>)) {</div>\n\
<div class=\"line\">            <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> camera (dagPath, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">                status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnCamera constructor&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the translation/rotation/scale data</span></div>\n\
<div class=\"line\">            printTransformData(dagPath, quiet);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Extract some interesting Camera data</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  eyePoint: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; camera.eyePoint(<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>) &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  upDirection: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; camera.upDirection(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>) &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  viewDirection: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; camera.viewDirection(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>) &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  aspectRatio: &quot;</span> &lt;&lt; camera.aspectRatio() &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  horizontalFilmAperture: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; camera.horizontalFilmAperture() &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  verticalFilmAperture: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; camera.verticalFilmAperture() &lt;&lt; endl;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (dagPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a4b1026889ac8a8c906a6f3a53301bbbc\">MFn::kLight</a>)) {</div>\n\
<div class=\"line\">            <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_light.html\">MFnLight</a> light (dagPath, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">                status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnLight constructor&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the translation/rotation/scale data</span></div>\n\
<div class=\"line\">            printTransformData(dagPath, quiet);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Extract some interesting Light data</span></div>\n\
<div class=\"line\">            <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> color;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            color = light.color();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  color: [&quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> &lt;&lt; <span class=\"stringliteral\">&quot;]\\n&quot;</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            color = light.shadowColor();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  shadowColor: [&quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; color.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> &lt;&lt; <span class=\"stringliteral\">&quot;]\\n&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  intensity: &quot;</span> &lt;&lt; light.intensity() &lt;&lt; endl;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (dagPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>)) {</div>\n\
<div class=\"line\">            <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_nurbs_surface.html\">MFnNurbsSurface</a> surface (dagPath, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">                status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnNurbsSurface constructor&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the translation/rotation/scale data</span></div>\n\
<div class=\"line\">            printTransformData(dagPath, quiet);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Extract some interesting Surface data</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  numCVs: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numCVsInU()</div>\n\
<div class=\"line\">                     &lt;&lt; <span class=\"stringliteral\">&quot; * &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numCVsInV()</div>\n\
<div class=\"line\">                     &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  numKnots: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numKnotsInU()</div>\n\
<div class=\"line\">                     &lt;&lt; <span class=\"stringliteral\">&quot; * &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numKnotsInV()</div>\n\
<div class=\"line\">                     &lt;&lt; endl;</div>\n\
<div class=\"line\">                cout &lt;&lt; <span class=\"stringliteral\">&quot;  numSpans: &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numSpansInU()</div>\n\
<div class=\"line\">                     &lt;&lt; <span class=\"stringliteral\">&quot; * &quot;</span></div>\n\
<div class=\"line\">                     &lt;&lt; surface.numSpansInV()</div>\n\
<div class=\"line\">                     &lt;&lt; endl;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the translation/rotation/scale data</span></div>\n\
<div class=\"line\">            printTransformData(dagPath, quiet);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout.flush();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    setResult(objectCount);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> scanDagSyntax::printTransformData(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; dagPath, <span class=\"keywordtype\">bool</span> quiet)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     status;</div>\n\
<div class=\"line\">    <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     transformNode = dagPath.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a13f88add2c589379a22d5aaaa4a39fb4\">transform</a>(&amp;status);</div>\n\
<div class=\"line\">    <span class=\"comment\">// This node has no transform - i.e., it&#39;s the world node</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status &amp;&amp; status.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a6040f0420421c317bced8b857b413f47\">statusCode</a> () == <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\">MStatus::kInvalidParameter</a>)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a>  transform (transformNode, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnDagNode constructor&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html\">MTransformationMatrix</a>   matrix (transform.transformationMatrix());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout &lt;&lt; <span class=\"stringliteral\">&quot;  translation: &quot;</span> &lt;&lt; matrix.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html#ad4b705bafd14e424d2a2e42a53b493fe\">getTranslation</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>)</div>\n\
<div class=\"line\">             &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>                                  threeDoubles[3];</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html#af3d74c777e523f2725cdf87c15a4b5bc\">MTransformationMatrix::RotationOrder</a>    rOrder;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    matrix.getRotation (threeDoubles, rOrder);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout &lt;&lt; <span class=\"stringliteral\">&quot;  rotation: [&quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[0] &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[1] &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[2] &lt;&lt; <span class=\"stringliteral\">&quot;]\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    matrix.getScale (threeDoubles, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!quiet)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        cout &lt;&lt; <span class=\"stringliteral\">&quot;  scale: [&quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[0] &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[1] &lt;&lt; <span class=\"stringliteral\">&quot;, &quot;</span></div>\n\
<div class=\"line\">             &lt;&lt; threeDoubles[2] &lt;&lt; <span class=\"stringliteral\">&quot;]\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin ( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span> );</div>\n\
<div class=\"line\">    status = plugin.registerCommand( <span class=\"stringliteral\">&quot;scanDagSyntax&quot;</span>, </div>\n\
<div class=\"line\">                                     scanDagSyntax::creator,</div>\n\
<div class=\"line\">                                     scanDagSyntax::newSyntax ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">    status = plugin.deregisterCommand( <span class=\"stringliteral\">&quot;scanDagSyntax&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";