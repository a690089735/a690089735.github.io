var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: cgFx/cgfxAttrDef.h</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'cg_fx_2cgfx_attr_def_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: cgFx/cgfxAttrDef.h</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">cgFx/cgfxAttrDef.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (C) 2002-2003 NVIDIA </span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// File: cgfxAttrDef.h</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Utilities for dealing with CgFX shaders</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Author: Jim Atkinson</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Changes:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  12/2003  Kurt Harriman - www.octopusgraphics.com +1-415-893-1023</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Added cgfxAttrDef members:  fNumericSoftMin, fNumericSoftMax,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             fSemantic, fTweaked, fInitOnUndo, typeName(),</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             compoundAttrSuffixes(), attrFromNode(), initializeAttributes(),</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             isInitialValueEqual(), setInitialValue(), purgeMObjectCache(),</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             validateMObjectCache(), getExtraAttrSuffix()</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Deleted members: fMustInit, setDefaultValues()</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Changed members: fTextureId</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Added cgfxAttrDefList member: findInsensitive()</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Use MDGModifier instead of MDagModifier</span></div>\n\
<div class=\"line\"><span class=\"comment\">//           - Minimizing unnecessary #includes so other Maya tools can</span></div>\n\
<div class=\"line\"><span class=\"comment\">//             borrow this header without pulling in extra dependencies.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef _cgfxAttrDef_h_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _cgfxAttrDef_h_</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This class holds the definition of a single attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">// as it has been extracted from the CGeffect interface.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// All the data has been stored in native Maya format for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// simplicity of use.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MImage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDistance.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;cgfxRCPtr.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;Cg/cg.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;Cg/cgGL.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class  </span>cgfxAttrDefList;                <span class=\"comment\">// below</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class  </span>cgfxEffect;                     <span class=\"comment\">// in &quot;cgfxEffectDef.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class  </span>cgfxShaderNode;                 <span class=\"comment\">// in &quot;cgfxShaderNode.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class  </span>cgfxTextureCacheEntry;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define kNullCallback 0</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                            cgfxAttrDef                             //</span></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Hold the definition of an attribute.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>cgfxAttrDef</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">enum</span> cgfxAttrType</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Unknown.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeUnknown,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Boolean value.  Create with MFnNumericAttribute; set default</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeBool,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Integer value.  Create with MFnNumericAttribute; set min,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// max, default value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeInt,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Float value.  Create with MFnNumericAttribute; set min, max,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// default value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeFloat,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// String value.  Create with MFnTypedAttribute; set default</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// value</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeString,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// 2, 3, and 4 element vectors. Create with MFnNumericAttribute;</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// children are *X, *Y, *Z, and (maybe) *W; set min, max,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// default for each child.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeVector2,</div>\n\
<div class=\"line\">        kAttrTypeVector3,</div>\n\
<div class=\"line\">        kAttrTypeVector4,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        kAttrTypeObjectDir,     <span class=\"comment\">// Object coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeFirstDir = kAttrTypeObjectDir,</div>\n\
<div class=\"line\">        kAttrTypeWorldDir,      <span class=\"comment\">// World coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeViewDir,       <span class=\"comment\">// Eye coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeProjectionDir, <span class=\"comment\">// Clip coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeScreenDir,     <span class=\"comment\">// Screen coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeLastDir = kAttrTypeScreenDir,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        kAttrTypeObjectPos,     <span class=\"comment\">// Object coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeFirstPos = kAttrTypeObjectPos,</div>\n\
<div class=\"line\">        kAttrTypeWorldPos,      <span class=\"comment\">// World coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeViewPos,       <span class=\"comment\">// Eye coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeProjectionPos, <span class=\"comment\">// Clip coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeScreenPos,     <span class=\"comment\">// Screen coordinates</span></div>\n\
<div class=\"line\">        kAttrTypeLastPos = kAttrTypeScreenPos,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Color value.  Create with MFnCompoundAttribute; children are</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// *R, *G, *B, and (maybe) *A; set min, max, default for each</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// child.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeColor3,</div>\n\
<div class=\"line\">        kAttrTypeColor4,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Matrix value.  Create with MFnMatrixAttribute; default is</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// identity.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeMatrix,</div>\n\
<div class=\"line\">        kAttrTypeFirstMatrix = kAttrTypeMatrix,</div>\n\
<div class=\"line\">        kAttrTypeWorldMatrix,</div>\n\
<div class=\"line\">        kAttrTypeViewMatrix,</div>\n\
<div class=\"line\">        kAttrTypeProjectionMatrix,</div>\n\
<div class=\"line\">        kAttrTypeWorldViewMatrix,</div>\n\
<div class=\"line\">        kAttrTypeWorldViewProjectionMatrix,</div>\n\
<div class=\"line\">        kAttrTypeLastMatrix = kAttrTypeWorldViewProjectionMatrix,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Texture types.  Create as a color connected to a new file</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// texture node.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeColor1DTexture,</div>\n\
<div class=\"line\">        kAttrTypeFirstTexture = kAttrTypeColor1DTexture,</div>\n\
<div class=\"line\">        kAttrTypeColor2DTexture,</div>\n\
<div class=\"line\">        kAttrTypeColor3DTexture,</div>\n\
<div class=\"line\">        kAttrTypeColor2DRectTexture,</div>\n\
<div class=\"line\">        kAttrTypeNormalTexture,</div>\n\
<div class=\"line\">        kAttrTypeBumpTexture,</div>\n\
<div class=\"line\">        kAttrTypeCubeTexture,</div>\n\
<div class=\"line\">        kAttrTypeEnvTexture,</div>\n\
<div class=\"line\">        kAttrTypeNormalizationTexture,</div>\n\
<div class=\"line\">        kAttrTypeLastTexture = kAttrTypeNormalizationTexture,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Time</span></div>\n\
<div class=\"line\">        kAttrTypeTime,</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Hardware Fog Staff</span></div>\n\
<div class=\"line\">        kAttrTypeHardwareFogEnabled,</div>\n\
<div class=\"line\">        kAttrTypeHardwareFogMode,</div>\n\
<div class=\"line\">        kAttrTypeHardwareFogStart,</div>\n\
<div class=\"line\">        kAttrTypeHardwareFogEnd,</div>\n\
<div class=\"line\">        kAttrTypeHardwareFogDensity,</div>\n\
<div class=\"line\">        kAttrTypeHardwareFogColor,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Other value.  This is for attributes that have odd type or</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// dimensionality.  Create them as multi, multi, multi</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// attributes as needed; default is zero.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        kAttrTypeOther,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Last value.</span></div>\n\
<div class=\"line\">        _kAttrTypeLast</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Static methods to return useful info about a cgfxAttrType.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>*  typeName( cgfxAttrType eAttrType );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>** compoundAttrSuffixes( cgfxAttrType eAttrType );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// These are hints as to what might be connected to a direction or</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// position input.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">enum</span> cgfxVectorHint</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        kVectorHintNone,</div>\n\
<div class=\"line\">        kVectorHintDirLight,</div>\n\
<div class=\"line\">        kVectorHintPointLight,</div>\n\
<div class=\"line\">        kVectorHintSpotLight,</div>\n\
<div class=\"line\">        kVectorHintEye,</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        _kVectorHintLast</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//----------------------------------------------------------------//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fName;</div>\n\
<div class=\"line\">    cgfxAttrType    fType;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    fSize;          <span class=\"comment\">// The number of elements, not bytes.</span></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         fAttr;          <span class=\"comment\">// The attribute itself</span></div>\n\
<div class=\"line\">    cgfxVectorHint  fHint;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Vector4 or Color4 types use an extra Maya attribute to hold W or Alpha.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         fAttr2;         <span class=\"comment\">// An extra attribute if necessary.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>*         fNumericMin;    <span class=\"comment\">// we use doubles even for int data.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>*         fNumericMax;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>*         fNumericSoftMin;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>*         fNumericSoftMax;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>*         fNumericDef;    <span class=\"comment\">// Numeric initial value</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_distance.html#abceb2331ad056e3c5ad27894199a49ed\">MDistance::Unit</a> fUnits;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fStringDef;     <span class=\"comment\">// String initial value</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fDescription;   <span class=\"comment\">// Description (if supplied)</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fSemantic;      <span class=\"comment\">// Semantic (if supplied)</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CGparameter     fParameterHandle;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgfxRCPtr&lt;cgfxTextureCacheEntry&gt; fTexture;</div>\n\
<div class=\"line\">    MCallbackId     fTextureMonitor;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         fTextureUVLink; <span class=\"comment\">// A string value for texture UV link.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            fInvertMatrix;  <span class=\"comment\">// Matrix elements should be inverted.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            fTransposeMatrix;<span class=\"comment\">//Matrix elements should be transposed.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            fTweaked;       <span class=\"comment\">// true =&gt; user has changed attr value</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            fInitOnUndo;    <span class=\"comment\">// true =&gt; set attr to initial value when</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//   changing back to this effect on undo</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            fIsConvertedToInternal;</div>\n\
<div class=\"line\">    <span class=\"comment\">// the symbol to mark if the unit is converted to internal one</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">static</span> <span class=\"keywordtype\">char</span> fSymbol;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//----------------------------------------------------------------//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Constructor</span></div>\n\
<div class=\"line\">    cgfxAttrDef(CGparameter cgParameter);</div>\n\
<div class=\"line\">    cgfxAttrDef(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;          sAttrName,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> cgfxAttrType      eAttrType,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;          sDescription,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;          sSemantic,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>                 obNode,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>                 obAttr</div>\n\
<div class=\"line\">    );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Destructor</span></div>\n\
<div class=\"line\">    ~cgfxAttrDef();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Prohibited and not implemented.</span></div>\n\
<div class=\"line\">    cgfxAttrDef(<span class=\"keyword\">const</span> cgfxAttrDef&amp;);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> cgfxAttrDef&amp; operator=(<span class=\"keyword\">const</span> cgfxAttrDef&amp;);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Release any associated resources</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            release();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            releaseTexture();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            releaseCallback();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Return a string representation of fType.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>         typeName()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> typeName( fType ); }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> cgfxRCPtr&lt;cgfxAttrDefList&gt; attrsFromNode(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>     updateNode(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> cgfxRCPtr&lt;const cgfxEffect&gt;&amp; effect,</div>\n\
<div class=\"line\">        cgfxShaderNode*                     pNode, </div>\n\
<div class=\"line\">        <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>*                        dgMod,</div>\n\
<div class=\"line\">        cgfxRCPtr&lt;cgfxAttrDefList&gt;&amp;         attrDefList,</div>\n\
<div class=\"line\">        <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&amp;                       attributeList);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> buildAttrDefList(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; node);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>     initializeAttributes(</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;                            node, </div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> cgfxRCPtr&lt;cgfxAttrDefList&gt;&amp;   list,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span>                                bUndoing,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>*                        dgMod );</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>     purgeMObjectCache(<span class=\"keyword\">const</span> cgfxRCPtr&lt;cgfxAttrDefList&gt;&amp; list);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>     validateMObjectCache(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp;   obCgfxShader, </div>\n\
<div class=\"line\">                                         <span class=\"keyword\">const</span> cgfxRCPtr&lt;cgfxAttrDefList&gt;&amp; list);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> cgfxAttrDef* attrFromNode(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a>&amp; fnNode,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;           sAttrName,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> cgfxAttrType       eAttrType,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;           sDescription,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;           sSemantic);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Return suffix for Color4/Vector4 extra attribute, or NULL.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>*     getExtraAttrSuffix() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            createAttribute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>* mod, cgfxShaderNode*   pNode);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            destroyAttribute(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>* mod);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// setTextureType</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Parameters:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//      param - parameter</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Returns:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//      None</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setTextureType(CGparameter param);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setSamplerType(CGparameter param);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setMatrixType(CGparameter param);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// setVectorType</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Parameters:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//      param - parameter</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Returns:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//      None</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        setVectorType(CGparameter param);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Return true if initial value of &#39;this&#39; is same as &#39;that&#39;.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            isInitialValueEqual( <span class=\"keyword\">const</span> cgfxAttrDef&amp; that ) <span class=\"keyword\">const</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Copy initial value from given attribute.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setInitialValue( <span class=\"keyword\">const</span> cgfxAttrDef&amp; from );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set attribute flag</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> setAttributeFlags();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// These routines all get the value of the attribute referenced by </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// this cgfxAttrDef object.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">bool</span>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">int</span>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">float</span>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">float</span>&amp; v1, <span class=\"keywordtype\">float</span>&amp; v2 ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>&amp; v1, <span class=\"keywordtype\">float</span>&amp; v2, <span class=\"keywordtype\">float</span>&amp; v3 ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span>&amp; v1, <span class=\"keywordtype\">float</span>&amp; v2, <span class=\"keywordtype\">float</span>&amp; v3, <span class=\"keywordtype\">float</span>&amp; v4 ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>&amp; value ) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This routine finds the DG input to this attribute (e.g. texture</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// node connections)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            getSource( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; src) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// These routines all set the value of the attribute referenced by </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// this cgfxAttrDef object.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">bool</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">int</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">float</span> value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; value );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">float</span> v1, <span class=\"keywordtype\">float</span> v2 );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keywordtype\">float</span> v1, <span class=\"keywordtype\">float</span> v2, <span class=\"keywordtype\">float</span> v3 );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode,</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> v1, <span class=\"keywordtype\">float</span> v2, <span class=\"keywordtype\">float</span> v3, <span class=\"keywordtype\">float</span> v4 );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setValue( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a>&amp; v );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setTexture( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; oNode, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; value, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>* dgMod);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            setUnitsToInternal(CGparameter&amp; cgParameter);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define VALID(ptr) (ptr == 0 || _CrtIsValidHeapPointer(ptr))</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                          cgfxAttrDefList                           //</span></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Hold a list of cgfxAttrDef* objects that can be searched by name</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>cgfxAttrDefList</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>element;</div>\n\
<div class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>element;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>iterator;</div>\n\
<div class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>iterator;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>element</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        element*        prev;</div>\n\
<div class=\"line\">        element*        next;</div>\n\
<div class=\"line\">        cgfxAttrDef*    data;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        element()</div>\n\
<div class=\"line\">            : prev(0)</div>\n\
<div class=\"line\">            , next(0)</div>\n\
<div class=\"line\">            , data(0)</div>\n\
<div class=\"line\">        { <span class=\"comment\">/* nothing */</span> };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ~element()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">            _ASSERTE(VALID(prev));</div>\n\
<div class=\"line\">            _ASSERTE(VALID(next));</div>\n\
<div class=\"line\">            _ASSERTE(VALID(data));</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (prev)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                prev-&gt;next = next;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (next)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                next-&gt;prev = prev;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> data;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    element* head;</div>\n\
<div class=\"line\">    element* tail;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> refcount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>iterator</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>cgfxAttrDefList;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">        element*        item;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">        cgfxAttrDef* operator *() { _ASSERTE(VALID(item)); _ASSERTE(VALID(item-&gt;data)); <span class=\"keywordflow\">return</span> item-&gt;data; };</div>\n\
<div class=\"line\">        iterator&amp; operator ++ () { _ASSERTE(VALID(item)); _ASSERTE(VALID(item-&gt;next)); item = item-&gt;next; <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        cgfxAttrDef* operator *() { <span class=\"keywordflow\">return</span> item-&gt;data; };</div>\n\
<div class=\"line\">        iterator&amp; operator ++  () { item = item-&gt;next; <span class=\"keywordflow\">return</span> *<span class=\"keyword\">this</span>; };</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        iterator operator ++ (<span class=\"keywordtype\">int</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            iterator tmp = *<span class=\"keyword\">this</span>;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">            _ASSERTE(VALID(item));</div>\n\
<div class=\"line\">            _ASSERTE(VALID(item-&gt;next)); </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">            item = item-&gt;next;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> tmp;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">operator</span> bool() { <span class=\"keywordflow\">return</span> (item != 0); };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        iterator(): item(0) { <span class=\"comment\">/* nothing */</span> };</div>\n\
<div class=\"line\">        iterator(cgfxAttrDefList&amp; list): item(list.head)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">                _ASSERTE(VALID(item));</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        iterator(<span class=\"keyword\">const</span> cgfxRCPtr&lt;cgfxAttrDefList&gt;&amp; list)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">            _ASSERTE(VALID(list.operator-&gt;()));</div>\n\
<div class=\"line\">            item = list.isNull() ? 0 : list-&gt;head;</div>\n\
<div class=\"line\">            _ASSERTE(VALID(item));</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">            item = list.isNull() ? 0 : list-&gt;head;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">void</span> reset() { item = 0; };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">        iterator(element* e): item(e) { <span class=\"comment\">/* nothing */</span> };</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cgfxAttrDefList()</div>\n\
<div class=\"line\">        :   head(0)</div>\n\
<div class=\"line\">        ,   tail(0)</div>\n\
<div class=\"line\">        ,   refcount(0)</div>\n\
<div class=\"line\">    { <span class=\"comment\">/* nothing */</span> };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">class </span>cgfxRCPtr&lt;cgfxAttrDefList&gt;;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    ~cgfxAttrDefList()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        clear();</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> addRef()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ++refcount;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> release();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Prohibited and not implemented.</span></div>\n\
<div class=\"line\">    cgfxAttrDefList(<span class=\"keyword\">const</span> cgfxAttrDefList&amp;);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> cgfxAttrDefList&amp; operator=(<span class=\"keyword\">const</span> cgfxAttrDefList&amp;);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> releaseTextures();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> clear()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WIN32</span></div>\n\
<div class=\"line\">        _ASSERTE(VALID(head));</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (head)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            element *tmp = <span class=\"keyword\">new</span> element;</div>\n\
<div class=\"line\">            tmp-&gt;next = head;</div>\n\
<div class=\"line\">            head-&gt;prev = tmp;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">while</span> (tmp-&gt;next)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> tmp-&gt;next;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> tmp;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        head = tail = 0;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> empty() { <span class=\"keywordflow\">return</span> (head == 0); };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    iterator find(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        iterator it(*<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">while</span> (it)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ((*it)-&gt;fName == name)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            ++it;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> it;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    iterator        findInsensitive( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> add(cgfxAttrDef* aDef)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        element * e = <span class=\"keyword\">new</span> element;</div>\n\
<div class=\"line\">        e-&gt;data = aDef;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (tail)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            tail-&gt;next = e;</div>\n\
<div class=\"line\">            e-&gt;prev = tail;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            head = e;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        tail = e;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    iterator begin()</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> iterator(*<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> dump(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* name);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#undef VALID</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* _cgfxAttrDef_h_ */</span><span class=\"preprocessor\"></span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";