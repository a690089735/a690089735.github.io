var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: ddsFloatReader.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'dds_float_reader_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: ddsFloatReader.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">ddsFloatReader.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2020 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Demonstrates how to write a .dds float file reader using the API.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// In Maya&#39;s image reading menu dialogs, you can select *.* to see all images, and</span></div>\n\
<div class=\"line\"><span class=\"comment\">// then retrieve a dds extension file item to load the .dds file into Maya. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxImageFile.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MImageFileInfo.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MImage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _WIN32   </span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable : 4290 )       // Disable STL warnings.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;ddsFloatReader.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>dds_Float_Reader;</div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> kImageFormatName( <span class=\"stringliteral\">&quot;DDS Float&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>ddsFloatReader : <span class=\"keyword\">public</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_image_file.html\">MPxImageFile</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    ddsFloatReader();</div>\n\
<div class=\"line\">            ~ddsFloatReader() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*    creator();</div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> open( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pathname, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html\">MImageFileInfo</a>* info) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> load( <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>&amp; image, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> close() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    <span class=\"comment\">// Data members </span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>        fWidth;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>        fHeight;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>        fNumChannels;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>        fBytesPerPixel;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// File and header description</span></div>\n\
<div class=\"line\">    FILE                *fInputFile;</div>\n\
<div class=\"line\">    DDS_HEADER          fHeader;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>ddsFloatReader::ddsFloatReader()</div>\n\
<div class=\"line\">:   fWidth(0), </div>\n\
<div class=\"line\">    fHeight(0), </div>\n\
<div class=\"line\">    fNumChannels(0), </div>\n\
<div class=\"line\">    fBytesPerPixel(0),</div>\n\
<div class=\"line\">    fInputFile(NULL)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>ddsFloatReader::~ddsFloatReader()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    close();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>  ddsFloatReader::close()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fWidth = 0;</div>\n\
<div class=\"line\">    fHeight = 0;</div>\n\
<div class=\"line\">    fNumChannels = 0;</div>\n\
<div class=\"line\">    fBytesPerPixel = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Close our file</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fInputFile != NULL)</div>\n\
<div class=\"line\">        fclose(fInputFile);</div>\n\
<div class=\"line\">    fInputFile = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">void</span> * ddsFloatReader::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> ddsFloatReader();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Need to swap byte order on Mac</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> swap_endian(<span class=\"keywordtype\">void</span> *val)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__APPLE__)</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *ival = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *)val;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    *ival = ((*ival &gt;&gt; 24) &amp; 0x000000ff) |</div>\n\
<div class=\"line\">            ((*ival &gt;&gt;  8) &amp; 0x0000ff00) |</div>\n\
<div class=\"line\">            ((*ival &lt;&lt;  8) &amp; 0x00ff0000) |</div>\n\
<div class=\"line\">            ((*ival &lt;&lt; 24) &amp; 0xff000000);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">void</span> swap_endian_half(<span class=\"keywordtype\">void</span> *val)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__APPLE__)</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> *ival = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> *)val;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    *ival = ((*ival &gt;&gt; 8) &amp; 255) |</div>\n\
<div class=\"line\">            ((*ival &lt;&lt; 8) &amp; 65280);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <span class=\"keywordtype\">double</span> two_pow_neg14 = pow(2.0, -14.0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Half to float conversion</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> halfToFloat(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> val)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> outValue = 0.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__APPLE__)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Need to swap bytes on Power PC (Mac)</span></div>\n\
<div class=\"line\">    swap_endian_half( &amp;val );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Convert 16-value into a float...</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> h_mantissa = (float) (val &amp; 1023); <span class=\"comment\">// Mantissa = low order 10  bits</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> h_exponent = (float)  ((val &gt;&gt; 10) &amp; 31); <span class=\"comment\">// Exponent = next 5 bits</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i_sign = (val &gt;&gt; 15) &amp; 1;  ; <span class=\"comment\">// Sign is the highest bit</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> h_sign = (i_sign == 0) ? 1.0 : -1.0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (h_exponent != 30.0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        outValue = (float) (h_sign * pow(2.0, h_exponent-15.0) * ( 1.0 + ( h_mantissa / 1024.0 )));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        outValue = (float) ( h_sign * pow(2.0, two_pow_neg14) * ( h_mantissa / 1024.0 ) );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">//printf(&quot;[%d][%d] = inValue=%d, isign =%d, sign=%g, exp=%g, mant=%g, value=%g\\n&quot;, y,x, *inPtr, i_sign, h_sign, h_exponent, h_mantissa, outValue);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> outValue;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> ddsFloatReader::open( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> filename, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html\">MImageFileInfo</a>* info)</div>\n\
<div class=\"line\">{   </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _WIN32   </span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ( fInputFile = fopen( filename.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), <span class=\"stringliteral\">&quot;rb&quot;</span> ) ) == NULL )</div>\n\
<div class=\"line\">#<span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ( fInputFile = fopen( filename.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), <span class=\"stringliteral\">&quot;r&quot;</span> ) ) == NULL )</div>\n\
<div class=\"line\">#endif</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Unable to open the file</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Read the DDS header in </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( fread( &amp;fHeader, 1, <span class=\"keyword\">sizeof</span>(DDS_HEADER), fInputFile) == <span class=\"keyword\">sizeof</span>(DDS_HEADER) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        swap_endian(&amp;fHeader.fCapabilities.dwCaps2);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Cube maps and volume textures are not supported currently.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (( (fHeader.fCapabilities.dwCaps2) &amp; DDSCAPS2_CUBEMAP_FLAG ) ||</div>\n\
<div class=\"line\">            ( (fHeader.fCapabilities.dwCaps2) &amp; DDSCAPS2_VOLUME_FLAG ))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            close();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get dimensions of image</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        swap_endian(&amp;fHeader.fWidth);</div>\n\
<div class=\"line\">        swap_endian(&amp;fHeader.fHeight);</div>\n\
<div class=\"line\">        fWidth = fHeader.fWidth;</div>\n\
<div class=\"line\">        fHeight = fHeader.fHeight;</div>\n\
<div class=\"line\">        fNumChannels = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fWidth==0 || fHeight==0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            close();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Check for float formats</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        swap_endian(&amp; fHeader.fFormat.fFlags );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fHeader.fFormat.fFlags &amp; DDS_FOURCC_FLAG)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            swap_endian(&amp;fHeader.fFormat.fPixelFormat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> supportedFormat = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Half float formats</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> (fHeader.fFormat.fPixelFormat)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Half float formats </span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_R16F:</div>\n\
<div class=\"line\">                fNumChannels = 1;</div>\n\
<div class=\"line\">                fBytesPerPixel = 2; <span class=\"comment\">// 16-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_G16R16F:</div>\n\
<div class=\"line\">                fNumChannels = 2;</div>\n\
<div class=\"line\">                fBytesPerPixel = 4; <span class=\"comment\">// 32-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_A16B16G16R16F:</div>\n\
<div class=\"line\">                fNumChannels = 4;</div>\n\
<div class=\"line\">                fBytesPerPixel = 8; <span class=\"comment\">// 64-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// IEEE 32 bit formats</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_R32F:</div>\n\
<div class=\"line\">                fNumChannels = 1;</div>\n\
<div class=\"line\">                fBytesPerPixel = 4; <span class=\"comment\">// 32-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_G32R32F:</div>\n\
<div class=\"line\">                fNumChannels = 2;</div>\n\
<div class=\"line\">                fBytesPerPixel = 8; <span class=\"comment\">// 64-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> DDS_A32B32G32R32F:</div>\n\
<div class=\"line\">                fNumChannels = 4;</div>\n\
<div class=\"line\">                fBytesPerPixel = 16; <span class=\"comment\">// 128-bits</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Anything else is not supported</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                supportedFormat = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!supportedFormat)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                close();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            close();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Return image information based on the header</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (info)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">//printf(&quot;** Opened DDS: %s (w=%d,h=%d, fmt=%d)\\n&quot;,</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  filename.asChar(),</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  fWidth,</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  fHeight,</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//  fHeader.fFormat.fPixelFormat);</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Only read in 1 image for now</span></div>\n\
<div class=\"line\">            info-&gt;<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a6a8b60680704d9a8878bb4c40827a57f\">numberOfImages</a>( 1 );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a62c14b6802ed8b00b884d4fd6e6c6c4f\">width</a>( fWidth );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#ae7959bfb381f7272887c88bfa42be127\">height</a>( fHeight );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a121999a4615b119ea68945a752e3ea91\">channels</a>( fNumChannels );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a0d8c12ec6df0ac9ad6e8941329ffd4f0\">hasAlpha</a>( fNumChannels == 4 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Mip maps not handled for now</span></div>\n\
<div class=\"line\">            info-&gt;<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a17713e581792d770f3b903ef8da67bd0\">hasMipMaps</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            info-&gt;<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a2ac625d87a95d50d88cc09b51b0a962f\">imageType</a>( <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a8379c23d2cc542a5a3527cb90645c61ca3506879432d3a1e8245e19523b64f757\">MImageFileInfo::kImageTypeColor</a> );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a8e20c60c914128a4914fdd18a82ec73b\">hardwareType</a>( <a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a9b0c9320a802a00a718bcab75ba40550a99067c1b30ca9af543f0a948f04da19e\">MImageFileInfo::kHwTexture2D</a> );</div>\n\
<div class=\"line\">            info-&gt;<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a942d88cc03be8d90972a4a12904412ef\">pixelType</a>( <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#a01e74e17cc52f661123b8a2a4da770c1a5686197bafb177bdc82550848416a1ad\">MImage::kFloat</a> ); </div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> ddsFloatReader::load( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>&amp; image, <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> imageNumber)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> loaded = MS::kFailure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check for half type, since we need to perform</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// some special bit conversions to get a float back.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isHalfType = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> (fHeader.fFormat.fPixelFormat)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> DDS_R16F:</div>\n\
<div class=\"line\">        isHalfType = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> DDS_G16R16F:</div>\n\
<div class=\"line\">        isHalfType = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">case</span> DDS_A16B16G16R16F:</div>\n\
<div class=\"line\">        isHalfType = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create the output buffer</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    image.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#a903ff4fa0918f6c6438c4889025b7c91\">create</a>( fWidth, fHeight, fNumChannels, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#a01e74e17cc52f661123b8a2a4da770c1a5686197bafb177bdc82550848416a1ad\">MImage::kFloat</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* outputBuffer = image.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#a74517ab7ab9676d9f6546cec738668b3\">floatPixels</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create the input buffer to read one scanline at a time.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> *inputFloatBuffer = NULL;         <span class=\"comment\">// For IEEE float</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> *inputIntBuffer = NULL;  <span class=\"comment\">// For half-float = 16-bits per channel</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!isHalfType)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        inputFloatBuffer = <span class=\"keyword\">new</span> <span class=\"keywordtype\">float</span>[fWidth * fNumChannels];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        inputIntBuffer= <span class=\"keyword\">new</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span>[fWidth * fNumChannels];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Can&#39;t get sufficient memory so fail and close up the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// file.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((!inputFloatBuffer &amp;&amp; !inputIntBuffer) || !outputBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (inputFloatBuffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> [] inputFloatBuffer;</div>\n\
<div class=\"line\">            inputFloatBuffer = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (inputIntBuffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> [] inputIntBuffer;</div>\n\
<div class=\"line\">            inputIntBuffer = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        close();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Transfer to output buffer.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>    <span class=\"keywordflow\">if</span> (isHalfType) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> x,y;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *outPtr = outputBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Do a scanline at a time. From top-to-bottom</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// so that scan lines are flipped for Maya&#39;s usage.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        outPtr += (fHeight-1) * (fWidth * fNumChannels);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (y=0; y&lt;fHeight; y++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Read in one scan line of data</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numBytes = fWidth * fBytesPerPixel;</div>\n\
<div class=\"line\">            fread( inputIntBuffer, 1, numBytes, fInputFile);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">short</span> *inPtr = inputIntBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (x=0; x&lt;fWidth * fNumChannels; x++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> outValue = halfToFloat(*inPtr);</div>\n\
<div class=\"line\">                *(outPtr + x) = outValue;</div>\n\
<div class=\"line\">                inPtr++; <span class=\"comment\">// Jump 2 bytes at a time = 1 channel</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outPtr -= (fWidth * fNumChannels);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        loaded = MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// IEEE 32-bit float</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> x,y;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *outPtr = outputBuffer;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Do a scanline at a time. From top-to-bottom</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// so that scan lines are flipped for Maya&#39;s usage.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        outPtr += (fHeight-1) * (fWidth * fNumChannels);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (y=0; y&lt;fHeight; y++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Read in one scan line of data</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numBytes = fWidth * fBytesPerPixel;</div>\n\
<div class=\"line\">            fread( inputFloatBuffer, 1, numBytes, fInputFile);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(__APPLE__)</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// Need to swap bytes on Power PC (Mac)</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *bPtr = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *)inputFloatBuffer;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> b;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (b=0; b&lt;numBytes / 4; b++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                swap_endian( bPtr );</div>\n\
<div class=\"line\">                bPtr++;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> *inPtr = inputFloatBuffer;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (x=0; x&lt;fWidth * fNumChannels; x++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                *(outPtr + x) = *inPtr;</div>\n\
<div class=\"line\">                inPtr++;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            outPtr -= (fWidth * fNumChannels);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        loaded = MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Cleanup memory and close the file</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (inputFloatBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] inputFloatBuffer;</div>\n\
<div class=\"line\">        inputFloatBuffer = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (inputIntBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] inputFloatBuffer;</div>\n\
<div class=\"line\">        inputFloatBuffer = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    close();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> loaded;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;2020&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span> );</div>\n\
<div class=\"line\">    <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> extensions;</div>\n\
<div class=\"line\">    extensions.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( <span class=\"stringliteral\">&quot;dds&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This plugin is registered with a low priority. That means</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// this plugin will only be use if Maya is not able the load a DDS file</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// from a plugin with higher priority or by it internal code.</span></div>\n\
<div class=\"line\">    <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerImageFile( </div>\n\
<div class=\"line\">                    kImageFormatName,</div>\n\
<div class=\"line\">                    ddsFloatReader::creator,       </div>\n\
<div class=\"line\">                    extensions,</div>\n\
<div class=\"line\">                    MFnPlugin::kImageFilePriorityLow));</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.deregisterImageFile( kImageFormatName ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";