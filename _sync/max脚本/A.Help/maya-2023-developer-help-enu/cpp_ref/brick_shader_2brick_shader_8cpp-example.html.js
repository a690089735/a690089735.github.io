var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: brickShader/brickShader.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'brick_shader_2brick_shader_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: brickShader/brickShader.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">brickShader/brickShader.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxShadingNodeOverride.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFragmentManager.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Produces dependency graph node brickTexture</span></div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\"><span class=\"comment\">// This node is an example of a brick 2d texture.</span></div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\"><span class=\"comment\">// The output attribute of the BrickTexture node is called &quot;outColor&quot;. To use this shader, create a BrickTexture and connect its output </span></div>\n\
<div class=\"line\"><span class=\"comment\">// to an input of a surface/shader node such as Color.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Node declaration</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keyword\">class </span>brickTextureNode : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html\">MPxNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    brickTextureNode();</div>\n\
<div class=\"line\">            ~brickTextureNode() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    SchedulingType <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a9c9e8bdcf0b5283a027a66a7671b7088\">schedulingType</a>()<span class=\"keyword\"> const override </span>{ <span class=\"keywordflow\">return</span> SchedulingType::kParallel; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *  creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Id tag for use with binary file format</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Input attributes</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aColor1;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aColor2;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aBlurFactor;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aUVCoord;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aFilterSize;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Output attributes</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> aOutColor;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Override declaration</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keyword\">class </span>brickTextureNodeOverride : <span class=\"keyword\">public</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shading_node_override.html\">MHWRender::MPxShadingNodeOverride</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shading_node_override.html\">MHWRender::MPxShadingNodeOverride</a>* creator(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~brickTextureNodeOverride() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MHWRender::DrawAPI <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shading_node_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">supportedDrawAPIs</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shading_node_override.html#ae48feb7d9b8640e3057fe3a13f009d91\">fragmentName</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    brickTextureNodeOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fFragmentName;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Node definition</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"comment\">// static data</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> brickTextureNode::id( 0x8100d );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Attributes</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aColor1;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aColor2;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aBlurFactor;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aUVCoord;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aFilterSize;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> brickTextureNode::aOutColor;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAKE_INPUT(attr)    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS(attr.setKeyable(true) );      \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setStorable(true) );    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setReadable(true) );    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setWritable(true) );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MAKE_OUTPUT(attr)           \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setKeyable(false) );    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setStorable(false) );   \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setReadable(true) );    \\</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    CHECK_MSTATUS( attr.setWritable(false) );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> step(<span class=\"keywordtype\">float</span> t, <span class=\"keywordtype\">float</span> c)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (t &lt; c) ? 0.0f : 1.0f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> smoothstep(<span class=\"keywordtype\">float</span> t, <span class=\"keywordtype\">float</span> a, <span class=\"keywordtype\">float</span> b)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (t &lt; a) <span class=\"keywordflow\">return</span> 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (t &gt; b) <span class=\"keywordflow\">return</span> 1.0;</div>\n\
<div class=\"line\">    t = (t - a)/(b - a);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> t*t*(3.0f - 2.0f*t);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> linearstep(<span class=\"keywordtype\">float</span> t, <span class=\"keywordtype\">float</span> a, <span class=\"keywordtype\">float</span> b)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (t &lt; a) <span class=\"keywordflow\">return</span> 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (t &gt; b) <span class=\"keywordflow\">return</span> 1.0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (t - a)/(b - a);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> MAX(<span class=\"keywordtype\">float</span> a, <span class=\"keywordtype\">float</span> b)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (a &lt; b) ? b : a;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">inline</span> <span class=\"keywordtype\">float</span> MIN(<span class=\"keywordtype\">float</span> a, <span class=\"keywordtype\">float</span> b)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (a &lt; b) ? a : b;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">brickTextureNode::brickTextureNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">brickTextureNode::~brickTextureNode()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// creates an instance of the node</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> * brickTextureNode::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> brickTextureNode();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> brickTextureNode::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Input attributes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColor1 = nAttr.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>(<span class=\"stringliteral\">&quot;brickColor&quot;</span>, <span class=\"stringliteral\">&quot;bc&quot;</span>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(.75, .3, .1) );         <span class=\"comment\">// Brown</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColor2 = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>(<span class=\"stringliteral\">&quot;jointColor&quot;</span>, <span class=\"stringliteral\">&quot;jc&quot;</span>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(.75, .75, .75) );       <span class=\"comment\">// Grey</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aBlurFactor = nAttr.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;blurFactor&quot;</span>, <span class=\"stringliteral\">&quot;bf&quot;</span>, <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Implicit shading network attributes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> child1 = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uCoord&quot;</span>, <span class=\"stringliteral\">&quot;u&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> child2 = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vCoord&quot;</span>, <span class=\"stringliteral\">&quot;v&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    aUVCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvCoord&quot;</span>, <span class=\"stringliteral\">&quot;uv&quot;</span>, child1, child2);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    child1 = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeX&quot;</span>, <span class=\"stringliteral\">&quot;fsx&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    child2 = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeY&quot;</span>, <span class=\"stringliteral\">&quot;fsy&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    aFilterSize = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;uvFilterSize&quot;</span>, <span class=\"stringliteral\">&quot;fs&quot;</span>, child1, child2);</div>\n\
<div class=\"line\">    MAKE_INPUT(nAttr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Output attributes</span></div>\n\
<div class=\"line\">    aOutColor = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>(<span class=\"stringliteral\">&quot;outColor&quot;</span>, <span class=\"stringliteral\">&quot;oc&quot;</span>);</div>\n\
<div class=\"line\">    MAKE_OUTPUT(nAttr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add attributes to the node database.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColor1) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColor2) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aBlurFactor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aFilterSize) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aUVCoord) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aOutColor) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// All input affect the output color</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects(aColor1,        aOutColor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects(aColor2,        aOutColor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects(aBlurFactor,    aOutColor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects(aFilterSize,    aOutColor) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects(aUVCoord,       aOutColor) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This function gets called by Maya to evaluate the texture.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Get color1 and color2 from the input block.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Get UV coordinates from the input block.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Compute the color of our brick for a given UV coordinate.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Put the result into the output plug.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> brickTextureNode::compute(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// outColor or individial R, G, B channel</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>((plug != aOutColor) &amp;&amp; (plug.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aa2338038d1c59dc4d35f37f918aabfab\">parent</a>() != aOutColor))</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> resultColor;</div>\n\
<div class=\"line\">    float2 &amp; uv = block.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aUVCoord ).<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#abd7f400a885c2fa6247cd3d6efa94313\">asFloat2</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; surfaceColor1 = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aColor1 ).<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; surfaceColor2 = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aColor2 ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// normalize the UV coords</span></div>\n\
<div class=\"line\">    uv[0] -= floorf(uv[0]);</div>\n\
<div class=\"line\">    uv[1] -= floorf(uv[1]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> borderWidth = 0.1f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> brickHeight = 0.4f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> brickWidth  = 0.9f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> &amp; blur = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aBlurFactor ).<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> v1 = borderWidth/2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> v2 = v1 + brickHeight;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> v3 = v2 + borderWidth;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> v4 = v3 + brickHeight;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> u1 = borderWidth/2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> u2 = brickWidth/2;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> u3 = u2 + borderWidth;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> u4 = u1 + brickWidth;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    float2&amp; fs = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( aFilterSize ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#abd7f400a885c2fa6247cd3d6efa94313\">asFloat2</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> du = blur*fs[0]/2.0f;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> dv = blur*fs[1]/2.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> t = MAX(MIN(linearstep(uv[1], v1 - dv, v1 + dv) -</div>\n\
<div class=\"line\">                      linearstep(uv[1], v2 - dv, v2 + dv),</div>\n\
<div class=\"line\">                      MAX(linearstep(uv[0], u3 - du, u3 + du),</div>\n\
<div class=\"line\">                          1 - linearstep(uv[0], u2 - du, u2 + du))),</div>\n\
<div class=\"line\">                  MIN(linearstep(uv[1], v3 - dv, v3 + dv) -</div>\n\
<div class=\"line\">                      linearstep(uv[1], v4 - dv, v4 + dv),</div>\n\
<div class=\"line\">                      linearstep(uv[0], u1 - du, u1 + du) -</div>\n\
<div class=\"line\">                      linearstep(uv[0], u4 - du, u4 + du)));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    resultColor = t*surfaceColor1 + (1.0f - t)*surfaceColor2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set ouput color attribute</span></div>\n\
<div class=\"line\">    <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outColorHandle = block.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( aOutColor );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; outColor = outColorHandle.asFloatVector();</div>\n\
<div class=\"line\">    outColor = resultColor;</div>\n\
<div class=\"line\">    outColorHandle.setClean();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Override definition</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shading_node_override.html\">MHWRender::MPxShadingNodeOverride</a>* brickTextureNodeOverride::creator(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> brickTextureNodeOverride(obj);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">brickTextureNodeOverride::brickTextureNodeOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">: MPxShadingNodeOverride(obj)</div>\n\
<div class=\"line\">, fFragmentName(<span class=\"stringliteral\">&quot;&quot;</span>)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Define fragments needed for VP2 version of shader, this could also be</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// defined in a separate XML file</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> sFragmentName(<span class=\"stringliteral\">&quot;brickTextureNodePluginFragment&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* sFragmentBody =</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;&lt;fragment uiName=\\&quot;brickTextureNodePluginFragment\\&quot; name=\\&quot;brickTextureNodePluginFragment\\&quot; type=\\&quot;plumbing\\&quot; class=\\&quot;ShadeFragment\\&quot; version=\\&quot;1.0\\&quot;&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;description&gt;&lt;![CDATA[Brick procedural texture fragment]]&gt;&lt;/description&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;properties&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float3 name=\\&quot;brickColor\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float3 name=\\&quot;jointColor\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float name=\\&quot;blurFactor\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float2 name=\\&quot;uvCoord\\&quot; semantic=\\&quot;mayaUvCoordSemantic\\&quot; flags=\\&quot;varyingInputParam\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float2 name=\\&quot;uvFilterSize\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/properties&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;values&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float3 name=\\&quot;brickColor\\&quot; value=\\&quot;0.75,0.3,0.1\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float3 name=\\&quot;jointColor\\&quot; value=\\&quot;0.75,0.75,0.75\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/values&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;outputs&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;float3 name=\\&quot;outColor\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/outputs&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;implementation&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;implementation render=\\&quot;OGSRenderer\\&quot; language=\\&quot;Cg\\&quot; lang_version=\\&quot;2.1\\&quot;&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;function_name val=\\&quot;brickTextureNodePluginFragment\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;source&gt;&lt;![CDATA[&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;float btnplinearstep(float t, float a, float b) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &lt; a) return 0.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &gt; b) return 1.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return (t - a)/(b - a); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;float3 brickTextureNodePluginFragment(float3 color1, float3 color2, float blur, float2 uv, float2 fs) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   uv -= floor(uv); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float v1 = 0.05f; float v2 = 0.45f; float v3 = 0.55f; float v4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float u1 = 0.05f; float u2 = 0.45f; float u3 = 0.55f; float u4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float du = blur*fs.x/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float dv = blur*fs.y/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float t = max( \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v1 - dv, v1 + dv) - btnplinearstep(uv.y, v2 - dv, v2 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           max(btnplinearstep(uv.x, u3 - du, u3 + du), 1.0f - btnplinearstep(uv.x, u2 - du, u2 + du))), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v3 - dv, v3 + dv) - btnplinearstep(uv.y, v4 - dv, v4 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           btnplinearstep(uv.x, u1 - du, u1 + du) - btnplinearstep(uv.x, u4 - du, u4 + du))); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return t*color1 + (1.0f - t)*color2; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n]]&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;/source&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/implementation&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;implementation render=\\&quot;OGSRenderer\\&quot; language=\\&quot;HLSL\\&quot; lang_version=\\&quot;11.0\\&quot;&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;function_name val=\\&quot;brickTextureNodePluginFragment\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;source&gt;&lt;![CDATA[&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;float btnplinearstep(float t, float a, float b) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &lt; a) return 0.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &gt; b) return 1.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return (t - a)/(b - a); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;float3 brickTextureNodePluginFragment(float3 color1, float3 color2, float blur, float2 uv, float2 fs) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   uv -= floor(uv); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float v1 = 0.05f; float v2 = 0.45f; float v3 = 0.55f; float v4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float u1 = 0.05f; float u2 = 0.45f; float u3 = 0.55f; float u4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float du = blur*fs.x/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float dv = blur*fs.y/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float t = max( \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v1 - dv, v1 + dv) - btnplinearstep(uv.y, v2 - dv, v2 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           max(btnplinearstep(uv.x, u3 - du, u3 + du), 1.0f - btnplinearstep(uv.x, u2 - du, u2 + du))), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v3 - dv, v3 + dv) - btnplinearstep(uv.y, v4 - dv, v4 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           btnplinearstep(uv.x, u1 - du, u1 + du) - btnplinearstep(uv.x, u4 - du, u4 + du))); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return t*color1 + (1.0f - t)*color2; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n]]&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;/source&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/implementation&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;implementation render=\\&quot;OGSRenderer\\&quot; language=\\&quot;GLSL\\&quot; lang_version=\\&quot;3.0\\&quot;&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;function_name val=\\&quot;brickTextureNodePluginFragment\\&quot; /&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;source&gt;&lt;![CDATA[&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;float btnplinearstep(float t, float a, float b) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &lt; a) return 0.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   if (t &gt; b) return 1.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return (t - a)/(b - a); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;vec3 brickTextureNodePluginFragment(vec3 color1, vec3 color2, float blur, vec2 uv, vec2 fs) \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;{ \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   uv -= floor(uv); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float v1 = 0.05f; float v2 = 0.45f; float v3 = 0.55f; float v4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float u1 = 0.05f; float u2 = 0.45f; float u3 = 0.55f; float u4 = 0.95f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float du = blur*fs.x/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float dv = blur*fs.y/2.0f; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   float t = max( \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v1 - dv, v1 + dv) - btnplinearstep(uv.y, v2 - dv, v2 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           max(btnplinearstep(uv.x, u3 - du, u3 + du), 1.0f - btnplinearstep(uv.x, u2 - du, u2 + du))), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       min(btnplinearstep(uv.y, v3 - dv, v3 + dv) - btnplinearstep(uv.y, v4 - dv, v4 + dv), \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;           btnplinearstep(uv.x, u1 - du, u1 + du) - btnplinearstep(uv.x, u4 - du, u4 + du))); \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   return t*color1 + (1.0f - t)*color2; \\n&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;} \\n]]&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;       &lt;/source&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/implementation&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;   &lt;/implementation&gt;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;&lt;/fragment&gt;&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register fragments with the manager if needed</span></div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* theRenderer = <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (theRenderer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\">MHWRender::MFragmentManager</a>* fragmentMgr =</div>\n\
<div class=\"line\">            theRenderer-&gt;<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a0f42783e8eee6f472d6bbb2acb6b2f2d\">getFragmentManager</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fragmentMgr)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Add fragments if needed</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> fragAdded = fragmentMgr-&gt;<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html#af82d71b3a71c8752d51d0a9cb6081877\">hasFragment</a>(sFragmentName);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!fragAdded)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fragAdded = (sFragmentName == fragmentMgr-&gt;<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html#a221c1b902178b12d827dcae51fdca4c8\">addShadeFragmentFromBuffer</a>(sFragmentBody, <span class=\"keyword\">false</span>));</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Use the fragment on successful add</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fragAdded)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fFragmentName = sFragmentName;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">brickTextureNodeOverride::~brickTextureNodeOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MHWRender::DrawAPI brickTextureNodeOverride::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MHWRender::kOpenGL | MHWRender::kDirectX11 | MHWRender::kOpenGLCoreProfile;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> brickTextureNodeOverride::fragmentName()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fFragmentName;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Plugin setup</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> sRegistrantId(<span class=\"stringliteral\">&quot;brickTexturePlugin&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;texture/2d:drawdb/shader/texture/2d/brickTexture&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.5&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.registerNode(<span class=\"stringliteral\">&quot;brickTexture&quot;</span>, brickTextureNode::id,</div>\n\
<div class=\"line\">                        &amp;brickTextureNode::creator,</div>\n\
<div class=\"line\">                        &amp;brickTextureNode::initialize,</div>\n\
<div class=\"line\">                        <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4b0bfa06b4f203b367a80f14fa6ed4fa\">MPxNode::kDependNode</a>,</div>\n\
<div class=\"line\">                        &amp;UserClassify ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(</div>\n\
<div class=\"line\">        <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56c3d05d6656dffc5b387b50e9241fd4\">MHWRender::MDrawRegistry::registerShadingNodeOverrideCreator</a>(</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;drawdb/shader/texture/2d/brickTexture&quot;</span>,</div>\n\
<div class=\"line\">            sRegistrantId,</div>\n\
<div class=\"line\">            brickTextureNodeOverride::creator));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( plugin.deregisterNode( brickTextureNode::id ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(</div>\n\
<div class=\"line\">        <a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#aee133ae3399d66a1557f684ce993630b\">MHWRender::MDrawRegistry::deregisterShadingNodeOverrideCreator</a>(</div>\n\
<div class=\"line\">            <span class=\"stringliteral\">&quot;drawdb/shader/texture/2d/brickTexture&quot;</span>,</div>\n\
<div class=\"line\">            sRegistrantId));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// =====================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2018 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This computer source code  and related  instructions and comments are</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the unpublished confidential and proprietary information of Autodesk,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Inc. and are  protected  under applicable  copyright and trade secret</span></div>\n\
<div class=\"line\"><span class=\"comment\">// law. They may not  be disclosed to, copied or used by any third party</span></div>\n\
<div class=\"line\"><span class=\"comment\">// without the prior written consent of Autodesk, Inc.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// =====================================================================</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";