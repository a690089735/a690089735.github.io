var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: MPxSubSceneOverride Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_h_w_render_1_1_m_px_sub_scene_override.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: MPxSubSceneOverride Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MPxSubSceneOverride Class Reference<span class=\"mlabels\"><span class=\"mlabel\">abstract</span></span><div class=\"ingroups\"><a class=\"el\" href=\"#!/url=./cpp_ref/group___open_maya_render.html\">OpenMayaRender - API module for rendering</a> &#124; <a class=\"el\" href=\"#!/url=./cpp_ref/group___m_px.html\">Proxy classes</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2023-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s new in the Maya 2023 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/What-s-New-What-s-Changed-/2020-Whats-New-in-API.html\">What&#39;s New / What&#39;s Changed? &gt; What&#39;s New in the Maya 2020 devkit</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Scene-Overrides.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Scene Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Developer-Kit-Samples.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Developer Kit Samples</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Registration.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Registration</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Sub-scene-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Sub-scene Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/UI-draw-manager.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; UI draw manager</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Effects-interfaces.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Post-effect interfaces</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Handling-custom-renderables-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Handling custom renderables for object overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Porting-Selection-from-Viewport.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Porting Selection from Viewport 1 to 2</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Basic-Viewport-2-0-pipeline.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Basic Viewport 2.0 pipeline sequencing</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Color-management-support-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Color management support for plug-in shaders in Viewport 2.0</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes.  \n\
 <a href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;MPxSubSceneOverride.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:aa87e5fb39d38287f7d10f0de3dd745ae\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#aa87e5fb39d38287f7d10f0de3dd745ae\">MPxSubSceneOverride</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;obj)</td></tr>\n\
<tr class=\"memdesc:aa87e5fb39d38287f7d10f0de3dd745ae\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Construct an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a>.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#aa87e5fb39d38287f7d10f0de3dd745ae\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa87e5fb39d38287f7d10f0de3dd745ae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acdd18c944250191e2c6ce7105996b403\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"acdd18c944250191e2c6ce7105996b403\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#acdd18c944250191e2c6ce7105996b403\">~MPxSubSceneOverride</a> ()</td></tr>\n\
<tr class=\"memdesc:acdd18c944250191e2c6ce7105996b403\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor. <br></td></tr>\n\
<tr class=\"separator:acdd18c944250191e2c6ce7105996b403\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual ::MHWRender::DrawAPI&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">supportedDrawAPIs</a> () const </td></tr>\n\
<tr class=\"memdesc:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the draw API supported by this override.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9c43d7192e56c01d8dde77fabd843a0e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a29a5e9ed2eaaf6c451ac6c7fd19f5d91\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\">requiresUpdate</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MSubSceneContainer</a> &amp;container, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;frameContext) const  =0</td></tr>\n\
<tr class=\"memdesc:a29a5e9ed2eaaf6c451ac6c7fd19f5d91\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">On each frame Maya will give each instantiated <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> object a chance to update its set of render items.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\">More...</a><br></td></tr>\n\
<tr class=\"separator:a29a5e9ed2eaaf6c451ac6c7fd19f5d91\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac74e57c764a59c2fa2a8e6a5b72090d5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\">update</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MSubSceneContainer</a> &amp;container, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;frameContext)=0</td></tr>\n\
<tr class=\"memdesc:ac74e57c764a59c2fa2a8e6a5b72090d5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by Maya on each frame as long as the implementation of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\" title=\"On each frame Maya will give each instantiated MPxSubSceneOverride object a chance to update its set ...\">MPxSubSceneOverride::requiresUpdate()</a> returns true.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac74e57c764a59c2fa2a8e6a5b72090d5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6ca9850834717fa50a2a866c95283b7a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a6ca9850834717fa50a2a866c95283b7a\">furtherUpdateRequired</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;frameContext)</td></tr>\n\
<tr class=\"memdesc:a6ca9850834717fa50a2a866c95283b7a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by Maya following <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> to allow the override to indicate whether further processing is required.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a6ca9850834717fa50a2a866c95283b7a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6ca9850834717fa50a2a866c95283b7a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1a45ac429d66ab11ed4711b1883c14cb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a1a45ac429d66ab11ed4711b1883c14cb\">areUIDrawablesDirty</a> () const </td></tr>\n\
<tr class=\"memdesc:a1a45ac429d66ab11ed4711b1883c14cb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Determines whether <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> should be called on the next refresh.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a1a45ac429d66ab11ed4711b1883c14cb\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1a45ac429d66ab11ed4711b1883c14cb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a05c70618c28196399681a784a3686b50\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a05c70618c28196399681a784a3686b50\">hasUIDrawables</a> () const </td></tr>\n\
<tr class=\"memdesc:a05c70618c28196399681a784a3686b50\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Tells Maya whether <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> should be called.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a05c70618c28196399681a784a3686b50\">More...</a><br></td></tr>\n\
<tr class=\"separator:a05c70618c28196399681a784a3686b50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a51c18131d1daa15aa761a09d622d9061\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\">addUIDrawables</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MUIDrawManager</a> &amp;drawManager, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;frameContext)</td></tr>\n\
<tr class=\"memdesc:a51c18131d1daa15aa761a09d622d9061\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Provides access to a <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\" title=\"Main interface for drawing basic UI drawables in Viewport 2.0 and Hardware Renderer 2...\">MUIDrawManager</a>, which can be used to queue up operations to draw simple UI shapes like lines, circles, text, etc.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\">More...</a><br></td></tr>\n\
<tr class=\"separator:a51c18131d1daa15aa761a09d622d9061\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7540acbbc56b2f60e83bb5e0cc7c75eb\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a7540acbbc56b2f60e83bb5e0cc7c75eb\">enableUpdateForSelection</a> () const </td></tr>\n\
<tr class=\"memdesc:a7540acbbc56b2f60e83bb5e0cc7c75eb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2020.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a7540acbbc56b2f60e83bb5e0cc7c75eb\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7540acbbc56b2f60e83bb5e0cc7c75eb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af3b88498daedce6cd2e55103c58160a4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#af3b88498daedce6cd2e55103c58160a4\">getSelectionPath</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;dagPath) const </td></tr>\n\
<tr class=\"memdesc:af3b88498daedce6cd2e55103c58160a4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by Maya during the selection interpretation phase of Viewport 2.0 selection to allow specifying the selection path for a single render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#af3b88498daedce6cd2e55103c58160a4\">More...</a><br></td></tr>\n\
<tr class=\"separator:af3b88498daedce6cd2e55103c58160a4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3d9b68da81d724902522fe2bf5f809c5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3d9b68da81d724902522fe2bf5f809c5\">getInstancedSelectionPath</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MIntersection</a> &amp;intersection, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;dagPath) const </td></tr>\n\
<tr class=\"memdesc:a3d9b68da81d724902522fe2bf5f809c5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method is called by Maya during the selection interpretation phase of Viewport 2.0 selection to allow specifying the selection path for a single render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3d9b68da81d724902522fe2bf5f809c5\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3d9b68da81d724902522fe2bf5f809c5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a35db327011e850bc4f290c65fdc8d8fd\">updateSelectionGranularity</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;path, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MSelectionContext</a> &amp;selectionContext)</td></tr>\n\
<tr class=\"memdesc:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to allow derived classes to modify the selection context of the given DAG object.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a35db327011e850bc4f290c65fdc8d8fd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a35db327011e850bc4f290c65fdc8d8fd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0bf2b383d48c8a4b554376626e4c7a40\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a0bf2b383d48c8a4b554376626e4c7a40\">setGeometryForRenderItem</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> &amp;vertexBuffers, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a> &amp;indexBuffer, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> *objectBox)</td></tr>\n\
<tr class=\"memdesc:a0bf2b383d48c8a4b554376626e4c7a40\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Call this method to provide the geometry for a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a0bf2b383d48c8a4b554376626e4c7a40\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0bf2b383d48c8a4b554376626e4c7a40\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8866e6d0a0fd759fca57656b8d5d15ca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\">addInstanceTransform</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;transform)</td></tr>\n\
<tr class=\"memdesc:a8866e6d0a0fd759fca57656b8d5d15ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add an additional instance for a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8866e6d0a0fd759fca57656b8d5d15ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3759af370aeb202983050a055123a521\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3759af370aeb202983050a055123a521\">setInstanceTransformArray</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> &amp;matrixArray)</td></tr>\n\
<tr class=\"memdesc:a3759af370aeb202983050a055123a521\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Sets the entire instance array for a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3759af370aeb202983050a055123a521\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3759af370aeb202983050a055123a521\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa33d933e42a4fde68622dc759d9477b1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#aa33d933e42a4fde68622dc759d9477b1\">updateInstanceTransform</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, unsigned int instanceId, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;transform)</td></tr>\n\
<tr class=\"memdesc:aa33d933e42a4fde68622dc759d9477b1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Update the instance transform matrix for one instance of a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#aa33d933e42a4fde68622dc759d9477b1\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa33d933e42a4fde68622dc759d9477b1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8b979ebc8b2e03b24b7b714204a90bf7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8b979ebc8b2e03b24b7b714204a90bf7\">removeInstance</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, unsigned int instanceId)</td></tr>\n\
<tr class=\"memdesc:a8b979ebc8b2e03b24b7b714204a90bf7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove one instance of a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8b979ebc8b2e03b24b7b714204a90bf7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a8b979ebc8b2e03b24b7b714204a90bf7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5c2f72d5f72d7ce5c17603a90ebc10ce\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a5c2f72d5f72d7ce5c17603a90ebc10ce\">removeAllInstances</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem)</td></tr>\n\
<tr class=\"memdesc:a5c2f72d5f72d7ce5c17603a90ebc10ce\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove all instances for a render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a5c2f72d5f72d7ce5c17603a90ebc10ce\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5c2f72d5f72d7ce5c17603a90ebc10ce\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae5d294c95f1581e5e82063c544edede5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ae5d294c95f1581e5e82063c544edede5\">setExtraInstanceData</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;parameterName, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;data)</td></tr>\n\
<tr class=\"memdesc:ae5d294c95f1581e5e82063c544edede5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Adds an extra stream of instanced data to an instanced render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#ae5d294c95f1581e5e82063c544edede5\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae5d294c95f1581e5e82063c544edede5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a73382b1882650e5bbdc17788e74fea0a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a73382b1882650e5bbdc17788e74fea0a\">setExtraInstanceData</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, unsigned int instanceId, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;parameterName, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;data)</td></tr>\n\
<tr class=\"memdesc:a73382b1882650e5bbdc17788e74fea0a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the value for the specified extra instance data stream for a particular instance of the instanced render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a73382b1882650e5bbdc17788e74fea0a\">More...</a><br></td></tr>\n\
<tr class=\"separator:a73382b1882650e5bbdc17788e74fea0a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3cd1423d9d029bae27c8fc4003b1916b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3cd1423d9d029bae27c8fc4003b1916b\">removeExtraInstanceData</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;parameterName)</td></tr>\n\
<tr class=\"memdesc:a3cd1423d9d029bae27c8fc4003b1916b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove an entire extra instance data stream from the instanced render item.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3cd1423d9d029bae27c8fc4003b1916b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3cd1423d9d029bae27c8fc4003b1916b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab5f84f5ba90bb3caabbb69ab3d52cb37\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ab5f84f5ba90bb3caabbb69ab3d52cb37\">setAllowTransparentInstances</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, bool allow)</td></tr>\n\
<tr class=\"memdesc:ab5f84f5ba90bb3caabbb69ab3d52cb37\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Instancing is disabled automatically by default when the shader is transparent.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#ab5f84f5ba90bb3caabbb69ab3d52cb37\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab5f84f5ba90bb3caabbb69ab3d52cb37\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a72a5802c000d6c6744952a8cfd70b9c5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a72a5802c000d6c6744952a8cfd70b9c5\">ufeIdentifiersInUse</a> () const </td></tr>\n\
<tr class=\"memdesc:a72a5802c000d6c6744952a8cfd70b9c5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2023.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a72a5802c000d6c6744952a8cfd70b9c5\">More...</a><br></td></tr>\n\
<tr class=\"separator:a72a5802c000d6c6744952a8cfd70b9c5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d9cb746843e216b71c14eea8e1a673d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\">setUfeIdentifiers</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a795b862570a3b38e6a44b43422dd94ca\">ufeIdentifiers</a>)</td></tr>\n\
<tr class=\"memdesc:a9d9cb746843e216b71c14eea8e1a673d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2023.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d9cb746843e216b71c14eea8e1a673d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a795b862570a3b38e6a44b43422dd94ca\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a795b862570a3b38e6a44b43422dd94ca\">ufeIdentifiers</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem)</td></tr>\n\
<tr class=\"memdesc:a795b862570a3b38e6a44b43422dd94ca\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2023.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a795b862570a3b38e6a44b43422dd94ca\">More...</a><br></td></tr>\n\
<tr class=\"separator:a795b862570a3b38e6a44b43422dd94ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4548ef3fdb1c2202e3a0b9da5012cd74\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">virtual bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\">updateUfeIdentifiers</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;renderItem, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a795b862570a3b38e6a44b43422dd94ca\">ufeIdentifiers</a>)</td></tr>\n\
<tr class=\"memdesc:a4548ef3fdb1c2202e3a0b9da5012cd74\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><b>Introduced in 2023.0</b>  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4548ef3fdb1c2202e3a0b9da5012cd74\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4a0af36ded25ebee92ce267d31004f0c\">pointSnappingActive</a> ()</td></tr>\n\
<tr class=\"memdesc:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns true if selection has been launched to find snap points.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4a0af36ded25ebee92ce267d31004f0c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4a0af36ded25ebee92ce267d31004f0c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">className</a> ()</td></tr>\n\
<tr class=\"memdesc:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the name of this class.  <a href=\"class_m_h_w_render_1_1_m_px_sub_scene_override.html#a774cd5d8fbebe8e7ed82a5aa587d1f04\">More...</a><br></td></tr>\n\
<tr class=\"separator:a774cd5d8fbebe8e7ed82a5aa587d1f04\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. </p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> allows the user to completely define the renderable units (render items) needed to draw a specific DAG object type in Maya when using Viewport 2.0.</p>\n\
<p>This class is independent of any specific hardware draw API. Implementations operate using the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> interface and provide a list of the render items needed to draw all instances of the associated DAG object. One implementation of the override will be created for each object in the Maya scene whose classification string satisfies the classification string used when registering the override. If the associated DAG object is instanced, the override is responsible for drawing all instances.</p>\n\
<p>The collection of render items is stored in an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\" title=\"Container for render items generated by MPxSubSceneOverride. \">MSubSceneContainer</a> object. This container is suitable for storing and accessing large numbers of render items (thousands or tens of thousands) in a high performance manner. Implementations are responsible for assigning a shader and an optional matrix to each render item and must also provide the geometry for each render item as required by its shader. Geometry may be shared between render items and management of the geometry is up to the implementation.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> falls in between <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_draw_override.html\" title=\"Base class for user defined drawing of nodes. \">MPxDrawOverride</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> with respect to the amount of control given to the implementation. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_draw_override.html\" title=\"Base class for user defined drawing of nodes. \">MPxDrawOverride</a> allows full control over the entire draw of the object, but as a result the implementation is entirely responsible for the draw. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a> is relatively simple to work with but as a result only limited control of the draw is available. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> is allowed to fully define all render items, geometry and shaders providing a high degree of control. However this definition is abstracted from the hardware draw API so only one implementation is needed to get support for both DirectX and OpenGL. Furthermore, Maya will handle actually drawing the render items and thus the items can participate fully in the Maya rendering pipeline (including screen-space effects like SSAO, transparency sorting, shadow casting/receiving, etc.). Finally, render items may specify which draw modes they should draw in (wireframe, shaded, textured, bounding box) so there is no need for the implementation to track these modes manually.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> can be used to provide Viewport 2.0 support for any type of DAG object, however it is optimized for use in cases where a single DAG object needs to produce a large number of renderables which are not necessarily located at the same point in space. For example, this interface would be a good choice for implementing support for a custom node that needs to read and draw a full scene based on a description from a cache file.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> has three stages. In each stage, an instance of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\" title=\"This class contains some global information for the current render frame. \">MFrameContext</a> is provided to give some information about the current state of the renderer. The implementation is also free to query any information it needs from Maya.</p>\n\
<p>1) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\" title=\"On each frame Maya will give each instantiated MPxSubSceneOverride object a chance to update its set ...\">requiresUpdate()</a> : In this call, the implementation is given constant access to the set of render items for the object. On the first call it will be empty. If the method returns true, Maya will call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> and the implementation will be given the opportunity to add/remove render items from the set as well as to modify those items. Render item state is maintained as long as the render item is stored in the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\" title=\"Container for render items generated by MPxSubSceneOverride. \">MSubSceneContainer</a> object. Thus, if nothing needs to be changed this method may return false to skip the update phase.</p>\n\
<p>2) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> : In this call, the implementation may add/remove render items to/from the set, and it may modify existing render items. For each render item the implementation is required to call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a0bf2b383d48c8a4b554376626e4c7a40\" title=\"Call this method to provide the geometry for a render item. \">setGeometryForRenderItem()</a> to provide the geometry for the render item. Render items without geometry will not draw.</p>\n\
<p>3) <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> : In this call, the implementation may use <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\" title=\"Main interface for drawing basic UI drawables in Viewport 2.0 and Hardware Renderer 2...\">MUIDrawManager</a> to draw simple UI shapes like lines, circles, text, etc. If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a1a45ac429d66ab11ed4711b1883c14cb\" title=\"Determines whether addUIDrawables() should be called on the next refresh. \">areUIDrawablesDirty()</a> method returns true, the UI drawables would be cleared and re-added every refresh. If the dirty is false, the UI drawables are being persistently kept until either the DAG object associated with the override is destroyed or the override is deregistered. Note that the UI drawables don\'t support instancing draw.</p>\n\
<p>If at the end of these three stages further update is required then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a6ca9850834717fa50a2a866c95283b7a\" title=\"This method is called by Maya following update() to allow the override to indicate whether further pr...\">furtherUpdateRequired()</a> can be overridden to indicate whether the three stages need to be called again.</p>\n\
<p>If one implementation requires to split and defer the update of selection-related render items until they are needed, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a7540acbbc56b2f60e83bb5e0cc7c75eb\" title=\"Introduced in 2020.0 \">enableUpdateForSelection()</a> can be overridden to indicate whether the three stages need to be called in selection pass. If so, the instance of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\" title=\"This class contains some global information for the current render frame. \">MFrameContext</a> provided for each stage will also allow access to the selection state information.</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> can work with Maya\'s isolate select system when using Ufe. <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a>\'s belonging to an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> can be labeled with the Ufe Identifier using <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a>. That Ufe Identifier will then be matched against the Ufe::Path of objects in the isolate select set to test to see if the render item should be drawn when isolate select is enabled.</p>\n\
<p>A Ufe Identifier is a string which converts to the Ufe::Path of a scene item within a user runtime. The path should not include the the initial PathSegment to the Maya gateway node, only the path within the runtime is necessary.</p>\n\
<p>The full Ufe::Path to the scene item is not necessary because Maya knows the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\" title=\"DAG Path. \">MDagPath</a> of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> that the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> is associated with.</p>\n\
<p>An instanced render item may represent more than one scene item within a runtime. In this case the Ufe::Path of each scene item within the runtime should be set.</p>\n\
<p>A basic implementation of Ufe Identifiers would call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a> for an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> when that item is created, and each time the Ufe Identifiers for that item change. If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a> is used such that the Ufe Identifiers on each render item are always valid then it is not necessary to implement <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\" title=\"Introduced in 2023.0 \">updateUfeIdentifiers()</a>.</p>\n\
<p>If maintaining correct Ufe Identifiers at all times is cost prohibitive then the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> may under some conditions skip setting the Ufe Identifiers, and instead rely on a call to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\" title=\"Introduced in 2023.0 \">updateUfeIdentifiers()</a> being made before the potentially out of date Ufe Identifiers are used.</p>\n\
<p>If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a72a5802c000d6c6744952a8cfd70b9c5\" title=\"Introduced in 2023.0 \">ufeIdentifiersInUse()</a> returns true then the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> must maintain correct Ufe Identifiers for all items using calls to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a>. If <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a72a5802c000d6c6744952a8cfd70b9c5\" title=\"Introduced in 2023.0 \">ufeIdentifiersInUse()</a> is false then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a> may be skipped, allowing the Ufe Identifiers on an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> to become out of date or incorrect. Regardless of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a9d9cb746843e216b71c14eea8e1a673d\" title=\"Introduced in 2023.0 \">setUfeIdentifiers()</a> being called or not, when Maya begins to use Ufe Identifiers, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\" title=\"Introduced in 2023.0 \">updateUfeIdentifiers()</a> will be called by Maya to provide an opprotunity to compute the correct Ufe Identifiers before they are used.</p>\n\
<p>Currently Maya uses Ufe Identifiers for isolate select. When the Maya gateway node corresponding to *this <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a>, or one of it\'s Ufe children, is added or removed from the isolate select, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4548ef3fdb1c2202e3a0b9da5012cd74\" title=\"Introduced in 2023.0 \">updateUfeIdentifiers()</a> will be called by Maya.</p>\n\
<p>Implementations of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> must be registered with Maya through <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html\" title=\"Access the registry associating node types with custom implementations. \">MDrawRegistry</a>. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#_a0\">apiMeshShape/apiMeshSubSceneOverride.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#_a35\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_sub_scene_override_8cpp-example.html#_a83\">gpuCache/gpuCacheSubSceneOverride.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_sub_scene_override_8h-example.html#_a0\">gpuCache/gpuCacheSubSceneOverride.h</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"aa87e5fb39d38287f7d10f0de3dd745ae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\">MPxSubSceneOverride</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>obj</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Construct an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">obj</td><td>The Maya object this override draws </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a9c43d7192e56c01d8dde77fabd843a0e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">DrawAPI supportedDrawAPIs </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the draw API supported by this override. </p>\n\
<p>The returned value may be formed as the bitwise or of MHWRender::DrawAPI elements to indicate that the override supports multiple draw APIs. This method returns MHWRender::kOpenGL by default.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The draw API supported by this override </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a2\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a36\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a29a5e9ed2eaaf6c451ac6c7fd19f5d91\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool requiresUpdate </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MSubSceneContainer</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>container</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>frameContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>On each frame Maya will give each instantiated <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a> object a chance to update its set of render items. </p>\n\
<p>Before beginning the update process for a specific override, Maya will first call this method to give the override a chance to indicate whether or not an update is necessary. If this method returns false, <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">MPxSubSceneOverride::update()</a> will not be called.</p>\n\
<p>The set of render items for this override must not be modified in this method.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">container</td><td>The container for this override </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">frameContext</td><td>Context information for the current frame</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if Maya should trigger the update process for this override </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a3\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a37\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac74e57c764a59c2fa2a8e6a5b72090d5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void update </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MSubSceneContainer</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>container</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>frameContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">pure virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by Maya on each frame as long as the implementation of <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\" title=\"On each frame Maya will give each instantiated MPxSubSceneOverride object a chance to update its set ...\">MPxSubSceneOverride::requiresUpdate()</a> returns true. </p>\n\
<p>In this method, the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\" title=\"Container for render items generated by MPxSubSceneOverride. \">MSubSceneContainer</a> should be populated with the render items that are required to draw the associated DAG object. The render items will remain in the container until they are explicitly removed or the associated object is deleted. Render items in the container may also be modified at this time.</p>\n\
<p>All render items in the container upon completion of this method will be processed for drawing. Any such items which pass all filtering tests for the active viewport will draw. At a minimum, render items must be enabled, have a valid shader and valid geometry in order to draw in Viewport 2.0.</p>\n\
<p>It is the responsibility of this method to call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a06b742a8850af64d01e3fcbd9450916f\" title=\"Notify the Viewport 2.0 renderer that something has changed which requires re-evaluation of lighting ...\">MHWRender::MRenderer::setLightsAndShadowsDirty()</a> to trigger recomputation of any shadow maps in the scene (if required).</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">container</td><td>The container for this override </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">frameContext</td><td>Context information for the current frame </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a6\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a40\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6ca9850834717fa50a2a866c95283b7a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool furtherUpdateRequired </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>frameContext</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by Maya following <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> to allow the override to indicate whether further processing is required. </p>\n\
<p>If so, then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\" title=\"On each frame Maya will give each instantiated MPxSubSceneOverride object a chance to update its set ...\">requiresUpdate()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> will be called again at a later time. In general this will occur when no active processing is occurring (when \"idle\").</p>\n\
<p>It is the responsibility of the plug-in to ensure that this method does not continuously request further updates as it may block the execution of other idle time events.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">frameContext</td><td>Context information for the current frame</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if further update is required. The default value return is false. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a7\">apiMeshShape/apiMeshSubSceneOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1a45ac429d66ab11ed4711b1883c14cb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool areUIDrawablesDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Determines whether <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> should be called on the next refresh. </p>\n\
<p>If you\'ve overridden <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> then at the start of each refresh Maya will destroy the drawables added in the previous refresh and call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> again. If you override this method to return false then Maya will preserve the UI drawables from the previous refresh until either the DAG object associated with the override is destroyed, or the override is deregistered.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> should be called on the next refresh, false if not. The default is true. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a8\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a42\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a05c70618c28196399681a784a3686b50\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool hasUIDrawables </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Tells Maya whether <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> should be called. </p>\n\
<p>If you\'ve overridden <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a> then you must also override this method to return true.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if Maya should call <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a51c18131d1daa15aa761a09d622d9061\" title=\"Provides access to a MUIDrawManager, which can be used to queue up operations to draw simple UI shape...\">addUIDrawables()</a>. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a9\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a41\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a51c18131d1daa15aa761a09d622d9061\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void addUIDrawables </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MUIDrawManager</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>drawManager</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MFrameContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>frameContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Provides access to a <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\" title=\"Main interface for drawing basic UI drawables in Viewport 2.0 and Hardware Renderer 2...\">MUIDrawManager</a>, which can be used to queue up operations to draw simple UI shapes like lines, circles, text, etc. </p>\n\
<p>If you override this method you must also override <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a05c70618c28196399681a784a3686b50\" title=\"Tells Maya whether addUIDrawables() should be called. \">hasUIDrawables()</a> to return true, otherwise this method will not be called.</p>\n\
<p>If you are not going to override this function, please don\'t make \'<a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a05c70618c28196399681a784a3686b50\" title=\"Tells Maya whether addUIDrawables() should be called. \">hasUIDrawables()</a>\' return true or there may be some wasted performance overhead.</p>\n\
<p>By default the drawables will persist until either the DAG object associated with the override is destroyed or the override is deregistered. If you don\'t want them to be redrawn on each refresh, override <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a1a45ac429d66ab11ed4711b1883c14cb\" title=\"Determines whether addUIDrawables() should be called on the next refresh. \">areUIDrawablesDirty()</a> to return false. That will cause the drawables to be destroyed on next refresh and this method called again to replace them.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">drawManager</td><td>The UI draw manager, it can be used to draw some simple geometry including text </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">frameContext</td><td>Frame level context information </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a10\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a43\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7540acbbc56b2f60e83bb5e0cc7c75eb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool enableUpdateForSelection </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2020.0</b> </p>\n\
<p>The method is called by Maya when creating the subscene.</p>\n\
<dl class=\"changelog_2020_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2020_0.html#_changelog_2020_0000058\">2020.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>It returns false by default; the plug-in should override this method to return true if it requires to split and defer the update of selection-related render items until they are needed.</p>\n\
<p>In this case, the update methods will not only be called in regular render, but also in selection passes, with each method provided with access to the selection state information by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\" title=\"This class contains some global information for the current render frame. \">MFrameContext</a>. Plug-ins can use the information to determine whether or not an update is necessary in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a29a5e9ed2eaaf6c451ac6c7fd19f5d91\" title=\"On each frame Maya will give each instantiated MPxSubSceneOverride object a chance to update its set ...\">requiresUpdate()</a> and what update should be done in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a> for the current selection pass.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if Maya should call the update methods in selection passes. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a12\">apiMeshShape/apiMeshSubSceneOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af3b88498daedce6cd2e55103c58160a4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool getSelectionPath </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>dagPath</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by Maya during the selection interpretation phase of Viewport 2.0 selection to allow specifying the selection path for a single render item. </p>\n\
<p>It will be called once for each intersection between render items submitted in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">MPxSubSceneOverride::update()</a> and the selection frustum during marquee selection with camera-based selection off; while it will be only called for the closest intersection(s) during single selection, or marquee selection with camera-based selection on. If none of the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> intersects, then this method will remain silent. To prevent this method from being called for any unqualified intersections, a subscene override should assign proper selection mask to its render items.</p>\n\
<p>The default implementation returns the path to the associated DAG object. If the DAG object is instanced, the default implementation returns the path of the instance based on the assumption that GPU instancing is used and the instances are passed to the draw call in the natural order regarding their DAG instance number. See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\" title=\"Add an additional instance for a render item. \">MPxSubSceneOverride::addInstanceTransform()</a> and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ac908055bb978bce38fcb5f1af6620760\" title=\"For an instanced object, this returns the instance number that this path represents in the DAG...\">MDagPath::instanceNumber()</a>.</p>\n\
<p>If a custom selection behavior is required, either <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#af3b88498daedce6cd2e55103c58160a4\" title=\"This method is called by Maya during the selection interpretation phase of Viewport 2...\">getSelectionPath()</a> or <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a3d9b68da81d724902522fe2bf5f809c5\" title=\"This method is called by Maya during the selection interpretation phase of Viewport 2...\">getInstancedSelectionPath()</a> should be overridden to return the valid selection path. The implementation may also return a null DAG path if no DAG object needs to be selected.</p>\n\
<p>It is possible that the DAG path will not be in the final selection list due to the presence of selection filtering and selection priority.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>Render item found inside the selection frustum </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">dagPath</td><td>the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\" title=\"DAG Path. \">MDagPath</a> associated with the provided render item.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the DAG path returned from this method should be used for selection interpretation. False otherwise, the DAG path returned by the default implementation will be used in this case. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3d9b68da81d724902522fe2bf5f809c5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool getInstancedSelectionPath </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MIntersection</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>intersection</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>dagPath</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method is called by Maya during the selection interpretation phase of Viewport 2.0 selection to allow specifying the selection path for a single render item. </p>\n\
<p>Except the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\" title=\"Describes the intersection of a selection hit. \">MIntersection</a> argument, this method is identical to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#af3b88498daedce6cd2e55103c58160a4\" title=\"This method is called by Maya during the selection interpretation phase of Viewport 2...\">getSelectionPath()</a>. A plug-in doesn\'t have to override both methods; this method is usually more desirable because <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\" title=\"Describes the intersection of a selection hit. \">MIntersection</a> contains additional information that can be used to distinguish instances when the render item is drawn in GPU instancing mode.</p>\n\
<p>In GPU instancing mode, the renderItem will be the one of the master instance and the value of intersection.instanceID() will match the value returned by <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\" title=\"Add an additional instance for a render item. \">addInstanceTransform()</a>. In regular non GPU instancing mode, the renderItem will be the one directly associated with the instance. If intersection.instanceID() is equal to -1, then GPU instancing was not used for the render item.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>Render item found inside the selection frustum, or master item in GPU instancing mode. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">intersection</td><td>Extra information to help find out how the render item got selected. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">dagPath</td><td>the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\" title=\"DAG Path. \">MDagPath</a> associated with the provided render item.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the DAG path returned from this method should be used for selection interpretation. False otherwise, the DAG path returned by the default implementation will be used in this case. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a16\">apiMeshShape/apiMeshSubSceneOverride.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/foot_print_node__sub_scene_override_2foot_print_node__sub_scene_override_8cpp-example.html#a45\">footPrintNode_SubSceneOverride/footPrintNode_SubSceneOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a35db327011e850bc4f290c65fdc8d8fd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void updateSelectionGranularity </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>path</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MSelectionContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>selectionContext</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to allow derived classes to modify the selection context of the given DAG object. </p>\n\
<p>This is useful to specify the selection level, which defines what can be selected on the object :</p><ul>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da634ee767a8e90ff4d56e140459cca31f\" title=\"No selection available. \">MSelectionContext::kNone</a> Nothing can be selected</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625dad74f4c7c6562dc3f8339a8bba2d28dd0\" title=\"Object level. \">MSelectionContext::kObject</a> Object can be selected as a whole</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\" title=\"Component level. \">MSelectionContext::kComponent</a> Parts of the object - such as vertex, edge or face - are selectable</li>\n\
</ul>\n\
<p>This is used to discard objects that are not selectable given the current selection mode (see <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_global.html#a2166afd9d082dd5952bcd361f0a3abb5\" title=\"Determines Maya&#39;s selection mode. \">MGlobal::selectionMode()</a>).</p>\n\
<p>Implementation of this method here is empty, and default selection level is set to kObject.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">path</td><td>The path to the instance to update the selection context for </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">selectionContext</td><td>The selection context </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example10\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example10-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example10-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8h-example.html#a13\">apiMeshShape/apiMeshSubSceneOverride.h</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4a0af36ded25ebee92ce267d31004f0c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool pointSnappingActive </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns true if selection has been launched to find snap points. </p>\n\
<p>To participate, you need to have at least one render item with point geometry and <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\" title=\"&#160; \">MSelectionMask::kSelectPointsForGravity</a> set in MRenderItem::selectableMask().</p><ul>\n\
<li>The granularity must be set to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\" title=\"Component level. \">MSelectionContext::kComponent</a> in <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a35db327011e850bc4f290c65fdc8d8fd\" title=\"Maya calls this function during the pre-filtering phase of Viewport 2.0 selection and is used to allo...\">updateSelectionGranularity()</a></li>\n\
<li>A component converter is not necessary in this scenario.</li>\n\
<li><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#af3b88498daedce6cd2e55103c58160a4\" title=\"This method is called by Maya during the selection interpretation phase of Viewport 2...\">getSelectionPath()</a> will not be called. All points present in the render item will be considered suitable locations for snapping.</li>\n\
</ul>\n\
<dl class=\"section return\"><dt>Returns</dt><dd></dd></dl>\n\
<ul>\n\
<li><b>true</b> Snapping is active </li>\n\
<li><b>false</b> Not currently snapping </li>\n\
</ul>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0bf2b383d48c8a4b554376626e4c7a40\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setGeometryForRenderItem </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>vertexBuffers</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>indexBuffer</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>objectBox</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Call this method to provide the geometry for a render item. </p>\n\
<p>Although the render item will add a reference to each buffer, ultimate ownership of the geometric data remains with the caller. This method may only be called on render items which have been generated by this override and it may only be called during <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ac74e57c764a59c2fa2a8e6a5b72090d5\" title=\"This method is called by Maya on each frame as long as the implementation of MPxSubSceneOverride::req...\">update()</a>. Buffers may be shared among multiple render items. This method will replace any geometry currently associated with the render item with the newly provided geometry.</p>\n\
<p>The bounding box parameter to this method is optional. If NULL, Maya will attempt to calculate the box automatically. Note that this may require a read-back of vertex data from the graphics card which can be a very slow operation. It is better to supply a correct bounding box whenever possible.</p>\n\
<p>It is the responsibility of the caller to ensure that a shader has been assigned to the render item and the buffers provided fulfill the geometry requirements of the shader. If no shader is assigned to the render item, this method will fail. If the requirements of the shader are not met, the render item will not draw correctly. To avoid such situation, each buffer must be constructed with the same name, semantic, data type and dimension as the geometry requirement it tries to fulfill.</p>\n\
<p>When a geometry is completely defined by its vertex buffers, like when drawing all points in a <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\" title=\"List of points. \">MGeometry::kPoints</a> render item, it is possible to provide an empty <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\" title=\"Index buffer for use with MGeometry. \">MIndexBuffer</a>. The geometry will then be drawn using a non-indexed draw call like glDrawArrays() or ID3D11DeviceContext::Draw().</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to provide geometry for </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">vertexBuffers</td><td>The vertex buffers for the geometry </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">indexBuffer</td><td>The index buffer for the geometry </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">objectBox</td><td>Object-space bounding box, may be NULL</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> Incorrect parameter (no shader on render item, empty vertex buffer array, bad primitive type) </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8866e6d0a0fd759fca57656b8d5d15ca\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int addInstanceTransform </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>transform</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Add an additional instance for a render item. </p>\n\
<p>Will convert the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> to instanced rendering if not already done. The render item should already have it\'s other properties set (including shader and geometry). A render item converted to instanced rendering will ignore its typical matrix from setMatrix().</p>\n\
<p>An instanced render item requires a shader which supports instancing. This can be an internal Maya shader or a custom fragment-based shader using <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\" title=\"Provides facilities for managing fragments for use with Viewport 2.0. \">MFragmentManager</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to add a new instance to. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">transform</td><td>The transformation matrix of the new instance.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The instance ID for the new instance. This ID can be used to change the matrix or remove it. A return value of 0 indicates an error (render item does not support instancing or invalid state). 0 is never a valid instance ID. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3759af370aeb202983050a055123a521\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setInstanceTransformArray </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>matrixArray</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Sets the entire instance array for a render item. </p>\n\
<p>Will convert the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> to instanced rendering if not already done. Any pre-existing instances will be removed. The render item should already have it\'s other properties set (including shader and geometry). A render item converted to instanced rendering will ignore its typical matrix from setMatrix().</p>\n\
<p>This function is provided as a simpler alternative to <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\" title=\"Add an additional instance for a render item. \">addInstanceTransform()</a> for when the ability to update or remove individual instances is not required. However additional instances may still be added via <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a8866e6d0a0fd759fca57656b8d5d15ca\" title=\"Add an additional instance for a render item. \">addInstanceTransform()</a> and those may be individually updated or removed.</p>\n\
<p>An instanced render item requires a shader which supports instancing. This can be an internal Maya shader or a custom fragment-based shader using <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\" title=\"Provides facilities for managing fragments for use with Viewport 2.0. \">MFragmentManager</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to set the instance matrix array for. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">matrixArray</td><td>The transformation matrix array for all the instances.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item does not support instancing. </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa33d933e42a4fde68622dc759d9477b1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> updateInstanceTransform </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>instanceId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>transform</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Update the instance transform matrix for one instance of a render item. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">instanceId</td><td>The instance ID of the instance to update. This must be a value returned by addInstanceTransform. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">transform</td><td>The new transformation matrix for the instance.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing or the instance ID is not valid. </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8b979ebc8b2e03b24b7b714204a90bf7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> removeInstance </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>instanceId</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove one instance of a render item. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">instanceId</td><td>The instance ID of the instance to remove. This must be a value returned by addInstanceTransform.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing or the instance ID is not valid. </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5c2f72d5f72d7ce5c17603a90ebc10ce\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> removeAllInstances </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove all instances for a render item. </p>\n\
<p>This render item will remain set up for instancing and will render nothing until new instances are added.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing. </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae5d294c95f1581e5e82063c544edede5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setExtraInstanceData </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>parameterName</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>data</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Adds an extra stream of instanced data to an instanced render item. </p>\n\
<p>Once a render item has been instanced, additional per-instance data may be bound to a parameter on the shader for that item. Supported shader parameter types for instanced data include: float, float2, float3 and float4. Once a stream of instanced data is specified for a shader parameter, the original value of that parameter will be ignored in favor of the per-instance data specified in this method.</p>\n\
<p>If the render item has not been set up for instancing or if an invalid parameter was specified this method will fail. The size of the data array must be x*numberOfInstances where x is the size of the channel (1-4). If the size is wrong, the method will fail.</p>\n\
<p>More than one stream of extra instance data may be specified for an instanced render item. The number of streams will be limited by the number of texture co-ordinate channels available from the underlying graphics system (and note that the instanced matrix occupies four streams). If too many streams are used then a red error shader will be displayed instead of the expected shader.</p>\n\
<p>An instanced render item requires a shader which supports instancing. This can be an internal Maya shader or a custom fragment-based shader using <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\" title=\"Provides facilities for managing fragments for use with Viewport 2.0. \">MFragmentManager</a>.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">parameterName</td><td>The name of the parameter on the shader to fill with the instanced data </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">data</td><td>The instanced data stream</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a73382b1882650e5bbdc17788e74fea0a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setExtraInstanceData </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>instanceId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>parameterName</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>data</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set the value for the specified extra instance data stream for a particular instance of the instanced render item. </p>\n\
<p>See <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#ae5d294c95f1581e5e82063c544edede5\" title=\"Adds an extra stream of instanced data to an instanced render item. \">setExtraInstanceData(MRenderItem&amp;, const MString&amp;, const MFloatArray&amp;)</a> for a full description of extra instance data streams.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">instanceId</td><td>The instance ID of the instance to set the data for </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">parameterName</td><td>The name of the parameter on the shader to fill with the instanced data </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">data</td><td>The data for the specific instance</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3cd1423d9d029bae27c8fc4003b1916b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> removeExtraInstanceData </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>parameterName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove an entire extra instance data stream from the instanced render item. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">parameterName</td><td>The name of the parameter associated with the extra instance data stream</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab5f84f5ba90bb3caabbb69ab3d52cb37\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setAllowTransparentInstances </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>allow</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Instancing is disabled automatically by default when the shader is transparent. </p>\n\
<p>This achieves the best appearance because Maya can sort individual instances.</p>\n\
<p>In some cases, performance is more important than appearance. e.g. particles This method allows to override the default behavior.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">allow</td><td>Whether to allow instancing with transparent shader</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a022ff9973d2e2bb66c1f79b99a914fb6\" title=\"&#160; \">MStatus::kNotFound</a></b> The render item does not belong to this override </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\" title=\"An invalid parameter was provided. \">MStatus::kInvalidParameter</a></b> The render item is not set up for instancing </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> Object error </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a72a5802c000d6c6744952a8cfd70b9c5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool ufeIdentifiersInUse </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2023.0</b> </p>\n\
<p>When a Maya feature is enabled which relies on Ufe Identifiers for correct behavior then <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a72a5802c000d6c6744952a8cfd70b9c5\" title=\"Introduced in 2023.0 \">ufeIdentifiersInUse()</a> will return true.</p>\n\
<dl class=\"changelog_2023_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2023_0.html#_changelog_2023_0000050\">2023.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>At the present time isolate select is the only feature using Ufe Identifiers.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True is a Maya feature is currently relying on Ufe Identifiers </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9d9cb746843e216b71c14eea8e1a673d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setUfeIdentifiers </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>ufeIdentifiers</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2023.0</b> </p>\n\
<p>Set the optional Ufe Identifiers for this <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a>.</p>\n\
<dl class=\"changelog_2023_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2023_0.html#_changelog_2023_0000051\">2023.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>Labelling an <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> with one or more Ufe Identifiers allows Maya to connect operations performed on specific Ufe scene items to the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a>\'s used to represent that scene item in VP2.</p>\n\
<p>See the class documentation for details on Ufe Identifiers.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>The render item to operate on. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">ufeIdentifiers</td><td>An array of runtime Ufe::Paths that renderItem represents.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a></b> The method was successful </li>\n\
<li><b><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a></b> The render item is not valid </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a795b862570a3b38e6a44b43422dd94ca\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> ufeIdentifiers </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2023.0</b> </p>\n\
<p>ufeIdentifiers returns the current list of Ufe Identifiers stored on the renderItem.</p>\n\
<dl class=\"changelog_2023_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2023_0.html#_changelog_2023_0000052\">2023.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>When ufeIdentifiers is called updateUfeIdentifiers will not be called to trigger an Ufe Identifier update.</p>\n\
<p>See the class documentation for details on Ufe Identifiers.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The list of Ufe Identifiers previously set by a call to setUfeIdentifiers. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4548ef3fdb1c2202e3a0b9da5012cd74\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool updateUfeIdentifiers </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>renderItem</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>ufeIdentifiers</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><b>Introduced in 2023.0</b> </p>\n\
<p>When the Maya gateway node corresponding to *this <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html\" title=\"Base class for Viewport 2.0 drawing of DAG nodes which represent sub-scenes. \">MPxSubSceneOverride</a>, or one of it\'s Ufe children, is added or removed from the isolate select, updateUfeIdentifiers will be called by Maya to provide an opprotunity to compute the correct Ufe Identifiers before they are used.</p>\n\
<dl class=\"changelog_2023_0\"><dt><b><a class=\"el\" href=\"#!/url=./cpp_ref/changelog_2023_0.html#_changelog_2023_0000053\">2023.0:</a></b></dt><dd>Introduced in this version. </dd></dl>\n\
<p>When updateUfeIdentifiers returns true, the <a class=\"el\" href=\"#!/url=./cpp_ref/class_m_string.html\" title=\"Manipulate strings. \">MString</a> values in ufeIdentifiers will replace the current existing Ufe Identifiers on renderItem. When updateUfeIdentifiers returns false the Ufe Identifiers on renderItem are not changed.</p>\n\
<p>See the class documentation for details on Ufe Identifiers.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderItem</td><td>Render item whose Ufe Identifiers will be used </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ufeIdentifiers</td><td>The Ufe Identifiers for renderItem. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the identifiers were updated. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a774cd5d8fbebe8e7ed82a5aa587d1f04\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * className </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the name of this class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of this class. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MPxSubSceneOverride.h</li>\n\
<li>MPxSubSceneOverride.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";