var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: Associations Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_associations.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: Associations Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">Associations Class Reference</div>  </div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_associations.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_associations.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Class handling associations between internal and external data.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;adskDataAssociations.h&gt;</code></p>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:afe6ed04d0878b71197c369d964dcf8e0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"afe6ed04d0878b71197c369d964dcf8e0\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#afe6ed04d0878b71197c369d964dcf8e0\">~Associations</a> ()</td></tr>\n\
<tr class=\"memdesc:afe6ed04d0878b71197c369d964dcf8e0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default destructor, release the implementation object. <br></td></tr>\n\
<tr class=\"separator:afe6ed04d0878b71197c369d964dcf8e0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a37a236827d756e9e83d9d2d0d03a2db5\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a37a236827d756e9e83d9d2d0d03a2db5\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a37a236827d756e9e83d9d2d0d03a2db5\">Associations</a> ()</td></tr>\n\
<tr class=\"memdesc:a37a236827d756e9e83d9d2d0d03a2db5\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor, initializes the implementation object. <br></td></tr>\n\
<tr class=\"separator:a37a236827d756e9e83d9d2d0d03a2db5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abc1b2dad4e1c49e2b8a86667077e79f4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#abc1b2dad4e1c49e2b8a86667077e79f4\">Associations</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *)</td></tr>\n\
<tr class=\"memdesc:abc1b2dad4e1c49e2b8a86667077e79f4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor with pointer, shares a ref to internal data with the copy Used as a convenience function for passing in a metadata pointer without caring if it\'s null or not.  <a href=\"classadsk_1_1_data_1_1_associations.html#abc1b2dad4e1c49e2b8a86667077e79f4\">More...</a><br></td></tr>\n\
<tr class=\"separator:abc1b2dad4e1c49e2b8a86667077e79f4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5ff732f9730ca1365638e25c0b90af46\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a5ff732f9730ca1365638e25c0b90af46\">Associations</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a5ff732f9730ca1365638e25c0b90af46\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor, shares a ref to internal data with the copy.  <a href=\"classadsk_1_1_data_1_1_associations.html#a5ff732f9730ca1365638e25c0b90af46\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5ff732f9730ca1365638e25c0b90af46\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a630cf3d3a5a2e3f1e3d056b0a8e6547f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a630cf3d3a5a2e3f1e3d056b0a8e6547f\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:a630cf3d3a5a2e3f1e3d056b0a8e6547f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator, shares implementation with the rhs.  <a href=\"classadsk_1_1_data_1_1_associations.html#a630cf3d3a5a2e3f1e3d056b0a8e6547f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a630cf3d3a5a2e3f1e3d056b0a8e6547f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acff69ff356746a2cd0288ebb4bf2950a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#acff69ff356746a2cd0288ebb4bf2950a\">channel</a> (const std::string &amp;)</td></tr>\n\
<tr class=\"memdesc:acff69ff356746a2cd0288ebb4bf2950a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the data channel with the given name, create if needed.  <a href=\"classadsk_1_1_data_1_1_associations.html#acff69ff356746a2cd0288ebb4bf2950a\">More...</a><br></td></tr>\n\
<tr class=\"separator:acff69ff356746a2cd0288ebb4bf2950a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4dfe122df31d8cb44d300836a8b6a562\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a4dfe122df31d8cb44d300836a8b6a562\">setChannel</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a>)</td></tr>\n\
<tr class=\"memdesc:a4dfe122df31d8cb44d300836a8b6a562\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the data channel into the Association.  <a href=\"classadsk_1_1_data_1_1_associations.html#a4dfe122df31d8cb44d300836a8b6a562\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4dfe122df31d8cb44d300836a8b6a562\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afdf389cfedef552b73399ab8d4aea282\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#afdf389cfedef552b73399ab8d4aea282\">findChannel</a> (const std::string &amp;) const </td></tr>\n\
<tr class=\"memdesc:afdf389cfedef552b73399ab8d4aea282\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name, return NULL if it doesn\'t exist.  <a href=\"classadsk_1_1_data_1_1_associations.html#afdf389cfedef552b73399ab8d4aea282\">More...</a><br></td></tr>\n\
<tr class=\"separator:afdf389cfedef552b73399ab8d4aea282\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a68797d49daddd0328d6e6a160c8a6231\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a68797d49daddd0328d6e6a160c8a6231\">findChannel</a> (const std::string &amp;)</td></tr>\n\
<tr class=\"memdesc:a68797d49daddd0328d6e6a160c8a6231\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name, return NULL if it doesn\'t exist.  <a href=\"classadsk_1_1_data_1_1_associations.html#a68797d49daddd0328d6e6a160c8a6231\">More...</a><br></td></tr>\n\
<tr class=\"separator:a68797d49daddd0328d6e6a160c8a6231\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a41fd507b906ce408abe2374754903083\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a41fd507b906ce408abe2374754903083\">removeChannel</a> (const std::string &amp;)</td></tr>\n\
<tr class=\"memdesc:a41fd507b906ce408abe2374754903083\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name from this metadata.  <a href=\"classadsk_1_1_data_1_1_associations.html#a41fd507b906ce408abe2374754903083\">More...</a><br></td></tr>\n\
<tr class=\"separator:a41fd507b906ce408abe2374754903083\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5c49db681266ec4bbcc3eea5a1427e66\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a5c49db681266ec4bbcc3eea5a1427e66\">renameChannel</a> (const std::string &amp;, const std::string &amp;)</td></tr>\n\
<tr class=\"memdesc:a5c49db681266ec4bbcc3eea5a1427e66\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Rename a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a>.  <a href=\"classadsk_1_1_data_1_1_associations.html#a5c49db681266ec4bbcc3eea5a1427e66\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5c49db681266ec4bbcc3eea5a1427e66\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a120f2d366b139860767ac171ba719979\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a120f2d366b139860767ac171ba719979\">makeUnique</a> ()</td></tr>\n\
<tr class=\"memdesc:a120f2d366b139860767ac171ba719979\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Make the Association\'s data unique to this object.  <a href=\"classadsk_1_1_data_1_1_associations.html#a120f2d366b139860767ac171ba719979\">More...</a><br></td></tr>\n\
<tr class=\"separator:a120f2d366b139860767ac171ba719979\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5e8bb9407889542a21b2054be1bd39c4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a5e8bb9407889542a21b2054be1bd39c4\">begin</a> () const </td></tr>\n\
<tr class=\"memdesc:a5e8bb9407889542a21b2054be1bd39c4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list.  <a href=\"classadsk_1_1_data_1_1_associations.html#a5e8bb9407889542a21b2054be1bd39c4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5e8bb9407889542a21b2054be1bd39c4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aacbabf8bdbc67215c3d9f3e1a690f957\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#aacbabf8bdbc67215c3d9f3e1a690f957\">end</a> () const </td></tr>\n\
<tr class=\"memdesc:aacbabf8bdbc67215c3d9f3e1a690f957\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list.  <a href=\"classadsk_1_1_data_1_1_associations.html#aacbabf8bdbc67215c3d9f3e1a690f957\">More...</a><br></td></tr>\n\
<tr class=\"separator:aacbabf8bdbc67215c3d9f3e1a690f957\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a849c94436d10a7167a23874e629625b7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a849c94436d10a7167a23874e629625b7\">cbegin</a> () const </td></tr>\n\
<tr class=\"memdesc:a849c94436d10a7167a23874e629625b7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a read-only iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list.  <a href=\"classadsk_1_1_data_1_1_associations.html#a849c94436d10a7167a23874e629625b7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a849c94436d10a7167a23874e629625b7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6ce25ae511fdbbff6a935e06d52fd7a4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a6ce25ae511fdbbff6a935e06d52fd7a4\">cend</a> () const </td></tr>\n\
<tr class=\"memdesc:a6ce25ae511fdbbff6a935e06d52fd7a4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a read-only iterator off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list.  <a href=\"classadsk_1_1_data_1_1_associations.html#a6ce25ae511fdbbff6a935e06d52fd7a4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6ce25ae511fdbbff6a935e06d52fd7a4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a90ca964ebcc1b02bbcde225edd49e812\">size</a> () const </td></tr>\n\
<tr class=\"memdesc:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the number of currently associated Channels.  <a href=\"classadsk_1_1_data_1_1_associations.html#a90ca964ebcc1b02bbcde225edd49e812\">More...</a><br></td></tr>\n\
<tr class=\"separator:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac6e61de369e994009e36f344f99c15ad\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#ac6e61de369e994009e36f344f99c15ad\">empty</a> () const </td></tr>\n\
<tr class=\"memdesc:ac6e61de369e994009e36f344f99c15ad\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list is empty.  <a href=\"classadsk_1_1_data_1_1_associations.html#ac6e61de369e994009e36f344f99c15ad\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac6e61de369e994009e36f344f99c15ad\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acf34a86fd6850d4db492a8d7270f6ed1\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#acf34a86fd6850d4db492a8d7270f6ed1\">channelCount</a> () const </td></tr>\n\
<tr class=\"memdesc:acf34a86fd6850d4db492a8d7270f6ed1\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the count of currently associated channels.  <a href=\"classadsk_1_1_data_1_1_associations.html#acf34a86fd6850d4db492a8d7270f6ed1\">More...</a><br></td></tr>\n\
<tr class=\"separator:acf34a86fd6850d4db492a8d7270f6ed1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a09ad54bca4611027cc1b73d1f505fe1b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a09ad54bca4611027cc1b73d1f505fe1b\">channelAt</a> (unsigned int channelIndex) const </td></tr>\n\
<tr class=\"memdesc:a09ad54bca4611027cc1b73d1f505fe1b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get one of the associated channels by index.  <a href=\"classadsk_1_1_data_1_1_associations.html#a09ad54bca4611027cc1b73d1f505fe1b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a09ad54bca4611027cc1b73d1f505fe1b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab6b836f5e3e0a9cf1d801ce64e316a30\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#ab6b836f5e3e0a9cf1d801ce64e316a30\">operator[]</a> (unsigned int channelIndex) const </td></tr>\n\
<tr class=\"memdesc:ab6b836f5e3e0a9cf1d801ce64e316a30\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a pointer to one of the associated channels by index.  <a href=\"classadsk_1_1_data_1_1_associations.html#ab6b836f5e3e0a9cf1d801ce64e316a30\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab6b836f5e3e0a9cf1d801ce64e316a30\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ad275ea18c2e6f54d794ddf9469a1461e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#ad275ea18c2e6f54d794ddf9469a1461e\">create</a> ()</td></tr>\n\
<tr class=\"memdesc:ad275ea18c2e6f54d794ddf9469a1461e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> creator.  <a href=\"classadsk_1_1_data_1_1_associations.html#ad275ea18c2e6f54d794ddf9469a1461e\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad275ea18c2e6f54d794ddf9469a1461e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac428c65feebecd6edada90ca97d872d7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#ac428c65feebecd6edada90ca97d872d7\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:ac428c65feebecd6edada90ca97d872d7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> object.  <a href=\"classadsk_1_1_data_1_1_associations.html#ac428c65feebecd6edada90ca97d872d7\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac428c65feebecd6edada90ca97d872d7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab1e35aa8bf678f5e411875a2455f0c8d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#ab1e35aa8bf678f5e411875a2455f0c8d\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:ab1e35aa8bf678f5e411875a2455f0c8d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> object.  <a href=\"classadsk_1_1_data_1_1_associations.html#ab1e35aa8bf678f5e411875a2455f0c8d\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab1e35aa8bf678f5e411875a2455f0c8d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Class handling associations between internal and external data. </p>\n\
<p>You would use this data structure when creating something like per-component data; e.g. a piece of data you wish to attach to every vertex on a surface, every point in a cloud, every particle in a fluid simulation, etc.</p>\n\
<p>It provides a generic interface to handle lists of data streams that can be associated with your own data.</p>\n\
<p>Association types should be unique within the context of where this data is being stored. e.g. \"mesh/vertex\", \"mesh/edge\", and \"mesh/face\". There is no requirement of the naming convention. <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> are looked up by pointer first before string compares so using a const reference from the calling code is more efficient.</p>\n\
<p>The classes are designed to each be simple to use at the expense of a little complexity in the hierarchy. Here\'s how the different levels break down using the namespace adsk::Data</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> | | Associates type (e.g. per-vertex data) with channel | <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> | | Amalgamates all data streams (e.g. per-vertex data maintained | for an external simulation) into a single entity | <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">Stream</a> | | Keeps an efficient list of indexed data | (e.g. one set of simulation data per vertex) | Data The actual data with introspection capabilities so that you can find out what it is. At this level it\'s a single chunk of data, e.g. 3 floats for color, an int and a string as a version identifier, a collection of vectors and scalars for current simulation state, etc.</p>\n\
<p>For example on a mesh with 8 vertices if a simulation engine wants to store the velocity and acceleration of every vertex the data would look like this:</p>\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">adsk::Data::Associations</a> { channelCount = 1 channel(0) = <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">adsk::Data::Channel</a> { name = \"mesh/vertex\" streamCount = 1 stream(0) = <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_stream.html\" title=\"Class handling a list of generic data. \">adsk::Data::Stream</a> { indexCount = 8 streamData = <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">adsk::Data::Handle</a>[8] { \"simulationData\" : compoundType { \"velocity\" : compoundType { \"velocityX\" : float \"velocityY\" : float \"velocityZ\" : float } \"acceleration\" : compoundType { \"accelerationX\" : float \"accelerationY\" : float \"accelerationZ\" : float } } } } } } </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2create_metadata_cmd_8cpp-example.html#_a23\">MetadataSample/createMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2export_metadata_cmd_8cpp-example.html#_a5\">MetadataSample/exportMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2import_metadata_cmd_8cpp-example.html#_a9\">MetadataSample/importMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2tweak_metadata_node_8cpp-example.html#_a22\">MetadataSample/tweakMetadataNode.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8cpp-example.html#_a1\">MetadataXML/associationsSerializerXML.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8h-example.html#_a1\">MetadataXML/associationsSerializerXML.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#_a15\">sceneAssembly/adskSceneMetadataCmd.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8h-example.html#_a10\">sceneAssembly/adskSceneMetadataCmd.h</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"abc1b2dad4e1c49e2b8a86667077e79f4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor with pointer, shares a ref to internal data with the copy Used as a convenience function for passing in a metadata pointer without caring if it\'s null or not. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> data to be copied, NULL means just use the default construction. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5ff732f9730ca1365638e25c0b90af46\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor, shares a ref to internal data with the copy. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a630cf3d3a5a2e3f1e3d056b0a8e6547f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator, shares implementation with the rhs. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> data to be copied </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acff69ff356746a2cd0288ebb4bf2950a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> channel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>channelName</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the data channel with the given name, create if needed. </p>\n\
<p>If a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name doesn\'t yet exist then a new <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> will be created for it and returned. Modifying the returned channel will modify the data in place. To modify a copy first use the method <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html#a120f2d366b139860767ac171ba719979\" title=\"Make the channel data unique to this object. \">adsk::Data::Channel::makeUnique()</a> to make it unique.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelName</td><td>Name of channel to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name. If there is no data the channel will have no data streams in it </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a29\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4dfe122df31d8cb44d300836a8b6a562\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void setChannel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a>&#160;</td>\n\
          <td class=\"paramname\"><em>newChannel</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set the data channel into the Association. </p>\n\
<p>If a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the same name existed it will be overwritten; retrieve and modify the existing channel if you don\'t want to lose old data.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newChannel</td><td>New <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> data to set </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8cpp-example.html#a4\">MetadataXML/associationsSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afdf389cfedef552b73399ab8d4aea282\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> * findChannel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>channelName</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name, return NULL if it doesn\'t exist. </p>\n\
<p>If no <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with that name exists NULL will be returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelName</td><td>Name of <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name if it exists, NULL if it doesn\'t. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a17\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a68797d49daddd0328d6e6a160c8a6231\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> * findChannel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>channelName</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name, return NULL if it doesn\'t exist. </p>\n\
<p>If no <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with that name exists NULL will be returned.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelName</td><td>Name of <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name if it exists, NULL if it doesn\'t. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a41fd507b906ce408abe2374754903083\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool removeChannel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>channelName</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> with the given name from this metadata. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelName</td><td>Name of the channel to remove</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the channel was successfully removed, false if it failed or didn\'t exist </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5c49db681266ec4bbcc3eea5a1427e66\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool renameChannel </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>oldChannelName</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const std::string &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>newChannelName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Rename a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a>. </p>\n\
<p>Since sorting order comes from the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> name this had to be controlled at this level.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">oldChannelName</td><td>Name of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> to be renamed </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newChannelName</td><td>New name for the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> to be renamed</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> was found and renamed </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a120f2d366b139860767ac171ba719979\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool makeUnique </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Make the Association\'s data unique to this object. </p>\n\
<p>Makes a copy of the data if it\'s currently being shared, otherwise leaves it as-is. Note that it can still be shared afterwards by some other object, i.e. this is not a persistent state, just an operation to perform before making changes you don\'t want any other copies of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> to share.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the data was duplicated in order to make it unique </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad275ea18c2e6f54d794ddf9469a1461e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> * create </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> creator. </p>\n\
<p>Used to force allocation of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> data into the main heap so that it controls deletion (which it must since the class is reference-counted). </p><dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the newly created <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8cpp-example.html#a2\">MetadataXML/associationsSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5e8bb9407889542a21b2054be1bd39c4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::iterator</a> begin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An iterator pointing at the first element of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aacbabf8bdbc67215c3d9f3e1a690f957\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::iterator</a> end </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An iterator positioned off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a849c94436d10a7167a23874e629625b7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::const_iterator</a> cbegin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a read-only iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A read-only iterator pointing at the first element of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6ce25ae511fdbbff6a935e06d52fd7a4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations_iterator.html\">Associations::const_iterator</a> cend </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a read-only iterator off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A read-only iterator positioned off the end of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a90ca964ebcc1b02bbcde225edd49e812\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int size </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the number of currently associated Channels. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>number of currently associated Channels </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac6e61de369e994009e36f344f99c15ad\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool empty </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> list is empty. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if there are no Channels in the list </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acf34a86fd6850d4db492a8d7270f6ed1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int channelCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the count of currently associated channels. </p>\n\
<p>Same as the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html#a90ca964ebcc1b02bbcde225edd49e812\" title=\"Get the number of currently associated Channels. \">size()</a> method, which has a more standard naming.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>number of currently associated channels </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8cpp-example.html#a5\">MetadataXML/associationsSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a09ad54bca4611027cc1b73d1f505fe1b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> channelAt </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>channelIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get one of the associated channels by index. </p>\n\
<p>Don\'t use this method, position isn\'t guaranteed. Use the iterator.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the channel to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The associated channel at the given index. If there is no data the channel will be empty (have no data streams). </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2associations_serializer_x_m_l_8cpp-example.html#a6\">MetadataXML/associationsSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab6b836f5e3e0a9cf1d801ce64e316a30\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\">Channel</a> * operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>channelIndex</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a pointer to one of the associated channels by index. </p>\n\
<p>Obsolete, use the iterator instead. Positioning is not guaranteed.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">channelIndex</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_index.html\" title=\"Lightweight class handling index values. \">Index</a> of the channel to retrieve</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The associated channel at the given index. Returns a null pointer if no <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_channel.html\" title=\"Class handling a named association of a data array with other data. \">Channel</a> exists at the given index. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac428c65feebecd6edada90ca97d872d7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a Print request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> object. </p>\n\
<p>Use the request object to dump all information on the \"me\" <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a>, or all static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> information if \"me\" is NULL.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to debug, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Print request object</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab1e35aa8bf678f5e411875a2455f0c8d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\">Associations</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a footprint request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> object. </p>\n\
<p>Populate the Footprint request with the information on all data stored within this class if \"me\" is NULL, otherwise the information stored in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_associations.html\" title=\"Class handling associations between internal and external data. \">Associations</a> object pointed at by \"me\".</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to footprint, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Footprint object to populate</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. The Footprint object will have all information added to it. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>adskDataAssociations.h</li>\n\
<li>adskDataAssociations.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";