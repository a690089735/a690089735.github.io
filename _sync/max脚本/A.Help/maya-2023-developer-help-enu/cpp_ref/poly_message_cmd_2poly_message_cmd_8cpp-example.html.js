var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: polyMessageCmd/polyMessageCmd.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'poly_message_cmd_2poly_message_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: polyMessageCmd/polyMessageCmd.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">polyMessageCmd/polyMessageCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in demonstrates how to register/de-register a callback</span></div>\n\
<div class=\"line\"><span class=\"comment\">// with the MPolyMessage class.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in will register a new command in Maya called &quot;polyMessage&quot;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// that adds a callback for all nodes in the active selection list.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// A message is printed to stdout whenever a component id of one of</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the poly nodes is modified.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// To run this plug-in:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (1) Create a poly plane.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (2) Open the outliner and select the poly shape.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (3) Run the &quot;polyMessage&quot; plug-in.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (4) Select some vertices of the poly shape.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  (5) Hit the delete key to see the remapped ids of the edges, vertices, and faces written out.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUintArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPolyMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCallbackIdArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This table will keep track of the registered callbacks</span></div>\n\
<div class=\"line\"><span class=\"comment\">// so they can be removed when the plug-ins is unloaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html\">MCallbackIdArray</a> callbackIds;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Callback function</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Prints out plug information when connections are made or broken.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    See MNodeMessage.h for all of the available AttributeMessage types.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> userCB( <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html\">MUintArray</a> componentIds[], <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> count, <span class=\"keywordtype\">void</span> *clientData )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    cout &lt;&lt; <span class=\"stringliteral\">&quot;poly component id modified&quot;</span>;</div>\n\
<div class=\"line\">    cout &lt;&lt; endl;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( count != <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600a1c55b131cb0f64620c16c77704ef1755\">MPolyMessage::kLastErrorIndex</a> )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i, id;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> kDeletedId = <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#ad76467eb2cfa2b2a5c9c5c64f474cc9a\">MPolyMessage::deletedId</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html\">MUintArray</a> vertexIds = componentIds[<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600adfae90212226124b70c1773022d888b6\">MPolyMessage::kVertexIndex</a>];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; vertexIds.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">id</span> = vertexIds[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( <span class=\"keywordtype\">id</span> == kDeletedId )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;vertex &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; deleted&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( i != <span class=\"keywordtype\">id</span> )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;vertex &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span> &lt;&lt; <span class=\"keywordtype\">id</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html\">MUintArray</a> edgeIds = componentIds[<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600ae08ef52c4e53504b79f32cbc3e8ef67c\">MPolyMessage::kEdgeIndex</a>];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; edgeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">id</span> = edgeIds[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( <span class=\"keywordtype\">id</span> == kDeletedId )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;edge &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; deleted&quot;</span>  &lt;&lt; endl;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( i != <span class=\"keywordtype\">id</span> )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;edge &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span> &lt;&lt; <span class=\"keywordtype\">id</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html\">MUintArray</a> faceIds = componentIds[<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600ab0da48fd486a3ee708b335090ff3c08a\">MPolyMessage::kFaceIndex</a>];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; faceIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_uint_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">id</span> = faceIds[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( <span class=\"keywordtype\">id</span> == kDeletedId )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;face &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; deleted&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( i != <span class=\"keywordtype\">id</span> )</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;face &quot;</span> &lt;&lt; i &lt;&lt; <span class=\"stringliteral\">&quot; &quot;</span> &lt;&lt; <span class=\"keywordtype\">id</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Command class declaration</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>polyMessageCmd : <span class=\"keyword\">public</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html\">MPxCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    polyMessageCmd() {};</div>\n\
<div class=\"line\">                ~polyMessageCmd() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\">    <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#ade7d0a873cbe811d6eab464e695390a9\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>*    creator();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Command class implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\">polyMessageCmd::~polyMessageCmd() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* polyMessageCmd::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> polyMessageCmd();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> polyMessageCmd::doIt( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Takes the  nodes that are on the active selection list and adds an</span></div>\n\
<div class=\"line\"><span class=\"comment\">// attriubte changed callback to each one.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         stat;</div>\n\
<div class=\"line\">    <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         node;</div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a>  list;</div>\n\
<div class=\"line\">    MCallbackId     id;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Register node callbacks for all nodes on the active list.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>( list );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;list.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a99dd6a54b909ede1d11702fe58977e2a\">length</a>(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        list.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a72d8cd9c78fd234dcf68cd2fb70bc432\">getDependNode</a>( i, node );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> dp;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shapeNode = node;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( MS::kSuccess == <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a422aa5ec02565f757c13fe2873ed25d7\">MDagPath::getAPathTo</a>( node, dp ) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( MS::kSuccess == dp.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a658d9664035ff84ffefa217c0e45cc88\">extendToShape</a>() )</div>\n\
<div class=\"line\">                shapeNode = dp.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>();</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> wantIdChanges[3];</div>\n\
<div class=\"line\">        wantIdChanges[<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600adfae90212226124b70c1773022d888b6\">MPolyMessage::kVertexIndex</a>] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        wantIdChanges[<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600ae08ef52c4e53504b79f32cbc3e8ef67c\">MPolyMessage::kEdgeIndex</a>] = <span class=\"keyword\">true</span>;        </div>\n\
<div class=\"line\">        wantIdChanges[<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#abed82baf7f470b522273a3e37c24c600ab0da48fd486a3ee708b335090ff3c08a\">MPolyMessage::kFaceIndex</a>] = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">id</span> = <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_poly_message.html#a30b433c4156eb54b8ab0f81699d21d4c\">MPolyMessage::addPolyComponentIdChangedCallback</a>( shapeNode,</div>\n\
<div class=\"line\">                                                        wantIdChanges, 3,</div>\n\
<div class=\"line\">                                                        userCB,</div>\n\
<div class=\"line\">                                                        NULL,</div>\n\
<div class=\"line\">                                                        &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// If the callback was successfully added then add the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// callback id to our callback table so it can be removed</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// when the plugin is unloaded.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( stat ) {</div>\n\
<div class=\"line\">            callbackIds.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html#a21e9b777b17a3dfd715d96599376ecfa\">append</a>( <span class=\"keywordtype\">id</span> );</div>\n\
<div class=\"line\">        } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            cout &lt;&lt; <span class=\"stringliteral\">&quot;MPolyMessage.addCallback failed\\n&quot;</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Plugin registration</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> plugin.registerCommand( <span class=\"stringliteral\">&quot;polyMessage&quot;</span>, polyMessageCmd::creator );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Remove all callbacks</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;callbackIds.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_callback_id_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++ ) {</div>\n\
<div class=\"line\">        <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( (MCallbackId)callbackIds[i] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> plugin.deregisterCommand( <span class=\"stringliteral\">&quot;polyMessage&quot;</span> );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";