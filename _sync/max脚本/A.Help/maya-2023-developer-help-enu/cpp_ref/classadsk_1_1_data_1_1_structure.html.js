var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: Structure Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'classadsk_1_1_data_1_1_structure.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: Structure Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">Structure Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Maya-NET-API/Meta-Data.html\">Maya .NET API &gt; Meta Data</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"classadsk_1_1_data_1_1_structure.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_structure.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_structure.html#pro-methods\">Protected Member Functions</a> &#124;\n\
<a href=\"classadsk_1_1_data_1_1_structure.html#pro-attribs\">Protected Attributes</a> &#124;\n\
<a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p>Class handling the definition of the structure of a piece of data.  \n\
 <a href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#details\">More...</a></p>\n\
\n\
<p><code>#include &lt;adskDataStructure.h&gt;</code></p>\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Inheritance diagram for Structure:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"cpp_ref/classadsk_1_1_data_1_1_structure.png\" usemap=\"#Structure_map\" alt=\"\">\n\
  <map id=\"Structure_map\" name=\"Structure_map\">\n\
<area href=\"classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \" alt=\"RefCounted\" shape=\"rect\" coords=\"0,0,89,24\">\n\
<area href=\"classadsk_1_1_checkpointed.html\" title=\"Class implementing ability to keep track of when objects are changed. \" alt=\"Checkpointed\" shape=\"rect\" coords=\"99,0,188,24\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ae224653d7e7bed9803683d26feb9c229\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae224653d7e7bed9803683d26feb9c229\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ae224653d7e7bed9803683d26feb9c229\">Structure</a> ()</td></tr>\n\
<tr class=\"memdesc:ae224653d7e7bed9803683d26feb9c229\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor, initialize to defaults. <br></td></tr>\n\
<tr class=\"separator:ae224653d7e7bed9803683d26feb9c229\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acf3a368149c026e3970dd2f7a22b71e7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"acf3a368149c026e3970dd2f7a22b71e7\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#acf3a368149c026e3970dd2f7a22b71e7\">Structure</a> (const char *<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a25844783e4bef74ca9a17519c239a27e\">name</a>)</td></tr>\n\
<tr class=\"memdesc:acf3a368149c026e3970dd2f7a22b71e7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Constructor with structure name, initialize to defaults. <br></td></tr>\n\
<tr class=\"separator:acf3a368149c026e3970dd2f7a22b71e7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a05ef9db799c04470a703196a1bf9240d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a05ef9db799c04470a703196a1bf9240d\">Structure</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:a05ef9db799c04470a703196a1bf9240d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor, copy values from an existing structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#a05ef9db799c04470a703196a1bf9240d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a05ef9db799c04470a703196a1bf9240d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae213350ad9672c2b601ba2759ad9bc86\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ae213350ad9672c2b601ba2759ad9bc86\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:ae213350ad9672c2b601ba2759ad9bc86\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator, copy a structure\'s data over to this one.  <a href=\"classadsk_1_1_data_1_1_structure.html#ae213350ad9672c2b601ba2759ad9bc86\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae213350ad9672c2b601ba2759ad9bc86\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a19451dab820311d993c8db8da500601b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a19451dab820311d993c8db8da500601b\">operator==</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:a19451dab820311d993c8db8da500601b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Compare two structures for equality.  <a href=\"classadsk_1_1_data_1_1_structure.html#a19451dab820311d993c8db8da500601b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a19451dab820311d993c8db8da500601b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0f7a2779418ba34be9b0f6323feada42\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a0f7a2779418ba34be9b0f6323feada42\">operator!=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;rhs) const </td></tr>\n\
<tr class=\"memdesc:a0f7a2779418ba34be9b0f6323feada42\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Compare two structures for inequality.  <a href=\"classadsk_1_1_data_1_1_structure.html#a0f7a2779418ba34be9b0f6323feada42\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0f7a2779418ba34be9b0f6323feada42\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acfbcfec5221077596fbb06a1772c035d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#acfbcfec5221077596fbb06a1772c035d\">addMember</a> (Member::eDataType, unsigned int len, const char *<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a25844783e4bef74ca9a17519c239a27e\">name</a>)</td></tr>\n\
<tr class=\"memdesc:acfbcfec5221077596fbb06a1772c035d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a new member to the structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#acfbcfec5221077596fbb06a1772c035d\">More...</a><br></td></tr>\n\
<tr class=\"separator:acfbcfec5221077596fbb06a1772c035d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa336224e78d40b92430ceb60bf81315e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">size_t&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#aa336224e78d40b92430ceb60bf81315e\">totalSize</a> () const </td></tr>\n\
<tr class=\"memdesc:aa336224e78d40b92430ceb60bf81315e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return the amount of memory a packed structure will occupy.  <a href=\"classadsk_1_1_data_1_1_structure.html#aa336224e78d40b92430ceb60bf81315e\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa336224e78d40b92430ceb60bf81315e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7494ca28fb334ebcc9eaafb07b2e13ae\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a7494ca28fb334ebcc9eaafb07b2e13ae\">defaultData</a> () const </td></tr>\n\
<tr class=\"memdesc:a7494ca28fb334ebcc9eaafb07b2e13ae\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return a chunk of memory containing default values for the structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#a7494ca28fb334ebcc9eaafb07b2e13ae\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7494ca28fb334ebcc9eaafb07b2e13ae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a080068e929b6c8f6aa5e11f2339c2cd4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a080068e929b6c8f6aa5e11f2339c2cd4\">allocateDefaultChunk</a> () const </td></tr>\n\
<tr class=\"memdesc:a080068e929b6c8f6aa5e11f2339c2cd4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return an allocated chunk of memory containing default values for the structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#a080068e929b6c8f6aa5e11f2339c2cd4\">More...</a><br></td></tr>\n\
<tr class=\"separator:a080068e929b6c8f6aa5e11f2339c2cd4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4696a0aeac2ee2a9a2b8e79219f32887\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a4696a0aeac2ee2a9a2b8e79219f32887\">duplicateChunk</a> (const char *dataPtr) const </td></tr>\n\
<tr class=\"memdesc:a4696a0aeac2ee2a9a2b8e79219f32887\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Duplicate a data chunk, including all embedded values.  <a href=\"classadsk_1_1_data_1_1_structure.html#a4696a0aeac2ee2a9a2b8e79219f32887\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4696a0aeac2ee2a9a2b8e79219f32887\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afbc194cfdae4834c982319aa39f3cbe2\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#afbc194cfdae4834c982319aa39f3cbe2\">fillWithDefaultChunk</a> (char *dataPtr) const </td></tr>\n\
<tr class=\"memdesc:afbc194cfdae4834c982319aa39f3cbe2\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy the default structure values into a block of memory.  <a href=\"classadsk_1_1_data_1_1_structure.html#afbc194cfdae4834c982319aa39f3cbe2\">More...</a><br></td></tr>\n\
<tr class=\"separator:afbc194cfdae4834c982319aa39f3cbe2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adbbc93e13108f8d735282f70d74c8a7c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#adbbc93e13108f8d735282f70d74c8a7c\">fillWithDuplicateChunk</a> (char *newData, const char *oldData) const </td></tr>\n\
<tr class=\"memdesc:adbbc93e13108f8d735282f70d74c8a7c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy the passed in structure values into a block of memory.  <a href=\"classadsk_1_1_data_1_1_structure.html#adbbc93e13108f8d735282f70d74c8a7c\">More...</a><br></td></tr>\n\
<tr class=\"separator:adbbc93e13108f8d735282f70d74c8a7c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae45f2f180849484f71b87016c80c31f8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ae45f2f180849484f71b87016c80c31f8\">destroyChunk</a> (char *dataPtr) const </td></tr>\n\
<tr class=\"memdesc:ae45f2f180849484f71b87016c80c31f8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destroy a data chunk, including any members with their own destructors.  <a href=\"classadsk_1_1_data_1_1_structure.html#ae45f2f180849484f71b87016c80c31f8\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae45f2f180849484f71b87016c80c31f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1d089fe4bdd5372c45a1769e6f4c2959\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a1d089fe4bdd5372c45a1769e6f4c2959\">chunkIsDefault</a> (const char *dataPtr) const </td></tr>\n\
<tr class=\"memdesc:a1d089fe4bdd5372c45a1769e6f4c2959\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if the data chunk contains all default values.  <a href=\"classadsk_1_1_data_1_1_structure.html#a1d089fe4bdd5372c45a1769e6f4c2959\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1d089fe4bdd5372c45a1769e6f4c2959\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3406bafde1fff55bf590908c328185a7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a3406bafde1fff55bf590908c328185a7\">chunkMemberIsDefault</a> (const char *dataPtr, const char *memberName) const </td></tr>\n\
<tr class=\"memdesc:a3406bafde1fff55bf590908c328185a7\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if a single member in the data chunk contains default values.  <a href=\"classadsk_1_1_data_1_1_structure.html#a3406bafde1fff55bf590908c328185a7\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3406bafde1fff55bf590908c328185a7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a25844783e4bef74ca9a17519c239a27e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">const char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a25844783e4bef74ca9a17519c239a27e\">name</a> () const </td></tr>\n\
<tr class=\"memdesc:a25844783e4bef74ca9a17519c239a27e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the name of the structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#a25844783e4bef74ca9a17519c239a27e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a25844783e4bef74ca9a17519c239a27e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad79b3edf375d6aa09288510a4e024a64\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ad79b3edf375d6aa09288510a4e024a64\">setName</a> (const char *)</td></tr>\n\
<tr class=\"memdesc:ad79b3edf375d6aa09288510a4e024a64\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set a new name for the structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#ad79b3edf375d6aa09288510a4e024a64\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad79b3edf375d6aa09288510a4e024a64\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aece8670c7e23503223926e6e68e98361\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#aece8670c7e23503223926e6e68e98361\">begin</a> () const </td></tr>\n\
<tr class=\"memdesc:aece8670c7e23503223926e6e68e98361\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>.  <a href=\"classadsk_1_1_data_1_1_structure.html#aece8670c7e23503223926e6e68e98361\">More...</a><br></td></tr>\n\
<tr class=\"separator:aece8670c7e23503223926e6e68e98361\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7dc277753aea401f9a8c176a7a064473\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a7dc277753aea401f9a8c176a7a064473\">end</a> () const </td></tr>\n\
<tr class=\"memdesc:a7dc277753aea401f9a8c176a7a064473\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get an iterator positioned off the end of the Members.  <a href=\"classadsk_1_1_data_1_1_structure.html#a7dc277753aea401f9a8c176a7a064473\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7dc277753aea401f9a8c176a7a064473\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad4d7d7b8344ce0b29daa6a0a837cce3a\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ad4d7d7b8344ce0b29daa6a0a837cce3a\">cbegin</a> () const </td></tr>\n\
<tr class=\"memdesc:ad4d7d7b8344ce0b29daa6a0a837cce3a\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a const Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>.  <a href=\"classadsk_1_1_data_1_1_structure.html#ad4d7d7b8344ce0b29daa6a0a837cce3a\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad4d7d7b8344ce0b29daa6a0a837cce3a\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3f64cd2ce27558a7ed53192368406699\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::const_iterator</a>&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a3f64cd2ce27558a7ed53192368406699\">cend</a> () const </td></tr>\n\
<tr class=\"memdesc:a3f64cd2ce27558a7ed53192368406699\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get a read-only iterator positioned off the end of the Members.  <a href=\"classadsk_1_1_data_1_1_structure.html#a3f64cd2ce27558a7ed53192368406699\">More...</a><br></td></tr>\n\
<tr class=\"separator:a3f64cd2ce27558a7ed53192368406699\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a90ca964ebcc1b02bbcde225edd49e812\">size</a> () const </td></tr>\n\
<tr class=\"memdesc:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>.  <a href=\"classadsk_1_1_data_1_1_structure.html#a90ca964ebcc1b02bbcde225edd49e812\">More...</a><br></td></tr>\n\
<tr class=\"separator:a90ca964ebcc1b02bbcde225edd49e812\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac6e61de369e994009e36f344f99c15ad\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ac6e61de369e994009e36f344f99c15ad\">empty</a> () const </td></tr>\n\
<tr class=\"memdesc:ac6e61de369e994009e36f344f99c15ad\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Check to see if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> has no Members.  <a href=\"classadsk_1_1_data_1_1_structure.html#ac6e61de369e994009e36f344f99c15ad\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac6e61de369e994009e36f344f99c15ad\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaf60a94503e60aa20f40f1c6c551d688\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#aaf60a94503e60aa20f40f1c6c551d688\">memberCount</a> () const </td></tr>\n\
<tr class=\"memdesc:aaf60a94503e60aa20f40f1c6c551d688\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>.  <a href=\"classadsk_1_1_data_1_1_structure.html#aaf60a94503e60aa20f40f1c6c551d688\">More...</a><br></td></tr>\n\
<tr class=\"separator:aaf60a94503e60aa20f40f1c6c551d688\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classadsk_1_1_checkpointed\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classadsk_1_1_checkpointed\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a></td></tr>\n\
<tr class=\"memitem:a5ffd4a05ad6ea8f302347779ba070b28 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a5ffd4a05ad6ea8f302347779ba070b28\">checkpoint</a> () const </td></tr>\n\
<tr class=\"memdesc:a5ffd4a05ad6ea8f302347779ba070b28 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Retrieve the current object checkpoint state.  <a href=\"classadsk_1_1_data_1_1_structure.html#a5ffd4a05ad6ea8f302347779ba070b28\">More...</a><br></td></tr>\n\
<tr class=\"separator:a5ffd4a05ad6ea8f302347779ba070b28 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ace27187efc378157330693b091679767 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#ace27187efc378157330693b091679767\">changedSinceCheckpoint</a> (const Checkpoint &amp;check) const </td></tr>\n\
<tr class=\"memdesc:ace27187efc378157330693b091679767 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Determine if the object has been altered since the given checkpoint.  <a href=\"classadsk_1_1_data_1_1_structure.html#ace27187efc378157330693b091679767\">More...</a><br></td></tr>\n\
<tr class=\"separator:ace27187efc378157330693b091679767 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afdd56685ecc84a841061ca25172fb1ce inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"afdd56685ecc84a841061ca25172fb1ce\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#afdd56685ecc84a841061ca25172fb1ce\">Checkpointed</a> ()</td></tr>\n\
<tr class=\"memdesc:afdd56685ecc84a841061ca25172fb1ce inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default constructor - initialize counter. <br></td></tr>\n\
<tr class=\"separator:afdd56685ecc84a841061ca25172fb1ce inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa541711c8e802c05b1d5388afc590cd7 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aa541711c8e802c05b1d5388afc590cd7\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#aa541711c8e802c05b1d5388afc590cd7\">~Checkpointed</a> ()</td></tr>\n\
<tr class=\"memdesc:aa541711c8e802c05b1d5388afc590cd7 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Destructor, updates checkpoint count for the class. <br></td></tr>\n\
<tr class=\"separator:aa541711c8e802c05b1d5388afc590cd7 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae66f59dd112786cbe0c85fa9365637a0 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#ae66f59dd112786cbe0c85fa9365637a0\">Checkpointed</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:ae66f59dd112786cbe0c85fa9365637a0 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy constructor - counter starts where copy left off.  <a href=\"classadsk_1_1_data_1_1_structure.html#ae66f59dd112786cbe0c85fa9365637a0\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae66f59dd112786cbe0c85fa9365637a0 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a22b02451aae941a4d24b76bca409fb67 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a> &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a22b02451aae941a4d24b76bca409fb67\">operator=</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a> &amp;rhs)</td></tr>\n\
<tr class=\"memdesc:a22b02451aae941a4d24b76bca409fb67 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Assignment operator and copy constructor are just to allow objects with counters embedded or derived to copy properly.  <a href=\"classadsk_1_1_data_1_1_structure.html#a22b02451aae941a4d24b76bca409fb67\">More...</a><br></td></tr>\n\
<tr class=\"separator:a22b02451aae941a4d24b76bca409fb67 inherit pub_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a02756a13fd377d02b5dae37869a0caa6\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a02756a13fd377d02b5dae37869a0caa6\">create</a> ()</td></tr>\n\
<tr class=\"memdesc:a02756a13fd377d02b5dae37869a0caa6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> creator.  <a href=\"classadsk_1_1_data_1_1_structure.html#a02756a13fd377d02b5dae37869a0caa6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a02756a13fd377d02b5dae37869a0caa6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac4b68ec0ba50f296ad34ea822834e0bc\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ac4b68ec0ba50f296ad34ea822834e0bc\">registerStructure</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;newStruct)</td></tr>\n\
<tr class=\"memdesc:ac4b68ec0ba50f296ad34ea822834e0bc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Register a new structure in the global list.  <a href=\"classadsk_1_1_data_1_1_structure.html#ac4b68ec0ba50f296ad34ea822834e0bc\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac4b68ec0ba50f296ad34ea822834e0bc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6308bfb6a40bee38c3a5973e4d43c42e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a6308bfb6a40bee38c3a5973e4d43c42e\">deregisterStructure</a> (<a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;oldStruct)</td></tr>\n\
<tr class=\"memdesc:a6308bfb6a40bee38c3a5973e4d43c42e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove a structure from the global list.  <a href=\"classadsk_1_1_data_1_1_structure.html#a6308bfb6a40bee38c3a5973e4d43c42e\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6308bfb6a40bee38c3a5973e4d43c42e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a080b078d8c42b4848083b3330b249a2b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a080b078d8c42b4848083b3330b249a2b\">structureByName</a> (const char *)</td></tr>\n\
<tr class=\"memdesc:a080b078d8c42b4848083b3330b249a2b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Lookup a created structure by name.  <a href=\"classadsk_1_1_data_1_1_structure.html#a080b078d8c42b4848083b3330b249a2b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a080b078d8c42b4848083b3330b249a2b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d9a542d442968391d46126e9ef420df\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a9d9a542d442968391d46126e9ef420df\">deleteAllStructures</a> ()</td></tr>\n\
<tr class=\"memdesc:a9d9a542d442968391d46126e9ef420df\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove every structure.  <a href=\"classadsk_1_1_data_1_1_structure.html#a9d9a542d442968391d46126e9ef420df\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d9a542d442968391d46126e9ef420df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac7469a5f55773910be2f91f07ff14343\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ac7469a5f55773910be2f91f07ff14343\"></a>\n\
static List &amp;&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ac7469a5f55773910be2f91f07ff14343\">allStructures</a> ()</td></tr>\n\
<tr class=\"memdesc:ac7469a5f55773910be2f91f07ff14343\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Global list of all defined structures. <br></td></tr>\n\
<tr class=\"separator:ac7469a5f55773910be2f91f07ff14343\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d3cb47500a1576c7086720694d9bb28\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a9d3cb47500a1576c7086720694d9bb28\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a9d3cb47500a1576c7086720694d9bb28\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a9d3cb47500a1576c7086720694d9bb28\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d3cb47500a1576c7086720694d9bb28\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a511007e52f5598f79e28d14a15a126dd\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a511007e52f5598f79e28d14a15a126dd\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a511007e52f5598f79e28d14a15a126dd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a511007e52f5598f79e28d14a15a126dd\">More...</a><br></td></tr>\n\
<tr class=\"separator:a511007e52f5598f79e28d14a15a126dd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_static_methods_classadsk_1_1_ref_counted\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_methods_classadsk_1_1_ref_counted\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a></td></tr>\n\
<tr class=\"memitem:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#a017b673598cf98da323123828a580828\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a017b673598cf98da323123828a580828\">More...</a><br></td></tr>\n\
<tr class=\"separator:a017b673598cf98da323123828a580828 inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#a9d1b2b85361a0ceb15861047253b31bc\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a9d1b2b85361a0ceb15861047253b31bc\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9d1b2b85361a0ceb15861047253b31bc inherit pub_static_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_static_methods_classadsk_1_1_checkpointed\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_static_methods_classadsk_1_1_checkpointed\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Public Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a></td></tr>\n\
<tr class=\"memitem:a67865c56868e2325a9d8089370cc9e7c inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a67865c56868e2325a9d8089370cc9e7c\">globalCheckpoint</a> ()</td></tr>\n\
<tr class=\"memdesc:a67865c56868e2325a9d8089370cc9e7c inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Retrieve the global checkpoint.  <a href=\"classadsk_1_1_data_1_1_structure.html#a67865c56868e2325a9d8089370cc9e7c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a67865c56868e2325a9d8089370cc9e7c inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a269118d26e73eeb90ad439f954d7e4a2 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a269118d26e73eeb90ad439f954d7e4a2\">globalChange</a> ()</td></tr>\n\
<tr class=\"memdesc:a269118d26e73eeb90ad439f954d7e4a2 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Update the global checkpoint and return the new value.  <a href=\"classadsk_1_1_data_1_1_structure.html#a269118d26e73eeb90ad439f954d7e4a2\">More...</a><br></td></tr>\n\
<tr class=\"separator:a269118d26e73eeb90ad439f954d7e4a2 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a724c6f9f787d497a1abee3654922637b inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a724c6f9f787d497a1abee3654922637b\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a724c6f9f787d497a1abee3654922637b inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\" title=\"Class implementing ability to keep track of when objects are changed. \">Checkpointed</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a724c6f9f787d497a1abee3654922637b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a724c6f9f787d497a1abee3654922637b inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a223c871dd10da8872e1deadca5983966 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a223c871dd10da8872e1deadca5983966\">Debug</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a> *me, <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;request)</td></tr>\n\
<tr class=\"memdesc:a223c871dd10da8872e1deadca5983966 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Answer a footprint request for an <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\" title=\"Class implementing ability to keep track of when objects are changed. \">Checkpointed</a> object.  <a href=\"classadsk_1_1_data_1_1_structure.html#a223c871dd10da8872e1deadca5983966\">More...</a><br></td></tr>\n\
<tr class=\"separator:a223c871dd10da8872e1deadca5983966 inherit pub_static_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-methods\"></a>\n\
Protected Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a2f92e93df14b745726aac1c16ac63c2f\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a2f92e93df14b745726aac1c16ac63c2f\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a2f92e93df14b745726aac1c16ac63c2f\">~Structure</a> () override</td></tr>\n\
<tr class=\"memdesc:a2f92e93df14b745726aac1c16ac63c2f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Default destructor, remove the default data if it exists. <br></td></tr>\n\
<tr class=\"separator:a2f92e93df14b745726aac1c16ac63c2f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_methods_classadsk_1_1_ref_counted\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_methods_classadsk_1_1_ref_counted\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a></td></tr>\n\
<tr class=\"memitem:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"aebb1990f519367c00c1861b5b3b3e0a5\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#aebb1990f519367c00c1861b5b3b3e0a5\">RefCounted</a> ()</td></tr>\n\
<tr class=\"memdesc:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> default ctor. <br></td></tr>\n\
<tr class=\"separator:aebb1990f519367c00c1861b5b3b3e0a5 inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"af66f84bd2408304143da35229d0a7d3e\"></a>\n\
&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#af66f84bd2408304143da35229d0a7d3e\">RefCounted</a> (const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\">RefCounted</a> &amp;)</td></tr>\n\
<tr class=\"memdesc:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> copy ctor. <br></td></tr>\n\
<tr class=\"separator:af66f84bd2408304143da35229d0a7d3e inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ae725be496ffd7a9d4bc812d5bb26d58f\"></a>\n\
virtual&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html#ae725be496ffd7a9d4bc812d5bb26d58f\">~RefCounted</a> ()</td></tr>\n\
<tr class=\"memdesc:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_ref_counted.html\" title=\"Class implementing standard reference counting. \">RefCounted</a> dtor. <br></td></tr>\n\
<tr class=\"separator:ae725be496ffd7a9d4bc812d5bb26d58f inherit pro_methods_classadsk_1_1_ref_counted\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_methods_classadsk_1_1_checkpointed\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_methods_classadsk_1_1_checkpointed\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Member Functions inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a></td></tr>\n\
<tr class=\"memitem:aa3d7af44c8a88ceb6b7681e8575b1c2e inherit pro_methods_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#aa3d7af44c8a88ceb6b7681e8575b1c2e\">objectChanged</a> ()</td></tr>\n\
<tr class=\"memdesc:aa3d7af44c8a88ceb6b7681e8575b1c2e inherit pro_methods_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Call this whenever an object changes, increments the class and object checkpoint counters.  <a href=\"classadsk_1_1_data_1_1_structure.html#aa3d7af44c8a88ceb6b7681e8575b1c2e\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa3d7af44c8a88ceb6b7681e8575b1c2e inherit pro_methods_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pro-attribs\"></a>\n\
Protected Attributes</h2></td></tr>\n\
<tr class=\"memitem:ad0961b908b46280e4874e6bec7aff860\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ad0961b908b46280e4874e6bec7aff860\"></a>\n\
char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ad0961b908b46280e4874e6bec7aff860\">fDefault</a></td></tr>\n\
<tr class=\"memdesc:ad0961b908b46280e4874e6bec7aff860\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Allocated array of structure members. <br></td></tr>\n\
<tr class=\"separator:ad0961b908b46280e4874e6bec7aff860\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a75f6067b1e25d0d07489e6b1292e3dba\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a75f6067b1e25d0d07489e6b1292e3dba\"></a>\n\
char *&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a75f6067b1e25d0d07489e6b1292e3dba\">fName</a></td></tr>\n\
<tr class=\"memdesc:a75f6067b1e25d0d07489e6b1292e3dba\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Memory block containing a default structure value. <br></td></tr>\n\
<tr class=\"separator:a75f6067b1e25d0d07489e6b1292e3dba\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1c693ecfc3dfc5ef4a8652c4184e3583\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a1c693ecfc3dfc5ef4a8652c4184e3583\"></a>\n\
size_t&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a1c693ecfc3dfc5ef4a8652c4184e3583\">fSize</a></td></tr>\n\
<tr class=\"memdesc:a1c693ecfc3dfc5ef4a8652c4184e3583\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Name of this structure. <br></td></tr>\n\
<tr class=\"separator:a1c693ecfc3dfc5ef4a8652c4184e3583\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab473e706d2ad333d000f530ceddfa3a4\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ab473e706d2ad333d000f530ceddfa3a4\"></a>\n\
unsigned int&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ab473e706d2ad333d000f530ceddfa3a4\">fMemberCount</a></td></tr>\n\
<tr class=\"memdesc:ab473e706d2ad333d000f530ceddfa3a4\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Total size of all structure members, including padding. <br></td></tr>\n\
<tr class=\"separator:ab473e706d2ad333d000f530ceddfa3a4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac5ecbc1fd03470542d060f2c1ae75fb0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"ac5ecbc1fd03470542d060f2c1ae75fb0\"></a>\n\
bool&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ac5ecbc1fd03470542d060f2c1ae75fb0\">fDeleting</a></td></tr>\n\
<tr class=\"memdesc:ac5ecbc1fd03470542d060f2c1ae75fb0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Number of members in fMemberList. <br></td></tr>\n\
<tr class=\"separator:ac5ecbc1fd03470542d060f2c1ae75fb0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pro_attribs_classadsk_1_1_checkpointed\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_attribs_classadsk_1_1_checkpointed\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Protected Attributes inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a></td></tr>\n\
<tr class=\"memitem:a523dfd647ebc2adedbbec7a34fc397a6 inherit pro_attribs_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a523dfd647ebc2adedbbec7a34fc397a6\"></a>\n\
Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a523dfd647ebc2adedbbec7a34fc397a6\">fCheckpoint</a></td></tr>\n\
<tr class=\"memdesc:a523dfd647ebc2adedbbec7a34fc397a6 inherit pro_attribs_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">ID updating when the object changes. <br></td></tr>\n\
<tr class=\"separator:a523dfd647ebc2adedbbec7a34fc397a6 inherit pro_attribs_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"inherited\"></a>\n\
Additional Inherited Members</h2></td></tr>\n\
<tr class=\"inherit_header pro_static_attribs_classadsk_1_1_checkpointed\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pro_static_attribs_classadsk_1_1_checkpointed\')\"><img src=\"cpp_ref/closed.png\" alt=\"-\">&#160;Static Protected Attributes inherited from <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html\">Checkpointed</a></td></tr>\n\
<tr class=\"memitem:a0d98b32d84f3d41380ca4b066755b170 inherit pro_static_attribs_classadsk_1_1_checkpointed\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">static Checkpoint&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_checkpointed.html#a0d98b32d84f3d41380ca4b066755b170\">sfGlobalCheckpoint</a> = 0</td></tr>\n\
<tr class=\"memdesc:a0d98b32d84f3d41380ca4b066755b170 inherit pro_static_attribs_classadsk_1_1_checkpointed\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Global monotonic checkpoint.  <a href=\"classadsk_1_1_data_1_1_structure.html#a0d98b32d84f3d41380ca4b066755b170\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0d98b32d84f3d41380ca4b066755b170 inherit pro_static_attribs_classadsk_1_1_checkpointed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><p>Class handling the definition of the structure of a piece of data. </p>\n\
<p>The <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">adsk::Data::Handle</a> class manages the handling of a single piece of structured data. <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">adsk::Data::Structure</a> class is responsible for defining and managing what the structure of that data looks like. It includes the naming of the structure members as well as maintaining the metadata necessary to efficiently store the collection of data values. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2create_metadata_cmd_8cpp-example.html#_a8\">MetadataSample/createMetadataCmd.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2create_metadata_cmd_8h-example.html#_a9\">MetadataSample/createMetadataCmd.h</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#_a4\">MetadataXML/streamSerializerXML.cpp</a>, <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2structure_serializer_x_m_l_8h-example.html#_a1\">MetadataXML/structureSerializerXML.h</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#_a26\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl></div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a05ef9db799c04470a703196a1bf9240d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy constructor, copy values from an existing structure. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> to copy </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"ae213350ad9672c2b601ba2759ad9bc86\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Assignment operator, copy a structure\'s data over to this one. </p>\n\
<p>Allocates new copies of the member array and default data. Does not copy reference counts as all underlying references to this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> and the copied <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> will remain intact and independent.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> to copy</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>reference to the new copy (this) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a19451dab820311d993c8db8da500601b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Compare two structures for equality. </p>\n\
<p>The structures are deemed equal if they refer to the same object or if every member of the class matches. (Ordering is important as well since it determines storage layout.)</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> to compare against</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the structures are the same </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0f7a2779418ba34be9b0f6323feada42\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>rhs</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Compare two structures for inequality. </p>\n\
<p>Not an optimal implementation but is expected to be less common and avoids code duplication.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">rhs</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> to compare against</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the structures are not the same </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a02756a13fd377d02b5dae37869a0caa6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> * create </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> creator. </p>\n\
<p>Used to force allocation of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> data into the main heap so that it controls deletion (which it must since the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> is reference-counted).</p>\n\
<p>NOTE: After creation you *must* either call <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#ac4b68ec0ba50f296ad34ea822834e0bc\" title=\"Register a new structure in the global list. \">registerStructure()</a> to make it visible or call ref() to maintain a local copy of it. Otherwise it can be deleted at any point since it is reference counted. This includes any calls to the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> class itself or iteration on the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> members.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the newly created <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acfbcfec5221077596fbb06a1772c035d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool addMember </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">Member::eDataType&#160;</td>\n\
          <td class=\"paramname\"><em>type</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>length</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>name</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Add a new member to the structure. </p>\n\
<p>The order in which the members are added is not necessarily related to the order in which they appear in the iterator. Like a C structure though the members will be stored in the order received (to avoid the overhead of rearranging existing data chunks) so in order to maximize storage efficiency you should add items in order of size from largest to smallest.</p>\n\
<p>If there is no data which uses the old structure yet you can also call the optimize() method after the last item is added. It\'s up to the caller to verify that this is the case.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">type</td><td>Type of data to be added </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">length</td><td>Number of elements per member </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Name of this new piece of data</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the member was added, false if not Member name must be non-zero length and unique. Member length must be 1 or higher. Member type cannot be invalid. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a28\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa336224e78d40b92430ceb60bf81315e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">size_t totalSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return the amount of memory a packed structure will occupy. </p>\n\
<p>This is used in order to allocate enough memory to hold all of the data in a defined structure. Use the individual structure member offsets and sizes (e.g. via the iterator) to find out how the members are laid out in memory.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>the size in bytes of a packed structure </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7494ca28fb334ebcc9eaafb07b2e13ae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * defaultData </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return a chunk of memory containing default values for the structure. </p>\n\
<p>The structure data has a very specific layout determined by the structure itself so the most efficient way to define a set of default values for a structure is to provide a memory block filled with those defaults.</p>\n\
<p>Note that the default data does not own anything. If a (char*) pointing to a string appears it is assumed that string is managed elsewhere and will not be deleted while the default data exists.</p>\n\
<p>The memory block is owned by the structure and cannot be modified directly. Use the block and <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#aa336224e78d40b92430ceb60bf81315e\" title=\"Return the amount of memory a packed structure will occupy. \">totalSize()</a> result to copy it if desired.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to the default structure block, NULL if it has no members </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a080068e929b6c8f6aa5e11f2339c2cd4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">char * allocateDefaultChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return an allocated chunk of memory containing default values for the structure. </p>\n\
<p>The difference between this method and <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a7494ca28fb334ebcc9eaafb07b2e13ae\" title=\"Return a chunk of memory containing default values for the structure. \">defaultData()</a> is that this one transfers ownership of the memory to the caller whereas <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#a7494ca28fb334ebcc9eaafb07b2e13ae\" title=\"Return a chunk of memory containing default values for the structure. \">defaultData()</a> offers only const access to a pre-allocated piece of memory.</p>\n\
<p>The caller should use delete [] to release the memory once they are done using it.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>a pointer to the allocated block, NULL if it has no members </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4696a0aeac2ee2a9a2b8e79219f32887\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">char * duplicateChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>dataPtr</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Duplicate a data chunk, including all embedded values. </p>\n\
<p>Mostly this routine just does a bit copy from the old data chunk to the new one, under the assumption that the sizes are the same and the new one has no data requiring cleanup.</p>\n\
<p>The second step is to do a deep copy on any member types requiring it for uniqueness, e.g. strings.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">dataPtr</td><td>a pointer to a block of data to be duplicated</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An allocated duplicate of the passed-in data </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afbc194cfdae4834c982319aa39f3cbe2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool fillWithDefaultChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">char *&#160;</td>\n\
          <td class=\"paramname\"><em>dataPtr</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy the default structure values into a block of memory. </p>\n\
<p>The memory pointer passed in should be big enough to hold the structure values, i.e. <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html#aa336224e78d40b92430ceb60bf81315e\" title=\"Return the amount of memory a packed structure will occupy. \">totalSize()</a> bytes</p>\n\
<p>The memory pointer passed in should not have any data in need of destruction (e.g. don\'t call this method twice, it may leave dangling data pointers for things like strings)</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">dataPtr</td><td>a pointer to a block of data to be filled with defaults</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the default data was copied to the dataPtr </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adbbc93e13108f8d735282f70d74c8a7c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool fillWithDuplicateChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">char *&#160;</td>\n\
          <td class=\"paramname\"><em>newData</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>oldData</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy the passed in structure values into a block of memory. </p>\n\
<p>Presumes that the allocated size of newData and oldData are the same.</p>\n\
<p>Since some data requires construction this method copies the oldData onto the new data and then walks each structure member, manually constructing any member requiring construction using the oldData values for a copy constructor or equivalent.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">newData</td><td>a pointer to a block of data to be filled with values </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">oldData</td><td>a pointer to a block of data to be duplicated</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the data was duplicated into the newData location </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae45f2f180849484f71b87016c80c31f8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool destroyChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">char *&#160;</td>\n\
          <td class=\"paramname\"><em>dataPtr</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Destroy a data chunk, including any members with their own destructors. </p>\n\
<p>A data chunk stores all of the data values from one instance of a structure.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">dataPtr</td><td>a pointer to a block of data to be destroyed</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the destruction succeeded </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1d089fe4bdd5372c45a1769e6f4c2959\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool chunkIsDefault </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>dataPtr</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if the data chunk contains all default values. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">dataPtr</td><td>a pointer to a block of data corresponding to this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a></td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the block of data contained default values </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3406bafde1fff55bf590908c328185a7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool chunkMemberIsDefault </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>dataPtr</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>memberName</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if a single member in the data chunk contains default values. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">dataPtr</td><td>a pointer to a block of data corresponding to this <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_handle.html\" title=\"Class handling access to specific data members of a structured type. \">Handle</a> </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">memberName</td><td>The name of the member to check. If NULL check all of them</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the block of data contained default values </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a25844783e4bef74ca9a17519c239a27e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">const char * name </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the name of the structure. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the string containing the structure name </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a17\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad79b3edf375d6aa09288510a4e024a64\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void setName </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>name</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set a new name for the structure. </p>\n\
<p>The name string is copied internally so the caller is still responsible for deleting the original.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>New name to be set </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/scene_assembly_2adsk_scene_metadata_cmd_8cpp-example.html#a27\">sceneAssembly/adskSceneMetadataCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aece8670c7e23503223926e6e68e98361\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::iterator</a> begin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An iterator pointing at the first Member of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a24\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7dc277753aea401f9a8c176a7a064473\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::iterator</a> end </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get an iterator positioned off the end of the Members. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>An iterator pointed off the end of the iteration </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a25\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad4d7d7b8344ce0b29daa6a0a837cce3a\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::const_iterator</a> cbegin </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a const Member iterator pointed to the beginning of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A read-only iterator pointing at the first element of the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3f64cd2ce27558a7ed53192368406699\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure_iterator.html\">Structure::const_iterator</a> cend </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get a read-only iterator positioned off the end of the Members. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A read-only iterator pointed off the end of the iteration </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a90ca964ebcc1b02bbcde225edd49e812\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int size </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac6e61de369e994009e36f344f99c15ad\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool empty </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Check to see if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> has no Members. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> has no Members, else false </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac4b68ec0ba50f296ad34ea822834e0bc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool registerStructure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>newStruct</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Register a new structure in the global list. </p>\n\
<p>All structures are maintained in a global list. The registration and deregistration happens when the structures become visible. External undo capabilities may allow structures to exist without becoming visible so verify that the newStruct doesn\'t already exist on the registration list before adding it.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">newStruct</td><td>New structure to be added to the list</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>false if the structure was already registered, otherwise true </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6308bfb6a40bee38c3a5973e4d43c42e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool deregisterStructure </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>oldStruct</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove a structure from the global list. </p>\n\
<p>External undo handling may create a situation where structures exist but are not registered. Check the presence of the oldStruct in the registration list first to confirm that the calling code has properly matched register/deregister calls.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">oldStruct</td><td><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> to be removed from the list</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the structure was found and deregistered </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a080b078d8c42b4848083b3330b249a2b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> * structureByName </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const char *&#160;</td>\n\
          <td class=\"paramname\"><em>name</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Lookup a created structure by name. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Name of structure to find</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> with the given name, NULL if there is none </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_sample_2create_metadata_cmd_8cpp-example.html#a13\">MetadataSample/createMetadataCmd.cpp</a>, and <a class=\"el\" href=\"#!/url=./cpp_ref/_metadata_x_m_l_2stream_serializer_x_m_l_8cpp-example.html#a5\">MetadataXML/streamSerializerXML.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9d9a542d442968391d46126e9ef420df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">void deleteAllStructures </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove every structure. </p>\n\
<p>This is possible without using this method but it\'s a bit messy to ensure you don\'t delete structures out from under yourself so it\'s packaged up nicely here. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aaf60a94503e60aa20f40f1c6c551d688\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">unsigned int memberCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of Members in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9d3cb47500a1576c7086720694d9bb28\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_print.html\">Debug::Print</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a Print request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> object. </p>\n\
<p>Use the request object to dump all information on the \"me\" <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a>, or all static <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> information if \"me\" is NULL.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to debug, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Print request object</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a511007e52f5598f79e28d14a15a126dd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">bool Debug </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\">Structure</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>me</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_debug_1_1_footprint.html\">Debug::Footprint</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>request</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Answer a footprint request for a <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> object. </p>\n\
<p>Populate the Footprint request with the information on all data stored within this class if \"me\" is NULL, otherwise the information stored in the <a class=\"el\" href=\"#!/url=./cpp_ref/classadsk_1_1_data_1_1_structure.html\" title=\"Class handling the definition of the structure of a piece of data. \">Structure</a> object pointed at by \"me\".</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">me</td><td>Pointer to object to footprint, NULL means class static </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">request</td><td>Footprint object to populate</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the request was successfully processed. The Footprint object will have all information added to it. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>adskDataStructure.h</li>\n\
<li>adskDataStructure.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";