var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>Python API 2.0 Reference: OpenMayaRender.MVertexBuffer Class Reference</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"py_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(py_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'py_ref/\'; }\n\
function py_ref_initializeToc(forceTrigger) {\n\
    py_ref_adsk_ref_toc.initResizable();\n\
    py_ref_adsk_ref_toc.initNavTree(\'class_open_maya_render_1_1_m_vertex_buffer.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(py_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = py_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { py_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Python API 2.0 Reference: OpenMayaRender.MVertexBuffer Class Reference</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/namespaces.html\"><span>Packages</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./py_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"py_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"py_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./py_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./py_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenMayaRender.MVertexBuffer Class Reference</div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Overview-of-the-Viewport-2-0-API/Data-Classes.html\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Data Classes</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/API-constructs/Geometric-Data-MGeometry-.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; API constructs &gt; Geometric Data (MGeometry)</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Plug-in-Entry-Points/Geometry-Overrides.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Geometry Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./dev_help/Viewport-2-0-API/Maya-Viewport-2-0-API-Guide/Advanced-Topics/Customizing-Geometric-Data-for.html\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Customizing Geometric Data for Shaders</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_open_maya_render_1_1_m_vertex_buffer.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_open_maya_render_1_1_m_vertex_buffer.html#pub-static-methods\">Static Public Member Functions</a> &#124;\n\
<a href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer-members.html\">List of all members</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
<div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"py_ref/closed.png\" alt=\"+\"> Inheritance diagram for OpenMayaRender.MVertexBuffer:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"py_ref/class_open_maya_render_1_1_m_vertex_buffer.png\" usemap=\"#OpenMayaRender.MVertexBuffer_map\" alt=\"\">\n\
  <map id=\"OpenMayaRender.MVertexBuffer_map\" name=\"OpenMayaRender.MVertexBuffer_map\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:adbcbfb3a8d8e52ad3fffef0e4b4da157\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#adbcbfb3a8d8e52ad3fffef0e4b4da157\">__init__</a> ()</td></tr>\n\
<tr class=\"separator:adbcbfb3a8d8e52ad3fffef0e4b4da157\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2c2eefa4ef4959f7007b73bcfe27d90d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a2c2eefa4ef4959f7007b73bcfe27d90d\">acquire</a> ()</td></tr>\n\
<tr class=\"separator:a2c2eefa4ef4959f7007b73bcfe27d90d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a464859bbebbd71a4e00c96f3f25a2d44\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a464859bbebbd71a4e00c96f3f25a2d44\">commit</a> ()</td></tr>\n\
<tr class=\"separator:a464859bbebbd71a4e00c96f3f25a2d44\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a60eceb13fed7fff2c8c8432c91985df7\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a60eceb13fed7fff2c8c8432c91985df7\">descriptor</a> ()</td></tr>\n\
<tr class=\"separator:a60eceb13fed7fff2c8c8432c91985df7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac0f71dd007a3374a80a93801901e4b12\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#ac0f71dd007a3374a80a93801901e4b12\">hasCustomResourceHandle</a> ()</td></tr>\n\
<tr class=\"separator:ac0f71dd007a3374a80a93801901e4b12\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a29832955c064fc761326fcf89d8e9a66\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a29832955c064fc761326fcf89d8e9a66\">lockResourceHandle</a> ()</td></tr>\n\
<tr class=\"separator:a29832955c064fc761326fcf89d8e9a66\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a758bfa0d2a5f3d4d272f7b875f979831\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a758bfa0d2a5f3d4d272f7b875f979831\">map</a> ()</td></tr>\n\
<tr class=\"separator:a758bfa0d2a5f3d4d272f7b875f979831\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adbd61cf9389cbd50d562bbd08bfce49e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#adbd61cf9389cbd50d562bbd08bfce49e\">resourceHandle</a> ()</td></tr>\n\
<tr class=\"separator:adbd61cf9389cbd50d562bbd08bfce49e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5e3888274925a5d46b5731ae13228854\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a5e3888274925a5d46b5731ae13228854\">setResourceHandle</a> ()</td></tr>\n\
<tr class=\"separator:a5e3888274925a5d46b5731ae13228854\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a948a6e5347171558b77a00ad2758f55e\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a948a6e5347171558b77a00ad2758f55e\">unload</a> ()</td></tr>\n\
<tr class=\"separator:a948a6e5347171558b77a00ad2758f55e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abbb16e388fd1b8a4ee5d98ff057ee85c\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#abbb16e388fd1b8a4ee5d98ff057ee85c\">unlockResourceHandle</a> ()</td></tr>\n\
<tr class=\"separator:abbb16e388fd1b8a4ee5d98ff057ee85c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c09e17c894257374c50f5a0324c3b07\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a7c09e17c894257374c50f5a0324c3b07\">unmap</a> ()</td></tr>\n\
<tr class=\"separator:a7c09e17c894257374c50f5a0324c3b07\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a96bc153a6dbdcdc0ce07257a1588c680\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a96bc153a6dbdcdc0ce07257a1588c680\">update</a> ()</td></tr>\n\
<tr class=\"separator:a96bc153a6dbdcdc0ce07257a1588c680\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad5d16ce58dc9f3bfc1992b716c1fe3f8\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#ad5d16ce58dc9f3bfc1992b716c1fe3f8\">vertexCount</a> ()</td></tr>\n\
<tr class=\"separator:ad5d16ce58dc9f3bfc1992b716c1fe3f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a944868398884fdbf6c66437e62cc710b\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"></td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"#!/url=./py_ref/class_open_maya_render_1_1_m_vertex_buffer.html#a944868398884fdbf6c66437e62cc710b\">__new__</a> ()</td></tr>\n\
<tr class=\"separator:a944868398884fdbf6c66437e62cc710b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>\n\
<div class=\"textblock\"><pre class=\"fragment\">Vertex buffer for use with MGeometry.</pre> </div><h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"adbcbfb3a8d8e52ad3fffef0e4b4da157\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.__init__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Initialize self.  See help(type(self)) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a944868398884fdbf6c66437e62cc710b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.__new__ </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">Create and return a new object.  See help(type) for accurate signature.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2c2eefa4ef4959f7007b73bcfe27d90d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.acquire </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">acquire(size, writeOnly) -&gt; long\n\
\n\
Get a pointer to memory for the buffer.\n\
\n\
* size (int) - The size of the buffer to acquire.\n\
* writeOnly (bool) - Specified if the returned memory should be uninitialized or filled with actual buffer content.\n\
         When the current buffer content is not needed, it is preferable to set the writeOnly flag to true for better performance.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a464859bbebbd71a4e00c96f3f25a2d44\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.commit </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">commit(long) -&gt; self\n\
\n\
Commit the data stored in the memory given by acquire() to the buffer.\n\
If this method is not called, the acquired buffer will not be used in drawing.\n\
The pointer must be the same pointer returned from acquire().</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a60eceb13fed7fff2c8c8432c91985df7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.descriptor </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">descriptor() -&gt; MVertexBufferDescriptor\n\
\n\
Get the the buffer descriptor.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac0f71dd007a3374a80a93801901e4b12\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.hasCustomResourceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">hasCustomResourceHandle() -&gt; bool\n\
\n\
Returns true if this vertex buffer is using a custom resource handle set\n\
by the plugin using MVertexBuffer.setResourceHandle(long, int).</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a29832955c064fc761326fcf89d8e9a66\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.lockResourceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">lockResourceHandle() -&gt; self\n\
\n\
Lock the resource handle. The pointer returned from resourceHandle() is\n\
guaranteed to exist between lockResourceHandle() and unlockResourceHandle().\n\
\n\
MVertexBuffer may store data in system memory, GPU memory or both. Direct\n\
access to the GPU representation of the data is possible through the\n\
buffer\'s resourceHandle(). If the GPU representation of the data is to be\n\
directly modified using an external graphics or compute API, then\n\
lockResourceHandle() must be called on the MVertexBuffer once, before any\n\
modifications to the buffer are made.\n\
\n\
While a resource handle is locked, any external modifications to the GPU\n\
buffer will be recognized by Maya.\n\
\n\
While a resource handle is locked, consolidated world will take longer to\n\
consolidate the corresponding object. After unlocking a resource handle,\n\
consolidated world will take longer to consolidate the corresponding object\n\
one more time, the first time the unlocked resource handle is consolidated.\n\
\n\
Calling lockResourceHandle() and unlockResourceHandle() on a custom resource\n\
handle has no effect.\n\
\n\
Reallocating or deleting the GPU representation of the data between\n\
lockResourceHandle() and unlockResourceHandle() will result in undefined\n\
behavior. acquire(), commit() and update() may reallocate the GPU representation.\n\
unload() may delete the GPU representation.\n\
\n\
map() and unmap() will work if they are called between lockResourceHandle()\n\
and unlockResourceHandle(). They operate on the GPU representation.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a758bfa0d2a5f3d4d272f7b875f979831\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.map </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">map() -&gt; long\n\
\n\
Get a read-only pointer to the existing content of the buffer.\n\
Writing new content in this memory block is not supported and can lead to unexpected behavior.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adbd61cf9389cbd50d562bbd08bfce49e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.resourceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">resourceHandle() -&gt; long\n\
\n\
Returns a long containing a C++ \'float\' pointer which points to the graphics device dependent handle to the vertex buffer.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5e3888274925a5d46b5731ae13228854\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.setResourceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">setResourceHandle(long, int) -&gt; self\n\
\n\
Set the graphics-device-dependent hardware buffer resource handle.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a948a6e5347171558b77a00ad2758f55e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.unload </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">unload() -&gt; self\n\
\n\
If the buffer is resident in GPU memory, calling this method will move it to system memory and free the GPU memory.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abbb16e388fd1b8a4ee5d98ff057ee85c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.unlockResourceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">unlockResourceHandle() -&gt; self\n\
\n\
Unlock the resource handle. The pointer returned from resourceHandle is not\n\
guaranteed to exist any more.\n\
See lockResourceHandle() for more details.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7c09e17c894257374c50f5a0324c3b07\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.unmap </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">unmap() -&gt; self\n\
\n\
Release the data exposed by map(). If this method is not called, the buffer will not be recycled.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a96bc153a6dbdcdc0ce07257a1588c680\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.update </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">update(buffer, destOffset, numVerts, truncateIfSmaller) -&gt; self\n\
\n\
Set a portion (or all) of the contents of the MVertexBuffer using the data in the provided software buffer.\n\
The internal hardware buffer will be allocated or reallocated to fit if required, according to the vertex size from the descriptor.\n\
\n\
* buffer (long) - The input data buffer, starting with the first vertex to copy.\n\
* destOffset (int) - The offset (in vertices) from the beginning of the buffer to start writing to.\n\
* numVerts (int) - The number of vertices to copy.\n\
* truncateIfSmaller (bool) - If true and offset+numVerts is less than the pre-existing size of the buffer,\n\
                 then the buffer contents will be truncated to the new size. Truncating the buffer size\n\
                 will not cause a reallocation and will not lose data before the destOffset.</pre> \n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad5d16ce58dc9f3bfc1992b716c1fe3f8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\">OpenMayaRender.MVertexBuffer.vertexCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<pre class=\"fragment\">vertexCount() -&gt; int\n\
\n\
Get the size of the vertex buffer.</pre> \n\
</div>\n\
</div>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";