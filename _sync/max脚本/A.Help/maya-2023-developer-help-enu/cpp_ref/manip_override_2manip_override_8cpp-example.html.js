var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script>\n\
      <title>C++ API Reference: manipOverride/manipOverride.cpp</title>\n\
      \n\
	  \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
      \n\
    \n\
\n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'manip_override_2manip_override_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>C++ API Reference: manipOverride/manipOverride.cpp</h1>\n\
         </div>\n\
\n\
<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n\
\n\
<!-- end header part -->\n\
<!-- Generated by Doxygen 1.8.10 -->\n\
\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Related&#160;Pages</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
      <li>\n\
        <div id=\"MSearchBox\" class=\"MSearchBoxInactive\">\n\
        <span class=\"left\">\n\
          <img id=\"MSearchSelect\" src=\"cpp_ref/search/mag_sel.png\" onmouseover=\"return searchBox.OnSearchSelectShow()\" onmouseout=\"return searchBox.OnSearchSelectHide()\" alt=\"\">\n\
          <input type=\"text\" id=\"MSearchField\" value=\"Search\" accesskey=\"S\" onfocus=\"searchBox.OnSearchFieldFocus(true)\" onblur=\"searchBox.OnSearchFieldFocus(false)\" onkeyup=\"searchBox.OnSearchFieldChange(event)\">\n\
          </span><span class=\"right\">\n\
            <a id=\"MSearchClose\" href=\"javascript:searchBox.CloseResultsWindow()\"><img id=\"MSearchCloseImg\" border=\"0\" src=\"cpp_ref/search/close.png\" alt=\"\"></a>\n\
          </span>\n\
        </div>\n\
      </li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<!-- window showing the filter options -->\n\
\n\
\n\
<!-- iframe showing the search results (closed by default) -->\n\
\n\
\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">manipOverride/manipOverride.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2020 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// manipOverride.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// This plug-in demonstrates how to create user-defined manipulators</span></div>\n\
<div class=\"line\"><span class=\"comment\">// from a user-defined context and apply the manipulator to a custom attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">// defined on a custom transform node.  The custom transform node has a</span></div>\n\
<div class=\"line\"><span class=\"comment\">// custom attribute defined, RockInX.  A distance base manip is defined as</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the custom manipulator and gets attached to the RockInX attribute when selected.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The attachment of the manipulator is performed by an event callback that</span></div>\n\
<div class=\"line\"><span class=\"comment\">// is registered for PostToolChanged and SelectionChanged events.  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdlib.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MCursor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEventMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFn.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDistanceManip.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTransform.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MModelMessage.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxContextCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxManipContainer.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxSelectionContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxToolCommand.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MQuaternion.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;rockingTransform2.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;customTriadManip.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     customAttributeString   &quot;rockx&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">MCallbackId cid1 = 0;</div>\n\
<div class=\"line\">MCallbackId cid2 = 0;</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span>     isSetting = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This constant is used to translate mouse delta values into floating point delta</span></div>\n\
<div class=\"line\"><span class=\"comment\">// values to modify the attached attributes.</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">double</span>       scaleFactor = 0.01;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Callback function for messages.  This callback will be registered for the PostToolChanged</span></div>\n\
<div class=\"line\"><span class=\"comment\">// and SelectionChanged events.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> eventCB(<span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The customAttr tool command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - This command is used to turn the interactions with the manip</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   or the context into an undoable action.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"preprocessor\">#define     ATTR_CMD_NAME &quot;customAttrToolCmd&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     DOIT        0</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     UNDOIT      1</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     REDOIT      2</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>customAttrCmd : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html\">MPxToolCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    customAttrCmd();</div>\n\
<div class=\"line\">    ~customAttrCmd() <span class=\"keyword\">override</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#a61d0dcce095a079921bcc5807e7da5bd\">doIt</a>( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a3b583cbc082553f11853db459b2f7795\">redoIt</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a0789a8d51244cad0495abb2b811c39db\">undoIt</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>        <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_command.html#a2f6c567cc02d575ab14006d9c5e37761\">isUndoable</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#ad85f49d154d3b6ef4899d0a1e80d73e5\">finalize</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>* creator();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>        setDelta(<span class=\"keywordtype\">double</span> d);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>        setDragX() {dragX = <span class=\"keyword\">true</span>;}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>      delta;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>        dragX;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     action( <span class=\"keywordtype\">int</span> flag ); <span class=\"comment\">// do the work here</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>        parseDrag(<span class=\"keywordtype\">int</span> axis);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">customAttrCmd::customAttrCmd( )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setCommandString( ATTR_CMD_NAME );</div>\n\
<div class=\"line\">    dragX = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">customAttrCmd::~customAttrCmd()</div>\n\
<div class=\"line\">{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* customAttrCmd::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> customAttrCmd;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> customAttrCmd::isUndoable() const</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Set this command to be undoable.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> customAttrCmd::setDelta(<span class=\"keywordtype\">double</span> d)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method sets the delta value that will be used when</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     the command is executed.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    delta = d * scaleFactor;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCmd::finalize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method constructs the final command syntax which will be called</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     to execute/undo/redo the action.  The syntax of the generated command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     will be:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     customAttrToolCmd &lt;deltaVal&gt;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     where &lt;deltaVal&gt; is the most recently set value from the call to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     customAttrCmd::setDelta().</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a> command;</div>\n\
<div class=\"line\">    command.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>( commandString() );</div>\n\
<div class=\"line\">    command.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a4e6cac2a8066c27dd3c214ed50f86b5a\">addArg</a>( delta );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This call adds the command to the undo queue and sets</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the journal string for the command.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_tool_command.html#a453a8fb7a2285d97888cf2a60fa64712\">MPxToolCommand::doFinalize</a>( command );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCmd::doIt( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    This method executes the command given the passed arguments.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    The arguments consist of a delta value and one or more axes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    along which the delta value will be applied.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    delta = args.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a15a33f5705d13873ab7f003bb64f0741\">asDouble</a>( 0, &amp;stat );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> action( DOIT );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCmd::undoIt( )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Undo last delta value.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> action( UNDOIT );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCmd::redoIt( )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Redo last delta value.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> action( REDOIT );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCmd::action( <span class=\"keywordtype\">int</span> flag )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Do the actual work here to move the objects by the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    command&#39;s delta value.  The objects will come from those</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    on the active selection list.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> d = delta;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( flag )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> UNDOIT:    <span class=\"comment\">// undo</span></div>\n\
<div class=\"line\">            d = -d;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> REDOIT:    <span class=\"comment\">// redo</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> DOIT:      <span class=\"comment\">// do command</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a selection list iterator</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> slist;</div>\n\
<div class=\"line\">    <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>( slist );</div>\n\
<div class=\"line\">    <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> iter( slist, <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a94dd08feda7b2cf0ff8262312c4fcc09\">MFn::kInvalid</a>, &amp;stat );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( MS::kSuccess == stat ) {</div>\n\
<div class=\"line\">        <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>    mdagPath;       <span class=\"comment\">// Item dag path</span></div>\n\
<div class=\"line\">        <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     mComponent;     <span class=\"comment\">// Current component</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Processs all selected objects</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( ; !iter.isDone(); iter.next() ) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Get path and possibly a component</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            iter.getDagPath( mdagPath, mComponent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> transFn( mdagPath, &amp;stat );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( MS::kSuccess == stat ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// If the selected object is of type rockingTransform2,</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// then set the appropriate plug value depending on which axes</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// the command is operating on.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (transFn.typeId() == rockingTransform2Node::id)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plg = transFn.findPlug(customAttributeString, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">double</span> val;</div>\n\
<div class=\"line\">                    plg.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#ab017c746e6e0c13bf994b2458d3b5eee\">getValue</a>(val);</div>\n\
<div class=\"line\">                    plg.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aec7c3792a53d27a61ece4f7b81cc123b\">setValue</a>(val+d);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        } <span class=\"comment\">// for</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Error creating selection list iterator&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The customAttrManip2 manipulator</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - This class defines the manipulator which will be used</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   when the tool becomes the active context.  It consists of</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   three distance base manips aligned along the X, Y, and Z</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   axes of the attached transform&#39;s coordinate system.  The</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   internals of the manipulator base class handle the management</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   of command information so that undo/redo are handled.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keyword\">class </span>customAttrManip2 : <span class=\"keyword\">public</span> <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html\">MPxManipContainer</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    customAttrManip2();</div>\n\
<div class=\"line\">    ~customAttrManip2() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> *   creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>  <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ab775d976c0f4b24e540bd06af23a0738\">initialize</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#a5f6e1ab823f87eddad380cd85f61293c\">createChildren</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ac7013eba743cd3226bc9a72b1ea27cff\">connectToDependNode</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>         nodeTranslation() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_quaternion.html\">MQuaternion</a>     nodeRotation() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            updateManipLocations();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>        fManip;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>        fNodePath;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>  id;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> customAttrManip2::id( 0x80025 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">customAttrManip2::customAttrManip2() </div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// Do not call createChildren from here - </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// MayaPtr has not been set up yet.</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">customAttrManip2::~customAttrManip2() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *customAttrManip2::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">     <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> customAttrManip2();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrManip2::initialize()</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\">    stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ab775d976c0f4b24e540bd06af23a0738\">MPxManipContainer::initialize</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrManip2::createChildren()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Create the geometry of the manip.  This consists of a single</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    distance manip.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fManip = addDistanceManip(<span class=\"stringliteral\">&quot;customtManip&quot;</span>, <span class=\"stringliteral\">&quot;customPoint&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_quaternion.html\">MQuaternion</a> customAttrManip2::nodeRotation() const</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Query and return the rotation values for the attached transform node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagFn(fNodePath);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path;</div>\n\
<div class=\"line\">    dagFn.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a45d0e6118fefc8c6e0b86b50234da810\">getPath</a>(path);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> transformFn(path);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_quaternion.html\">MQuaternion</a> q;</div>\n\
<div class=\"line\">    transformFn.getRotation( q, <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> q;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> customAttrManip2::nodeTranslation() const</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    Query and return the translation values for the attached transform node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagFn(fNodePath);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path;</div>\n\
<div class=\"line\">    dagFn.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a45d0e6118fefc8c6e0b86b50234da810\">getPath</a>(path);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> transformFn(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> transformFn.getTranslation(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> customAttrManip2::updateManipLocations()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    This method places the manip in the scene according to the information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    obtained from the attached transform node.  The position and orientation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    of the distance manip is determined.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a>  trans = nodeTranslation();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_quaternion.html\">MQuaternion</a>  q = nodeRotation();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_distance_manip.html\">MFnDistanceManip</a> freePointManipFn(fManip);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> vecX(1.0, 0.0, 0.0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    freePointManipFn.setDirection(vecX);</div>\n\
<div class=\"line\">    freePointManipFn.rotateBy(q);</div>\n\
<div class=\"line\">    freePointManipFn.setTranslation(trans, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrManip2::connectToDependNode(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    This method activates the manip on the given transform node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the DAG path</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNodeFn(node);</div>\n\
<div class=\"line\">    dagNodeFn.getPath(fNodePath);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Connect the plugs to the manip.</span></div>\n\
<div class=\"line\">    <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> nodeFn(node);    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_distance_manip.html\">MFnDistanceManip</a> distManipFn(fManip);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> cPlug = nodeFn.findPlug(customAttributeString,  <span class=\"keyword\">true</span>,  &amp;stat);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( stat == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">        distManipFn.connectToDistancePlug(cPlug);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    finishAddingManips();</div>\n\
<div class=\"line\">    updateManipLocations();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#ac7013eba743cd3226bc9a72b1ea27cff\">MPxManipContainer::connectToDependNode</a>(node);        </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The customAttrManip2 Context</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// - Tool contexts are custom event handlers and are used to </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   process mouse interactions.  The context subclass </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   allows you to override press/drag/release events.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This context contains the customAttrManip2 defined above and</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  also performs its own mouse processing by handling the middle</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  mouse.  When the middle mouse button is lifted at the end of</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  a drag, a command is constructed for use in undo/redo.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"preprocessor\">#define MOVEHELPSTR     &quot;Drag the distance manips to change values on custom attributes&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define MOVETITLESTR    &quot;customAttrManip2&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>customAttrCtx : <span class=\"keyword\">public</span> <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html\">MPxSelectionContext</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    customAttrCtx();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a658f83d3a196c6c8e77e7ed2655eb6d7\">toolOnSetup</a>(<a name=\"_a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a1a7ea794ab903ce98dfe7498619a2518\">toolOffCleanup</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a9ebb2318cad8a10a9756c226faf17481\">doEnterRegion</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a7621af00b7ec3c83d9f417c1e18a0686\">doPress</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a4cbd5f86ed5a4ab444451bfeae40e45a\">doDrag</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a9ec58a753aa3c435d139e3aab719c057\">doRelease</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    customAttrManip2 * caManip;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <a name=\"_a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>         view;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a74edaa52c666cd1eca8562a6a7b7e629\">MEvent::MouseButtonType</a> downButton;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span>           startPos_x, endPos_x;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">short</span>           startPos_y, endPos_y;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>          delta;</div>\n\
<div class=\"line\">    customAttrCmd * cmd;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> updateManipulators(<span class=\"keywordtype\">void</span> * data);</div>\n\
<div class=\"line\">MCallbackId id1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">customAttrCtx::customAttrCtx()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> str(MOVETITLESTR);</div>\n\
<div class=\"line\">    setTitleString(str);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> customAttrCtx::toolOnSetup(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> str(MOVEHELPSTR);</div>\n\
<div class=\"line\">    setHelpString(str);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    updateManipulators(<span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    id1 = <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_model_message.html#ac4dd423a333cf2a97157987532b36675\">MModelMessage::addCallback</a>(<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_model_message.html#a4f09127c805cc1f5ee20e67db7b45efaa256632550aa8e279dac1d41927c59d84\">MModelMessage::kActiveListModified</a>,</div>\n\
<div class=\"line\">                                     updateManipulators, </div>\n\
<div class=\"line\">                                     <span class=\"keyword\">this</span>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Model addCallback failed\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> customAttrCtx::toolOffCleanup()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method is called when the context is no longer the current context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     The manipulator is removed from the scene.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    status = <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MModelMessage::removeCallback</a>(id1);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; <span class=\"stringliteral\">&quot;Model remove callback failed\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html#a1a7ea794ab903ce98dfe7498619a2518\">MPxContext::toolOffCleanup</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCtx::doPress( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method is called when a mouse button is pressed while this context is</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    the current context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Let the parent class handle the event first in case there is no object</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// selected yet.  The parent class will perform any necessary selection.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a7621af00b7ec3c83d9f417c1e18a0686\">MPxSelectionContext::doPress</a>( event );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If an object has been selected, then process the event.  Otherwise,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// ignore it as there is nothing to do.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !isSelecting() ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (event.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a80d4daf707c95e6f64086aab4af1ea89\">mouseButton</a>() == <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a74edaa52c666cd1eca8562a6a7b7e629a47d9938a26926231c6669a2ef2a3c2af\">MEvent::kMiddleMouse</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            setCursor(<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cursor.html#a7b880b1c2581a3f6884c3c7cffb8f3d6\">MCursor::handCursor</a>);</div>\n\
<div class=\"line\">            view = <a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a3cda809eff914b04ff47de958c365f09\">M3dView::active3dView</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Create an instance of the customAttrCmd tool command and initialize</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// its delta value to 0.  As the mouse drags, the delta value will change.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// when the mouse is lifted, a final command will be constructed with the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// most recently set delta value and axis specifications.</span></div>\n\
<div class=\"line\">            cmd = (customAttrCmd *)newToolCommand();</div>\n\
<div class=\"line\">            cmd-&gt;setDelta(0.0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keyword\">event</span>.getPosition( startPos_x, startPos_y );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Determine the channel box attribute which will be operated on by the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// dragging motion and set the state of the command accordingly.</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">            <a name=\"_a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> result;</div>\n\
<div class=\"line\">            <a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(</div>\n\
<div class=\"line\">                    <span class=\"stringliteral\">&quot;channelBox -q -selectedMainAttributes $gChannelBoxName&quot;</span>, result);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (i=0; i&lt;result.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (result[i] == customAttributeString)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cmd-&gt;setDragX();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCtx::doDrag( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method is called when a mouse button is dragged while this context is</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    the current context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If an object has been selected, then process the drag.  Otherwise, pass the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// event on up to the parent class.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((!isSelecting()) &amp;&amp; (event.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a80d4daf707c95e6f64086aab4af1ea89\">mouseButton</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a74edaa52c666cd1eca8562a6a7b7e629a47d9938a26926231c6669a2ef2a3c2af\">MEvent::kMiddleMouse</a>)) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">event</span>.getPosition( endPos_x, endPos_y );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Undo the command to erase the previously set delta value from the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// node, set a new delta value in the command and redo the command to</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// set the values in the node.</span></div>\n\
<div class=\"line\">        cmd-&gt;undoIt();</div>\n\
<div class=\"line\">        cmd-&gt;setDelta(endPos_x - startPos_x);</div>\n\
<div class=\"line\">        stat = cmd-&gt;redoIt();</div>\n\
<div class=\"line\">        view.refresh( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a4cbd5f86ed5a4ab444451bfeae40e45a\">MPxSelectionContext::doDrag</a>( event );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCtx::doRelease( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp; event )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This method is called when a mouse button is released while this context is</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    the current context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Let the parent class handle the event.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_selection_context.html#a9ec58a753aa3c435d139e3aab719c057\">MPxSelectionContext::doRelease</a>( event );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If an object is selected, process the event if the middle mouse button</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// was lifted.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !isSelecting() ) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (event.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a80d4daf707c95e6f64086aab4af1ea89\">mouseButton</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html#a74edaa52c666cd1eca8562a6a7b7e629a47d9938a26926231c6669a2ef2a3c2af\">MEvent::kMiddleMouse</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">event</span>.getPosition( endPos_x, endPos_y );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Delete the move command if we have moved less then 2 pixels</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// otherwise call finalize to set up the journal and add the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// command to the undo queue.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( abs(startPos_x - endPos_x) &lt; 2 ) {</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> cmd;</div>\n\
<div class=\"line\">                view.refresh( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                stat = cmd-&gt;finalize();</div>\n\
<div class=\"line\">                view.refresh( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            setCursor(<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_cursor.html#a7cda9fbf606764ffb275514392d57d82\">MCursor::defaultCursor</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> updateManipulators(<span class=\"keywordtype\">void</span> * data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     This callback function is called when the selection changes so that the manip can</span></div>\n\
<div class=\"line\"><span class=\"comment\">//    be reinitialized on the new current selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Delete any previously existing manipulators.</span></div>\n\
<div class=\"line\">    customAttrCtx * ctxPtr = (customAttrCtx *) data;</div>\n\
<div class=\"line\">    ctxPtr-&gt;deleteManipulators(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// iterate through the selected objects:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> list;</div>\n\
<div class=\"line\">    stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(list);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> iter(list, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a94dd08feda7b2cf0ff8262312c4fcc09\">MFn::kInvalid</a>, &amp;stat);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (MS::kSuccess == stat) {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (; !iter.isDone(); iter.next()) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// create the customAttrManip2 for each object selected:</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> manipName (<span class=\"stringliteral\">&quot;customAttrManip2&quot;</span>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> manipObject;</div>\n\
<div class=\"line\">            ctxPtr-&gt;caManip = (customAttrManip2 *) customAttrManip2::newManipulator(manipName, manipObject);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (NULL != ctxPtr-&gt;caManip) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dependNode;</div>\n\
<div class=\"line\">                iter.getDependNode(dependNode);</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> dependNodeFn(dependNode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                ctxPtr-&gt;addManipulator(manipObject);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                dependNodeFn.findPlug(customAttributeString,  <span class=\"keyword\">true</span>,  &amp;stat);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> != stat) {</div>\n\
<div class=\"line\">                    ctxPtr-&gt;deleteManipulators(); </div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                ctxPtr-&gt;caManip-&gt;connectToDependNode(dependNode);</div>\n\
<div class=\"line\">            } </div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> customAttrCtx::doEnterRegion(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event.html\">MEvent</a> &amp;event)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Print the tool description in the help line.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> str(MOVEHELPSTR);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> setHelpString(str);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Context creation command</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This is the command that will be used to create instances</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  of our context.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"preprocessor\">#define CREATE_CTX_NAME &quot;customAttrManipContext2&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>customAttrCtxCommand : <span class=\"keyword\">public</span> <a name=\"_a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html\">MPxContextCommand</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    customAttrCtxCommand() {};</div>\n\
<div class=\"line\">    <a name=\"_a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a> * <a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context_command.html#a69d6fc56205518e4be6c0ced911e6523\">makeObj</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span>* creator();</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_context.html\">MPxContext</a> *customAttrCtxCommand::makeObj()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    customAttrCtx *newC = <span class=\"keyword\">new</span> customAttrCtx();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> newC;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> *customAttrCtxCommand::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> customAttrCtxCommand;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The following routines are used to register/unregister</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the commands we are creating within Maya</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;3.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerContextCommand(</div>\n\
<div class=\"line\">            CREATE_CTX_NAME, &amp;customAttrCtxCommand::creator,</div>\n\
<div class=\"line\">            ATTR_CMD_NAME, &amp;customAttrCmd::creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerContextCommand(</div>\n\
<div class=\"line\">            CREATE_TRIAD_CTX_NAME, &amp;customTriadCtxCommand::creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Classify the node as a transform.  This causes Viewport</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 2.0 to treat the node the same way it treats a regular</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// transform node.</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> classification = <span class=\"stringliteral\">&quot;drawdb/geometry/transform/rockingTransform2&quot;</span>;</div>\n\
<div class=\"line\">    status = plugin.registerTransform(  <span class=\"stringliteral\">&quot;rockingTransform2&quot;</span>, </div>\n\
<div class=\"line\">                                        rockingTransform2Node::id, </div>\n\
<div class=\"line\">                                        &amp;rockingTransform2Node::creator, </div>\n\
<div class=\"line\">                                        &amp;rockingTransform2Node::initialize,</div>\n\
<div class=\"line\">                                        &amp;rockingTransform2Matrix::creator,</div>\n\
<div class=\"line\">                                        rockingTransform2Matrix::id,</div>\n\
<div class=\"line\">                                        &amp;classification);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(<span class=\"stringliteral\">&quot;customAttrManip2&quot;</span>, customAttrManip2::id, </div>\n\
<div class=\"line\">                                 &amp;customAttrManip2::creator, &amp;customAttrManip2::initialize,</div>\n\
<div class=\"line\">                                 <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4501afd1a084198ccd007e64ed2074c9\">MPxNode::kManipContainer</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerManip&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(<span class=\"stringliteral\">&quot;customTriadManip&quot;</span>, customTriadManip::id, </div>\n\
<div class=\"line\">                                 &amp;customTriadManip::creator, &amp;customTriadManip::initialize,</div>\n\
<div class=\"line\">                                 <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7a4501afd1a084198ccd007e64ed2074c9\">MPxNode::kManipContainer</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerManip&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#a156ef5b4b1b5a7d28df9166f29a3aba0\">MPxManipContainer::addToManipConnectTable</a>(customTriadManip::id); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register a callback for the PostToolChanged and SelectionChanged events.</span></div>\n\
<div class=\"line\">    cid1 = <a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event_message.html#a8d22c58b90484867755273c2f7ffc6ec\">MEventMessage::addEventCallback</a>(<span class=\"stringliteral\">&quot;PostToolChanged&quot;</span>, eventCB, NULL, &amp;status);</div>\n\
<div class=\"line\">    cid2 = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_event_message.html#a8d22c58b90484867755273c2f7ffc6ec\">MEventMessage::addEventCallback</a>(<span class=\"stringliteral\">&quot;SelectionChanged&quot;</span>, eventCB, NULL, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a2c877a6e116f8fd3a6e76387403c023a\">MGlobal::executeCommandOnIdle</a>(<span class=\"stringliteral\">&quot;customAttrManipContext2 myCustomAttrContext&quot;</span>);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a2c877a6e116f8fd3a6e76387403c023a\">MGlobal::executeCommandOnIdle</a>(<span class=\"stringliteral\">&quot;customTriadManipContext myCustomTriadContext&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin(obj);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Unregister the event callbacks.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MEventMessage::removeCallback</a>(cid1);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MEventMessage::removeCallback</a>(cid2);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_manip_container.html#a1cf2500c3102273cd63508673444865d\">MPxManipContainer::removeFromManipConnectTable</a>(customTriadManip::id); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterContextCommand(CREATE_CTX_NAME, ATTR_CMD_NAME);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterContextCommand(CREATE_TRIAD_CTX_NAME);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterContextCommand&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(customAttrManip2::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterManip&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode(customTriadManip::id);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterManip&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( rockingTransform2Node::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Callback functions</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This callback gets called for the PostToolChanged and SelectionChanged events.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It checks to see if the current context is the dragAttrContext, which is the context</span></div>\n\
<div class=\"line\"><span class=\"comment\">// applied by default when a custom numeric attribute is selected in the channel box.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// In this case, the customAttrManip2 context is set.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> eventCB(<span class=\"keywordtype\">void</span> * data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// This check prevents recursion from happening when overriding the manip.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (isSetting)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> selList;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(selList);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> curCtx = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(<span class=\"stringliteral\">&quot;currentCtx&quot;</span>, curCtx);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> dependNode;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;selList.<a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a99dd6a54b909ede1d11702fe58977e2a\">length</a>(); i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ((selList.<a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a72d8cd9c78fd234dcf68cd2fb70bc432\">getDependNode</a>(i, dependNode)) == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_transform.html\">MFnTransform</a> node;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (node.<a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_base.html#a5f2479ff74d96fda6f7cd31ee4c1c463\">hasObj</a>(dependNode))</div>\n\
<div class=\"line\">                node.<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html#a6b2301b53683a8e8f56dd0b9cb088b0f\">setObject</a>(dependNode);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (node.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html#a1d0bbd4d50dae591f8e003c0aedc8135\">typeId</a>() == rockingTransform2Node::id)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// If the current context is the dragAttrContext, check to see</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// if the custom channel box attributes are selected.  If so,</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// attach the custom manipulator.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ((curCtx == <span class=\"stringliteral\">&quot;dragAttrContext&quot;</span>) || (curCtx == <span class=\"stringliteral\">&quot;&quot;</span>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Make sure that the correct channel box attributes are selected</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// before setting the tool context.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> c;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> cboxAttrs;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(</div>\n\
<div class=\"line\">                            <span class=\"stringliteral\">&quot;channelBox -q -selectedMainAttributes $gChannelBoxName&quot;</span>, cboxAttrs);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (c=0; c&lt;cboxAttrs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); c++)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (cboxAttrs[c] == customAttributeString)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            isSetting = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(<span class=\"stringliteral\">&quot;setToolTo myCustomAttrContext&quot;</span>);</div>\n\
<div class=\"line\">                            isSetting = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ((curCtx == <span class=\"stringliteral\">&quot;moveSuperContext&quot;</span>) || (curCtx == <span class=\"stringliteral\">&quot;manipMoveContext&quot;</span>) ||</div>\n\
<div class=\"line\">                    (curCtx == <span class=\"stringliteral\">&quot;&quot;</span>))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    isSetting = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a09e405631e7cf680f8ac9d934ad73434\">MGlobal::executeCommand</a>(<span class=\"stringliteral\">&quot;setToolTo myCustomTriadContext&quot;</span>);</div>\n\
<div class=\"line\">                    isSetting = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
<!-- start footer part -->\n\
\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";